

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Apr 17 15:24:00 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK8,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	idataBANK9,global,class=CODE,space=0,delta=1,noexec
     8                           	psect	idataBANK11,global,class=CODE,space=0,delta=1,noexec
     9                           	psect	idataBANK12,global,class=CODE,space=0,delta=1,noexec
    10                           	psect	idataBANK13,global,class=CODE,space=0,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
    12                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK12,global,class=BANK12,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK13,global,class=BANK13,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK14,global,class=BANK14,space=1,delta=1,lowdata,noexec
    25                           	psect	cstackBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    27                           	psect	cstackBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    30                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    46                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=1
    47                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    48                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    49                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    50                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    51                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=1
    52                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=1
    53                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    54                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    55                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=3
    56                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=3
    57                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=2
    58                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=2
    59                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   106                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   107                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   108                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   109                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   110   000000                     
   111                           ; Generated 18/12/2023 GMT
   112                           ; 
   113                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC18F57Q43 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145   0004E0                     bsr             equ	1248
   146   0004E9                     fsr0            equ	1257
   147   0004EA                     fsr0h           equ	1258
   148   0004E9                     fsr0l           equ	1257
   149   0004E1                     fsr1            equ	1249
   150   0004E2                     fsr1h           equ	1250
   151   0004E1                     fsr1l           equ	1249
   152   0004D9                     fsr2            equ	1241
   153   0004DA                     fsr2h           equ	1242
   154   0004D9                     fsr2l           equ	1241
   155   0004EF                     indf0           equ	1263
   156   0004E7                     indf1           equ	1255
   157   0004DF                     indf2           equ	1247
   158   0004D6                     intcon          equ	1238
   159   000041                     nvmcon          equ	65
   160   0004F9                     pcl             equ	1273
   161   0004FA                     pclath          equ	1274
   162   0004FB                     pclatu          equ	1275
   163   0004EB                     plusw0          equ	1259
   164   0004E3                     plusw1          equ	1251
   165   0004DB                     plusw2          equ	1243
   166   0004ED                     postdec0        equ	1261
   167   0004E5                     postdec1        equ	1253
   168   0004DD                     postdec2        equ	1245
   169   0004EE                     postinc0        equ	1262
   170   0004E6                     postinc1        equ	1254
   171   0004DE                     postinc2        equ	1246
   172   0004EC                     preinc0         equ	1260
   173   0004E4                     preinc1         equ	1252
   174   0004DC                     preinc2         equ	1244
   175   0004F3                     prod            equ	1267
   176   0004F4                     prodh           equ	1268
   177   0004F3                     prodl           equ	1267
   178   0004D8                     status          equ	1240
   179   0004F5                     tablat          equ	1269
   180   0004F6                     tblptr          equ	1270
   181   0004F7                     tblptrh         equ	1271
   182   0004F6                     tblptrl         equ	1270
   183   0004F8                     tblptru         equ	1272
   184   0004FD                     tosl            equ	1277
   185   0004E8                     wreg            equ	1256
   186   000039                     CLKRCON         equ	57	;# 
   187   00003A                     CLKRCLK         equ	58	;# 
   188   000040                     NVMCON0         equ	64	;# 
   189   000041                     NVMCON1         equ	65	;# 
   190   000042                     NVMLOCK         equ	66	;# 
   191   000043                     NVMADR          equ	67	;# 
   192   000043                     NVMADRL         equ	67	;# 
   193   000044                     NVMADRH         equ	68	;# 
   194   000045                     NVMADRU         equ	69	;# 
   195   000046                     NVMDAT          equ	70	;# 
   196   000046                     NVMDATL         equ	70	;# 
   197   000047                     NVMDATH         equ	71	;# 
   198   000048                     VREGCON         equ	72	;# 
   199   000049                     BORCON          equ	73	;# 
   200   00004A                     HLVDCON0        equ	74	;# 
   201   00004B                     HLVDCON1        equ	75	;# 
   202   00004C                     ZCDCON          equ	76	;# 
   203   000060                     PMD0            equ	96	;# 
   204   000061                     PMD1            equ	97	;# 
   205   000063                     PMD3            equ	99	;# 
   206   000064                     PMD4            equ	100	;# 
   207   000065                     PMD5            equ	101	;# 
   208   000066                     PMD6            equ	102	;# 
   209   000067                     PMD7            equ	103	;# 
   210   000068                     PMD8            equ	104	;# 
   211   00006A                     MD1CON0         equ	106	;# 
   212   00006B                     MD1CON1         equ	107	;# 
   213   00006C                     MD1SRC          equ	108	;# 
   214   00006D                     MD1CARL         equ	109	;# 
   215   00006E                     MD1CARH         equ	110	;# 
   216   00006F                     CMOUT           equ	111	;# 
   217   000070                     CM1CON0         equ	112	;# 
   218   000071                     CM1CON1         equ	113	;# 
   219   000072                     CM1NCH          equ	114	;# 
   220   000073                     CM1PCH          equ	115	;# 
   221   000074                     CM2CON0         equ	116	;# 
   222   000075                     CM2CON1         equ	117	;# 
   223   000076                     CM2NCH          equ	118	;# 
   224   000077                     CM2PCH          equ	119	;# 
   225   000078                     WDTCON0         equ	120	;# 
   226   000079                     WDTCON1         equ	121	;# 
   227   00007A                     WDTPS           equ	122	;# 
   228   00007A                     WDTPSL          equ	122	;# 
   229   00007B                     WDTPSH          equ	123	;# 
   230   00007C                     WDTTMR          equ	124	;# 
   231   00007D                     DAC1DAT         equ	125	;# 
   232   00007D                     DAC1DATL        equ	125	;# 
   233   00007F                     DAC1CON         equ	127	;# 
   234   000080                     SPI1RXB         equ	128	;# 
   235   000081                     SPI1TXB         equ	129	;# 
   236   000082                     SPI1TCNT        equ	130	;# 
   237   000082                     SPI1TCNTL       equ	130	;# 
   238   000083                     SPI1TCNTH       equ	131	;# 
   239   000084                     SPI1CON0        equ	132	;# 
   240   000085                     SPI1CON1        equ	133	;# 
   241   000086                     SPI1CON2        equ	134	;# 
   242   000087                     SPI1STATUS      equ	135	;# 
   243   000088                     SPI1TWIDTH      equ	136	;# 
   244   000089                     SPI1BAUD        equ	137	;# 
   245   00008A                     SPI1INTF        equ	138	;# 
   246   00008B                     SPI1INTE        equ	139	;# 
   247   00008C                     SPI1CLK         equ	140	;# 
   248   00008D                     SPI2RXB         equ	141	;# 
   249   00008E                     SPI2TXB         equ	142	;# 
   250   00008F                     SPI2TCNT        equ	143	;# 
   251   00008F                     SPI2TCNTL       equ	143	;# 
   252   000090                     SPI2TCNTH       equ	144	;# 
   253   000091                     SPI2CON0        equ	145	;# 
   254   000092                     SPI2CON1        equ	146	;# 
   255   000093                     SPI2CON2        equ	147	;# 
   256   000094                     SPI2STATUS      equ	148	;# 
   257   000095                     SPI2TWIDTH      equ	149	;# 
   258   000096                     SPI2BAUD        equ	150	;# 
   259   000097                     SPI2INTF        equ	151	;# 
   260   000098                     SPI2INTE        equ	152	;# 
   261   000099                     SPI2CLK         equ	153	;# 
   262   0000AC                     ACTCON          equ	172	;# 
   263   0000AD                     OSCCON1         equ	173	;# 
   264   0000AE                     OSCCON2         equ	174	;# 
   265   0000AF                     OSCCON3         equ	175	;# 
   266   0000B0                     OSCTUNE         equ	176	;# 
   267   0000B1                     OSCFRQ          equ	177	;# 
   268   0000B1                     OSCFREQ         equ	177	;# 
   269   0000B2                     OSCSTAT         equ	178	;# 
   270   0000B2                     OSCSTAT1        equ	178	;# 
   271   0000B3                     OSCEN           equ	179	;# 
   272   0000B4                     PRLOCK          equ	180	;# 
   273   0000B5                     SCANPR          equ	181	;# 
   274   0000B6                     DMA1PR          equ	182	;# 
   275   0000B7                     DMA2PR          equ	183	;# 
   276   0000B8                     DMA3PR          equ	184	;# 
   277   0000B9                     DMA4PR          equ	185	;# 
   278   0000BA                     DMA5PR          equ	186	;# 
   279   0000BB                     DMA6PR          equ	187	;# 
   280   0000BE                     MAINPR          equ	190	;# 
   281   0000BF                     ISRPR           equ	191	;# 
   282   0000D4                     CLCDATA         equ	212	;# 
   283   0000D5                     CLCSELECT       equ	213	;# 
   284   0000D6                     CLCnCON         equ	214	;# 
   285   0000D7                     CLCnPOL         equ	215	;# 
   286   0000D8                     CLCnSEL0        equ	216	;# 
   287   0000D9                     CLCnSEL1        equ	217	;# 
   288   0000DA                     CLCnSEL2        equ	218	;# 
   289   0000DB                     CLCnSEL3        equ	219	;# 
   290   0000DC                     CLCnGLS0        equ	220	;# 
   291   0000DD                     CLCnGLS1        equ	221	;# 
   292   0000DE                     CLCnGLS2        equ	222	;# 
   293   0000DF                     CLCnGLS3        equ	223	;# 
   294   0000E8                     DMASELECT       equ	232	;# 
   295   0000E9                     DMAnBUF         equ	233	;# 
   296   0000EA                     DMAnDCNT        equ	234	;# 
   297   0000EA                     DMAnDCNTL       equ	234	;# 
   298   0000EB                     DMAnDCNTH       equ	235	;# 
   299   0000EC                     DMAnDPTR        equ	236	;# 
   300   0000EC                     DMAnDPTRL       equ	236	;# 
   301   0000ED                     DMAnDPTRH       equ	237	;# 
   302   0000EE                     DMAnDSZ         equ	238	;# 
   303   0000EE                     DMAnDSZL        equ	238	;# 
   304   0000EF                     DMAnDSZH        equ	239	;# 
   305   0000F0                     DMAnDSA         equ	240	;# 
   306   0000F0                     DMAnDSAL        equ	240	;# 
   307   0000F1                     DMAnDSAH        equ	241	;# 
   308   0000F2                     DMAnSCNT        equ	242	;# 
   309   0000F2                     DMAnSCNTL       equ	242	;# 
   310   0000F3                     DMAnSCNTH       equ	243	;# 
   311   0000F4                     DMAnSPTR        equ	244	;# 
   312   0000F4                     DMAnSPTRL       equ	244	;# 
   313   0000F5                     DMAnSPTRH       equ	245	;# 
   314   0000F6                     DMAnSPTRU       equ	246	;# 
   315   0000F7                     DMAnSSZ         equ	247	;# 
   316   0000F7                     DMAnSSZL        equ	247	;# 
   317   0000F8                     DMAnSSZH        equ	248	;# 
   318   0000F9                     DMAnSSA         equ	249	;# 
   319   0000F9                     DMAnSSAL        equ	249	;# 
   320   0000FA                     DMAnSSAH        equ	250	;# 
   321   0000FB                     DMAnSSAU        equ	251	;# 
   322   0000FC                     DMAnCON0        equ	252	;# 
   323   0000FD                     DMAnCON1        equ	253	;# 
   324   0000FE                     DMAnAIRQ        equ	254	;# 
   325   0000FF                     DMAnSIRQ        equ	255	;# 
   326   000200                     PPSLOCK         equ	512	;# 
   327   000201                     RA0PPS          equ	513	;# 
   328   000202                     RA1PPS          equ	514	;# 
   329   000203                     RA2PPS          equ	515	;# 
   330   000204                     RA3PPS          equ	516	;# 
   331   000205                     RA4PPS          equ	517	;# 
   332   000206                     RA5PPS          equ	518	;# 
   333   000207                     RA6PPS          equ	519	;# 
   334   000208                     RA7PPS          equ	520	;# 
   335   000209                     RB0PPS          equ	521	;# 
   336   00020A                     RB1PPS          equ	522	;# 
   337   00020B                     RB2PPS          equ	523	;# 
   338   00020C                     RB3PPS          equ	524	;# 
   339   00020D                     RB4PPS          equ	525	;# 
   340   00020E                     RB5PPS          equ	526	;# 
   341   00020F                     RB6PPS          equ	527	;# 
   342   000210                     RB7PPS          equ	528	;# 
   343   000211                     RC0PPS          equ	529	;# 
   344   000212                     RC1PPS          equ	530	;# 
   345   000213                     RC2PPS          equ	531	;# 
   346   000214                     RC3PPS          equ	532	;# 
   347   000215                     RC4PPS          equ	533	;# 
   348   000216                     RC5PPS          equ	534	;# 
   349   000217                     RC6PPS          equ	535	;# 
   350   000218                     RC7PPS          equ	536	;# 
   351   000219                     RD0PPS          equ	537	;# 
   352   00021A                     RD1PPS          equ	538	;# 
   353   00021B                     RD2PPS          equ	539	;# 
   354   00021C                     RD3PPS          equ	540	;# 
   355   00021D                     RD4PPS          equ	541	;# 
   356   00021E                     RD5PPS          equ	542	;# 
   357   00021F                     RD6PPS          equ	543	;# 
   358   000220                     RD7PPS          equ	544	;# 
   359   000221                     RE0PPS          equ	545	;# 
   360   000222                     RE1PPS          equ	546	;# 
   361   000223                     RE2PPS          equ	547	;# 
   362   000229                     RF0PPS          equ	553	;# 
   363   00022A                     RF1PPS          equ	554	;# 
   364   00022B                     RF2PPS          equ	555	;# 
   365   00022C                     RF3PPS          equ	556	;# 
   366   00022D                     RF4PPS          equ	557	;# 
   367   00022E                     RF5PPS          equ	558	;# 
   368   00022F                     RF6PPS          equ	559	;# 
   369   000230                     RF7PPS          equ	560	;# 
   370   00023E                     INT0PPS         equ	574	;# 
   371   00023F                     INT1PPS         equ	575	;# 
   372   000240                     INT2PPS         equ	576	;# 
   373   000241                     T0CKIPPS        equ	577	;# 
   374   000242                     T1CKIPPS        equ	578	;# 
   375   000243                     T1GPPS          equ	579	;# 
   376   000244                     T3CKIPPS        equ	580	;# 
   377   000245                     T3GPPS          equ	581	;# 
   378   000246                     T5CKIPPS        equ	582	;# 
   379   000247                     T5GPPS          equ	583	;# 
   380   000248                     T2INPPS         equ	584	;# 
   381   000249                     T4INPPS         equ	585	;# 
   382   00024A                     T6INPPS         equ	586	;# 
   383   00024F                     CCP1PPS         equ	591	;# 
   384   000250                     CCP2PPS         equ	592	;# 
   385   000251                     CCP3PPS         equ	593	;# 
   386   000253                     PWM1ERSPPS      equ	595	;# 
   387   000254                     PWM2ERSPPS      equ	596	;# 
   388   000255                     PWM3ERSPPS      equ	597	;# 
   389   000257                     PWMIN0PPS       equ	599	;# 
   390   000258                     PWMIN1PPS       equ	600	;# 
   391   000259                     SMT1WINPPS      equ	601	;# 
   392   00025A                     SMT1SIGPPS      equ	602	;# 
   393   00025B                     CWG1PPS         equ	603	;# 
   394   00025B                     CWG1INPPS       equ	603	;# 
   395   00025C                     CWG2PPS         equ	604	;# 
   396   00025C                     CWG2INPPS       equ	604	;# 
   397   00025D                     CWG3PPS         equ	605	;# 
   398   00025D                     CWG3INPPS       equ	605	;# 
   399   00025E                     MD1CARLPPS      equ	606	;# 
   400   00025E                     MDCARLPPS       equ	606	;# 
   401   00025F                     MD1CARHPPS      equ	607	;# 
   402   00025F                     MDCARHPPS       equ	607	;# 
   403   000260                     MD1SRCPPS       equ	608	;# 
   404   000260                     MDSRCPPS        equ	608	;# 
   405   000261                     CLCIN0PPS       equ	609	;# 
   406   000262                     CLCIN1PPS       equ	610	;# 
   407   000263                     CLCIN2PPS       equ	611	;# 
   408   000264                     CLCIN3PPS       equ	612	;# 
   409   000265                     CLCIN4PPS       equ	613	;# 
   410   000266                     CLCIN5PPS       equ	614	;# 
   411   000267                     CLCIN6PPS       equ	615	;# 
   412   000268                     CLCIN7PPS       equ	616	;# 
   413   000269                     ADACTPPS        equ	617	;# 
   414   00026A                     SPI1SCKPPS      equ	618	;# 
   415   00026B                     SPI1SDIPPS      equ	619	;# 
   416   00026C                     SPI1SSPPS       equ	620	;# 
   417   00026D                     SPI2SCKPPS      equ	621	;# 
   418   00026E                     SPI2SDIPPS      equ	622	;# 
   419   00026F                     SPI2SSPPS       equ	623	;# 
   420   000270                     I2C1SDAPPS      equ	624	;# 
   421   000271                     I2C1SCLPPS      equ	625	;# 
   422   000272                     U1RXPPS         equ	626	;# 
   423   000273                     U1CTSPPS        equ	627	;# 
   424   000274                     U2RXPPS         equ	628	;# 
   425   000275                     U2CTSPPS        equ	629	;# 
   426   000276                     U3RXPPS         equ	630	;# 
   427   000277                     U3CTSPPS        equ	631	;# 
   428   000278                     U4RXPPS         equ	632	;# 
   429   000279                     U4CTSPPS        equ	633	;# 
   430   00027A                     U5RXPPS         equ	634	;# 
   431   00027B                     U5CTSPPS        equ	635	;# 
   432   000286                     RC4I2C          equ	646	;# 
   433   000287                     RC3I2C          equ	647	;# 
   434   000288                     RB2I2C          equ	648	;# 
   435   000289                     RB1I2C          equ	649	;# 
   436   00028B                     I2C1RXB         equ	651	;# 
   437   00028C                     I2C1TXB         equ	652	;# 
   438   00028D                     I2C1CNT         equ	653	;# 
   439   00028E                     I2C1ADB0        equ	654	;# 
   440   00028F                     I2C1ADB1        equ	655	;# 
   441   000290                     I2C1ADR0        equ	656	;# 
   442   000291                     I2C1ADR1        equ	657	;# 
   443   000292                     I2C1ADR2        equ	658	;# 
   444   000293                     I2C1ADR3        equ	659	;# 
   445   000294                     I2C1CON0        equ	660	;# 
   446   000295                     I2C1CON1        equ	661	;# 
   447   000296                     I2C1CON2        equ	662	;# 
   448   000297                     I2C1ERR         equ	663	;# 
   449   000298                     I2C1STAT0       equ	664	;# 
   450   000299                     I2C1STAT1       equ	665	;# 
   451   00029A                     I2C1PIR         equ	666	;# 
   452   00029B                     I2C1PIE         equ	667	;# 
   453   00029C                     I2C1CLK         equ	668	;# 
   454   00029D                     I2C1BTO         equ	669	;# 
   455   0002A1                     U1RXB           equ	673	;# 
   456   0002A1                     U1RXBL          equ	673	;# 
   457   0002A2                     U1RXCHK         equ	674	;# 
   458   0002A3                     U1TXB           equ	675	;# 
   459   0002A3                     U1TXBL          equ	675	;# 
   460   0002A4                     U1TXCHK         equ	676	;# 
   461   0002A5                     U1P1            equ	677	;# 
   462   0002A5                     U1P1L           equ	677	;# 
   463   0002A6                     U1P1H           equ	678	;# 
   464   0002A7                     U1P2            equ	679	;# 
   465   0002A7                     U1P2L           equ	679	;# 
   466   0002A8                     U1P2H           equ	680	;# 
   467   0002A9                     U1P3            equ	681	;# 
   468   0002A9                     U1P3L           equ	681	;# 
   469   0002AA                     U1P3H           equ	682	;# 
   470   0002AB                     U1CON0          equ	683	;# 
   471   0002AC                     U1CON1          equ	684	;# 
   472   0002AD                     U1CON2          equ	685	;# 
   473   0002AE                     U1BRG           equ	686	;# 
   474   0002AE                     U1BRGL          equ	686	;# 
   475   0002AF                     U1BRGH          equ	687	;# 
   476   0002B0                     U1FIFO          equ	688	;# 
   477   0002B1                     U1UIR           equ	689	;# 
   478   0002B2                     U1ERRIR         equ	690	;# 
   479   0002B3                     U1ERRIE         equ	691	;# 
   480   0002B4                     U2RXB           equ	692	;# 
   481   0002B4                     U2RXBL          equ	692	;# 
   482   0002B6                     U2TXB           equ	694	;# 
   483   0002B6                     U2TXBL          equ	694	;# 
   484   0002B8                     U2P1            equ	696	;# 
   485   0002B8                     U2P1L           equ	696	;# 
   486   0002BA                     U2P2            equ	698	;# 
   487   0002BA                     U2P2L           equ	698	;# 
   488   0002BC                     U2P3            equ	700	;# 
   489   0002BC                     U2P3L           equ	700	;# 
   490   0002BE                     U2CON0          equ	702	;# 
   491   0002BF                     U2CON1          equ	703	;# 
   492   0002C0                     U2CON2          equ	704	;# 
   493   0002C1                     U2BRG           equ	705	;# 
   494   0002C1                     U2BRGL          equ	705	;# 
   495   0002C2                     U2BRGH          equ	706	;# 
   496   0002C3                     U2FIFO          equ	707	;# 
   497   0002C4                     U2UIR           equ	708	;# 
   498   0002C5                     U2ERRIR         equ	709	;# 
   499   0002C6                     U2ERRIE         equ	710	;# 
   500   0002C7                     U3RXB           equ	711	;# 
   501   0002C7                     U3RXBL          equ	711	;# 
   502   0002C9                     U3TXB           equ	713	;# 
   503   0002C9                     U3TXBL          equ	713	;# 
   504   0002CB                     U3P1            equ	715	;# 
   505   0002CB                     U3P1L           equ	715	;# 
   506   0002CD                     U3P2            equ	717	;# 
   507   0002CD                     U3P2L           equ	717	;# 
   508   0002CF                     U3P3            equ	719	;# 
   509   0002CF                     U3P3L           equ	719	;# 
   510   0002D1                     U3CON0          equ	721	;# 
   511   0002D2                     U3CON1          equ	722	;# 
   512   0002D3                     U3CON2          equ	723	;# 
   513   0002D4                     U3BRG           equ	724	;# 
   514   0002D4                     U3BRGL          equ	724	;# 
   515   0002D5                     U3BRGH          equ	725	;# 
   516   0002D6                     U3FIFO          equ	726	;# 
   517   0002D7                     U3UIR           equ	727	;# 
   518   0002D8                     U3ERRIR         equ	728	;# 
   519   0002D9                     U3ERRIE         equ	729	;# 
   520   0002DA                     U4RXB           equ	730	;# 
   521   0002DA                     U4RXBL          equ	730	;# 
   522   0002DC                     U4TXB           equ	732	;# 
   523   0002DC                     U4TXBL          equ	732	;# 
   524   0002DE                     U4P1            equ	734	;# 
   525   0002DE                     U4P1L           equ	734	;# 
   526   0002E0                     U4P2            equ	736	;# 
   527   0002E0                     U4P2L           equ	736	;# 
   528   0002E2                     U4P3            equ	738	;# 
   529   0002E2                     U4P3L           equ	738	;# 
   530   0002E4                     U4CON0          equ	740	;# 
   531   0002E5                     U4CON1          equ	741	;# 
   532   0002E6                     U4CON2          equ	742	;# 
   533   0002E7                     U4BRG           equ	743	;# 
   534   0002E7                     U4BRGL          equ	743	;# 
   535   0002E8                     U4BRGH          equ	744	;# 
   536   0002E9                     U4FIFO          equ	745	;# 
   537   0002EA                     U4UIR           equ	746	;# 
   538   0002EB                     U4ERRIR         equ	747	;# 
   539   0002EC                     U4ERRIE         equ	748	;# 
   540   0002ED                     U5RXB           equ	749	;# 
   541   0002ED                     U5RXBL          equ	749	;# 
   542   0002EF                     U5TXB           equ	751	;# 
   543   0002EF                     U5TXBL          equ	751	;# 
   544   0002F1                     U5P1            equ	753	;# 
   545   0002F1                     U5P1L           equ	753	;# 
   546   0002F3                     U5P2            equ	755	;# 
   547   0002F3                     U5P2L           equ	755	;# 
   548   0002F5                     U5P3            equ	757	;# 
   549   0002F5                     U5P3L           equ	757	;# 
   550   0002F7                     U5CON0          equ	759	;# 
   551   0002F8                     U5CON1          equ	760	;# 
   552   0002F9                     U5CON2          equ	761	;# 
   553   0002FA                     U5BRG           equ	762	;# 
   554   0002FA                     U5BRGL          equ	762	;# 
   555   0002FB                     U5BRGH          equ	763	;# 
   556   0002FC                     U5FIFO          equ	764	;# 
   557   0002FD                     U5UIR           equ	765	;# 
   558   0002FE                     U5ERRIR         equ	766	;# 
   559   0002FF                     U5ERRIE         equ	767	;# 
   560   000300                     SMT1TMR         equ	768	;# 
   561   000300                     SMT1TMRL        equ	768	;# 
   562   000301                     SMT1TMRH        equ	769	;# 
   563   000302                     SMT1TMRU        equ	770	;# 
   564   000303                     SMT1CPR         equ	771	;# 
   565   000303                     SMT1CPRL        equ	771	;# 
   566   000304                     SMT1CPRH        equ	772	;# 
   567   000305                     SMT1CPRU        equ	773	;# 
   568   000306                     SMT1CPW         equ	774	;# 
   569   000306                     SMT1CPWL        equ	774	;# 
   570   000307                     SMT1CPWH        equ	775	;# 
   571   000308                     SMT1CPWU        equ	776	;# 
   572   000309                     SMT1PR          equ	777	;# 
   573   000309                     SMT1PRL         equ	777	;# 
   574   00030A                     SMT1PRH         equ	778	;# 
   575   00030B                     SMT1PRU         equ	779	;# 
   576   00030C                     SMT1CON0        equ	780	;# 
   577   00030D                     SMT1CON1        equ	781	;# 
   578   00030E                     SMT1STAT        equ	782	;# 
   579   00030F                     SMT1CLK         equ	783	;# 
   580   000310                     SMT1SIG         equ	784	;# 
   581   000311                     SMT1WIN         equ	785	;# 
   582   000318                     TMR0L           equ	792	;# 
   583   000318                     TMR0            equ	792	;# 
   584   000319                     TMR0H           equ	793	;# 
   585   000319                     PR0             equ	793	;# 
   586   00031A                     T0CON0          equ	794	;# 
   587   00031B                     T0CON1          equ	795	;# 
   588   00031C                     TMR1            equ	796	;# 
   589   00031C                     TMR1L           equ	796	;# 
   590   00031D                     TMR1H           equ	797	;# 
   591   00031E                     T1CON           equ	798	;# 
   592   00031E                     TMR1CON         equ	798	;# 
   593   00031F                     T1GCON          equ	799	;# 
   594   00031F                     TMR1GCON        equ	799	;# 
   595   000320                     T1GATE          equ	800	;# 
   596   000320                     TMR1GATE        equ	800	;# 
   597   000321                     T1CLK           equ	801	;# 
   598   000321                     TMR1CLK         equ	801	;# 
   599   000321                     PR1             equ	801	;# 
   600   000322                     T2TMR           equ	802	;# 
   601   000322                     TMR2            equ	802	;# 
   602   000323                     T2PR            equ	803	;# 
   603   000323                     PR2             equ	803	;# 
   604   000324                     T2CON           equ	804	;# 
   605   000325                     T2HLT           equ	805	;# 
   606   000326                     T2CLKCON        equ	806	;# 
   607   000326                     T2CLK           equ	806	;# 
   608   000327                     T2RST           equ	807	;# 
   609   000328                     TMR3            equ	808	;# 
   610   000328                     TMR3L           equ	808	;# 
   611   000329                     TMR3H           equ	809	;# 
   612   00032A                     T3CON           equ	810	;# 
   613   00032A                     TMR3CON         equ	810	;# 
   614   00032B                     T3GCON          equ	811	;# 
   615   00032B                     TMR3GCON        equ	811	;# 
   616   00032C                     T3GATE          equ	812	;# 
   617   00032C                     TMR3GATE        equ	812	;# 
   618   00032D                     T3CLK           equ	813	;# 
   619   00032D                     TMR3CLK         equ	813	;# 
   620   00032D                     PR3             equ	813	;# 
   621   00032E                     T4TMR           equ	814	;# 
   622   00032E                     TMR4            equ	814	;# 
   623   00032F                     T4PR            equ	815	;# 
   624   00032F                     PR4             equ	815	;# 
   625   000330                     T4CON           equ	816	;# 
   626   000331                     T4HLT           equ	817	;# 
   627   000332                     T4CLKCON        equ	818	;# 
   628   000332                     T4CLK           equ	818	;# 
   629   000333                     T4RST           equ	819	;# 
   630   000334                     TMR5            equ	820	;# 
   631   000334                     TMR5L           equ	820	;# 
   632   000335                     TMR5H           equ	821	;# 
   633   000336                     T5CON           equ	822	;# 
   634   000336                     TMR5CON         equ	822	;# 
   635   000337                     T5GCON          equ	823	;# 
   636   000337                     TMR5GCON        equ	823	;# 
   637   000338                     T5GATE          equ	824	;# 
   638   000338                     TMR5GATE        equ	824	;# 
   639   000339                     T5CLK           equ	825	;# 
   640   000339                     TMR5CLK         equ	825	;# 
   641   000339                     PR5             equ	825	;# 
   642   00033A                     T6TMR           equ	826	;# 
   643   00033A                     TMR6            equ	826	;# 
   644   00033B                     T6PR            equ	827	;# 
   645   00033B                     PR6             equ	827	;# 
   646   00033C                     T6CON           equ	828	;# 
   647   00033D                     T6HLT           equ	829	;# 
   648   00033E                     T6CLKCON        equ	830	;# 
   649   00033E                     T6CLK           equ	830	;# 
   650   00033F                     T6RST           equ	831	;# 
   651   000340                     CCPR1           equ	832	;# 
   652   000340                     CCPR1L          equ	832	;# 
   653   000341                     CCPR1H          equ	833	;# 
   654   000342                     CCP1CON         equ	834	;# 
   655   000343                     CCP1CAP         equ	835	;# 
   656   000344                     CCPR2           equ	836	;# 
   657   000344                     CCPR2L          equ	836	;# 
   658   000345                     CCPR2H          equ	837	;# 
   659   000346                     CCP2CON         equ	838	;# 
   660   000347                     CCP2CAP         equ	839	;# 
   661   000348                     CCPR3           equ	840	;# 
   662   000348                     CCPR3L          equ	840	;# 
   663   000349                     CCPR3H          equ	841	;# 
   664   00034A                     CCP3CON         equ	842	;# 
   665   00034B                     CCP3CAP         equ	843	;# 
   666   00034C                     CCPTMRS0        equ	844	;# 
   667   00034F                     CRCDATA         equ	847	;# 
   668   00034F                     CRCDATL         equ	847	;# 
   669   000350                     CRCDATH         equ	848	;# 
   670   000351                     CRCACC          equ	849	;# 
   671   000351                     CRCACCL         equ	849	;# 
   672   000352                     CRCACCH         equ	850	;# 
   673   000353                     CRCSHFT         equ	851	;# 
   674   000353                     CRCSHIFTL       equ	851	;# 
   675   000354                     CRCSHIFTH       equ	852	;# 
   676   000355                     CRCXOR          equ	853	;# 
   677   000355                     CRCXORL         equ	853	;# 
   678   000356                     CRCXORH         equ	854	;# 
   679   000357                     CRCCON0         equ	855	;# 
   680   000358                     CRCCON1         equ	856	;# 
   681   00035A                     SCANLADR        equ	858	;# 
   682   00035A                     SCANLADRL       equ	858	;# 
   683   00035B                     SCANLADRH       equ	859	;# 
   684   00035C                     SCANLADRU       equ	860	;# 
   685   00035D                     SCANHADR        equ	861	;# 
   686   00035D                     SCANHADRL       equ	861	;# 
   687   00035E                     SCANHADRH       equ	862	;# 
   688   00035F                     SCANHADRU       equ	863	;# 
   689   000360                     SCANCON0        equ	864	;# 
   690   000361                     SCANTRIG        equ	865	;# 
   691   000362                     IPR0            equ	866	;# 
   692   000363                     IPR1            equ	867	;# 
   693   000364                     IPR2            equ	868	;# 
   694   000365                     IPR3            equ	869	;# 
   695   000366                     IPR4            equ	870	;# 
   696   000367                     IPR5            equ	871	;# 
   697   000368                     IPR6            equ	872	;# 
   698   000369                     IPR7            equ	873	;# 
   699   00036A                     IPR8            equ	874	;# 
   700   00036B                     IPR9            equ	875	;# 
   701   00036C                     IPR10           equ	876	;# 
   702   00036D                     IPR11           equ	877	;# 
   703   00036E                     IPR12           equ	878	;# 
   704   00036F                     IPR13           equ	879	;# 
   705   000370                     IPR14           equ	880	;# 
   706   000371                     IPR15           equ	881	;# 
   707   000373                     STATUS_CSHAD    equ	883	;# 
   708   000374                     WREG_CSHAD      equ	884	;# 
   709   000375                     BSR_CSHAD       equ	885	;# 
   710   000376                     SHADCON         equ	886	;# 
   711   000377                     STATUS_SHAD     equ	887	;# 
   712   000378                     WREG_SHAD       equ	888	;# 
   713   000379                     BSR_SHAD        equ	889	;# 
   714   00037A                     PCLATH_SHAD     equ	890	;# 
   715   00037B                     PCLATU_SHAD     equ	891	;# 
   716   00037C                     FSR0SH          equ	892	;# 
   717   00037C                     FSR0L_SHAD      equ	892	;# 
   718   00037D                     FSR0H_SHAD      equ	893	;# 
   719   00037E                     FSR1SH          equ	894	;# 
   720   00037E                     FSR1L_SHAD      equ	894	;# 
   721   00037F                     FSR1H_SHAD      equ	895	;# 
   722   000380                     FSR2SH          equ	896	;# 
   723   000380                     FSR2L_SHAD      equ	896	;# 
   724   000381                     FSR2H_SHAD      equ	897	;# 
   725   000382                     PRODSH          equ	898	;# 
   726   000382                     PRODL_SHAD      equ	898	;# 
   727   000383                     PRODH_SHAD      equ	899	;# 
   728   0003BC                     CWG1CLK         equ	956	;# 
   729   0003BC                     CWG1CLKCON      equ	956	;# 
   730   0003BD                     CWG1ISM         equ	957	;# 
   731   0003BD                     CWG1DAT         equ	957	;# 
   732   0003BE                     CWG1DBR         equ	958	;# 
   733   0003BF                     CWG1DBF         equ	959	;# 
   734   0003C0                     CWG1CON0        equ	960	;# 
   735   0003C1                     CWG1CON1        equ	961	;# 
   736   0003C2                     CWG1AS0         equ	962	;# 
   737   0003C3                     CWG1AS1         equ	963	;# 
   738   0003C4                     CWG1STR         equ	964	;# 
   739   0003C5                     CWG2CLK         equ	965	;# 
   740   0003C5                     CWG2CLKCON      equ	965	;# 
   741   0003C6                     CWG2ISM         equ	966	;# 
   742   0003C6                     CWG2DAT         equ	966	;# 
   743   0003C7                     CWG2DBR         equ	967	;# 
   744   0003C8                     CWG2DBF         equ	968	;# 
   745   0003C9                     CWG2CON0        equ	969	;# 
   746   0003CA                     CWG2CON1        equ	970	;# 
   747   0003CB                     CWG2AS0         equ	971	;# 
   748   0003CC                     CWG2AS1         equ	972	;# 
   749   0003CD                     CWG2STR         equ	973	;# 
   750   0003CE                     CWG3CLK         equ	974	;# 
   751   0003CE                     CWG3CLKCON      equ	974	;# 
   752   0003CF                     CWG3ISM         equ	975	;# 
   753   0003CF                     CWG3DAT         equ	975	;# 
   754   0003D0                     CWG3DBR         equ	976	;# 
   755   0003D1                     CWG3DBF         equ	977	;# 
   756   0003D2                     CWG3CON0        equ	978	;# 
   757   0003D3                     CWG3CON1        equ	979	;# 
   758   0003D4                     CWG3AS0         equ	980	;# 
   759   0003D5                     CWG3AS1         equ	981	;# 
   760   0003D6                     CWG3STR         equ	982	;# 
   761   0003D7                     FVRCON          equ	983	;# 
   762   0003D8                     ADCPCON         equ	984	;# 
   763   0003D8                     ADCP            equ	984	;# 
   764   0003D9                     ADLTH           equ	985	;# 
   765   0003D9                     ADLTHL          equ	985	;# 
   766   0003DA                     ADLTHH          equ	986	;# 
   767   0003DB                     ADUTH           equ	987	;# 
   768   0003DB                     ADUTHL          equ	987	;# 
   769   0003DC                     ADUTHH          equ	988	;# 
   770   0003DD                     ADERR           equ	989	;# 
   771   0003DD                     ADERRL          equ	989	;# 
   772   0003DE                     ADERRH          equ	990	;# 
   773   0003DF                     ADSTPT          equ	991	;# 
   774   0003DF                     ADSTPTL         equ	991	;# 
   775   0003E0                     ADSTPTH         equ	992	;# 
   776   0003E1                     ADFLTR          equ	993	;# 
   777   0003E1                     ADFLTRL         equ	993	;# 
   778   0003E2                     ADFLTRH         equ	994	;# 
   779   0003E3                     ADACC           equ	995	;# 
   780   0003E3                     ADACCL          equ	995	;# 
   781   0003E4                     ADACCH          equ	996	;# 
   782   0003E5                     ADACCU          equ	997	;# 
   783   0003E6                     ADCNT           equ	998	;# 
   784   0003E7                     ADRPT           equ	999	;# 
   785   0003E8                     ADPREV          equ	1000	;# 
   786   0003E8                     ADPREVL         equ	1000	;# 
   787   0003E9                     ADPREVH         equ	1001	;# 
   788   0003EA                     ADRES           equ	1002	;# 
   789   0003EA                     ADRESL          equ	1002	;# 
   790   0003EB                     ADRESH          equ	1003	;# 
   791   0003EC                     ADPCH           equ	1004	;# 
   792   0003EE                     ADACQ           equ	1006	;# 
   793   0003EE                     ADACQL          equ	1006	;# 
   794   0003EF                     ADACQH          equ	1007	;# 
   795   0003F0                     ADCAP           equ	1008	;# 
   796   0003F1                     ADPRE           equ	1009	;# 
   797   0003F1                     ADPREL          equ	1009	;# 
   798   0003F2                     ADPREH          equ	1010	;# 
   799   0003F3                     ADCON0          equ	1011	;# 
   800   0003F4                     ADCON1          equ	1012	;# 
   801   0003F5                     ADCON2          equ	1013	;# 
   802   0003F6                     ADCON3          equ	1014	;# 
   803   0003F7                     ADSTAT          equ	1015	;# 
   804   0003F8                     ADREF           equ	1016	;# 
   805   0003F9                     ADACT           equ	1017	;# 
   806   0003FA                     ADCLK           equ	1018	;# 
   807   000400                     ANSELA          equ	1024	;# 
   808   000401                     WPUA            equ	1025	;# 
   809   000402                     ODCONA          equ	1026	;# 
   810   000403                     SLRCONA         equ	1027	;# 
   811   000404                     INLVLA          equ	1028	;# 
   812   000405                     IOCAP           equ	1029	;# 
   813   000406                     IOCAN           equ	1030	;# 
   814   000407                     IOCAF           equ	1031	;# 
   815   000408                     ANSELB          equ	1032	;# 
   816   000409                     WPUB            equ	1033	;# 
   817   00040A                     ODCONB          equ	1034	;# 
   818   00040B                     SLRCONB         equ	1035	;# 
   819   00040C                     INLVLB          equ	1036	;# 
   820   00040D                     IOCBP           equ	1037	;# 
   821   00040E                     IOCBN           equ	1038	;# 
   822   00040F                     IOCBF           equ	1039	;# 
   823   000410                     ANSELC          equ	1040	;# 
   824   000411                     WPUC            equ	1041	;# 
   825   000412                     ODCONC          equ	1042	;# 
   826   000413                     SLRCONC         equ	1043	;# 
   827   000414                     INLVLC          equ	1044	;# 
   828   000415                     IOCCP           equ	1045	;# 
   829   000416                     IOCCN           equ	1046	;# 
   830   000417                     IOCCF           equ	1047	;# 
   831   000418                     ANSELD          equ	1048	;# 
   832   000419                     WPUD            equ	1049	;# 
   833   00041A                     ODCOND          equ	1050	;# 
   834   00041B                     SLRCOND         equ	1051	;# 
   835   00041C                     INLVLD          equ	1052	;# 
   836   000420                     ANSELE          equ	1056	;# 
   837   000421                     WPUE            equ	1057	;# 
   838   000422                     ODCONE          equ	1058	;# 
   839   000423                     SLRCONE         equ	1059	;# 
   840   000424                     INLVLE          equ	1060	;# 
   841   000425                     IOCEP           equ	1061	;# 
   842   000426                     IOCEN           equ	1062	;# 
   843   000427                     IOCEF           equ	1063	;# 
   844   000428                     ANSELF          equ	1064	;# 
   845   000429                     WPUF            equ	1065	;# 
   846   00042A                     ODCONF          equ	1066	;# 
   847   00042B                     SLRCONF         equ	1067	;# 
   848   00042C                     INLVLF          equ	1068	;# 
   849   000440                     NCO1ACC         equ	1088	;# 
   850   000440                     NCO1ACCL        equ	1088	;# 
   851   000441                     NCO1ACCH        equ	1089	;# 
   852   000442                     NCO1ACCU        equ	1090	;# 
   853   000443                     NCO1INC         equ	1091	;# 
   854   000443                     NCO1INCL        equ	1091	;# 
   855   000444                     NCO1INCH        equ	1092	;# 
   856   000445                     NCO1INCU        equ	1093	;# 
   857   000446                     NCO1CON         equ	1094	;# 
   858   000447                     NCO1CLK         equ	1095	;# 
   859   000448                     NCO2ACC         equ	1096	;# 
   860   000448                     NCO2ACCL        equ	1096	;# 
   861   000449                     NCO2ACCH        equ	1097	;# 
   862   00044A                     NCO2ACCU        equ	1098	;# 
   863   00044B                     NCO2INC         equ	1099	;# 
   864   00044B                     NCO2INCL        equ	1099	;# 
   865   00044C                     NCO2INCH        equ	1100	;# 
   866   00044D                     NCO2INCU        equ	1101	;# 
   867   00044E                     NCO2CON         equ	1102	;# 
   868   00044F                     NCO2CLK         equ	1103	;# 
   869   000450                     NCO3ACC         equ	1104	;# 
   870   000450                     NCO3ACCL        equ	1104	;# 
   871   000451                     NCO3ACCH        equ	1105	;# 
   872   000452                     NCO3ACCU        equ	1106	;# 
   873   000453                     NCO3INC         equ	1107	;# 
   874   000453                     NCO3INCL        equ	1107	;# 
   875   000454                     NCO3INCH        equ	1108	;# 
   876   000455                     NCO3INCU        equ	1109	;# 
   877   000456                     NCO3CON         equ	1110	;# 
   878   000457                     NCO3CLK         equ	1111	;# 
   879   000459                     IVTLOCK         equ	1113	;# 
   880   00045A                     IVTAD           equ	1114	;# 
   881   00045A                     IVTADL          equ	1114	;# 
   882   00045B                     IVTADH          equ	1115	;# 
   883   00045C                     IVTADU          equ	1116	;# 
   884   00045D                     IVTBASE         equ	1117	;# 
   885   00045D                     IVTBASEL        equ	1117	;# 
   886   00045E                     IVTBASEH        equ	1118	;# 
   887   00045F                     IVTBASEU        equ	1119	;# 
   888   000460                     PWM1ERS         equ	1120	;# 
   889   000461                     PWM1CLK         equ	1121	;# 
   890   000462                     PWM1LDS         equ	1122	;# 
   891   000463                     PWM1PR          equ	1123	;# 
   892   000463                     PWM1PRL         equ	1123	;# 
   893   000464                     PWM1PRH         equ	1124	;# 
   894   000465                     PWM1CPRE        equ	1125	;# 
   895   000466                     PWM1PIPOS       equ	1126	;# 
   896   000467                     PWM1GIR         equ	1127	;# 
   897   000468                     PWM1GIE         equ	1128	;# 
   898   000469                     PWM1CON         equ	1129	;# 
   899   00046A                     PWM1S1CFG       equ	1130	;# 
   900   00046B                     PWM1S1P1        equ	1131	;# 
   901   00046B                     PWM1S1P1L       equ	1131	;# 
   902   00046C                     PWM1S1P1H       equ	1132	;# 
   903   00046D                     PWM1S1P2        equ	1133	;# 
   904   00046D                     PWM1S1P2L       equ	1133	;# 
   905   00046E                     PWM1S1P2H       equ	1134	;# 
   906   00046F                     PWM2ERS         equ	1135	;# 
   907   000470                     PWM2CLK         equ	1136	;# 
   908   000471                     PWM2LDS         equ	1137	;# 
   909   000472                     PWM2PR          equ	1138	;# 
   910   000472                     PWM2PRL         equ	1138	;# 
   911   000473                     PWM2PRH         equ	1139	;# 
   912   000474                     PWM2CPRE        equ	1140	;# 
   913   000475                     PWM2PIPOS       equ	1141	;# 
   914   000476                     PWM2GIR         equ	1142	;# 
   915   000477                     PWM2GIE         equ	1143	;# 
   916   000478                     PWM2CON         equ	1144	;# 
   917   000479                     PWM2S1CFG       equ	1145	;# 
   918   00047A                     PWM2S1P1        equ	1146	;# 
   919   00047A                     PWM2S1P1L       equ	1146	;# 
   920   00047B                     PWM2S1P1H       equ	1147	;# 
   921   00047C                     PWM2S1P2        equ	1148	;# 
   922   00047C                     PWM2S1P2L       equ	1148	;# 
   923   00047D                     PWM2S1P2H       equ	1149	;# 
   924   00047E                     PWM3ERS         equ	1150	;# 
   925   00047F                     PWM3CLK         equ	1151	;# 
   926   000480                     PWM3LDS         equ	1152	;# 
   927   000481                     PWM3PR          equ	1153	;# 
   928   000481                     PWM3PRL         equ	1153	;# 
   929   000482                     PWM3PRH         equ	1154	;# 
   930   000483                     PWM3CPRE        equ	1155	;# 
   931   000484                     PWM3PIPOS       equ	1156	;# 
   932   000485                     PWM3GIR         equ	1157	;# 
   933   000486                     PWM3GIE         equ	1158	;# 
   934   000487                     PWM3CON         equ	1159	;# 
   935   000488                     PWM3S1CFG       equ	1160	;# 
   936   000489                     PWM3S1P1        equ	1161	;# 
   937   000489                     PWM3S1P1L       equ	1161	;# 
   938   00048A                     PWM3S1P1H       equ	1162	;# 
   939   00048B                     PWM3S1P2        equ	1163	;# 
   940   00048B                     PWM3S1P2L       equ	1163	;# 
   941   00048C                     PWM3S1P2H       equ	1164	;# 
   942   00049C                     PWMLOAD         equ	1180	;# 
   943   00049D                     PWMEN           equ	1181	;# 
   944   00049E                     PIE0            equ	1182	;# 
   945   00049F                     PIE1            equ	1183	;# 
   946   0004A0                     PIE2            equ	1184	;# 
   947   0004A1                     PIE3            equ	1185	;# 
   948   0004A2                     PIE4            equ	1186	;# 
   949   0004A3                     PIE5            equ	1187	;# 
   950   0004A4                     PIE6            equ	1188	;# 
   951   0004A5                     PIE7            equ	1189	;# 
   952   0004A6                     PIE8            equ	1190	;# 
   953   0004A7                     PIE9            equ	1191	;# 
   954   0004A8                     PIE10           equ	1192	;# 
   955   0004A9                     PIE11           equ	1193	;# 
   956   0004AA                     PIE12           equ	1194	;# 
   957   0004AB                     PIE13           equ	1195	;# 
   958   0004AC                     PIE14           equ	1196	;# 
   959   0004AD                     PIE15           equ	1197	;# 
   960   0004AE                     PIR0            equ	1198	;# 
   961   0004AF                     PIR1            equ	1199	;# 
   962   0004B0                     PIR2            equ	1200	;# 
   963   0004B1                     PIR3            equ	1201	;# 
   964   0004B2                     PIR4            equ	1202	;# 
   965   0004B3                     PIR5            equ	1203	;# 
   966   0004B4                     PIR6            equ	1204	;# 
   967   0004B5                     PIR7            equ	1205	;# 
   968   0004B6                     PIR8            equ	1206	;# 
   969   0004B7                     PIR9            equ	1207	;# 
   970   0004B8                     PIR10           equ	1208	;# 
   971   0004B9                     PIR11           equ	1209	;# 
   972   0004BA                     PIR12           equ	1210	;# 
   973   0004BB                     PIR13           equ	1211	;# 
   974   0004BC                     PIR14           equ	1212	;# 
   975   0004BD                     PIR15           equ	1213	;# 
   976   0004BE                     LATA            equ	1214	;# 
   977   0004BF                     LATB            equ	1215	;# 
   978   0004C0                     LATC            equ	1216	;# 
   979   0004C1                     LATD            equ	1217	;# 
   980   0004C2                     LATE            equ	1218	;# 
   981   0004C3                     LATF            equ	1219	;# 
   982   0004C6                     TRISA           equ	1222	;# 
   983   0004C7                     TRISB           equ	1223	;# 
   984   0004C8                     TRISC           equ	1224	;# 
   985   0004C9                     TRISD           equ	1225	;# 
   986   0004CA                     TRISE           equ	1226	;# 
   987   0004CB                     TRISF           equ	1227	;# 
   988   0004CE                     PORTA           equ	1230	;# 
   989   0004CF                     PORTB           equ	1231	;# 
   990   0004D0                     PORTC           equ	1232	;# 
   991   0004D1                     PORTD           equ	1233	;# 
   992   0004D2                     PORTE           equ	1234	;# 
   993   0004D3                     PORTF           equ	1235	;# 
   994   0004D6                     INTCON0         equ	1238	;# 
   995   0004D7                     INTCON1         equ	1239	;# 
   996   0004D8                     STATUS          equ	1240	;# 
   997   0004D9                     FSR2            equ	1241	;# 
   998   0004D9                     FSR2L           equ	1241	;# 
   999   0004DA                     FSR2H           equ	1242	;# 
  1000   0004DB                     PLUSW2          equ	1243	;# 
  1001   0004DC                     PREINC2         equ	1244	;# 
  1002   0004DD                     POSTDEC2        equ	1245	;# 
  1003   0004DE                     POSTINC2        equ	1246	;# 
  1004   0004DF                     INDF2           equ	1247	;# 
  1005   0004E0                     BSR             equ	1248	;# 
  1006   0004E1                     FSR1            equ	1249	;# 
  1007   0004E1                     FSR1L           equ	1249	;# 
  1008   0004E2                     FSR1H           equ	1250	;# 
  1009   0004E3                     PLUSW1          equ	1251	;# 
  1010   0004E4                     PREINC1         equ	1252	;# 
  1011   0004E5                     POSTDEC1        equ	1253	;# 
  1012   0004E6                     POSTINC1        equ	1254	;# 
  1013   0004E7                     INDF1           equ	1255	;# 
  1014   0004E8                     WREG            equ	1256	;# 
  1015   0004E9                     FSR0            equ	1257	;# 
  1016   0004E9                     FSR0L           equ	1257	;# 
  1017   0004EA                     FSR0H           equ	1258	;# 
  1018   0004EB                     PLUSW0          equ	1259	;# 
  1019   0004EC                     PREINC0         equ	1260	;# 
  1020   0004ED                     POSTDEC0        equ	1261	;# 
  1021   0004EE                     POSTINC0        equ	1262	;# 
  1022   0004EF                     INDF0           equ	1263	;# 
  1023   0004F0                     PCON0           equ	1264	;# 
  1024   0004F1                     PCON1           equ	1265	;# 
  1025   0004F2                     CPUDOZE         equ	1266	;# 
  1026   0004F3                     PROD            equ	1267	;# 
  1027   0004F3                     PRODL           equ	1267	;# 
  1028   0004F4                     PRODH           equ	1268	;# 
  1029   0004F5                     TABLAT          equ	1269	;# 
  1030   0004F6                     TBLPTR          equ	1270	;# 
  1031   0004F6                     TBLPTRL         equ	1270	;# 
  1032   0004F7                     TBLPTRH         equ	1271	;# 
  1033   0004F8                     TBLPTRU         equ	1272	;# 
  1034   0004F9                     PCLAT           equ	1273	;# 
  1035   0004F9                     PCL             equ	1273	;# 
  1036   0004FA                     PCLATH          equ	1274	;# 
  1037   0004FB                     PCLATU          equ	1275	;# 
  1038   0004FC                     STKPTR          equ	1276	;# 
  1039   0004FD                     TOS             equ	1277	;# 
  1040   0004FD                     TOSL            equ	1277	;# 
  1041   0004FE                     TOSH            equ	1278	;# 
  1042   0004FF                     TOSU            equ	1279	;# 
  1043   000039                     CLKRCON         equ	57	;# 
  1044   00003A                     CLKRCLK         equ	58	;# 
  1045   000040                     NVMCON0         equ	64	;# 
  1046   000041                     NVMCON1         equ	65	;# 
  1047   000042                     NVMLOCK         equ	66	;# 
  1048   000043                     NVMADR          equ	67	;# 
  1049   000043                     NVMADRL         equ	67	;# 
  1050   000044                     NVMADRH         equ	68	;# 
  1051   000045                     NVMADRU         equ	69	;# 
  1052   000046                     NVMDAT          equ	70	;# 
  1053   000046                     NVMDATL         equ	70	;# 
  1054   000047                     NVMDATH         equ	71	;# 
  1055   000048                     VREGCON         equ	72	;# 
  1056   000049                     BORCON          equ	73	;# 
  1057   00004A                     HLVDCON0        equ	74	;# 
  1058   00004B                     HLVDCON1        equ	75	;# 
  1059   00004C                     ZCDCON          equ	76	;# 
  1060   000060                     PMD0            equ	96	;# 
  1061   000061                     PMD1            equ	97	;# 
  1062   000063                     PMD3            equ	99	;# 
  1063   000064                     PMD4            equ	100	;# 
  1064   000065                     PMD5            equ	101	;# 
  1065   000066                     PMD6            equ	102	;# 
  1066   000067                     PMD7            equ	103	;# 
  1067   000068                     PMD8            equ	104	;# 
  1068   00006A                     MD1CON0         equ	106	;# 
  1069   00006B                     MD1CON1         equ	107	;# 
  1070   00006C                     MD1SRC          equ	108	;# 
  1071   00006D                     MD1CARL         equ	109	;# 
  1072   00006E                     MD1CARH         equ	110	;# 
  1073   00006F                     CMOUT           equ	111	;# 
  1074   000070                     CM1CON0         equ	112	;# 
  1075   000071                     CM1CON1         equ	113	;# 
  1076   000072                     CM1NCH          equ	114	;# 
  1077   000073                     CM1PCH          equ	115	;# 
  1078   000074                     CM2CON0         equ	116	;# 
  1079   000075                     CM2CON1         equ	117	;# 
  1080   000076                     CM2NCH          equ	118	;# 
  1081   000077                     CM2PCH          equ	119	;# 
  1082   000078                     WDTCON0         equ	120	;# 
  1083   000079                     WDTCON1         equ	121	;# 
  1084   00007A                     WDTPS           equ	122	;# 
  1085   00007A                     WDTPSL          equ	122	;# 
  1086   00007B                     WDTPSH          equ	123	;# 
  1087   00007C                     WDTTMR          equ	124	;# 
  1088   00007D                     DAC1DAT         equ	125	;# 
  1089   00007D                     DAC1DATL        equ	125	;# 
  1090   00007F                     DAC1CON         equ	127	;# 
  1091   000080                     SPI1RXB         equ	128	;# 
  1092   000081                     SPI1TXB         equ	129	;# 
  1093   000082                     SPI1TCNT        equ	130	;# 
  1094   000082                     SPI1TCNTL       equ	130	;# 
  1095   000083                     SPI1TCNTH       equ	131	;# 
  1096   000084                     SPI1CON0        equ	132	;# 
  1097   000085                     SPI1CON1        equ	133	;# 
  1098   000086                     SPI1CON2        equ	134	;# 
  1099   000087                     SPI1STATUS      equ	135	;# 
  1100   000088                     SPI1TWIDTH      equ	136	;# 
  1101   000089                     SPI1BAUD        equ	137	;# 
  1102   00008A                     SPI1INTF        equ	138	;# 
  1103   00008B                     SPI1INTE        equ	139	;# 
  1104   00008C                     SPI1CLK         equ	140	;# 
  1105   00008D                     SPI2RXB         equ	141	;# 
  1106   00008E                     SPI2TXB         equ	142	;# 
  1107   00008F                     SPI2TCNT        equ	143	;# 
  1108   00008F                     SPI2TCNTL       equ	143	;# 
  1109   000090                     SPI2TCNTH       equ	144	;# 
  1110   000091                     SPI2CON0        equ	145	;# 
  1111   000092                     SPI2CON1        equ	146	;# 
  1112   000093                     SPI2CON2        equ	147	;# 
  1113   000094                     SPI2STATUS      equ	148	;# 
  1114   000095                     SPI2TWIDTH      equ	149	;# 
  1115   000096                     SPI2BAUD        equ	150	;# 
  1116   000097                     SPI2INTF        equ	151	;# 
  1117   000098                     SPI2INTE        equ	152	;# 
  1118   000099                     SPI2CLK         equ	153	;# 
  1119   0000AC                     ACTCON          equ	172	;# 
  1120   0000AD                     OSCCON1         equ	173	;# 
  1121   0000AE                     OSCCON2         equ	174	;# 
  1122   0000AF                     OSCCON3         equ	175	;# 
  1123   0000B0                     OSCTUNE         equ	176	;# 
  1124   0000B1                     OSCFRQ          equ	177	;# 
  1125   0000B1                     OSCFREQ         equ	177	;# 
  1126   0000B2                     OSCSTAT         equ	178	;# 
  1127   0000B2                     OSCSTAT1        equ	178	;# 
  1128   0000B3                     OSCEN           equ	179	;# 
  1129   0000B4                     PRLOCK          equ	180	;# 
  1130   0000B5                     SCANPR          equ	181	;# 
  1131   0000B6                     DMA1PR          equ	182	;# 
  1132   0000B7                     DMA2PR          equ	183	;# 
  1133   0000B8                     DMA3PR          equ	184	;# 
  1134   0000B9                     DMA4PR          equ	185	;# 
  1135   0000BA                     DMA5PR          equ	186	;# 
  1136   0000BB                     DMA6PR          equ	187	;# 
  1137   0000BE                     MAINPR          equ	190	;# 
  1138   0000BF                     ISRPR           equ	191	;# 
  1139   0000D4                     CLCDATA         equ	212	;# 
  1140   0000D5                     CLCSELECT       equ	213	;# 
  1141   0000D6                     CLCnCON         equ	214	;# 
  1142   0000D7                     CLCnPOL         equ	215	;# 
  1143   0000D8                     CLCnSEL0        equ	216	;# 
  1144   0000D9                     CLCnSEL1        equ	217	;# 
  1145   0000DA                     CLCnSEL2        equ	218	;# 
  1146   0000DB                     CLCnSEL3        equ	219	;# 
  1147   0000DC                     CLCnGLS0        equ	220	;# 
  1148   0000DD                     CLCnGLS1        equ	221	;# 
  1149   0000DE                     CLCnGLS2        equ	222	;# 
  1150   0000DF                     CLCnGLS3        equ	223	;# 
  1151   0000E8                     DMASELECT       equ	232	;# 
  1152   0000E9                     DMAnBUF         equ	233	;# 
  1153   0000EA                     DMAnDCNT        equ	234	;# 
  1154   0000EA                     DMAnDCNTL       equ	234	;# 
  1155   0000EB                     DMAnDCNTH       equ	235	;# 
  1156   0000EC                     DMAnDPTR        equ	236	;# 
  1157   0000EC                     DMAnDPTRL       equ	236	;# 
  1158   0000ED                     DMAnDPTRH       equ	237	;# 
  1159   0000EE                     DMAnDSZ         equ	238	;# 
  1160   0000EE                     DMAnDSZL        equ	238	;# 
  1161   0000EF                     DMAnDSZH        equ	239	;# 
  1162   0000F0                     DMAnDSA         equ	240	;# 
  1163   0000F0                     DMAnDSAL        equ	240	;# 
  1164   0000F1                     DMAnDSAH        equ	241	;# 
  1165   0000F2                     DMAnSCNT        equ	242	;# 
  1166   0000F2                     DMAnSCNTL       equ	242	;# 
  1167   0000F3                     DMAnSCNTH       equ	243	;# 
  1168   0000F4                     DMAnSPTR        equ	244	;# 
  1169   0000F4                     DMAnSPTRL       equ	244	;# 
  1170   0000F5                     DMAnSPTRH       equ	245	;# 
  1171   0000F6                     DMAnSPTRU       equ	246	;# 
  1172   0000F7                     DMAnSSZ         equ	247	;# 
  1173   0000F7                     DMAnSSZL        equ	247	;# 
  1174   0000F8                     DMAnSSZH        equ	248	;# 
  1175   0000F9                     DMAnSSA         equ	249	;# 
  1176   0000F9                     DMAnSSAL        equ	249	;# 
  1177   0000FA                     DMAnSSAH        equ	250	;# 
  1178   0000FB                     DMAnSSAU        equ	251	;# 
  1179   0000FC                     DMAnCON0        equ	252	;# 
  1180   0000FD                     DMAnCON1        equ	253	;# 
  1181   0000FE                     DMAnAIRQ        equ	254	;# 
  1182   0000FF                     DMAnSIRQ        equ	255	;# 
  1183   000200                     PPSLOCK         equ	512	;# 
  1184   000201                     RA0PPS          equ	513	;# 
  1185   000202                     RA1PPS          equ	514	;# 
  1186   000203                     RA2PPS          equ	515	;# 
  1187   000204                     RA3PPS          equ	516	;# 
  1188   000205                     RA4PPS          equ	517	;# 
  1189   000206                     RA5PPS          equ	518	;# 
  1190   000207                     RA6PPS          equ	519	;# 
  1191   000208                     RA7PPS          equ	520	;# 
  1192   000209                     RB0PPS          equ	521	;# 
  1193   00020A                     RB1PPS          equ	522	;# 
  1194   00020B                     RB2PPS          equ	523	;# 
  1195   00020C                     RB3PPS          equ	524	;# 
  1196   00020D                     RB4PPS          equ	525	;# 
  1197   00020E                     RB5PPS          equ	526	;# 
  1198   00020F                     RB6PPS          equ	527	;# 
  1199   000210                     RB7PPS          equ	528	;# 
  1200   000211                     RC0PPS          equ	529	;# 
  1201   000212                     RC1PPS          equ	530	;# 
  1202   000213                     RC2PPS          equ	531	;# 
  1203   000214                     RC3PPS          equ	532	;# 
  1204   000215                     RC4PPS          equ	533	;# 
  1205   000216                     RC5PPS          equ	534	;# 
  1206   000217                     RC6PPS          equ	535	;# 
  1207   000218                     RC7PPS          equ	536	;# 
  1208   000219                     RD0PPS          equ	537	;# 
  1209   00021A                     RD1PPS          equ	538	;# 
  1210   00021B                     RD2PPS          equ	539	;# 
  1211   00021C                     RD3PPS          equ	540	;# 
  1212   00021D                     RD4PPS          equ	541	;# 
  1213   00021E                     RD5PPS          equ	542	;# 
  1214   00021F                     RD6PPS          equ	543	;# 
  1215   000220                     RD7PPS          equ	544	;# 
  1216   000221                     RE0PPS          equ	545	;# 
  1217   000222                     RE1PPS          equ	546	;# 
  1218   000223                     RE2PPS          equ	547	;# 
  1219   000229                     RF0PPS          equ	553	;# 
  1220   00022A                     RF1PPS          equ	554	;# 
  1221   00022B                     RF2PPS          equ	555	;# 
  1222   00022C                     RF3PPS          equ	556	;# 
  1223   00022D                     RF4PPS          equ	557	;# 
  1224   00022E                     RF5PPS          equ	558	;# 
  1225   00022F                     RF6PPS          equ	559	;# 
  1226   000230                     RF7PPS          equ	560	;# 
  1227   00023E                     INT0PPS         equ	574	;# 
  1228   00023F                     INT1PPS         equ	575	;# 
  1229   000240                     INT2PPS         equ	576	;# 
  1230   000241                     T0CKIPPS        equ	577	;# 
  1231   000242                     T1CKIPPS        equ	578	;# 
  1232   000243                     T1GPPS          equ	579	;# 
  1233   000244                     T3CKIPPS        equ	580	;# 
  1234   000245                     T3GPPS          equ	581	;# 
  1235   000246                     T5CKIPPS        equ	582	;# 
  1236   000247                     T5GPPS          equ	583	;# 
  1237   000248                     T2INPPS         equ	584	;# 
  1238   000249                     T4INPPS         equ	585	;# 
  1239   00024A                     T6INPPS         equ	586	;# 
  1240   00024F                     CCP1PPS         equ	591	;# 
  1241   000250                     CCP2PPS         equ	592	;# 
  1242   000251                     CCP3PPS         equ	593	;# 
  1243   000253                     PWM1ERSPPS      equ	595	;# 
  1244   000254                     PWM2ERSPPS      equ	596	;# 
  1245   000255                     PWM3ERSPPS      equ	597	;# 
  1246   000257                     PWMIN0PPS       equ	599	;# 
  1247   000258                     PWMIN1PPS       equ	600	;# 
  1248   000259                     SMT1WINPPS      equ	601	;# 
  1249   00025A                     SMT1SIGPPS      equ	602	;# 
  1250   00025B                     CWG1PPS         equ	603	;# 
  1251   00025B                     CWG1INPPS       equ	603	;# 
  1252   00025C                     CWG2PPS         equ	604	;# 
  1253   00025C                     CWG2INPPS       equ	604	;# 
  1254   00025D                     CWG3PPS         equ	605	;# 
  1255   00025D                     CWG3INPPS       equ	605	;# 
  1256   00025E                     MD1CARLPPS      equ	606	;# 
  1257   00025E                     MDCARLPPS       equ	606	;# 
  1258   00025F                     MD1CARHPPS      equ	607	;# 
  1259   00025F                     MDCARHPPS       equ	607	;# 
  1260   000260                     MD1SRCPPS       equ	608	;# 
  1261   000260                     MDSRCPPS        equ	608	;# 
  1262   000261                     CLCIN0PPS       equ	609	;# 
  1263   000262                     CLCIN1PPS       equ	610	;# 
  1264   000263                     CLCIN2PPS       equ	611	;# 
  1265   000264                     CLCIN3PPS       equ	612	;# 
  1266   000265                     CLCIN4PPS       equ	613	;# 
  1267   000266                     CLCIN5PPS       equ	614	;# 
  1268   000267                     CLCIN6PPS       equ	615	;# 
  1269   000268                     CLCIN7PPS       equ	616	;# 
  1270   000269                     ADACTPPS        equ	617	;# 
  1271   00026A                     SPI1SCKPPS      equ	618	;# 
  1272   00026B                     SPI1SDIPPS      equ	619	;# 
  1273   00026C                     SPI1SSPPS       equ	620	;# 
  1274   00026D                     SPI2SCKPPS      equ	621	;# 
  1275   00026E                     SPI2SDIPPS      equ	622	;# 
  1276   00026F                     SPI2SSPPS       equ	623	;# 
  1277   000270                     I2C1SDAPPS      equ	624	;# 
  1278   000271                     I2C1SCLPPS      equ	625	;# 
  1279   000272                     U1RXPPS         equ	626	;# 
  1280   000273                     U1CTSPPS        equ	627	;# 
  1281   000274                     U2RXPPS         equ	628	;# 
  1282   000275                     U2CTSPPS        equ	629	;# 
  1283   000276                     U3RXPPS         equ	630	;# 
  1284   000277                     U3CTSPPS        equ	631	;# 
  1285   000278                     U4RXPPS         equ	632	;# 
  1286   000279                     U4CTSPPS        equ	633	;# 
  1287   00027A                     U5RXPPS         equ	634	;# 
  1288   00027B                     U5CTSPPS        equ	635	;# 
  1289   000286                     RC4I2C          equ	646	;# 
  1290   000287                     RC3I2C          equ	647	;# 
  1291   000288                     RB2I2C          equ	648	;# 
  1292   000289                     RB1I2C          equ	649	;# 
  1293   00028B                     I2C1RXB         equ	651	;# 
  1294   00028C                     I2C1TXB         equ	652	;# 
  1295   00028D                     I2C1CNT         equ	653	;# 
  1296   00028E                     I2C1ADB0        equ	654	;# 
  1297   00028F                     I2C1ADB1        equ	655	;# 
  1298   000290                     I2C1ADR0        equ	656	;# 
  1299   000291                     I2C1ADR1        equ	657	;# 
  1300   000292                     I2C1ADR2        equ	658	;# 
  1301   000293                     I2C1ADR3        equ	659	;# 
  1302   000294                     I2C1CON0        equ	660	;# 
  1303   000295                     I2C1CON1        equ	661	;# 
  1304   000296                     I2C1CON2        equ	662	;# 
  1305   000297                     I2C1ERR         equ	663	;# 
  1306   000298                     I2C1STAT0       equ	664	;# 
  1307   000299                     I2C1STAT1       equ	665	;# 
  1308   00029A                     I2C1PIR         equ	666	;# 
  1309   00029B                     I2C1PIE         equ	667	;# 
  1310   00029C                     I2C1CLK         equ	668	;# 
  1311   00029D                     I2C1BTO         equ	669	;# 
  1312   0002A1                     U1RXB           equ	673	;# 
  1313   0002A1                     U1RXBL          equ	673	;# 
  1314   0002A2                     U1RXCHK         equ	674	;# 
  1315   0002A3                     U1TXB           equ	675	;# 
  1316   0002A3                     U1TXBL          equ	675	;# 
  1317   0002A4                     U1TXCHK         equ	676	;# 
  1318   0002A5                     U1P1            equ	677	;# 
  1319   0002A5                     U1P1L           equ	677	;# 
  1320   0002A6                     U1P1H           equ	678	;# 
  1321   0002A7                     U1P2            equ	679	;# 
  1322   0002A7                     U1P2L           equ	679	;# 
  1323   0002A8                     U1P2H           equ	680	;# 
  1324   0002A9                     U1P3            equ	681	;# 
  1325   0002A9                     U1P3L           equ	681	;# 
  1326   0002AA                     U1P3H           equ	682	;# 
  1327   0002AB                     U1CON0          equ	683	;# 
  1328   0002AC                     U1CON1          equ	684	;# 
  1329   0002AD                     U1CON2          equ	685	;# 
  1330   0002AE                     U1BRG           equ	686	;# 
  1331   0002AE                     U1BRGL          equ	686	;# 
  1332   0002AF                     U1BRGH          equ	687	;# 
  1333   0002B0                     U1FIFO          equ	688	;# 
  1334   0002B1                     U1UIR           equ	689	;# 
  1335   0002B2                     U1ERRIR         equ	690	;# 
  1336   0002B3                     U1ERRIE         equ	691	;# 
  1337   0002B4                     U2RXB           equ	692	;# 
  1338   0002B4                     U2RXBL          equ	692	;# 
  1339   0002B6                     U2TXB           equ	694	;# 
  1340   0002B6                     U2TXBL          equ	694	;# 
  1341   0002B8                     U2P1            equ	696	;# 
  1342   0002B8                     U2P1L           equ	696	;# 
  1343   0002BA                     U2P2            equ	698	;# 
  1344   0002BA                     U2P2L           equ	698	;# 
  1345   0002BC                     U2P3            equ	700	;# 
  1346   0002BC                     U2P3L           equ	700	;# 
  1347   0002BE                     U2CON0          equ	702	;# 
  1348   0002BF                     U2CON1          equ	703	;# 
  1349   0002C0                     U2CON2          equ	704	;# 
  1350   0002C1                     U2BRG           equ	705	;# 
  1351   0002C1                     U2BRGL          equ	705	;# 
  1352   0002C2                     U2BRGH          equ	706	;# 
  1353   0002C3                     U2FIFO          equ	707	;# 
  1354   0002C4                     U2UIR           equ	708	;# 
  1355   0002C5                     U2ERRIR         equ	709	;# 
  1356   0002C6                     U2ERRIE         equ	710	;# 
  1357   0002C7                     U3RXB           equ	711	;# 
  1358   0002C7                     U3RXBL          equ	711	;# 
  1359   0002C9                     U3TXB           equ	713	;# 
  1360   0002C9                     U3TXBL          equ	713	;# 
  1361   0002CB                     U3P1            equ	715	;# 
  1362   0002CB                     U3P1L           equ	715	;# 
  1363   0002CD                     U3P2            equ	717	;# 
  1364   0002CD                     U3P2L           equ	717	;# 
  1365   0002CF                     U3P3            equ	719	;# 
  1366   0002CF                     U3P3L           equ	719	;# 
  1367   0002D1                     U3CON0          equ	721	;# 
  1368   0002D2                     U3CON1          equ	722	;# 
  1369   0002D3                     U3CON2          equ	723	;# 
  1370   0002D4                     U3BRG           equ	724	;# 
  1371   0002D4                     U3BRGL          equ	724	;# 
  1372   0002D5                     U3BRGH          equ	725	;# 
  1373   0002D6                     U3FIFO          equ	726	;# 
  1374   0002D7                     U3UIR           equ	727	;# 
  1375   0002D8                     U3ERRIR         equ	728	;# 
  1376   0002D9                     U3ERRIE         equ	729	;# 
  1377   0002DA                     U4RXB           equ	730	;# 
  1378   0002DA                     U4RXBL          equ	730	;# 
  1379   0002DC                     U4TXB           equ	732	;# 
  1380   0002DC                     U4TXBL          equ	732	;# 
  1381   0002DE                     U4P1            equ	734	;# 
  1382   0002DE                     U4P1L           equ	734	;# 
  1383   0002E0                     U4P2            equ	736	;# 
  1384   0002E0                     U4P2L           equ	736	;# 
  1385   0002E2                     U4P3            equ	738	;# 
  1386   0002E2                     U4P3L           equ	738	;# 
  1387   0002E4                     U4CON0          equ	740	;# 
  1388   0002E5                     U4CON1          equ	741	;# 
  1389   0002E6                     U4CON2          equ	742	;# 
  1390   0002E7                     U4BRG           equ	743	;# 
  1391   0002E7                     U4BRGL          equ	743	;# 
  1392   0002E8                     U4BRGH          equ	744	;# 
  1393   0002E9                     U4FIFO          equ	745	;# 
  1394   0002EA                     U4UIR           equ	746	;# 
  1395   0002EB                     U4ERRIR         equ	747	;# 
  1396   0002EC                     U4ERRIE         equ	748	;# 
  1397   0002ED                     U5RXB           equ	749	;# 
  1398   0002ED                     U5RXBL          equ	749	;# 
  1399   0002EF                     U5TXB           equ	751	;# 
  1400   0002EF                     U5TXBL          equ	751	;# 
  1401   0002F1                     U5P1            equ	753	;# 
  1402   0002F1                     U5P1L           equ	753	;# 
  1403   0002F3                     U5P2            equ	755	;# 
  1404   0002F3                     U5P2L           equ	755	;# 
  1405   0002F5                     U5P3            equ	757	;# 
  1406   0002F5                     U5P3L           equ	757	;# 
  1407   0002F7                     U5CON0          equ	759	;# 
  1408   0002F8                     U5CON1          equ	760	;# 
  1409   0002F9                     U5CON2          equ	761	;# 
  1410   0002FA                     U5BRG           equ	762	;# 
  1411   0002FA                     U5BRGL          equ	762	;# 
  1412   0002FB                     U5BRGH          equ	763	;# 
  1413   0002FC                     U5FIFO          equ	764	;# 
  1414   0002FD                     U5UIR           equ	765	;# 
  1415   0002FE                     U5ERRIR         equ	766	;# 
  1416   0002FF                     U5ERRIE         equ	767	;# 
  1417   000300                     SMT1TMR         equ	768	;# 
  1418   000300                     SMT1TMRL        equ	768	;# 
  1419   000301                     SMT1TMRH        equ	769	;# 
  1420   000302                     SMT1TMRU        equ	770	;# 
  1421   000303                     SMT1CPR         equ	771	;# 
  1422   000303                     SMT1CPRL        equ	771	;# 
  1423   000304                     SMT1CPRH        equ	772	;# 
  1424   000305                     SMT1CPRU        equ	773	;# 
  1425   000306                     SMT1CPW         equ	774	;# 
  1426   000306                     SMT1CPWL        equ	774	;# 
  1427   000307                     SMT1CPWH        equ	775	;# 
  1428   000308                     SMT1CPWU        equ	776	;# 
  1429   000309                     SMT1PR          equ	777	;# 
  1430   000309                     SMT1PRL         equ	777	;# 
  1431   00030A                     SMT1PRH         equ	778	;# 
  1432   00030B                     SMT1PRU         equ	779	;# 
  1433   00030C                     SMT1CON0        equ	780	;# 
  1434   00030D                     SMT1CON1        equ	781	;# 
  1435   00030E                     SMT1STAT        equ	782	;# 
  1436   00030F                     SMT1CLK         equ	783	;# 
  1437   000310                     SMT1SIG         equ	784	;# 
  1438   000311                     SMT1WIN         equ	785	;# 
  1439   000318                     TMR0L           equ	792	;# 
  1440   000318                     TMR0            equ	792	;# 
  1441   000319                     TMR0H           equ	793	;# 
  1442   000319                     PR0             equ	793	;# 
  1443   00031A                     T0CON0          equ	794	;# 
  1444   00031B                     T0CON1          equ	795	;# 
  1445   00031C                     TMR1            equ	796	;# 
  1446   00031C                     TMR1L           equ	796	;# 
  1447   00031D                     TMR1H           equ	797	;# 
  1448   00031E                     T1CON           equ	798	;# 
  1449   00031E                     TMR1CON         equ	798	;# 
  1450   00031F                     T1GCON          equ	799	;# 
  1451   00031F                     TMR1GCON        equ	799	;# 
  1452   000320                     T1GATE          equ	800	;# 
  1453   000320                     TMR1GATE        equ	800	;# 
  1454   000321                     T1CLK           equ	801	;# 
  1455   000321                     TMR1CLK         equ	801	;# 
  1456   000321                     PR1             equ	801	;# 
  1457   000322                     T2TMR           equ	802	;# 
  1458   000322                     TMR2            equ	802	;# 
  1459   000323                     T2PR            equ	803	;# 
  1460   000323                     PR2             equ	803	;# 
  1461   000324                     T2CON           equ	804	;# 
  1462   000325                     T2HLT           equ	805	;# 
  1463   000326                     T2CLKCON        equ	806	;# 
  1464   000326                     T2CLK           equ	806	;# 
  1465   000327                     T2RST           equ	807	;# 
  1466   000328                     TMR3            equ	808	;# 
  1467   000328                     TMR3L           equ	808	;# 
  1468   000329                     TMR3H           equ	809	;# 
  1469   00032A                     T3CON           equ	810	;# 
  1470   00032A                     TMR3CON         equ	810	;# 
  1471   00032B                     T3GCON          equ	811	;# 
  1472   00032B                     TMR3GCON        equ	811	;# 
  1473   00032C                     T3GATE          equ	812	;# 
  1474   00032C                     TMR3GATE        equ	812	;# 
  1475   00032D                     T3CLK           equ	813	;# 
  1476   00032D                     TMR3CLK         equ	813	;# 
  1477   00032D                     PR3             equ	813	;# 
  1478   00032E                     T4TMR           equ	814	;# 
  1479   00032E                     TMR4            equ	814	;# 
  1480   00032F                     T4PR            equ	815	;# 
  1481   00032F                     PR4             equ	815	;# 
  1482   000330                     T4CON           equ	816	;# 
  1483   000331                     T4HLT           equ	817	;# 
  1484   000332                     T4CLKCON        equ	818	;# 
  1485   000332                     T4CLK           equ	818	;# 
  1486   000333                     T4RST           equ	819	;# 
  1487   000334                     TMR5            equ	820	;# 
  1488   000334                     TMR5L           equ	820	;# 
  1489   000335                     TMR5H           equ	821	;# 
  1490   000336                     T5CON           equ	822	;# 
  1491   000336                     TMR5CON         equ	822	;# 
  1492   000337                     T5GCON          equ	823	;# 
  1493   000337                     TMR5GCON        equ	823	;# 
  1494   000338                     T5GATE          equ	824	;# 
  1495   000338                     TMR5GATE        equ	824	;# 
  1496   000339                     T5CLK           equ	825	;# 
  1497   000339                     TMR5CLK         equ	825	;# 
  1498   000339                     PR5             equ	825	;# 
  1499   00033A                     T6TMR           equ	826	;# 
  1500   00033A                     TMR6            equ	826	;# 
  1501   00033B                     T6PR            equ	827	;# 
  1502   00033B                     PR6             equ	827	;# 
  1503   00033C                     T6CON           equ	828	;# 
  1504   00033D                     T6HLT           equ	829	;# 
  1505   00033E                     T6CLKCON        equ	830	;# 
  1506   00033E                     T6CLK           equ	830	;# 
  1507   00033F                     T6RST           equ	831	;# 
  1508   000340                     CCPR1           equ	832	;# 
  1509   000340                     CCPR1L          equ	832	;# 
  1510   000341                     CCPR1H          equ	833	;# 
  1511   000342                     CCP1CON         equ	834	;# 
  1512   000343                     CCP1CAP         equ	835	;# 
  1513   000344                     CCPR2           equ	836	;# 
  1514   000344                     CCPR2L          equ	836	;# 
  1515   000345                     CCPR2H          equ	837	;# 
  1516   000346                     CCP2CON         equ	838	;# 
  1517   000347                     CCP2CAP         equ	839	;# 
  1518   000348                     CCPR3           equ	840	;# 
  1519   000348                     CCPR3L          equ	840	;# 
  1520   000349                     CCPR3H          equ	841	;# 
  1521   00034A                     CCP3CON         equ	842	;# 
  1522   00034B                     CCP3CAP         equ	843	;# 
  1523   00034C                     CCPTMRS0        equ	844	;# 
  1524   00034F                     CRCDATA         equ	847	;# 
  1525   00034F                     CRCDATL         equ	847	;# 
  1526   000350                     CRCDATH         equ	848	;# 
  1527   000351                     CRCACC          equ	849	;# 
  1528   000351                     CRCACCL         equ	849	;# 
  1529   000352                     CRCACCH         equ	850	;# 
  1530   000353                     CRCSHFT         equ	851	;# 
  1531   000353                     CRCSHIFTL       equ	851	;# 
  1532   000354                     CRCSHIFTH       equ	852	;# 
  1533   000355                     CRCXOR          equ	853	;# 
  1534   000355                     CRCXORL         equ	853	;# 
  1535   000356                     CRCXORH         equ	854	;# 
  1536   000357                     CRCCON0         equ	855	;# 
  1537   000358                     CRCCON1         equ	856	;# 
  1538   00035A                     SCANLADR        equ	858	;# 
  1539   00035A                     SCANLADRL       equ	858	;# 
  1540   00035B                     SCANLADRH       equ	859	;# 
  1541   00035C                     SCANLADRU       equ	860	;# 
  1542   00035D                     SCANHADR        equ	861	;# 
  1543   00035D                     SCANHADRL       equ	861	;# 
  1544   00035E                     SCANHADRH       equ	862	;# 
  1545   00035F                     SCANHADRU       equ	863	;# 
  1546   000360                     SCANCON0        equ	864	;# 
  1547   000361                     SCANTRIG        equ	865	;# 
  1548   000362                     IPR0            equ	866	;# 
  1549   000363                     IPR1            equ	867	;# 
  1550   000364                     IPR2            equ	868	;# 
  1551   000365                     IPR3            equ	869	;# 
  1552   000366                     IPR4            equ	870	;# 
  1553   000367                     IPR5            equ	871	;# 
  1554   000368                     IPR6            equ	872	;# 
  1555   000369                     IPR7            equ	873	;# 
  1556   00036A                     IPR8            equ	874	;# 
  1557   00036B                     IPR9            equ	875	;# 
  1558   00036C                     IPR10           equ	876	;# 
  1559   00036D                     IPR11           equ	877	;# 
  1560   00036E                     IPR12           equ	878	;# 
  1561   00036F                     IPR13           equ	879	;# 
  1562   000370                     IPR14           equ	880	;# 
  1563   000371                     IPR15           equ	881	;# 
  1564   000373                     STATUS_CSHAD    equ	883	;# 
  1565   000374                     WREG_CSHAD      equ	884	;# 
  1566   000375                     BSR_CSHAD       equ	885	;# 
  1567   000376                     SHADCON         equ	886	;# 
  1568   000377                     STATUS_SHAD     equ	887	;# 
  1569   000378                     WREG_SHAD       equ	888	;# 
  1570   000379                     BSR_SHAD        equ	889	;# 
  1571   00037A                     PCLATH_SHAD     equ	890	;# 
  1572   00037B                     PCLATU_SHAD     equ	891	;# 
  1573   00037C                     FSR0SH          equ	892	;# 
  1574   00037C                     FSR0L_SHAD      equ	892	;# 
  1575   00037D                     FSR0H_SHAD      equ	893	;# 
  1576   00037E                     FSR1SH          equ	894	;# 
  1577   00037E                     FSR1L_SHAD      equ	894	;# 
  1578   00037F                     FSR1H_SHAD      equ	895	;# 
  1579   000380                     FSR2SH          equ	896	;# 
  1580   000380                     FSR2L_SHAD      equ	896	;# 
  1581   000381                     FSR2H_SHAD      equ	897	;# 
  1582   000382                     PRODSH          equ	898	;# 
  1583   000382                     PRODL_SHAD      equ	898	;# 
  1584   000383                     PRODH_SHAD      equ	899	;# 
  1585   0003BC                     CWG1CLK         equ	956	;# 
  1586   0003BC                     CWG1CLKCON      equ	956	;# 
  1587   0003BD                     CWG1ISM         equ	957	;# 
  1588   0003BD                     CWG1DAT         equ	957	;# 
  1589   0003BE                     CWG1DBR         equ	958	;# 
  1590   0003BF                     CWG1DBF         equ	959	;# 
  1591   0003C0                     CWG1CON0        equ	960	;# 
  1592   0003C1                     CWG1CON1        equ	961	;# 
  1593   0003C2                     CWG1AS0         equ	962	;# 
  1594   0003C3                     CWG1AS1         equ	963	;# 
  1595   0003C4                     CWG1STR         equ	964	;# 
  1596   0003C5                     CWG2CLK         equ	965	;# 
  1597   0003C5                     CWG2CLKCON      equ	965	;# 
  1598   0003C6                     CWG2ISM         equ	966	;# 
  1599   0003C6                     CWG2DAT         equ	966	;# 
  1600   0003C7                     CWG2DBR         equ	967	;# 
  1601   0003C8                     CWG2DBF         equ	968	;# 
  1602   0003C9                     CWG2CON0        equ	969	;# 
  1603   0003CA                     CWG2CON1        equ	970	;# 
  1604   0003CB                     CWG2AS0         equ	971	;# 
  1605   0003CC                     CWG2AS1         equ	972	;# 
  1606   0003CD                     CWG2STR         equ	973	;# 
  1607   0003CE                     CWG3CLK         equ	974	;# 
  1608   0003CE                     CWG3CLKCON      equ	974	;# 
  1609   0003CF                     CWG3ISM         equ	975	;# 
  1610   0003CF                     CWG3DAT         equ	975	;# 
  1611   0003D0                     CWG3DBR         equ	976	;# 
  1612   0003D1                     CWG3DBF         equ	977	;# 
  1613   0003D2                     CWG3CON0        equ	978	;# 
  1614   0003D3                     CWG3CON1        equ	979	;# 
  1615   0003D4                     CWG3AS0         equ	980	;# 
  1616   0003D5                     CWG3AS1         equ	981	;# 
  1617   0003D6                     CWG3STR         equ	982	;# 
  1618   0003D7                     FVRCON          equ	983	;# 
  1619   0003D8                     ADCPCON         equ	984	;# 
  1620   0003D8                     ADCP            equ	984	;# 
  1621   0003D9                     ADLTH           equ	985	;# 
  1622   0003D9                     ADLTHL          equ	985	;# 
  1623   0003DA                     ADLTHH          equ	986	;# 
  1624   0003DB                     ADUTH           equ	987	;# 
  1625   0003DB                     ADUTHL          equ	987	;# 
  1626   0003DC                     ADUTHH          equ	988	;# 
  1627   0003DD                     ADERR           equ	989	;# 
  1628   0003DD                     ADERRL          equ	989	;# 
  1629   0003DE                     ADERRH          equ	990	;# 
  1630   0003DF                     ADSTPT          equ	991	;# 
  1631   0003DF                     ADSTPTL         equ	991	;# 
  1632   0003E0                     ADSTPTH         equ	992	;# 
  1633   0003E1                     ADFLTR          equ	993	;# 
  1634   0003E1                     ADFLTRL         equ	993	;# 
  1635   0003E2                     ADFLTRH         equ	994	;# 
  1636   0003E3                     ADACC           equ	995	;# 
  1637   0003E3                     ADACCL          equ	995	;# 
  1638   0003E4                     ADACCH          equ	996	;# 
  1639   0003E5                     ADACCU          equ	997	;# 
  1640   0003E6                     ADCNT           equ	998	;# 
  1641   0003E7                     ADRPT           equ	999	;# 
  1642   0003E8                     ADPREV          equ	1000	;# 
  1643   0003E8                     ADPREVL         equ	1000	;# 
  1644   0003E9                     ADPREVH         equ	1001	;# 
  1645   0003EA                     ADRES           equ	1002	;# 
  1646   0003EA                     ADRESL          equ	1002	;# 
  1647   0003EB                     ADRESH          equ	1003	;# 
  1648   0003EC                     ADPCH           equ	1004	;# 
  1649   0003EE                     ADACQ           equ	1006	;# 
  1650   0003EE                     ADACQL          equ	1006	;# 
  1651   0003EF                     ADACQH          equ	1007	;# 
  1652   0003F0                     ADCAP           equ	1008	;# 
  1653   0003F1                     ADPRE           equ	1009	;# 
  1654   0003F1                     ADPREL          equ	1009	;# 
  1655   0003F2                     ADPREH          equ	1010	;# 
  1656   0003F3                     ADCON0          equ	1011	;# 
  1657   0003F4                     ADCON1          equ	1012	;# 
  1658   0003F5                     ADCON2          equ	1013	;# 
  1659   0003F6                     ADCON3          equ	1014	;# 
  1660   0003F7                     ADSTAT          equ	1015	;# 
  1661   0003F8                     ADREF           equ	1016	;# 
  1662   0003F9                     ADACT           equ	1017	;# 
  1663   0003FA                     ADCLK           equ	1018	;# 
  1664   000400                     ANSELA          equ	1024	;# 
  1665   000401                     WPUA            equ	1025	;# 
  1666   000402                     ODCONA          equ	1026	;# 
  1667   000403                     SLRCONA         equ	1027	;# 
  1668   000404                     INLVLA          equ	1028	;# 
  1669   000405                     IOCAP           equ	1029	;# 
  1670   000406                     IOCAN           equ	1030	;# 
  1671   000407                     IOCAF           equ	1031	;# 
  1672   000408                     ANSELB          equ	1032	;# 
  1673   000409                     WPUB            equ	1033	;# 
  1674   00040A                     ODCONB          equ	1034	;# 
  1675   00040B                     SLRCONB         equ	1035	;# 
  1676   00040C                     INLVLB          equ	1036	;# 
  1677   00040D                     IOCBP           equ	1037	;# 
  1678   00040E                     IOCBN           equ	1038	;# 
  1679   00040F                     IOCBF           equ	1039	;# 
  1680   000410                     ANSELC          equ	1040	;# 
  1681   000411                     WPUC            equ	1041	;# 
  1682   000412                     ODCONC          equ	1042	;# 
  1683   000413                     SLRCONC         equ	1043	;# 
  1684   000414                     INLVLC          equ	1044	;# 
  1685   000415                     IOCCP           equ	1045	;# 
  1686   000416                     IOCCN           equ	1046	;# 
  1687   000417                     IOCCF           equ	1047	;# 
  1688   000418                     ANSELD          equ	1048	;# 
  1689   000419                     WPUD            equ	1049	;# 
  1690   00041A                     ODCOND          equ	1050	;# 
  1691   00041B                     SLRCOND         equ	1051	;# 
  1692   00041C                     INLVLD          equ	1052	;# 
  1693   000420                     ANSELE          equ	1056	;# 
  1694   000421                     WPUE            equ	1057	;# 
  1695   000422                     ODCONE          equ	1058	;# 
  1696   000423                     SLRCONE         equ	1059	;# 
  1697   000424                     INLVLE          equ	1060	;# 
  1698   000425                     IOCEP           equ	1061	;# 
  1699   000426                     IOCEN           equ	1062	;# 
  1700   000427                     IOCEF           equ	1063	;# 
  1701   000428                     ANSELF          equ	1064	;# 
  1702   000429                     WPUF            equ	1065	;# 
  1703   00042A                     ODCONF          equ	1066	;# 
  1704   00042B                     SLRCONF         equ	1067	;# 
  1705   00042C                     INLVLF          equ	1068	;# 
  1706   000440                     NCO1ACC         equ	1088	;# 
  1707   000440                     NCO1ACCL        equ	1088	;# 
  1708   000441                     NCO1ACCH        equ	1089	;# 
  1709   000442                     NCO1ACCU        equ	1090	;# 
  1710   000443                     NCO1INC         equ	1091	;# 
  1711   000443                     NCO1INCL        equ	1091	;# 
  1712   000444                     NCO1INCH        equ	1092	;# 
  1713   000445                     NCO1INCU        equ	1093	;# 
  1714   000446                     NCO1CON         equ	1094	;# 
  1715   000447                     NCO1CLK         equ	1095	;# 
  1716   000448                     NCO2ACC         equ	1096	;# 
  1717   000448                     NCO2ACCL        equ	1096	;# 
  1718   000449                     NCO2ACCH        equ	1097	;# 
  1719   00044A                     NCO2ACCU        equ	1098	;# 
  1720   00044B                     NCO2INC         equ	1099	;# 
  1721   00044B                     NCO2INCL        equ	1099	;# 
  1722   00044C                     NCO2INCH        equ	1100	;# 
  1723   00044D                     NCO2INCU        equ	1101	;# 
  1724   00044E                     NCO2CON         equ	1102	;# 
  1725   00044F                     NCO2CLK         equ	1103	;# 
  1726   000450                     NCO3ACC         equ	1104	;# 
  1727   000450                     NCO3ACCL        equ	1104	;# 
  1728   000451                     NCO3ACCH        equ	1105	;# 
  1729   000452                     NCO3ACCU        equ	1106	;# 
  1730   000453                     NCO3INC         equ	1107	;# 
  1731   000453                     NCO3INCL        equ	1107	;# 
  1732   000454                     NCO3INCH        equ	1108	;# 
  1733   000455                     NCO3INCU        equ	1109	;# 
  1734   000456                     NCO3CON         equ	1110	;# 
  1735   000457                     NCO3CLK         equ	1111	;# 
  1736   000459                     IVTLOCK         equ	1113	;# 
  1737   00045A                     IVTAD           equ	1114	;# 
  1738   00045A                     IVTADL          equ	1114	;# 
  1739   00045B                     IVTADH          equ	1115	;# 
  1740   00045C                     IVTADU          equ	1116	;# 
  1741   00045D                     IVTBASE         equ	1117	;# 
  1742   00045D                     IVTBASEL        equ	1117	;# 
  1743   00045E                     IVTBASEH        equ	1118	;# 
  1744   00045F                     IVTBASEU        equ	1119	;# 
  1745   000460                     PWM1ERS         equ	1120	;# 
  1746   000461                     PWM1CLK         equ	1121	;# 
  1747   000462                     PWM1LDS         equ	1122	;# 
  1748   000463                     PWM1PR          equ	1123	;# 
  1749   000463                     PWM1PRL         equ	1123	;# 
  1750   000464                     PWM1PRH         equ	1124	;# 
  1751   000465                     PWM1CPRE        equ	1125	;# 
  1752   000466                     PWM1PIPOS       equ	1126	;# 
  1753   000467                     PWM1GIR         equ	1127	;# 
  1754   000468                     PWM1GIE         equ	1128	;# 
  1755   000469                     PWM1CON         equ	1129	;# 
  1756   00046A                     PWM1S1CFG       equ	1130	;# 
  1757   00046B                     PWM1S1P1        equ	1131	;# 
  1758   00046B                     PWM1S1P1L       equ	1131	;# 
  1759   00046C                     PWM1S1P1H       equ	1132	;# 
  1760   00046D                     PWM1S1P2        equ	1133	;# 
  1761   00046D                     PWM1S1P2L       equ	1133	;# 
  1762   00046E                     PWM1S1P2H       equ	1134	;# 
  1763   00046F                     PWM2ERS         equ	1135	;# 
  1764   000470                     PWM2CLK         equ	1136	;# 
  1765   000471                     PWM2LDS         equ	1137	;# 
  1766   000472                     PWM2PR          equ	1138	;# 
  1767   000472                     PWM2PRL         equ	1138	;# 
  1768   000473                     PWM2PRH         equ	1139	;# 
  1769   000474                     PWM2CPRE        equ	1140	;# 
  1770   000475                     PWM2PIPOS       equ	1141	;# 
  1771   000476                     PWM2GIR         equ	1142	;# 
  1772   000477                     PWM2GIE         equ	1143	;# 
  1773   000478                     PWM2CON         equ	1144	;# 
  1774   000479                     PWM2S1CFG       equ	1145	;# 
  1775   00047A                     PWM2S1P1        equ	1146	;# 
  1776   00047A                     PWM2S1P1L       equ	1146	;# 
  1777   00047B                     PWM2S1P1H       equ	1147	;# 
  1778   00047C                     PWM2S1P2        equ	1148	;# 
  1779   00047C                     PWM2S1P2L       equ	1148	;# 
  1780   00047D                     PWM2S1P2H       equ	1149	;# 
  1781   00047E                     PWM3ERS         equ	1150	;# 
  1782   00047F                     PWM3CLK         equ	1151	;# 
  1783   000480                     PWM3LDS         equ	1152	;# 
  1784   000481                     PWM3PR          equ	1153	;# 
  1785   000481                     PWM3PRL         equ	1153	;# 
  1786   000482                     PWM3PRH         equ	1154	;# 
  1787   000483                     PWM3CPRE        equ	1155	;# 
  1788   000484                     PWM3PIPOS       equ	1156	;# 
  1789   000485                     PWM3GIR         equ	1157	;# 
  1790   000486                     PWM3GIE         equ	1158	;# 
  1791   000487                     PWM3CON         equ	1159	;# 
  1792   000488                     PWM3S1CFG       equ	1160	;# 
  1793   000489                     PWM3S1P1        equ	1161	;# 
  1794   000489                     PWM3S1P1L       equ	1161	;# 
  1795   00048A                     PWM3S1P1H       equ	1162	;# 
  1796   00048B                     PWM3S1P2        equ	1163	;# 
  1797   00048B                     PWM3S1P2L       equ	1163	;# 
  1798   00048C                     PWM3S1P2H       equ	1164	;# 
  1799   00049C                     PWMLOAD         equ	1180	;# 
  1800   00049D                     PWMEN           equ	1181	;# 
  1801   00049E                     PIE0            equ	1182	;# 
  1802   00049F                     PIE1            equ	1183	;# 
  1803   0004A0                     PIE2            equ	1184	;# 
  1804   0004A1                     PIE3            equ	1185	;# 
  1805   0004A2                     PIE4            equ	1186	;# 
  1806   0004A3                     PIE5            equ	1187	;# 
  1807   0004A4                     PIE6            equ	1188	;# 
  1808   0004A5                     PIE7            equ	1189	;# 
  1809   0004A6                     PIE8            equ	1190	;# 
  1810   0004A7                     PIE9            equ	1191	;# 
  1811   0004A8                     PIE10           equ	1192	;# 
  1812   0004A9                     PIE11           equ	1193	;# 
  1813   0004AA                     PIE12           equ	1194	;# 
  1814   0004AB                     PIE13           equ	1195	;# 
  1815   0004AC                     PIE14           equ	1196	;# 
  1816   0004AD                     PIE15           equ	1197	;# 
  1817   0004AE                     PIR0            equ	1198	;# 
  1818   0004AF                     PIR1            equ	1199	;# 
  1819   0004B0                     PIR2            equ	1200	;# 
  1820   0004B1                     PIR3            equ	1201	;# 
  1821   0004B2                     PIR4            equ	1202	;# 
  1822   0004B3                     PIR5            equ	1203	;# 
  1823   0004B4                     PIR6            equ	1204	;# 
  1824   0004B5                     PIR7            equ	1205	;# 
  1825   0004B6                     PIR8            equ	1206	;# 
  1826   0004B7                     PIR9            equ	1207	;# 
  1827   0004B8                     PIR10           equ	1208	;# 
  1828   0004B9                     PIR11           equ	1209	;# 
  1829   0004BA                     PIR12           equ	1210	;# 
  1830   0004BB                     PIR13           equ	1211	;# 
  1831   0004BC                     PIR14           equ	1212	;# 
  1832   0004BD                     PIR15           equ	1213	;# 
  1833   0004BE                     LATA            equ	1214	;# 
  1834   0004BF                     LATB            equ	1215	;# 
  1835   0004C0                     LATC            equ	1216	;# 
  1836   0004C1                     LATD            equ	1217	;# 
  1837   0004C2                     LATE            equ	1218	;# 
  1838   0004C3                     LATF            equ	1219	;# 
  1839   0004C6                     TRISA           equ	1222	;# 
  1840   0004C7                     TRISB           equ	1223	;# 
  1841   0004C8                     TRISC           equ	1224	;# 
  1842   0004C9                     TRISD           equ	1225	;# 
  1843   0004CA                     TRISE           equ	1226	;# 
  1844   0004CB                     TRISF           equ	1227	;# 
  1845   0004CE                     PORTA           equ	1230	;# 
  1846   0004CF                     PORTB           equ	1231	;# 
  1847   0004D0                     PORTC           equ	1232	;# 
  1848   0004D1                     PORTD           equ	1233	;# 
  1849   0004D2                     PORTE           equ	1234	;# 
  1850   0004D3                     PORTF           equ	1235	;# 
  1851   0004D6                     INTCON0         equ	1238	;# 
  1852   0004D7                     INTCON1         equ	1239	;# 
  1853   0004D8                     STATUS          equ	1240	;# 
  1854   0004D9                     FSR2            equ	1241	;# 
  1855   0004D9                     FSR2L           equ	1241	;# 
  1856   0004DA                     FSR2H           equ	1242	;# 
  1857   0004DB                     PLUSW2          equ	1243	;# 
  1858   0004DC                     PREINC2         equ	1244	;# 
  1859   0004DD                     POSTDEC2        equ	1245	;# 
  1860   0004DE                     POSTINC2        equ	1246	;# 
  1861   0004DF                     INDF2           equ	1247	;# 
  1862   0004E0                     BSR             equ	1248	;# 
  1863   0004E1                     FSR1            equ	1249	;# 
  1864   0004E1                     FSR1L           equ	1249	;# 
  1865   0004E2                     FSR1H           equ	1250	;# 
  1866   0004E3                     PLUSW1          equ	1251	;# 
  1867   0004E4                     PREINC1         equ	1252	;# 
  1868   0004E5                     POSTDEC1        equ	1253	;# 
  1869   0004E6                     POSTINC1        equ	1254	;# 
  1870   0004E7                     INDF1           equ	1255	;# 
  1871   0004E8                     WREG            equ	1256	;# 
  1872   0004E9                     FSR0            equ	1257	;# 
  1873   0004E9                     FSR0L           equ	1257	;# 
  1874   0004EA                     FSR0H           equ	1258	;# 
  1875   0004EB                     PLUSW0          equ	1259	;# 
  1876   0004EC                     PREINC0         equ	1260	;# 
  1877   0004ED                     POSTDEC0        equ	1261	;# 
  1878   0004EE                     POSTINC0        equ	1262	;# 
  1879   0004EF                     INDF0           equ	1263	;# 
  1880   0004F0                     PCON0           equ	1264	;# 
  1881   0004F1                     PCON1           equ	1265	;# 
  1882   0004F2                     CPUDOZE         equ	1266	;# 
  1883   0004F3                     PROD            equ	1267	;# 
  1884   0004F3                     PRODL           equ	1267	;# 
  1885   0004F4                     PRODH           equ	1268	;# 
  1886   0004F5                     TABLAT          equ	1269	;# 
  1887   0004F6                     TBLPTR          equ	1270	;# 
  1888   0004F6                     TBLPTRL         equ	1270	;# 
  1889   0004F7                     TBLPTRH         equ	1271	;# 
  1890   0004F8                     TBLPTRU         equ	1272	;# 
  1891   0004F9                     PCLAT           equ	1273	;# 
  1892   0004F9                     PCL             equ	1273	;# 
  1893   0004FA                     PCLATH          equ	1274	;# 
  1894   0004FB                     PCLATU          equ	1275	;# 
  1895   0004FC                     STKPTR          equ	1276	;# 
  1896   0004FD                     TOS             equ	1277	;# 
  1897   0004FD                     TOSL            equ	1277	;# 
  1898   0004FE                     TOSH            equ	1278	;# 
  1899   0004FF                     TOSU            equ	1279	;# 
  1900   000039                     CLKRCON         equ	57	;# 
  1901   00003A                     CLKRCLK         equ	58	;# 
  1902   000040                     NVMCON0         equ	64	;# 
  1903   000041                     NVMCON1         equ	65	;# 
  1904   000042                     NVMLOCK         equ	66	;# 
  1905   000043                     NVMADR          equ	67	;# 
  1906   000043                     NVMADRL         equ	67	;# 
  1907   000044                     NVMADRH         equ	68	;# 
  1908   000045                     NVMADRU         equ	69	;# 
  1909   000046                     NVMDAT          equ	70	;# 
  1910   000046                     NVMDATL         equ	70	;# 
  1911   000047                     NVMDATH         equ	71	;# 
  1912   000048                     VREGCON         equ	72	;# 
  1913   000049                     BORCON          equ	73	;# 
  1914   00004A                     HLVDCON0        equ	74	;# 
  1915   00004B                     HLVDCON1        equ	75	;# 
  1916   00004C                     ZCDCON          equ	76	;# 
  1917   000060                     PMD0            equ	96	;# 
  1918   000061                     PMD1            equ	97	;# 
  1919   000063                     PMD3            equ	99	;# 
  1920   000064                     PMD4            equ	100	;# 
  1921   000065                     PMD5            equ	101	;# 
  1922   000066                     PMD6            equ	102	;# 
  1923   000067                     PMD7            equ	103	;# 
  1924   000068                     PMD8            equ	104	;# 
  1925   00006A                     MD1CON0         equ	106	;# 
  1926   00006B                     MD1CON1         equ	107	;# 
  1927   00006C                     MD1SRC          equ	108	;# 
  1928   00006D                     MD1CARL         equ	109	;# 
  1929   00006E                     MD1CARH         equ	110	;# 
  1930   00006F                     CMOUT           equ	111	;# 
  1931   000070                     CM1CON0         equ	112	;# 
  1932   000071                     CM1CON1         equ	113	;# 
  1933   000072                     CM1NCH          equ	114	;# 
  1934   000073                     CM1PCH          equ	115	;# 
  1935   000074                     CM2CON0         equ	116	;# 
  1936   000075                     CM2CON1         equ	117	;# 
  1937   000076                     CM2NCH          equ	118	;# 
  1938   000077                     CM2PCH          equ	119	;# 
  1939   000078                     WDTCON0         equ	120	;# 
  1940   000079                     WDTCON1         equ	121	;# 
  1941   00007A                     WDTPS           equ	122	;# 
  1942   00007A                     WDTPSL          equ	122	;# 
  1943   00007B                     WDTPSH          equ	123	;# 
  1944   00007C                     WDTTMR          equ	124	;# 
  1945   00007D                     DAC1DAT         equ	125	;# 
  1946   00007D                     DAC1DATL        equ	125	;# 
  1947   00007F                     DAC1CON         equ	127	;# 
  1948   000080                     SPI1RXB         equ	128	;# 
  1949   000081                     SPI1TXB         equ	129	;# 
  1950   000082                     SPI1TCNT        equ	130	;# 
  1951   000082                     SPI1TCNTL       equ	130	;# 
  1952   000083                     SPI1TCNTH       equ	131	;# 
  1953   000084                     SPI1CON0        equ	132	;# 
  1954   000085                     SPI1CON1        equ	133	;# 
  1955   000086                     SPI1CON2        equ	134	;# 
  1956   000087                     SPI1STATUS      equ	135	;# 
  1957   000088                     SPI1TWIDTH      equ	136	;# 
  1958   000089                     SPI1BAUD        equ	137	;# 
  1959   00008A                     SPI1INTF        equ	138	;# 
  1960   00008B                     SPI1INTE        equ	139	;# 
  1961   00008C                     SPI1CLK         equ	140	;# 
  1962   00008D                     SPI2RXB         equ	141	;# 
  1963   00008E                     SPI2TXB         equ	142	;# 
  1964   00008F                     SPI2TCNT        equ	143	;# 
  1965   00008F                     SPI2TCNTL       equ	143	;# 
  1966   000090                     SPI2TCNTH       equ	144	;# 
  1967   000091                     SPI2CON0        equ	145	;# 
  1968   000092                     SPI2CON1        equ	146	;# 
  1969   000093                     SPI2CON2        equ	147	;# 
  1970   000094                     SPI2STATUS      equ	148	;# 
  1971   000095                     SPI2TWIDTH      equ	149	;# 
  1972   000096                     SPI2BAUD        equ	150	;# 
  1973   000097                     SPI2INTF        equ	151	;# 
  1974   000098                     SPI2INTE        equ	152	;# 
  1975   000099                     SPI2CLK         equ	153	;# 
  1976   0000AC                     ACTCON          equ	172	;# 
  1977   0000AD                     OSCCON1         equ	173	;# 
  1978   0000AE                     OSCCON2         equ	174	;# 
  1979   0000AF                     OSCCON3         equ	175	;# 
  1980   0000B0                     OSCTUNE         equ	176	;# 
  1981   0000B1                     OSCFRQ          equ	177	;# 
  1982   0000B1                     OSCFREQ         equ	177	;# 
  1983   0000B2                     OSCSTAT         equ	178	;# 
  1984   0000B2                     OSCSTAT1        equ	178	;# 
  1985   0000B3                     OSCEN           equ	179	;# 
  1986   0000B4                     PRLOCK          equ	180	;# 
  1987   0000B5                     SCANPR          equ	181	;# 
  1988   0000B6                     DMA1PR          equ	182	;# 
  1989   0000B7                     DMA2PR          equ	183	;# 
  1990   0000B8                     DMA3PR          equ	184	;# 
  1991   0000B9                     DMA4PR          equ	185	;# 
  1992   0000BA                     DMA5PR          equ	186	;# 
  1993   0000BB                     DMA6PR          equ	187	;# 
  1994   0000BE                     MAINPR          equ	190	;# 
  1995   0000BF                     ISRPR           equ	191	;# 
  1996   0000D4                     CLCDATA         equ	212	;# 
  1997   0000D5                     CLCSELECT       equ	213	;# 
  1998   0000D6                     CLCnCON         equ	214	;# 
  1999   0000D7                     CLCnPOL         equ	215	;# 
  2000   0000D8                     CLCnSEL0        equ	216	;# 
  2001   0000D9                     CLCnSEL1        equ	217	;# 
  2002   0000DA                     CLCnSEL2        equ	218	;# 
  2003   0000DB                     CLCnSEL3        equ	219	;# 
  2004   0000DC                     CLCnGLS0        equ	220	;# 
  2005   0000DD                     CLCnGLS1        equ	221	;# 
  2006   0000DE                     CLCnGLS2        equ	222	;# 
  2007   0000DF                     CLCnGLS3        equ	223	;# 
  2008   0000E8                     DMASELECT       equ	232	;# 
  2009   0000E9                     DMAnBUF         equ	233	;# 
  2010   0000EA                     DMAnDCNT        equ	234	;# 
  2011   0000EA                     DMAnDCNTL       equ	234	;# 
  2012   0000EB                     DMAnDCNTH       equ	235	;# 
  2013   0000EC                     DMAnDPTR        equ	236	;# 
  2014   0000EC                     DMAnDPTRL       equ	236	;# 
  2015   0000ED                     DMAnDPTRH       equ	237	;# 
  2016   0000EE                     DMAnDSZ         equ	238	;# 
  2017   0000EE                     DMAnDSZL        equ	238	;# 
  2018   0000EF                     DMAnDSZH        equ	239	;# 
  2019   0000F0                     DMAnDSA         equ	240	;# 
  2020   0000F0                     DMAnDSAL        equ	240	;# 
  2021   0000F1                     DMAnDSAH        equ	241	;# 
  2022   0000F2                     DMAnSCNT        equ	242	;# 
  2023   0000F2                     DMAnSCNTL       equ	242	;# 
  2024   0000F3                     DMAnSCNTH       equ	243	;# 
  2025   0000F4                     DMAnSPTR        equ	244	;# 
  2026   0000F4                     DMAnSPTRL       equ	244	;# 
  2027   0000F5                     DMAnSPTRH       equ	245	;# 
  2028   0000F6                     DMAnSPTRU       equ	246	;# 
  2029   0000F7                     DMAnSSZ         equ	247	;# 
  2030   0000F7                     DMAnSSZL        equ	247	;# 
  2031   0000F8                     DMAnSSZH        equ	248	;# 
  2032   0000F9                     DMAnSSA         equ	249	;# 
  2033   0000F9                     DMAnSSAL        equ	249	;# 
  2034   0000FA                     DMAnSSAH        equ	250	;# 
  2035   0000FB                     DMAnSSAU        equ	251	;# 
  2036   0000FC                     DMAnCON0        equ	252	;# 
  2037   0000FD                     DMAnCON1        equ	253	;# 
  2038   0000FE                     DMAnAIRQ        equ	254	;# 
  2039   0000FF                     DMAnSIRQ        equ	255	;# 
  2040   000200                     PPSLOCK         equ	512	;# 
  2041   000201                     RA0PPS          equ	513	;# 
  2042   000202                     RA1PPS          equ	514	;# 
  2043   000203                     RA2PPS          equ	515	;# 
  2044   000204                     RA3PPS          equ	516	;# 
  2045   000205                     RA4PPS          equ	517	;# 
  2046   000206                     RA5PPS          equ	518	;# 
  2047   000207                     RA6PPS          equ	519	;# 
  2048   000208                     RA7PPS          equ	520	;# 
  2049   000209                     RB0PPS          equ	521	;# 
  2050   00020A                     RB1PPS          equ	522	;# 
  2051   00020B                     RB2PPS          equ	523	;# 
  2052   00020C                     RB3PPS          equ	524	;# 
  2053   00020D                     RB4PPS          equ	525	;# 
  2054   00020E                     RB5PPS          equ	526	;# 
  2055   00020F                     RB6PPS          equ	527	;# 
  2056   000210                     RB7PPS          equ	528	;# 
  2057   000211                     RC0PPS          equ	529	;# 
  2058   000212                     RC1PPS          equ	530	;# 
  2059   000213                     RC2PPS          equ	531	;# 
  2060   000214                     RC3PPS          equ	532	;# 
  2061   000215                     RC4PPS          equ	533	;# 
  2062   000216                     RC5PPS          equ	534	;# 
  2063   000217                     RC6PPS          equ	535	;# 
  2064   000218                     RC7PPS          equ	536	;# 
  2065   000219                     RD0PPS          equ	537	;# 
  2066   00021A                     RD1PPS          equ	538	;# 
  2067   00021B                     RD2PPS          equ	539	;# 
  2068   00021C                     RD3PPS          equ	540	;# 
  2069   00021D                     RD4PPS          equ	541	;# 
  2070   00021E                     RD5PPS          equ	542	;# 
  2071   00021F                     RD6PPS          equ	543	;# 
  2072   000220                     RD7PPS          equ	544	;# 
  2073   000221                     RE0PPS          equ	545	;# 
  2074   000222                     RE1PPS          equ	546	;# 
  2075   000223                     RE2PPS          equ	547	;# 
  2076   000229                     RF0PPS          equ	553	;# 
  2077   00022A                     RF1PPS          equ	554	;# 
  2078   00022B                     RF2PPS          equ	555	;# 
  2079   00022C                     RF3PPS          equ	556	;# 
  2080   00022D                     RF4PPS          equ	557	;# 
  2081   00022E                     RF5PPS          equ	558	;# 
  2082   00022F                     RF6PPS          equ	559	;# 
  2083   000230                     RF7PPS          equ	560	;# 
  2084   00023E                     INT0PPS         equ	574	;# 
  2085   00023F                     INT1PPS         equ	575	;# 
  2086   000240                     INT2PPS         equ	576	;# 
  2087   000241                     T0CKIPPS        equ	577	;# 
  2088   000242                     T1CKIPPS        equ	578	;# 
  2089   000243                     T1GPPS          equ	579	;# 
  2090   000244                     T3CKIPPS        equ	580	;# 
  2091   000245                     T3GPPS          equ	581	;# 
  2092   000246                     T5CKIPPS        equ	582	;# 
  2093   000247                     T5GPPS          equ	583	;# 
  2094   000248                     T2INPPS         equ	584	;# 
  2095   000249                     T4INPPS         equ	585	;# 
  2096   00024A                     T6INPPS         equ	586	;# 
  2097   00024F                     CCP1PPS         equ	591	;# 
  2098   000250                     CCP2PPS         equ	592	;# 
  2099   000251                     CCP3PPS         equ	593	;# 
  2100   000253                     PWM1ERSPPS      equ	595	;# 
  2101   000254                     PWM2ERSPPS      equ	596	;# 
  2102   000255                     PWM3ERSPPS      equ	597	;# 
  2103   000257                     PWMIN0PPS       equ	599	;# 
  2104   000258                     PWMIN1PPS       equ	600	;# 
  2105   000259                     SMT1WINPPS      equ	601	;# 
  2106   00025A                     SMT1SIGPPS      equ	602	;# 
  2107   00025B                     CWG1PPS         equ	603	;# 
  2108   00025B                     CWG1INPPS       equ	603	;# 
  2109   00025C                     CWG2PPS         equ	604	;# 
  2110   00025C                     CWG2INPPS       equ	604	;# 
  2111   00025D                     CWG3PPS         equ	605	;# 
  2112   00025D                     CWG3INPPS       equ	605	;# 
  2113   00025E                     MD1CARLPPS      equ	606	;# 
  2114   00025E                     MDCARLPPS       equ	606	;# 
  2115   00025F                     MD1CARHPPS      equ	607	;# 
  2116   00025F                     MDCARHPPS       equ	607	;# 
  2117   000260                     MD1SRCPPS       equ	608	;# 
  2118   000260                     MDSRCPPS        equ	608	;# 
  2119   000261                     CLCIN0PPS       equ	609	;# 
  2120   000262                     CLCIN1PPS       equ	610	;# 
  2121   000263                     CLCIN2PPS       equ	611	;# 
  2122   000264                     CLCIN3PPS       equ	612	;# 
  2123   000265                     CLCIN4PPS       equ	613	;# 
  2124   000266                     CLCIN5PPS       equ	614	;# 
  2125   000267                     CLCIN6PPS       equ	615	;# 
  2126   000268                     CLCIN7PPS       equ	616	;# 
  2127   000269                     ADACTPPS        equ	617	;# 
  2128   00026A                     SPI1SCKPPS      equ	618	;# 
  2129   00026B                     SPI1SDIPPS      equ	619	;# 
  2130   00026C                     SPI1SSPPS       equ	620	;# 
  2131   00026D                     SPI2SCKPPS      equ	621	;# 
  2132   00026E                     SPI2SDIPPS      equ	622	;# 
  2133   00026F                     SPI2SSPPS       equ	623	;# 
  2134   000270                     I2C1SDAPPS      equ	624	;# 
  2135   000271                     I2C1SCLPPS      equ	625	;# 
  2136   000272                     U1RXPPS         equ	626	;# 
  2137   000273                     U1CTSPPS        equ	627	;# 
  2138   000274                     U2RXPPS         equ	628	;# 
  2139   000275                     U2CTSPPS        equ	629	;# 
  2140   000276                     U3RXPPS         equ	630	;# 
  2141   000277                     U3CTSPPS        equ	631	;# 
  2142   000278                     U4RXPPS         equ	632	;# 
  2143   000279                     U4CTSPPS        equ	633	;# 
  2144   00027A                     U5RXPPS         equ	634	;# 
  2145   00027B                     U5CTSPPS        equ	635	;# 
  2146   000286                     RC4I2C          equ	646	;# 
  2147   000287                     RC3I2C          equ	647	;# 
  2148   000288                     RB2I2C          equ	648	;# 
  2149   000289                     RB1I2C          equ	649	;# 
  2150   00028B                     I2C1RXB         equ	651	;# 
  2151   00028C                     I2C1TXB         equ	652	;# 
  2152   00028D                     I2C1CNT         equ	653	;# 
  2153   00028E                     I2C1ADB0        equ	654	;# 
  2154   00028F                     I2C1ADB1        equ	655	;# 
  2155   000290                     I2C1ADR0        equ	656	;# 
  2156   000291                     I2C1ADR1        equ	657	;# 
  2157   000292                     I2C1ADR2        equ	658	;# 
  2158   000293                     I2C1ADR3        equ	659	;# 
  2159   000294                     I2C1CON0        equ	660	;# 
  2160   000295                     I2C1CON1        equ	661	;# 
  2161   000296                     I2C1CON2        equ	662	;# 
  2162   000297                     I2C1ERR         equ	663	;# 
  2163   000298                     I2C1STAT0       equ	664	;# 
  2164   000299                     I2C1STAT1       equ	665	;# 
  2165   00029A                     I2C1PIR         equ	666	;# 
  2166   00029B                     I2C1PIE         equ	667	;# 
  2167   00029C                     I2C1CLK         equ	668	;# 
  2168   00029D                     I2C1BTO         equ	669	;# 
  2169   0002A1                     U1RXB           equ	673	;# 
  2170   0002A1                     U1RXBL          equ	673	;# 
  2171   0002A2                     U1RXCHK         equ	674	;# 
  2172   0002A3                     U1TXB           equ	675	;# 
  2173   0002A3                     U1TXBL          equ	675	;# 
  2174   0002A4                     U1TXCHK         equ	676	;# 
  2175   0002A5                     U1P1            equ	677	;# 
  2176   0002A5                     U1P1L           equ	677	;# 
  2177   0002A6                     U1P1H           equ	678	;# 
  2178   0002A7                     U1P2            equ	679	;# 
  2179   0002A7                     U1P2L           equ	679	;# 
  2180   0002A8                     U1P2H           equ	680	;# 
  2181   0002A9                     U1P3            equ	681	;# 
  2182   0002A9                     U1P3L           equ	681	;# 
  2183   0002AA                     U1P3H           equ	682	;# 
  2184   0002AB                     U1CON0          equ	683	;# 
  2185   0002AC                     U1CON1          equ	684	;# 
  2186   0002AD                     U1CON2          equ	685	;# 
  2187   0002AE                     U1BRG           equ	686	;# 
  2188   0002AE                     U1BRGL          equ	686	;# 
  2189   0002AF                     U1BRGH          equ	687	;# 
  2190   0002B0                     U1FIFO          equ	688	;# 
  2191   0002B1                     U1UIR           equ	689	;# 
  2192   0002B2                     U1ERRIR         equ	690	;# 
  2193   0002B3                     U1ERRIE         equ	691	;# 
  2194   0002B4                     U2RXB           equ	692	;# 
  2195   0002B4                     U2RXBL          equ	692	;# 
  2196   0002B6                     U2TXB           equ	694	;# 
  2197   0002B6                     U2TXBL          equ	694	;# 
  2198   0002B8                     U2P1            equ	696	;# 
  2199   0002B8                     U2P1L           equ	696	;# 
  2200   0002BA                     U2P2            equ	698	;# 
  2201   0002BA                     U2P2L           equ	698	;# 
  2202   0002BC                     U2P3            equ	700	;# 
  2203   0002BC                     U2P3L           equ	700	;# 
  2204   0002BE                     U2CON0          equ	702	;# 
  2205   0002BF                     U2CON1          equ	703	;# 
  2206   0002C0                     U2CON2          equ	704	;# 
  2207   0002C1                     U2BRG           equ	705	;# 
  2208   0002C1                     U2BRGL          equ	705	;# 
  2209   0002C2                     U2BRGH          equ	706	;# 
  2210   0002C3                     U2FIFO          equ	707	;# 
  2211   0002C4                     U2UIR           equ	708	;# 
  2212   0002C5                     U2ERRIR         equ	709	;# 
  2213   0002C6                     U2ERRIE         equ	710	;# 
  2214   0002C7                     U3RXB           equ	711	;# 
  2215   0002C7                     U3RXBL          equ	711	;# 
  2216   0002C9                     U3TXB           equ	713	;# 
  2217   0002C9                     U3TXBL          equ	713	;# 
  2218   0002CB                     U3P1            equ	715	;# 
  2219   0002CB                     U3P1L           equ	715	;# 
  2220   0002CD                     U3P2            equ	717	;# 
  2221   0002CD                     U3P2L           equ	717	;# 
  2222   0002CF                     U3P3            equ	719	;# 
  2223   0002CF                     U3P3L           equ	719	;# 
  2224   0002D1                     U3CON0          equ	721	;# 
  2225   0002D2                     U3CON1          equ	722	;# 
  2226   0002D3                     U3CON2          equ	723	;# 
  2227   0002D4                     U3BRG           equ	724	;# 
  2228   0002D4                     U3BRGL          equ	724	;# 
  2229   0002D5                     U3BRGH          equ	725	;# 
  2230   0002D6                     U3FIFO          equ	726	;# 
  2231   0002D7                     U3UIR           equ	727	;# 
  2232   0002D8                     U3ERRIR         equ	728	;# 
  2233   0002D9                     U3ERRIE         equ	729	;# 
  2234   0002DA                     U4RXB           equ	730	;# 
  2235   0002DA                     U4RXBL          equ	730	;# 
  2236   0002DC                     U4TXB           equ	732	;# 
  2237   0002DC                     U4TXBL          equ	732	;# 
  2238   0002DE                     U4P1            equ	734	;# 
  2239   0002DE                     U4P1L           equ	734	;# 
  2240   0002E0                     U4P2            equ	736	;# 
  2241   0002E0                     U4P2L           equ	736	;# 
  2242   0002E2                     U4P3            equ	738	;# 
  2243   0002E2                     U4P3L           equ	738	;# 
  2244   0002E4                     U4CON0          equ	740	;# 
  2245   0002E5                     U4CON1          equ	741	;# 
  2246   0002E6                     U4CON2          equ	742	;# 
  2247   0002E7                     U4BRG           equ	743	;# 
  2248   0002E7                     U4BRGL          equ	743	;# 
  2249   0002E8                     U4BRGH          equ	744	;# 
  2250   0002E9                     U4FIFO          equ	745	;# 
  2251   0002EA                     U4UIR           equ	746	;# 
  2252   0002EB                     U4ERRIR         equ	747	;# 
  2253   0002EC                     U4ERRIE         equ	748	;# 
  2254   0002ED                     U5RXB           equ	749	;# 
  2255   0002ED                     U5RXBL          equ	749	;# 
  2256   0002EF                     U5TXB           equ	751	;# 
  2257   0002EF                     U5TXBL          equ	751	;# 
  2258   0002F1                     U5P1            equ	753	;# 
  2259   0002F1                     U5P1L           equ	753	;# 
  2260   0002F3                     U5P2            equ	755	;# 
  2261   0002F3                     U5P2L           equ	755	;# 
  2262   0002F5                     U5P3            equ	757	;# 
  2263   0002F5                     U5P3L           equ	757	;# 
  2264   0002F7                     U5CON0          equ	759	;# 
  2265   0002F8                     U5CON1          equ	760	;# 
  2266   0002F9                     U5CON2          equ	761	;# 
  2267   0002FA                     U5BRG           equ	762	;# 
  2268   0002FA                     U5BRGL          equ	762	;# 
  2269   0002FB                     U5BRGH          equ	763	;# 
  2270   0002FC                     U5FIFO          equ	764	;# 
  2271   0002FD                     U5UIR           equ	765	;# 
  2272   0002FE                     U5ERRIR         equ	766	;# 
  2273   0002FF                     U5ERRIE         equ	767	;# 
  2274   000300                     SMT1TMR         equ	768	;# 
  2275   000300                     SMT1TMRL        equ	768	;# 
  2276   000301                     SMT1TMRH        equ	769	;# 
  2277   000302                     SMT1TMRU        equ	770	;# 
  2278   000303                     SMT1CPR         equ	771	;# 
  2279   000303                     SMT1CPRL        equ	771	;# 
  2280   000304                     SMT1CPRH        equ	772	;# 
  2281   000305                     SMT1CPRU        equ	773	;# 
  2282   000306                     SMT1CPW         equ	774	;# 
  2283   000306                     SMT1CPWL        equ	774	;# 
  2284   000307                     SMT1CPWH        equ	775	;# 
  2285   000308                     SMT1CPWU        equ	776	;# 
  2286   000309                     SMT1PR          equ	777	;# 
  2287   000309                     SMT1PRL         equ	777	;# 
  2288   00030A                     SMT1PRH         equ	778	;# 
  2289   00030B                     SMT1PRU         equ	779	;# 
  2290   00030C                     SMT1CON0        equ	780	;# 
  2291   00030D                     SMT1CON1        equ	781	;# 
  2292   00030E                     SMT1STAT        equ	782	;# 
  2293   00030F                     SMT1CLK         equ	783	;# 
  2294   000310                     SMT1SIG         equ	784	;# 
  2295   000311                     SMT1WIN         equ	785	;# 
  2296   000318                     TMR0L           equ	792	;# 
  2297   000318                     TMR0            equ	792	;# 
  2298   000319                     TMR0H           equ	793	;# 
  2299   000319                     PR0             equ	793	;# 
  2300   00031A                     T0CON0          equ	794	;# 
  2301   00031B                     T0CON1          equ	795	;# 
  2302   00031C                     TMR1            equ	796	;# 
  2303   00031C                     TMR1L           equ	796	;# 
  2304   00031D                     TMR1H           equ	797	;# 
  2305   00031E                     T1CON           equ	798	;# 
  2306   00031E                     TMR1CON         equ	798	;# 
  2307   00031F                     T1GCON          equ	799	;# 
  2308   00031F                     TMR1GCON        equ	799	;# 
  2309   000320                     T1GATE          equ	800	;# 
  2310   000320                     TMR1GATE        equ	800	;# 
  2311   000321                     T1CLK           equ	801	;# 
  2312   000321                     TMR1CLK         equ	801	;# 
  2313   000321                     PR1             equ	801	;# 
  2314   000322                     T2TMR           equ	802	;# 
  2315   000322                     TMR2            equ	802	;# 
  2316   000323                     T2PR            equ	803	;# 
  2317   000323                     PR2             equ	803	;# 
  2318   000324                     T2CON           equ	804	;# 
  2319   000325                     T2HLT           equ	805	;# 
  2320   000326                     T2CLKCON        equ	806	;# 
  2321   000326                     T2CLK           equ	806	;# 
  2322   000327                     T2RST           equ	807	;# 
  2323   000328                     TMR3            equ	808	;# 
  2324   000328                     TMR3L           equ	808	;# 
  2325   000329                     TMR3H           equ	809	;# 
  2326   00032A                     T3CON           equ	810	;# 
  2327   00032A                     TMR3CON         equ	810	;# 
  2328   00032B                     T3GCON          equ	811	;# 
  2329   00032B                     TMR3GCON        equ	811	;# 
  2330   00032C                     T3GATE          equ	812	;# 
  2331   00032C                     TMR3GATE        equ	812	;# 
  2332   00032D                     T3CLK           equ	813	;# 
  2333   00032D                     TMR3CLK         equ	813	;# 
  2334   00032D                     PR3             equ	813	;# 
  2335   00032E                     T4TMR           equ	814	;# 
  2336   00032E                     TMR4            equ	814	;# 
  2337   00032F                     T4PR            equ	815	;# 
  2338   00032F                     PR4             equ	815	;# 
  2339   000330                     T4CON           equ	816	;# 
  2340   000331                     T4HLT           equ	817	;# 
  2341   000332                     T4CLKCON        equ	818	;# 
  2342   000332                     T4CLK           equ	818	;# 
  2343   000333                     T4RST           equ	819	;# 
  2344   000334                     TMR5            equ	820	;# 
  2345   000334                     TMR5L           equ	820	;# 
  2346   000335                     TMR5H           equ	821	;# 
  2347   000336                     T5CON           equ	822	;# 
  2348   000336                     TMR5CON         equ	822	;# 
  2349   000337                     T5GCON          equ	823	;# 
  2350   000337                     TMR5GCON        equ	823	;# 
  2351   000338                     T5GATE          equ	824	;# 
  2352   000338                     TMR5GATE        equ	824	;# 
  2353   000339                     T5CLK           equ	825	;# 
  2354   000339                     TMR5CLK         equ	825	;# 
  2355   000339                     PR5             equ	825	;# 
  2356   00033A                     T6TMR           equ	826	;# 
  2357   00033A                     TMR6            equ	826	;# 
  2358   00033B                     T6PR            equ	827	;# 
  2359   00033B                     PR6             equ	827	;# 
  2360   00033C                     T6CON           equ	828	;# 
  2361   00033D                     T6HLT           equ	829	;# 
  2362   00033E                     T6CLKCON        equ	830	;# 
  2363   00033E                     T6CLK           equ	830	;# 
  2364   00033F                     T6RST           equ	831	;# 
  2365   000340                     CCPR1           equ	832	;# 
  2366   000340                     CCPR1L          equ	832	;# 
  2367   000341                     CCPR1H          equ	833	;# 
  2368   000342                     CCP1CON         equ	834	;# 
  2369   000343                     CCP1CAP         equ	835	;# 
  2370   000344                     CCPR2           equ	836	;# 
  2371   000344                     CCPR2L          equ	836	;# 
  2372   000345                     CCPR2H          equ	837	;# 
  2373   000346                     CCP2CON         equ	838	;# 
  2374   000347                     CCP2CAP         equ	839	;# 
  2375   000348                     CCPR3           equ	840	;# 
  2376   000348                     CCPR3L          equ	840	;# 
  2377   000349                     CCPR3H          equ	841	;# 
  2378   00034A                     CCP3CON         equ	842	;# 
  2379   00034B                     CCP3CAP         equ	843	;# 
  2380   00034C                     CCPTMRS0        equ	844	;# 
  2381   00034F                     CRCDATA         equ	847	;# 
  2382   00034F                     CRCDATL         equ	847	;# 
  2383   000350                     CRCDATH         equ	848	;# 
  2384   000351                     CRCACC          equ	849	;# 
  2385   000351                     CRCACCL         equ	849	;# 
  2386   000352                     CRCACCH         equ	850	;# 
  2387   000353                     CRCSHFT         equ	851	;# 
  2388   000353                     CRCSHIFTL       equ	851	;# 
  2389   000354                     CRCSHIFTH       equ	852	;# 
  2390   000355                     CRCXOR          equ	853	;# 
  2391   000355                     CRCXORL         equ	853	;# 
  2392   000356                     CRCXORH         equ	854	;# 
  2393   000357                     CRCCON0         equ	855	;# 
  2394   000358                     CRCCON1         equ	856	;# 
  2395   00035A                     SCANLADR        equ	858	;# 
  2396   00035A                     SCANLADRL       equ	858	;# 
  2397   00035B                     SCANLADRH       equ	859	;# 
  2398   00035C                     SCANLADRU       equ	860	;# 
  2399   00035D                     SCANHADR        equ	861	;# 
  2400   00035D                     SCANHADRL       equ	861	;# 
  2401   00035E                     SCANHADRH       equ	862	;# 
  2402   00035F                     SCANHADRU       equ	863	;# 
  2403   000360                     SCANCON0        equ	864	;# 
  2404   000361                     SCANTRIG        equ	865	;# 
  2405   000362                     IPR0            equ	866	;# 
  2406   000363                     IPR1            equ	867	;# 
  2407   000364                     IPR2            equ	868	;# 
  2408   000365                     IPR3            equ	869	;# 
  2409   000366                     IPR4            equ	870	;# 
  2410   000367                     IPR5            equ	871	;# 
  2411   000368                     IPR6            equ	872	;# 
  2412   000369                     IPR7            equ	873	;# 
  2413   00036A                     IPR8            equ	874	;# 
  2414   00036B                     IPR9            equ	875	;# 
  2415   00036C                     IPR10           equ	876	;# 
  2416   00036D                     IPR11           equ	877	;# 
  2417   00036E                     IPR12           equ	878	;# 
  2418   00036F                     IPR13           equ	879	;# 
  2419   000370                     IPR14           equ	880	;# 
  2420   000371                     IPR15           equ	881	;# 
  2421   000373                     STATUS_CSHAD    equ	883	;# 
  2422   000374                     WREG_CSHAD      equ	884	;# 
  2423   000375                     BSR_CSHAD       equ	885	;# 
  2424   000376                     SHADCON         equ	886	;# 
  2425   000377                     STATUS_SHAD     equ	887	;# 
  2426   000378                     WREG_SHAD       equ	888	;# 
  2427   000379                     BSR_SHAD        equ	889	;# 
  2428   00037A                     PCLATH_SHAD     equ	890	;# 
  2429   00037B                     PCLATU_SHAD     equ	891	;# 
  2430   00037C                     FSR0SH          equ	892	;# 
  2431   00037C                     FSR0L_SHAD      equ	892	;# 
  2432   00037D                     FSR0H_SHAD      equ	893	;# 
  2433   00037E                     FSR1SH          equ	894	;# 
  2434   00037E                     FSR1L_SHAD      equ	894	;# 
  2435   00037F                     FSR1H_SHAD      equ	895	;# 
  2436   000380                     FSR2SH          equ	896	;# 
  2437   000380                     FSR2L_SHAD      equ	896	;# 
  2438   000381                     FSR2H_SHAD      equ	897	;# 
  2439   000382                     PRODSH          equ	898	;# 
  2440   000382                     PRODL_SHAD      equ	898	;# 
  2441   000383                     PRODH_SHAD      equ	899	;# 
  2442   0003BC                     CWG1CLK         equ	956	;# 
  2443   0003BC                     CWG1CLKCON      equ	956	;# 
  2444   0003BD                     CWG1ISM         equ	957	;# 
  2445   0003BD                     CWG1DAT         equ	957	;# 
  2446   0003BE                     CWG1DBR         equ	958	;# 
  2447   0003BF                     CWG1DBF         equ	959	;# 
  2448   0003C0                     CWG1CON0        equ	960	;# 
  2449   0003C1                     CWG1CON1        equ	961	;# 
  2450   0003C2                     CWG1AS0         equ	962	;# 
  2451   0003C3                     CWG1AS1         equ	963	;# 
  2452   0003C4                     CWG1STR         equ	964	;# 
  2453   0003C5                     CWG2CLK         equ	965	;# 
  2454   0003C5                     CWG2CLKCON      equ	965	;# 
  2455   0003C6                     CWG2ISM         equ	966	;# 
  2456   0003C6                     CWG2DAT         equ	966	;# 
  2457   0003C7                     CWG2DBR         equ	967	;# 
  2458   0003C8                     CWG2DBF         equ	968	;# 
  2459   0003C9                     CWG2CON0        equ	969	;# 
  2460   0003CA                     CWG2CON1        equ	970	;# 
  2461   0003CB                     CWG2AS0         equ	971	;# 
  2462   0003CC                     CWG2AS1         equ	972	;# 
  2463   0003CD                     CWG2STR         equ	973	;# 
  2464   0003CE                     CWG3CLK         equ	974	;# 
  2465   0003CE                     CWG3CLKCON      equ	974	;# 
  2466   0003CF                     CWG3ISM         equ	975	;# 
  2467   0003CF                     CWG3DAT         equ	975	;# 
  2468   0003D0                     CWG3DBR         equ	976	;# 
  2469   0003D1                     CWG3DBF         equ	977	;# 
  2470   0003D2                     CWG3CON0        equ	978	;# 
  2471   0003D3                     CWG3CON1        equ	979	;# 
  2472   0003D4                     CWG3AS0         equ	980	;# 
  2473   0003D5                     CWG3AS1         equ	981	;# 
  2474   0003D6                     CWG3STR         equ	982	;# 
  2475   0003D7                     FVRCON          equ	983	;# 
  2476   0003D8                     ADCPCON         equ	984	;# 
  2477   0003D8                     ADCP            equ	984	;# 
  2478   0003D9                     ADLTH           equ	985	;# 
  2479   0003D9                     ADLTHL          equ	985	;# 
  2480   0003DA                     ADLTHH          equ	986	;# 
  2481   0003DB                     ADUTH           equ	987	;# 
  2482   0003DB                     ADUTHL          equ	987	;# 
  2483   0003DC                     ADUTHH          equ	988	;# 
  2484   0003DD                     ADERR           equ	989	;# 
  2485   0003DD                     ADERRL          equ	989	;# 
  2486   0003DE                     ADERRH          equ	990	;# 
  2487   0003DF                     ADSTPT          equ	991	;# 
  2488   0003DF                     ADSTPTL         equ	991	;# 
  2489   0003E0                     ADSTPTH         equ	992	;# 
  2490   0003E1                     ADFLTR          equ	993	;# 
  2491   0003E1                     ADFLTRL         equ	993	;# 
  2492   0003E2                     ADFLTRH         equ	994	;# 
  2493   0003E3                     ADACC           equ	995	;# 
  2494   0003E3                     ADACCL          equ	995	;# 
  2495   0003E4                     ADACCH          equ	996	;# 
  2496   0003E5                     ADACCU          equ	997	;# 
  2497   0003E6                     ADCNT           equ	998	;# 
  2498   0003E7                     ADRPT           equ	999	;# 
  2499   0003E8                     ADPREV          equ	1000	;# 
  2500   0003E8                     ADPREVL         equ	1000	;# 
  2501   0003E9                     ADPREVH         equ	1001	;# 
  2502   0003EA                     ADRES           equ	1002	;# 
  2503   0003EA                     ADRESL          equ	1002	;# 
  2504   0003EB                     ADRESH          equ	1003	;# 
  2505   0003EC                     ADPCH           equ	1004	;# 
  2506   0003EE                     ADACQ           equ	1006	;# 
  2507   0003EE                     ADACQL          equ	1006	;# 
  2508   0003EF                     ADACQH          equ	1007	;# 
  2509   0003F0                     ADCAP           equ	1008	;# 
  2510   0003F1                     ADPRE           equ	1009	;# 
  2511   0003F1                     ADPREL          equ	1009	;# 
  2512   0003F2                     ADPREH          equ	1010	;# 
  2513   0003F3                     ADCON0          equ	1011	;# 
  2514   0003F4                     ADCON1          equ	1012	;# 
  2515   0003F5                     ADCON2          equ	1013	;# 
  2516   0003F6                     ADCON3          equ	1014	;# 
  2517   0003F7                     ADSTAT          equ	1015	;# 
  2518   0003F8                     ADREF           equ	1016	;# 
  2519   0003F9                     ADACT           equ	1017	;# 
  2520   0003FA                     ADCLK           equ	1018	;# 
  2521   000400                     ANSELA          equ	1024	;# 
  2522   000401                     WPUA            equ	1025	;# 
  2523   000402                     ODCONA          equ	1026	;# 
  2524   000403                     SLRCONA         equ	1027	;# 
  2525   000404                     INLVLA          equ	1028	;# 
  2526   000405                     IOCAP           equ	1029	;# 
  2527   000406                     IOCAN           equ	1030	;# 
  2528   000407                     IOCAF           equ	1031	;# 
  2529   000408                     ANSELB          equ	1032	;# 
  2530   000409                     WPUB            equ	1033	;# 
  2531   00040A                     ODCONB          equ	1034	;# 
  2532   00040B                     SLRCONB         equ	1035	;# 
  2533   00040C                     INLVLB          equ	1036	;# 
  2534   00040D                     IOCBP           equ	1037	;# 
  2535   00040E                     IOCBN           equ	1038	;# 
  2536   00040F                     IOCBF           equ	1039	;# 
  2537   000410                     ANSELC          equ	1040	;# 
  2538   000411                     WPUC            equ	1041	;# 
  2539   000412                     ODCONC          equ	1042	;# 
  2540   000413                     SLRCONC         equ	1043	;# 
  2541   000414                     INLVLC          equ	1044	;# 
  2542   000415                     IOCCP           equ	1045	;# 
  2543   000416                     IOCCN           equ	1046	;# 
  2544   000417                     IOCCF           equ	1047	;# 
  2545   000418                     ANSELD          equ	1048	;# 
  2546   000419                     WPUD            equ	1049	;# 
  2547   00041A                     ODCOND          equ	1050	;# 
  2548   00041B                     SLRCOND         equ	1051	;# 
  2549   00041C                     INLVLD          equ	1052	;# 
  2550   000420                     ANSELE          equ	1056	;# 
  2551   000421                     WPUE            equ	1057	;# 
  2552   000422                     ODCONE          equ	1058	;# 
  2553   000423                     SLRCONE         equ	1059	;# 
  2554   000424                     INLVLE          equ	1060	;# 
  2555   000425                     IOCEP           equ	1061	;# 
  2556   000426                     IOCEN           equ	1062	;# 
  2557   000427                     IOCEF           equ	1063	;# 
  2558   000428                     ANSELF          equ	1064	;# 
  2559   000429                     WPUF            equ	1065	;# 
  2560   00042A                     ODCONF          equ	1066	;# 
  2561   00042B                     SLRCONF         equ	1067	;# 
  2562   00042C                     INLVLF          equ	1068	;# 
  2563   000440                     NCO1ACC         equ	1088	;# 
  2564   000440                     NCO1ACCL        equ	1088	;# 
  2565   000441                     NCO1ACCH        equ	1089	;# 
  2566   000442                     NCO1ACCU        equ	1090	;# 
  2567   000443                     NCO1INC         equ	1091	;# 
  2568   000443                     NCO1INCL        equ	1091	;# 
  2569   000444                     NCO1INCH        equ	1092	;# 
  2570   000445                     NCO1INCU        equ	1093	;# 
  2571   000446                     NCO1CON         equ	1094	;# 
  2572   000447                     NCO1CLK         equ	1095	;# 
  2573   000448                     NCO2ACC         equ	1096	;# 
  2574   000448                     NCO2ACCL        equ	1096	;# 
  2575   000449                     NCO2ACCH        equ	1097	;# 
  2576   00044A                     NCO2ACCU        equ	1098	;# 
  2577   00044B                     NCO2INC         equ	1099	;# 
  2578   00044B                     NCO2INCL        equ	1099	;# 
  2579   00044C                     NCO2INCH        equ	1100	;# 
  2580   00044D                     NCO2INCU        equ	1101	;# 
  2581   00044E                     NCO2CON         equ	1102	;# 
  2582   00044F                     NCO2CLK         equ	1103	;# 
  2583   000450                     NCO3ACC         equ	1104	;# 
  2584   000450                     NCO3ACCL        equ	1104	;# 
  2585   000451                     NCO3ACCH        equ	1105	;# 
  2586   000452                     NCO3ACCU        equ	1106	;# 
  2587   000453                     NCO3INC         equ	1107	;# 
  2588   000453                     NCO3INCL        equ	1107	;# 
  2589   000454                     NCO3INCH        equ	1108	;# 
  2590   000455                     NCO3INCU        equ	1109	;# 
  2591   000456                     NCO3CON         equ	1110	;# 
  2592   000457                     NCO3CLK         equ	1111	;# 
  2593   000459                     IVTLOCK         equ	1113	;# 
  2594   00045A                     IVTAD           equ	1114	;# 
  2595   00045A                     IVTADL          equ	1114	;# 
  2596   00045B                     IVTADH          equ	1115	;# 
  2597   00045C                     IVTADU          equ	1116	;# 
  2598   00045D                     IVTBASE         equ	1117	;# 
  2599   00045D                     IVTBASEL        equ	1117	;# 
  2600   00045E                     IVTBASEH        equ	1118	;# 
  2601   00045F                     IVTBASEU        equ	1119	;# 
  2602   000460                     PWM1ERS         equ	1120	;# 
  2603   000461                     PWM1CLK         equ	1121	;# 
  2604   000462                     PWM1LDS         equ	1122	;# 
  2605   000463                     PWM1PR          equ	1123	;# 
  2606   000463                     PWM1PRL         equ	1123	;# 
  2607   000464                     PWM1PRH         equ	1124	;# 
  2608   000465                     PWM1CPRE        equ	1125	;# 
  2609   000466                     PWM1PIPOS       equ	1126	;# 
  2610   000467                     PWM1GIR         equ	1127	;# 
  2611   000468                     PWM1GIE         equ	1128	;# 
  2612   000469                     PWM1CON         equ	1129	;# 
  2613   00046A                     PWM1S1CFG       equ	1130	;# 
  2614   00046B                     PWM1S1P1        equ	1131	;# 
  2615   00046B                     PWM1S1P1L       equ	1131	;# 
  2616   00046C                     PWM1S1P1H       equ	1132	;# 
  2617   00046D                     PWM1S1P2        equ	1133	;# 
  2618   00046D                     PWM1S1P2L       equ	1133	;# 
  2619   00046E                     PWM1S1P2H       equ	1134	;# 
  2620   00046F                     PWM2ERS         equ	1135	;# 
  2621   000470                     PWM2CLK         equ	1136	;# 
  2622   000471                     PWM2LDS         equ	1137	;# 
  2623   000472                     PWM2PR          equ	1138	;# 
  2624   000472                     PWM2PRL         equ	1138	;# 
  2625   000473                     PWM2PRH         equ	1139	;# 
  2626   000474                     PWM2CPRE        equ	1140	;# 
  2627   000475                     PWM2PIPOS       equ	1141	;# 
  2628   000476                     PWM2GIR         equ	1142	;# 
  2629   000477                     PWM2GIE         equ	1143	;# 
  2630   000478                     PWM2CON         equ	1144	;# 
  2631   000479                     PWM2S1CFG       equ	1145	;# 
  2632   00047A                     PWM2S1P1        equ	1146	;# 
  2633   00047A                     PWM2S1P1L       equ	1146	;# 
  2634   00047B                     PWM2S1P1H       equ	1147	;# 
  2635   00047C                     PWM2S1P2        equ	1148	;# 
  2636   00047C                     PWM2S1P2L       equ	1148	;# 
  2637   00047D                     PWM2S1P2H       equ	1149	;# 
  2638   00047E                     PWM3ERS         equ	1150	;# 
  2639   00047F                     PWM3CLK         equ	1151	;# 
  2640   000480                     PWM3LDS         equ	1152	;# 
  2641   000481                     PWM3PR          equ	1153	;# 
  2642   000481                     PWM3PRL         equ	1153	;# 
  2643   000482                     PWM3PRH         equ	1154	;# 
  2644   000483                     PWM3CPRE        equ	1155	;# 
  2645   000484                     PWM3PIPOS       equ	1156	;# 
  2646   000485                     PWM3GIR         equ	1157	;# 
  2647   000486                     PWM3GIE         equ	1158	;# 
  2648   000487                     PWM3CON         equ	1159	;# 
  2649   000488                     PWM3S1CFG       equ	1160	;# 
  2650   000489                     PWM3S1P1        equ	1161	;# 
  2651   000489                     PWM3S1P1L       equ	1161	;# 
  2652   00048A                     PWM3S1P1H       equ	1162	;# 
  2653   00048B                     PWM3S1P2        equ	1163	;# 
  2654   00048B                     PWM3S1P2L       equ	1163	;# 
  2655   00048C                     PWM3S1P2H       equ	1164	;# 
  2656   00049C                     PWMLOAD         equ	1180	;# 
  2657   00049D                     PWMEN           equ	1181	;# 
  2658   00049E                     PIE0            equ	1182	;# 
  2659   00049F                     PIE1            equ	1183	;# 
  2660   0004A0                     PIE2            equ	1184	;# 
  2661   0004A1                     PIE3            equ	1185	;# 
  2662   0004A2                     PIE4            equ	1186	;# 
  2663   0004A3                     PIE5            equ	1187	;# 
  2664   0004A4                     PIE6            equ	1188	;# 
  2665   0004A5                     PIE7            equ	1189	;# 
  2666   0004A6                     PIE8            equ	1190	;# 
  2667   0004A7                     PIE9            equ	1191	;# 
  2668   0004A8                     PIE10           equ	1192	;# 
  2669   0004A9                     PIE11           equ	1193	;# 
  2670   0004AA                     PIE12           equ	1194	;# 
  2671   0004AB                     PIE13           equ	1195	;# 
  2672   0004AC                     PIE14           equ	1196	;# 
  2673   0004AD                     PIE15           equ	1197	;# 
  2674   0004AE                     PIR0            equ	1198	;# 
  2675   0004AF                     PIR1            equ	1199	;# 
  2676   0004B0                     PIR2            equ	1200	;# 
  2677   0004B1                     PIR3            equ	1201	;# 
  2678   0004B2                     PIR4            equ	1202	;# 
  2679   0004B3                     PIR5            equ	1203	;# 
  2680   0004B4                     PIR6            equ	1204	;# 
  2681   0004B5                     PIR7            equ	1205	;# 
  2682   0004B6                     PIR8            equ	1206	;# 
  2683   0004B7                     PIR9            equ	1207	;# 
  2684   0004B8                     PIR10           equ	1208	;# 
  2685   0004B9                     PIR11           equ	1209	;# 
  2686   0004BA                     PIR12           equ	1210	;# 
  2687   0004BB                     PIR13           equ	1211	;# 
  2688   0004BC                     PIR14           equ	1212	;# 
  2689   0004BD                     PIR15           equ	1213	;# 
  2690   0004BE                     LATA            equ	1214	;# 
  2691   0004BF                     LATB            equ	1215	;# 
  2692   0004C0                     LATC            equ	1216	;# 
  2693   0004C1                     LATD            equ	1217	;# 
  2694   0004C2                     LATE            equ	1218	;# 
  2695   0004C3                     LATF            equ	1219	;# 
  2696   0004C6                     TRISA           equ	1222	;# 
  2697   0004C7                     TRISB           equ	1223	;# 
  2698   0004C8                     TRISC           equ	1224	;# 
  2699   0004C9                     TRISD           equ	1225	;# 
  2700   0004CA                     TRISE           equ	1226	;# 
  2701   0004CB                     TRISF           equ	1227	;# 
  2702   0004CE                     PORTA           equ	1230	;# 
  2703   0004CF                     PORTB           equ	1231	;# 
  2704   0004D0                     PORTC           equ	1232	;# 
  2705   0004D1                     PORTD           equ	1233	;# 
  2706   0004D2                     PORTE           equ	1234	;# 
  2707   0004D3                     PORTF           equ	1235	;# 
  2708   0004D6                     INTCON0         equ	1238	;# 
  2709   0004D7                     INTCON1         equ	1239	;# 
  2710   0004D8                     STATUS          equ	1240	;# 
  2711   0004D9                     FSR2            equ	1241	;# 
  2712   0004D9                     FSR2L           equ	1241	;# 
  2713   0004DA                     FSR2H           equ	1242	;# 
  2714   0004DB                     PLUSW2          equ	1243	;# 
  2715   0004DC                     PREINC2         equ	1244	;# 
  2716   0004DD                     POSTDEC2        equ	1245	;# 
  2717   0004DE                     POSTINC2        equ	1246	;# 
  2718   0004DF                     INDF2           equ	1247	;# 
  2719   0004E0                     BSR             equ	1248	;# 
  2720   0004E1                     FSR1            equ	1249	;# 
  2721   0004E1                     FSR1L           equ	1249	;# 
  2722   0004E2                     FSR1H           equ	1250	;# 
  2723   0004E3                     PLUSW1          equ	1251	;# 
  2724   0004E4                     PREINC1         equ	1252	;# 
  2725   0004E5                     POSTDEC1        equ	1253	;# 
  2726   0004E6                     POSTINC1        equ	1254	;# 
  2727   0004E7                     INDF1           equ	1255	;# 
  2728   0004E8                     WREG            equ	1256	;# 
  2729   0004E9                     FSR0            equ	1257	;# 
  2730   0004E9                     FSR0L           equ	1257	;# 
  2731   0004EA                     FSR0H           equ	1258	;# 
  2732   0004EB                     PLUSW0          equ	1259	;# 
  2733   0004EC                     PREINC0         equ	1260	;# 
  2734   0004ED                     POSTDEC0        equ	1261	;# 
  2735   0004EE                     POSTINC0        equ	1262	;# 
  2736   0004EF                     INDF0           equ	1263	;# 
  2737   0004F0                     PCON0           equ	1264	;# 
  2738   0004F1                     PCON1           equ	1265	;# 
  2739   0004F2                     CPUDOZE         equ	1266	;# 
  2740   0004F3                     PROD            equ	1267	;# 
  2741   0004F3                     PRODL           equ	1267	;# 
  2742   0004F4                     PRODH           equ	1268	;# 
  2743   0004F5                     TABLAT          equ	1269	;# 
  2744   0004F6                     TBLPTR          equ	1270	;# 
  2745   0004F6                     TBLPTRL         equ	1270	;# 
  2746   0004F7                     TBLPTRH         equ	1271	;# 
  2747   0004F8                     TBLPTRU         equ	1272	;# 
  2748   0004F9                     PCLAT           equ	1273	;# 
  2749   0004F9                     PCL             equ	1273	;# 
  2750   0004FA                     PCLATH          equ	1274	;# 
  2751   0004FB                     PCLATU          equ	1275	;# 
  2752   0004FC                     STKPTR          equ	1276	;# 
  2753   0004FD                     TOS             equ	1277	;# 
  2754   0004FD                     TOSL            equ	1277	;# 
  2755   0004FE                     TOSH            equ	1278	;# 
  2756   0004FF                     TOSU            equ	1279	;# 
  2757   000039                     CLKRCON         equ	57	;# 
  2758   00003A                     CLKRCLK         equ	58	;# 
  2759   000040                     NVMCON0         equ	64	;# 
  2760   000041                     NVMCON1         equ	65	;# 
  2761   000042                     NVMLOCK         equ	66	;# 
  2762   000043                     NVMADR          equ	67	;# 
  2763   000043                     NVMADRL         equ	67	;# 
  2764   000044                     NVMADRH         equ	68	;# 
  2765   000045                     NVMADRU         equ	69	;# 
  2766   000046                     NVMDAT          equ	70	;# 
  2767   000046                     NVMDATL         equ	70	;# 
  2768   000047                     NVMDATH         equ	71	;# 
  2769   000048                     VREGCON         equ	72	;# 
  2770   000049                     BORCON          equ	73	;# 
  2771   00004A                     HLVDCON0        equ	74	;# 
  2772   00004B                     HLVDCON1        equ	75	;# 
  2773   00004C                     ZCDCON          equ	76	;# 
  2774   000060                     PMD0            equ	96	;# 
  2775   000061                     PMD1            equ	97	;# 
  2776   000063                     PMD3            equ	99	;# 
  2777   000064                     PMD4            equ	100	;# 
  2778   000065                     PMD5            equ	101	;# 
  2779   000066                     PMD6            equ	102	;# 
  2780   000067                     PMD7            equ	103	;# 
  2781   000068                     PMD8            equ	104	;# 
  2782   00006A                     MD1CON0         equ	106	;# 
  2783   00006B                     MD1CON1         equ	107	;# 
  2784   00006C                     MD1SRC          equ	108	;# 
  2785   00006D                     MD1CARL         equ	109	;# 
  2786   00006E                     MD1CARH         equ	110	;# 
  2787   00006F                     CMOUT           equ	111	;# 
  2788   000070                     CM1CON0         equ	112	;# 
  2789   000071                     CM1CON1         equ	113	;# 
  2790   000072                     CM1NCH          equ	114	;# 
  2791   000073                     CM1PCH          equ	115	;# 
  2792   000074                     CM2CON0         equ	116	;# 
  2793   000075                     CM2CON1         equ	117	;# 
  2794   000076                     CM2NCH          equ	118	;# 
  2795   000077                     CM2PCH          equ	119	;# 
  2796   000078                     WDTCON0         equ	120	;# 
  2797   000079                     WDTCON1         equ	121	;# 
  2798   00007A                     WDTPS           equ	122	;# 
  2799   00007A                     WDTPSL          equ	122	;# 
  2800   00007B                     WDTPSH          equ	123	;# 
  2801   00007C                     WDTTMR          equ	124	;# 
  2802   00007D                     DAC1DAT         equ	125	;# 
  2803   00007D                     DAC1DATL        equ	125	;# 
  2804   00007F                     DAC1CON         equ	127	;# 
  2805   000080                     SPI1RXB         equ	128	;# 
  2806   000081                     SPI1TXB         equ	129	;# 
  2807   000082                     SPI1TCNT        equ	130	;# 
  2808   000082                     SPI1TCNTL       equ	130	;# 
  2809   000083                     SPI1TCNTH       equ	131	;# 
  2810   000084                     SPI1CON0        equ	132	;# 
  2811   000085                     SPI1CON1        equ	133	;# 
  2812   000086                     SPI1CON2        equ	134	;# 
  2813   000087                     SPI1STATUS      equ	135	;# 
  2814   000088                     SPI1TWIDTH      equ	136	;# 
  2815   000089                     SPI1BAUD        equ	137	;# 
  2816   00008A                     SPI1INTF        equ	138	;# 
  2817   00008B                     SPI1INTE        equ	139	;# 
  2818   00008C                     SPI1CLK         equ	140	;# 
  2819   00008D                     SPI2RXB         equ	141	;# 
  2820   00008E                     SPI2TXB         equ	142	;# 
  2821   00008F                     SPI2TCNT        equ	143	;# 
  2822   00008F                     SPI2TCNTL       equ	143	;# 
  2823   000090                     SPI2TCNTH       equ	144	;# 
  2824   000091                     SPI2CON0        equ	145	;# 
  2825   000092                     SPI2CON1        equ	146	;# 
  2826   000093                     SPI2CON2        equ	147	;# 
  2827   000094                     SPI2STATUS      equ	148	;# 
  2828   000095                     SPI2TWIDTH      equ	149	;# 
  2829   000096                     SPI2BAUD        equ	150	;# 
  2830   000097                     SPI2INTF        equ	151	;# 
  2831   000098                     SPI2INTE        equ	152	;# 
  2832   000099                     SPI2CLK         equ	153	;# 
  2833   0000AC                     ACTCON          equ	172	;# 
  2834   0000AD                     OSCCON1         equ	173	;# 
  2835   0000AE                     OSCCON2         equ	174	;# 
  2836   0000AF                     OSCCON3         equ	175	;# 
  2837   0000B0                     OSCTUNE         equ	176	;# 
  2838   0000B1                     OSCFRQ          equ	177	;# 
  2839   0000B1                     OSCFREQ         equ	177	;# 
  2840   0000B2                     OSCSTAT         equ	178	;# 
  2841   0000B2                     OSCSTAT1        equ	178	;# 
  2842   0000B3                     OSCEN           equ	179	;# 
  2843   0000B4                     PRLOCK          equ	180	;# 
  2844   0000B5                     SCANPR          equ	181	;# 
  2845   0000B6                     DMA1PR          equ	182	;# 
  2846   0000B7                     DMA2PR          equ	183	;# 
  2847   0000B8                     DMA3PR          equ	184	;# 
  2848   0000B9                     DMA4PR          equ	185	;# 
  2849   0000BA                     DMA5PR          equ	186	;# 
  2850   0000BB                     DMA6PR          equ	187	;# 
  2851   0000BE                     MAINPR          equ	190	;# 
  2852   0000BF                     ISRPR           equ	191	;# 
  2853   0000D4                     CLCDATA         equ	212	;# 
  2854   0000D5                     CLCSELECT       equ	213	;# 
  2855   0000D6                     CLCnCON         equ	214	;# 
  2856   0000D7                     CLCnPOL         equ	215	;# 
  2857   0000D8                     CLCnSEL0        equ	216	;# 
  2858   0000D9                     CLCnSEL1        equ	217	;# 
  2859   0000DA                     CLCnSEL2        equ	218	;# 
  2860   0000DB                     CLCnSEL3        equ	219	;# 
  2861   0000DC                     CLCnGLS0        equ	220	;# 
  2862   0000DD                     CLCnGLS1        equ	221	;# 
  2863   0000DE                     CLCnGLS2        equ	222	;# 
  2864   0000DF                     CLCnGLS3        equ	223	;# 
  2865   0000E8                     DMASELECT       equ	232	;# 
  2866   0000E9                     DMAnBUF         equ	233	;# 
  2867   0000EA                     DMAnDCNT        equ	234	;# 
  2868   0000EA                     DMAnDCNTL       equ	234	;# 
  2869   0000EB                     DMAnDCNTH       equ	235	;# 
  2870   0000EC                     DMAnDPTR        equ	236	;# 
  2871   0000EC                     DMAnDPTRL       equ	236	;# 
  2872   0000ED                     DMAnDPTRH       equ	237	;# 
  2873   0000EE                     DMAnDSZ         equ	238	;# 
  2874   0000EE                     DMAnDSZL        equ	238	;# 
  2875   0000EF                     DMAnDSZH        equ	239	;# 
  2876   0000F0                     DMAnDSA         equ	240	;# 
  2877   0000F0                     DMAnDSAL        equ	240	;# 
  2878   0000F1                     DMAnDSAH        equ	241	;# 
  2879   0000F2                     DMAnSCNT        equ	242	;# 
  2880   0000F2                     DMAnSCNTL       equ	242	;# 
  2881   0000F3                     DMAnSCNTH       equ	243	;# 
  2882   0000F4                     DMAnSPTR        equ	244	;# 
  2883   0000F4                     DMAnSPTRL       equ	244	;# 
  2884   0000F5                     DMAnSPTRH       equ	245	;# 
  2885   0000F6                     DMAnSPTRU       equ	246	;# 
  2886   0000F7                     DMAnSSZ         equ	247	;# 
  2887   0000F7                     DMAnSSZL        equ	247	;# 
  2888   0000F8                     DMAnSSZH        equ	248	;# 
  2889   0000F9                     DMAnSSA         equ	249	;# 
  2890   0000F9                     DMAnSSAL        equ	249	;# 
  2891   0000FA                     DMAnSSAH        equ	250	;# 
  2892   0000FB                     DMAnSSAU        equ	251	;# 
  2893   0000FC                     DMAnCON0        equ	252	;# 
  2894   0000FD                     DMAnCON1        equ	253	;# 
  2895   0000FE                     DMAnAIRQ        equ	254	;# 
  2896   0000FF                     DMAnSIRQ        equ	255	;# 
  2897   000200                     PPSLOCK         equ	512	;# 
  2898   000201                     RA0PPS          equ	513	;# 
  2899   000202                     RA1PPS          equ	514	;# 
  2900   000203                     RA2PPS          equ	515	;# 
  2901   000204                     RA3PPS          equ	516	;# 
  2902   000205                     RA4PPS          equ	517	;# 
  2903   000206                     RA5PPS          equ	518	;# 
  2904   000207                     RA6PPS          equ	519	;# 
  2905   000208                     RA7PPS          equ	520	;# 
  2906   000209                     RB0PPS          equ	521	;# 
  2907   00020A                     RB1PPS          equ	522	;# 
  2908   00020B                     RB2PPS          equ	523	;# 
  2909   00020C                     RB3PPS          equ	524	;# 
  2910   00020D                     RB4PPS          equ	525	;# 
  2911   00020E                     RB5PPS          equ	526	;# 
  2912   00020F                     RB6PPS          equ	527	;# 
  2913   000210                     RB7PPS          equ	528	;# 
  2914   000211                     RC0PPS          equ	529	;# 
  2915   000212                     RC1PPS          equ	530	;# 
  2916   000213                     RC2PPS          equ	531	;# 
  2917   000214                     RC3PPS          equ	532	;# 
  2918   000215                     RC4PPS          equ	533	;# 
  2919   000216                     RC5PPS          equ	534	;# 
  2920   000217                     RC6PPS          equ	535	;# 
  2921   000218                     RC7PPS          equ	536	;# 
  2922   000219                     RD0PPS          equ	537	;# 
  2923   00021A                     RD1PPS          equ	538	;# 
  2924   00021B                     RD2PPS          equ	539	;# 
  2925   00021C                     RD3PPS          equ	540	;# 
  2926   00021D                     RD4PPS          equ	541	;# 
  2927   00021E                     RD5PPS          equ	542	;# 
  2928   00021F                     RD6PPS          equ	543	;# 
  2929   000220                     RD7PPS          equ	544	;# 
  2930   000221                     RE0PPS          equ	545	;# 
  2931   000222                     RE1PPS          equ	546	;# 
  2932   000223                     RE2PPS          equ	547	;# 
  2933   000229                     RF0PPS          equ	553	;# 
  2934   00022A                     RF1PPS          equ	554	;# 
  2935   00022B                     RF2PPS          equ	555	;# 
  2936   00022C                     RF3PPS          equ	556	;# 
  2937   00022D                     RF4PPS          equ	557	;# 
  2938   00022E                     RF5PPS          equ	558	;# 
  2939   00022F                     RF6PPS          equ	559	;# 
  2940   000230                     RF7PPS          equ	560	;# 
  2941   00023E                     INT0PPS         equ	574	;# 
  2942   00023F                     INT1PPS         equ	575	;# 
  2943   000240                     INT2PPS         equ	576	;# 
  2944   000241                     T0CKIPPS        equ	577	;# 
  2945   000242                     T1CKIPPS        equ	578	;# 
  2946   000243                     T1GPPS          equ	579	;# 
  2947   000244                     T3CKIPPS        equ	580	;# 
  2948   000245                     T3GPPS          equ	581	;# 
  2949   000246                     T5CKIPPS        equ	582	;# 
  2950   000247                     T5GPPS          equ	583	;# 
  2951   000248                     T2INPPS         equ	584	;# 
  2952   000249                     T4INPPS         equ	585	;# 
  2953   00024A                     T6INPPS         equ	586	;# 
  2954   00024F                     CCP1PPS         equ	591	;# 
  2955   000250                     CCP2PPS         equ	592	;# 
  2956   000251                     CCP3PPS         equ	593	;# 
  2957   000253                     PWM1ERSPPS      equ	595	;# 
  2958   000254                     PWM2ERSPPS      equ	596	;# 
  2959   000255                     PWM3ERSPPS      equ	597	;# 
  2960   000257                     PWMIN0PPS       equ	599	;# 
  2961   000258                     PWMIN1PPS       equ	600	;# 
  2962   000259                     SMT1WINPPS      equ	601	;# 
  2963   00025A                     SMT1SIGPPS      equ	602	;# 
  2964   00025B                     CWG1PPS         equ	603	;# 
  2965   00025B                     CWG1INPPS       equ	603	;# 
  2966   00025C                     CWG2PPS         equ	604	;# 
  2967   00025C                     CWG2INPPS       equ	604	;# 
  2968   00025D                     CWG3PPS         equ	605	;# 
  2969   00025D                     CWG3INPPS       equ	605	;# 
  2970   00025E                     MD1CARLPPS      equ	606	;# 
  2971   00025E                     MDCARLPPS       equ	606	;# 
  2972   00025F                     MD1CARHPPS      equ	607	;# 
  2973   00025F                     MDCARHPPS       equ	607	;# 
  2974   000260                     MD1SRCPPS       equ	608	;# 
  2975   000260                     MDSRCPPS        equ	608	;# 
  2976   000261                     CLCIN0PPS       equ	609	;# 
  2977   000262                     CLCIN1PPS       equ	610	;# 
  2978   000263                     CLCIN2PPS       equ	611	;# 
  2979   000264                     CLCIN3PPS       equ	612	;# 
  2980   000265                     CLCIN4PPS       equ	613	;# 
  2981   000266                     CLCIN5PPS       equ	614	;# 
  2982   000267                     CLCIN6PPS       equ	615	;# 
  2983   000268                     CLCIN7PPS       equ	616	;# 
  2984   000269                     ADACTPPS        equ	617	;# 
  2985   00026A                     SPI1SCKPPS      equ	618	;# 
  2986   00026B                     SPI1SDIPPS      equ	619	;# 
  2987   00026C                     SPI1SSPPS       equ	620	;# 
  2988   00026D                     SPI2SCKPPS      equ	621	;# 
  2989   00026E                     SPI2SDIPPS      equ	622	;# 
  2990   00026F                     SPI2SSPPS       equ	623	;# 
  2991   000270                     I2C1SDAPPS      equ	624	;# 
  2992   000271                     I2C1SCLPPS      equ	625	;# 
  2993   000272                     U1RXPPS         equ	626	;# 
  2994   000273                     U1CTSPPS        equ	627	;# 
  2995   000274                     U2RXPPS         equ	628	;# 
  2996   000275                     U2CTSPPS        equ	629	;# 
  2997   000276                     U3RXPPS         equ	630	;# 
  2998   000277                     U3CTSPPS        equ	631	;# 
  2999   000278                     U4RXPPS         equ	632	;# 
  3000   000279                     U4CTSPPS        equ	633	;# 
  3001   00027A                     U5RXPPS         equ	634	;# 
  3002   00027B                     U5CTSPPS        equ	635	;# 
  3003   000286                     RC4I2C          equ	646	;# 
  3004   000287                     RC3I2C          equ	647	;# 
  3005   000288                     RB2I2C          equ	648	;# 
  3006   000289                     RB1I2C          equ	649	;# 
  3007   00028B                     I2C1RXB         equ	651	;# 
  3008   00028C                     I2C1TXB         equ	652	;# 
  3009   00028D                     I2C1CNT         equ	653	;# 
  3010   00028E                     I2C1ADB0        equ	654	;# 
  3011   00028F                     I2C1ADB1        equ	655	;# 
  3012   000290                     I2C1ADR0        equ	656	;# 
  3013   000291                     I2C1ADR1        equ	657	;# 
  3014   000292                     I2C1ADR2        equ	658	;# 
  3015   000293                     I2C1ADR3        equ	659	;# 
  3016   000294                     I2C1CON0        equ	660	;# 
  3017   000295                     I2C1CON1        equ	661	;# 
  3018   000296                     I2C1CON2        equ	662	;# 
  3019   000297                     I2C1ERR         equ	663	;# 
  3020   000298                     I2C1STAT0       equ	664	;# 
  3021   000299                     I2C1STAT1       equ	665	;# 
  3022   00029A                     I2C1PIR         equ	666	;# 
  3023   00029B                     I2C1PIE         equ	667	;# 
  3024   00029C                     I2C1CLK         equ	668	;# 
  3025   00029D                     I2C1BTO         equ	669	;# 
  3026   0002A1                     U1RXB           equ	673	;# 
  3027   0002A1                     U1RXBL          equ	673	;# 
  3028   0002A2                     U1RXCHK         equ	674	;# 
  3029   0002A3                     U1TXB           equ	675	;# 
  3030   0002A3                     U1TXBL          equ	675	;# 
  3031   0002A4                     U1TXCHK         equ	676	;# 
  3032   0002A5                     U1P1            equ	677	;# 
  3033   0002A5                     U1P1L           equ	677	;# 
  3034   0002A6                     U1P1H           equ	678	;# 
  3035   0002A7                     U1P2            equ	679	;# 
  3036   0002A7                     U1P2L           equ	679	;# 
  3037   0002A8                     U1P2H           equ	680	;# 
  3038   0002A9                     U1P3            equ	681	;# 
  3039   0002A9                     U1P3L           equ	681	;# 
  3040   0002AA                     U1P3H           equ	682	;# 
  3041   0002AB                     U1CON0          equ	683	;# 
  3042   0002AC                     U1CON1          equ	684	;# 
  3043   0002AD                     U1CON2          equ	685	;# 
  3044   0002AE                     U1BRG           equ	686	;# 
  3045   0002AE                     U1BRGL          equ	686	;# 
  3046   0002AF                     U1BRGH          equ	687	;# 
  3047   0002B0                     U1FIFO          equ	688	;# 
  3048   0002B1                     U1UIR           equ	689	;# 
  3049   0002B2                     U1ERRIR         equ	690	;# 
  3050   0002B3                     U1ERRIE         equ	691	;# 
  3051   0002B4                     U2RXB           equ	692	;# 
  3052   0002B4                     U2RXBL          equ	692	;# 
  3053   0002B6                     U2TXB           equ	694	;# 
  3054   0002B6                     U2TXBL          equ	694	;# 
  3055   0002B8                     U2P1            equ	696	;# 
  3056   0002B8                     U2P1L           equ	696	;# 
  3057   0002BA                     U2P2            equ	698	;# 
  3058   0002BA                     U2P2L           equ	698	;# 
  3059   0002BC                     U2P3            equ	700	;# 
  3060   0002BC                     U2P3L           equ	700	;# 
  3061   0002BE                     U2CON0          equ	702	;# 
  3062   0002BF                     U2CON1          equ	703	;# 
  3063   0002C0                     U2CON2          equ	704	;# 
  3064   0002C1                     U2BRG           equ	705	;# 
  3065   0002C1                     U2BRGL          equ	705	;# 
  3066   0002C2                     U2BRGH          equ	706	;# 
  3067   0002C3                     U2FIFO          equ	707	;# 
  3068   0002C4                     U2UIR           equ	708	;# 
  3069   0002C5                     U2ERRIR         equ	709	;# 
  3070   0002C6                     U2ERRIE         equ	710	;# 
  3071   0002C7                     U3RXB           equ	711	;# 
  3072   0002C7                     U3RXBL          equ	711	;# 
  3073   0002C9                     U3TXB           equ	713	;# 
  3074   0002C9                     U3TXBL          equ	713	;# 
  3075   0002CB                     U3P1            equ	715	;# 
  3076   0002CB                     U3P1L           equ	715	;# 
  3077   0002CD                     U3P2            equ	717	;# 
  3078   0002CD                     U3P2L           equ	717	;# 
  3079   0002CF                     U3P3            equ	719	;# 
  3080   0002CF                     U3P3L           equ	719	;# 
  3081   0002D1                     U3CON0          equ	721	;# 
  3082   0002D2                     U3CON1          equ	722	;# 
  3083   0002D3                     U3CON2          equ	723	;# 
  3084   0002D4                     U3BRG           equ	724	;# 
  3085   0002D4                     U3BRGL          equ	724	;# 
  3086   0002D5                     U3BRGH          equ	725	;# 
  3087   0002D6                     U3FIFO          equ	726	;# 
  3088   0002D7                     U3UIR           equ	727	;# 
  3089   0002D8                     U3ERRIR         equ	728	;# 
  3090   0002D9                     U3ERRIE         equ	729	;# 
  3091   0002DA                     U4RXB           equ	730	;# 
  3092   0002DA                     U4RXBL          equ	730	;# 
  3093   0002DC                     U4TXB           equ	732	;# 
  3094   0002DC                     U4TXBL          equ	732	;# 
  3095   0002DE                     U4P1            equ	734	;# 
  3096   0002DE                     U4P1L           equ	734	;# 
  3097   0002E0                     U4P2            equ	736	;# 
  3098   0002E0                     U4P2L           equ	736	;# 
  3099   0002E2                     U4P3            equ	738	;# 
  3100   0002E2                     U4P3L           equ	738	;# 
  3101   0002E4                     U4CON0          equ	740	;# 
  3102   0002E5                     U4CON1          equ	741	;# 
  3103   0002E6                     U4CON2          equ	742	;# 
  3104   0002E7                     U4BRG           equ	743	;# 
  3105   0002E7                     U4BRGL          equ	743	;# 
  3106   0002E8                     U4BRGH          equ	744	;# 
  3107   0002E9                     U4FIFO          equ	745	;# 
  3108   0002EA                     U4UIR           equ	746	;# 
  3109   0002EB                     U4ERRIR         equ	747	;# 
  3110   0002EC                     U4ERRIE         equ	748	;# 
  3111   0002ED                     U5RXB           equ	749	;# 
  3112   0002ED                     U5RXBL          equ	749	;# 
  3113   0002EF                     U5TXB           equ	751	;# 
  3114   0002EF                     U5TXBL          equ	751	;# 
  3115   0002F1                     U5P1            equ	753	;# 
  3116   0002F1                     U5P1L           equ	753	;# 
  3117   0002F3                     U5P2            equ	755	;# 
  3118   0002F3                     U5P2L           equ	755	;# 
  3119   0002F5                     U5P3            equ	757	;# 
  3120   0002F5                     U5P3L           equ	757	;# 
  3121   0002F7                     U5CON0          equ	759	;# 
  3122   0002F8                     U5CON1          equ	760	;# 
  3123   0002F9                     U5CON2          equ	761	;# 
  3124   0002FA                     U5BRG           equ	762	;# 
  3125   0002FA                     U5BRGL          equ	762	;# 
  3126   0002FB                     U5BRGH          equ	763	;# 
  3127   0002FC                     U5FIFO          equ	764	;# 
  3128   0002FD                     U5UIR           equ	765	;# 
  3129   0002FE                     U5ERRIR         equ	766	;# 
  3130   0002FF                     U5ERRIE         equ	767	;# 
  3131   000300                     SMT1TMR         equ	768	;# 
  3132   000300                     SMT1TMRL        equ	768	;# 
  3133   000301                     SMT1TMRH        equ	769	;# 
  3134   000302                     SMT1TMRU        equ	770	;# 
  3135   000303                     SMT1CPR         equ	771	;# 
  3136   000303                     SMT1CPRL        equ	771	;# 
  3137   000304                     SMT1CPRH        equ	772	;# 
  3138   000305                     SMT1CPRU        equ	773	;# 
  3139   000306                     SMT1CPW         equ	774	;# 
  3140   000306                     SMT1CPWL        equ	774	;# 
  3141   000307                     SMT1CPWH        equ	775	;# 
  3142   000308                     SMT1CPWU        equ	776	;# 
  3143   000309                     SMT1PR          equ	777	;# 
  3144   000309                     SMT1PRL         equ	777	;# 
  3145   00030A                     SMT1PRH         equ	778	;# 
  3146   00030B                     SMT1PRU         equ	779	;# 
  3147   00030C                     SMT1CON0        equ	780	;# 
  3148   00030D                     SMT1CON1        equ	781	;# 
  3149   00030E                     SMT1STAT        equ	782	;# 
  3150   00030F                     SMT1CLK         equ	783	;# 
  3151   000310                     SMT1SIG         equ	784	;# 
  3152   000311                     SMT1WIN         equ	785	;# 
  3153   000318                     TMR0L           equ	792	;# 
  3154   000318                     TMR0            equ	792	;# 
  3155   000319                     TMR0H           equ	793	;# 
  3156   000319                     PR0             equ	793	;# 
  3157   00031A                     T0CON0          equ	794	;# 
  3158   00031B                     T0CON1          equ	795	;# 
  3159   00031C                     TMR1            equ	796	;# 
  3160   00031C                     TMR1L           equ	796	;# 
  3161   00031D                     TMR1H           equ	797	;# 
  3162   00031E                     T1CON           equ	798	;# 
  3163   00031E                     TMR1CON         equ	798	;# 
  3164   00031F                     T1GCON          equ	799	;# 
  3165   00031F                     TMR1GCON        equ	799	;# 
  3166   000320                     T1GATE          equ	800	;# 
  3167   000320                     TMR1GATE        equ	800	;# 
  3168   000321                     T1CLK           equ	801	;# 
  3169   000321                     TMR1CLK         equ	801	;# 
  3170   000321                     PR1             equ	801	;# 
  3171   000322                     T2TMR           equ	802	;# 
  3172   000322                     TMR2            equ	802	;# 
  3173   000323                     T2PR            equ	803	;# 
  3174   000323                     PR2             equ	803	;# 
  3175   000324                     T2CON           equ	804	;# 
  3176   000325                     T2HLT           equ	805	;# 
  3177   000326                     T2CLKCON        equ	806	;# 
  3178   000326                     T2CLK           equ	806	;# 
  3179   000327                     T2RST           equ	807	;# 
  3180   000328                     TMR3            equ	808	;# 
  3181   000328                     TMR3L           equ	808	;# 
  3182   000329                     TMR3H           equ	809	;# 
  3183   00032A                     T3CON           equ	810	;# 
  3184   00032A                     TMR3CON         equ	810	;# 
  3185   00032B                     T3GCON          equ	811	;# 
  3186   00032B                     TMR3GCON        equ	811	;# 
  3187   00032C                     T3GATE          equ	812	;# 
  3188   00032C                     TMR3GATE        equ	812	;# 
  3189   00032D                     T3CLK           equ	813	;# 
  3190   00032D                     TMR3CLK         equ	813	;# 
  3191   00032D                     PR3             equ	813	;# 
  3192   00032E                     T4TMR           equ	814	;# 
  3193   00032E                     TMR4            equ	814	;# 
  3194   00032F                     T4PR            equ	815	;# 
  3195   00032F                     PR4             equ	815	;# 
  3196   000330                     T4CON           equ	816	;# 
  3197   000331                     T4HLT           equ	817	;# 
  3198   000332                     T4CLKCON        equ	818	;# 
  3199   000332                     T4CLK           equ	818	;# 
  3200   000333                     T4RST           equ	819	;# 
  3201   000334                     TMR5            equ	820	;# 
  3202   000334                     TMR5L           equ	820	;# 
  3203   000335                     TMR5H           equ	821	;# 
  3204   000336                     T5CON           equ	822	;# 
  3205   000336                     TMR5CON         equ	822	;# 
  3206   000337                     T5GCON          equ	823	;# 
  3207   000337                     TMR5GCON        equ	823	;# 
  3208   000338                     T5GATE          equ	824	;# 
  3209   000338                     TMR5GATE        equ	824	;# 
  3210   000339                     T5CLK           equ	825	;# 
  3211   000339                     TMR5CLK         equ	825	;# 
  3212   000339                     PR5             equ	825	;# 
  3213   00033A                     T6TMR           equ	826	;# 
  3214   00033A                     TMR6            equ	826	;# 
  3215   00033B                     T6PR            equ	827	;# 
  3216   00033B                     PR6             equ	827	;# 
  3217   00033C                     T6CON           equ	828	;# 
  3218   00033D                     T6HLT           equ	829	;# 
  3219   00033E                     T6CLKCON        equ	830	;# 
  3220   00033E                     T6CLK           equ	830	;# 
  3221   00033F                     T6RST           equ	831	;# 
  3222   000340                     CCPR1           equ	832	;# 
  3223   000340                     CCPR1L          equ	832	;# 
  3224   000341                     CCPR1H          equ	833	;# 
  3225   000342                     CCP1CON         equ	834	;# 
  3226   000343                     CCP1CAP         equ	835	;# 
  3227   000344                     CCPR2           equ	836	;# 
  3228   000344                     CCPR2L          equ	836	;# 
  3229   000345                     CCPR2H          equ	837	;# 
  3230   000346                     CCP2CON         equ	838	;# 
  3231   000347                     CCP2CAP         equ	839	;# 
  3232   000348                     CCPR3           equ	840	;# 
  3233   000348                     CCPR3L          equ	840	;# 
  3234   000349                     CCPR3H          equ	841	;# 
  3235   00034A                     CCP3CON         equ	842	;# 
  3236   00034B                     CCP3CAP         equ	843	;# 
  3237   00034C                     CCPTMRS0        equ	844	;# 
  3238   00034F                     CRCDATA         equ	847	;# 
  3239   00034F                     CRCDATL         equ	847	;# 
  3240   000350                     CRCDATH         equ	848	;# 
  3241   000351                     CRCACC          equ	849	;# 
  3242   000351                     CRCACCL         equ	849	;# 
  3243   000352                     CRCACCH         equ	850	;# 
  3244   000353                     CRCSHFT         equ	851	;# 
  3245   000353                     CRCSHIFTL       equ	851	;# 
  3246   000354                     CRCSHIFTH       equ	852	;# 
  3247   000355                     CRCXOR          equ	853	;# 
  3248   000355                     CRCXORL         equ	853	;# 
  3249   000356                     CRCXORH         equ	854	;# 
  3250   000357                     CRCCON0         equ	855	;# 
  3251   000358                     CRCCON1         equ	856	;# 
  3252   00035A                     SCANLADR        equ	858	;# 
  3253   00035A                     SCANLADRL       equ	858	;# 
  3254   00035B                     SCANLADRH       equ	859	;# 
  3255   00035C                     SCANLADRU       equ	860	;# 
  3256   00035D                     SCANHADR        equ	861	;# 
  3257   00035D                     SCANHADRL       equ	861	;# 
  3258   00035E                     SCANHADRH       equ	862	;# 
  3259   00035F                     SCANHADRU       equ	863	;# 
  3260   000360                     SCANCON0        equ	864	;# 
  3261   000361                     SCANTRIG        equ	865	;# 
  3262   000362                     IPR0            equ	866	;# 
  3263   000363                     IPR1            equ	867	;# 
  3264   000364                     IPR2            equ	868	;# 
  3265   000365                     IPR3            equ	869	;# 
  3266   000366                     IPR4            equ	870	;# 
  3267   000367                     IPR5            equ	871	;# 
  3268   000368                     IPR6            equ	872	;# 
  3269   000369                     IPR7            equ	873	;# 
  3270   00036A                     IPR8            equ	874	;# 
  3271   00036B                     IPR9            equ	875	;# 
  3272   00036C                     IPR10           equ	876	;# 
  3273   00036D                     IPR11           equ	877	;# 
  3274   00036E                     IPR12           equ	878	;# 
  3275   00036F                     IPR13           equ	879	;# 
  3276   000370                     IPR14           equ	880	;# 
  3277   000371                     IPR15           equ	881	;# 
  3278   000373                     STATUS_CSHAD    equ	883	;# 
  3279   000374                     WREG_CSHAD      equ	884	;# 
  3280   000375                     BSR_CSHAD       equ	885	;# 
  3281   000376                     SHADCON         equ	886	;# 
  3282   000377                     STATUS_SHAD     equ	887	;# 
  3283   000378                     WREG_SHAD       equ	888	;# 
  3284   000379                     BSR_SHAD        equ	889	;# 
  3285   00037A                     PCLATH_SHAD     equ	890	;# 
  3286   00037B                     PCLATU_SHAD     equ	891	;# 
  3287   00037C                     FSR0SH          equ	892	;# 
  3288   00037C                     FSR0L_SHAD      equ	892	;# 
  3289   00037D                     FSR0H_SHAD      equ	893	;# 
  3290   00037E                     FSR1SH          equ	894	;# 
  3291   00037E                     FSR1L_SHAD      equ	894	;# 
  3292   00037F                     FSR1H_SHAD      equ	895	;# 
  3293   000380                     FSR2SH          equ	896	;# 
  3294   000380                     FSR2L_SHAD      equ	896	;# 
  3295   000381                     FSR2H_SHAD      equ	897	;# 
  3296   000382                     PRODSH          equ	898	;# 
  3297   000382                     PRODL_SHAD      equ	898	;# 
  3298   000383                     PRODH_SHAD      equ	899	;# 
  3299   0003BC                     CWG1CLK         equ	956	;# 
  3300   0003BC                     CWG1CLKCON      equ	956	;# 
  3301   0003BD                     CWG1ISM         equ	957	;# 
  3302   0003BD                     CWG1DAT         equ	957	;# 
  3303   0003BE                     CWG1DBR         equ	958	;# 
  3304   0003BF                     CWG1DBF         equ	959	;# 
  3305   0003C0                     CWG1CON0        equ	960	;# 
  3306   0003C1                     CWG1CON1        equ	961	;# 
  3307   0003C2                     CWG1AS0         equ	962	;# 
  3308   0003C3                     CWG1AS1         equ	963	;# 
  3309   0003C4                     CWG1STR         equ	964	;# 
  3310   0003C5                     CWG2CLK         equ	965	;# 
  3311   0003C5                     CWG2CLKCON      equ	965	;# 
  3312   0003C6                     CWG2ISM         equ	966	;# 
  3313   0003C6                     CWG2DAT         equ	966	;# 
  3314   0003C7                     CWG2DBR         equ	967	;# 
  3315   0003C8                     CWG2DBF         equ	968	;# 
  3316   0003C9                     CWG2CON0        equ	969	;# 
  3317   0003CA                     CWG2CON1        equ	970	;# 
  3318   0003CB                     CWG2AS0         equ	971	;# 
  3319   0003CC                     CWG2AS1         equ	972	;# 
  3320   0003CD                     CWG2STR         equ	973	;# 
  3321   0003CE                     CWG3CLK         equ	974	;# 
  3322   0003CE                     CWG3CLKCON      equ	974	;# 
  3323   0003CF                     CWG3ISM         equ	975	;# 
  3324   0003CF                     CWG3DAT         equ	975	;# 
  3325   0003D0                     CWG3DBR         equ	976	;# 
  3326   0003D1                     CWG3DBF         equ	977	;# 
  3327   0003D2                     CWG3CON0        equ	978	;# 
  3328   0003D3                     CWG3CON1        equ	979	;# 
  3329   0003D4                     CWG3AS0         equ	980	;# 
  3330   0003D5                     CWG3AS1         equ	981	;# 
  3331   0003D6                     CWG3STR         equ	982	;# 
  3332   0003D7                     FVRCON          equ	983	;# 
  3333   0003D8                     ADCPCON         equ	984	;# 
  3334   0003D8                     ADCP            equ	984	;# 
  3335   0003D9                     ADLTH           equ	985	;# 
  3336   0003D9                     ADLTHL          equ	985	;# 
  3337   0003DA                     ADLTHH          equ	986	;# 
  3338   0003DB                     ADUTH           equ	987	;# 
  3339   0003DB                     ADUTHL          equ	987	;# 
  3340   0003DC                     ADUTHH          equ	988	;# 
  3341   0003DD                     ADERR           equ	989	;# 
  3342   0003DD                     ADERRL          equ	989	;# 
  3343   0003DE                     ADERRH          equ	990	;# 
  3344   0003DF                     ADSTPT          equ	991	;# 
  3345   0003DF                     ADSTPTL         equ	991	;# 
  3346   0003E0                     ADSTPTH         equ	992	;# 
  3347   0003E1                     ADFLTR          equ	993	;# 
  3348   0003E1                     ADFLTRL         equ	993	;# 
  3349   0003E2                     ADFLTRH         equ	994	;# 
  3350   0003E3                     ADACC           equ	995	;# 
  3351   0003E3                     ADACCL          equ	995	;# 
  3352   0003E4                     ADACCH          equ	996	;# 
  3353   0003E5                     ADACCU          equ	997	;# 
  3354   0003E6                     ADCNT           equ	998	;# 
  3355   0003E7                     ADRPT           equ	999	;# 
  3356   0003E8                     ADPREV          equ	1000	;# 
  3357   0003E8                     ADPREVL         equ	1000	;# 
  3358   0003E9                     ADPREVH         equ	1001	;# 
  3359   0003EA                     ADRES           equ	1002	;# 
  3360   0003EA                     ADRESL          equ	1002	;# 
  3361   0003EB                     ADRESH          equ	1003	;# 
  3362   0003EC                     ADPCH           equ	1004	;# 
  3363   0003EE                     ADACQ           equ	1006	;# 
  3364   0003EE                     ADACQL          equ	1006	;# 
  3365   0003EF                     ADACQH          equ	1007	;# 
  3366   0003F0                     ADCAP           equ	1008	;# 
  3367   0003F1                     ADPRE           equ	1009	;# 
  3368   0003F1                     ADPREL          equ	1009	;# 
  3369   0003F2                     ADPREH          equ	1010	;# 
  3370   0003F3                     ADCON0          equ	1011	;# 
  3371   0003F4                     ADCON1          equ	1012	;# 
  3372   0003F5                     ADCON2          equ	1013	;# 
  3373   0003F6                     ADCON3          equ	1014	;# 
  3374   0003F7                     ADSTAT          equ	1015	;# 
  3375   0003F8                     ADREF           equ	1016	;# 
  3376   0003F9                     ADACT           equ	1017	;# 
  3377   0003FA                     ADCLK           equ	1018	;# 
  3378   000400                     ANSELA          equ	1024	;# 
  3379   000401                     WPUA            equ	1025	;# 
  3380   000402                     ODCONA          equ	1026	;# 
  3381   000403                     SLRCONA         equ	1027	;# 
  3382   000404                     INLVLA          equ	1028	;# 
  3383   000405                     IOCAP           equ	1029	;# 
  3384   000406                     IOCAN           equ	1030	;# 
  3385   000407                     IOCAF           equ	1031	;# 
  3386   000408                     ANSELB          equ	1032	;# 
  3387   000409                     WPUB            equ	1033	;# 
  3388   00040A                     ODCONB          equ	1034	;# 
  3389   00040B                     SLRCONB         equ	1035	;# 
  3390   00040C                     INLVLB          equ	1036	;# 
  3391   00040D                     IOCBP           equ	1037	;# 
  3392   00040E                     IOCBN           equ	1038	;# 
  3393   00040F                     IOCBF           equ	1039	;# 
  3394   000410                     ANSELC          equ	1040	;# 
  3395   000411                     WPUC            equ	1041	;# 
  3396   000412                     ODCONC          equ	1042	;# 
  3397   000413                     SLRCONC         equ	1043	;# 
  3398   000414                     INLVLC          equ	1044	;# 
  3399   000415                     IOCCP           equ	1045	;# 
  3400   000416                     IOCCN           equ	1046	;# 
  3401   000417                     IOCCF           equ	1047	;# 
  3402   000418                     ANSELD          equ	1048	;# 
  3403   000419                     WPUD            equ	1049	;# 
  3404   00041A                     ODCOND          equ	1050	;# 
  3405   00041B                     SLRCOND         equ	1051	;# 
  3406   00041C                     INLVLD          equ	1052	;# 
  3407   000420                     ANSELE          equ	1056	;# 
  3408   000421                     WPUE            equ	1057	;# 
  3409   000422                     ODCONE          equ	1058	;# 
  3410   000423                     SLRCONE         equ	1059	;# 
  3411   000424                     INLVLE          equ	1060	;# 
  3412   000425                     IOCEP           equ	1061	;# 
  3413   000426                     IOCEN           equ	1062	;# 
  3414   000427                     IOCEF           equ	1063	;# 
  3415   000428                     ANSELF          equ	1064	;# 
  3416   000429                     WPUF            equ	1065	;# 
  3417   00042A                     ODCONF          equ	1066	;# 
  3418   00042B                     SLRCONF         equ	1067	;# 
  3419   00042C                     INLVLF          equ	1068	;# 
  3420   000440                     NCO1ACC         equ	1088	;# 
  3421   000440                     NCO1ACCL        equ	1088	;# 
  3422   000441                     NCO1ACCH        equ	1089	;# 
  3423   000442                     NCO1ACCU        equ	1090	;# 
  3424   000443                     NCO1INC         equ	1091	;# 
  3425   000443                     NCO1INCL        equ	1091	;# 
  3426   000444                     NCO1INCH        equ	1092	;# 
  3427   000445                     NCO1INCU        equ	1093	;# 
  3428   000446                     NCO1CON         equ	1094	;# 
  3429   000447                     NCO1CLK         equ	1095	;# 
  3430   000448                     NCO2ACC         equ	1096	;# 
  3431   000448                     NCO2ACCL        equ	1096	;# 
  3432   000449                     NCO2ACCH        equ	1097	;# 
  3433   00044A                     NCO2ACCU        equ	1098	;# 
  3434   00044B                     NCO2INC         equ	1099	;# 
  3435   00044B                     NCO2INCL        equ	1099	;# 
  3436   00044C                     NCO2INCH        equ	1100	;# 
  3437   00044D                     NCO2INCU        equ	1101	;# 
  3438   00044E                     NCO2CON         equ	1102	;# 
  3439   00044F                     NCO2CLK         equ	1103	;# 
  3440   000450                     NCO3ACC         equ	1104	;# 
  3441   000450                     NCO3ACCL        equ	1104	;# 
  3442   000451                     NCO3ACCH        equ	1105	;# 
  3443   000452                     NCO3ACCU        equ	1106	;# 
  3444   000453                     NCO3INC         equ	1107	;# 
  3445   000453                     NCO3INCL        equ	1107	;# 
  3446   000454                     NCO3INCH        equ	1108	;# 
  3447   000455                     NCO3INCU        equ	1109	;# 
  3448   000456                     NCO3CON         equ	1110	;# 
  3449   000457                     NCO3CLK         equ	1111	;# 
  3450   000459                     IVTLOCK         equ	1113	;# 
  3451   00045A                     IVTAD           equ	1114	;# 
  3452   00045A                     IVTADL          equ	1114	;# 
  3453   00045B                     IVTADH          equ	1115	;# 
  3454   00045C                     IVTADU          equ	1116	;# 
  3455   00045D                     IVTBASE         equ	1117	;# 
  3456   00045D                     IVTBASEL        equ	1117	;# 
  3457   00045E                     IVTBASEH        equ	1118	;# 
  3458   00045F                     IVTBASEU        equ	1119	;# 
  3459   000460                     PWM1ERS         equ	1120	;# 
  3460   000461                     PWM1CLK         equ	1121	;# 
  3461   000462                     PWM1LDS         equ	1122	;# 
  3462   000463                     PWM1PR          equ	1123	;# 
  3463   000463                     PWM1PRL         equ	1123	;# 
  3464   000464                     PWM1PRH         equ	1124	;# 
  3465   000465                     PWM1CPRE        equ	1125	;# 
  3466   000466                     PWM1PIPOS       equ	1126	;# 
  3467   000467                     PWM1GIR         equ	1127	;# 
  3468   000468                     PWM1GIE         equ	1128	;# 
  3469   000469                     PWM1CON         equ	1129	;# 
  3470   00046A                     PWM1S1CFG       equ	1130	;# 
  3471   00046B                     PWM1S1P1        equ	1131	;# 
  3472   00046B                     PWM1S1P1L       equ	1131	;# 
  3473   00046C                     PWM1S1P1H       equ	1132	;# 
  3474   00046D                     PWM1S1P2        equ	1133	;# 
  3475   00046D                     PWM1S1P2L       equ	1133	;# 
  3476   00046E                     PWM1S1P2H       equ	1134	;# 
  3477   00046F                     PWM2ERS         equ	1135	;# 
  3478   000470                     PWM2CLK         equ	1136	;# 
  3479   000471                     PWM2LDS         equ	1137	;# 
  3480   000472                     PWM2PR          equ	1138	;# 
  3481   000472                     PWM2PRL         equ	1138	;# 
  3482   000473                     PWM2PRH         equ	1139	;# 
  3483   000474                     PWM2CPRE        equ	1140	;# 
  3484   000475                     PWM2PIPOS       equ	1141	;# 
  3485   000476                     PWM2GIR         equ	1142	;# 
  3486   000477                     PWM2GIE         equ	1143	;# 
  3487   000478                     PWM2CON         equ	1144	;# 
  3488   000479                     PWM2S1CFG       equ	1145	;# 
  3489   00047A                     PWM2S1P1        equ	1146	;# 
  3490   00047A                     PWM2S1P1L       equ	1146	;# 
  3491   00047B                     PWM2S1P1H       equ	1147	;# 
  3492   00047C                     PWM2S1P2        equ	1148	;# 
  3493   00047C                     PWM2S1P2L       equ	1148	;# 
  3494   00047D                     PWM2S1P2H       equ	1149	;# 
  3495   00047E                     PWM3ERS         equ	1150	;# 
  3496   00047F                     PWM3CLK         equ	1151	;# 
  3497   000480                     PWM3LDS         equ	1152	;# 
  3498   000481                     PWM3PR          equ	1153	;# 
  3499   000481                     PWM3PRL         equ	1153	;# 
  3500   000482                     PWM3PRH         equ	1154	;# 
  3501   000483                     PWM3CPRE        equ	1155	;# 
  3502   000484                     PWM3PIPOS       equ	1156	;# 
  3503   000485                     PWM3GIR         equ	1157	;# 
  3504   000486                     PWM3GIE         equ	1158	;# 
  3505   000487                     PWM3CON         equ	1159	;# 
  3506   000488                     PWM3S1CFG       equ	1160	;# 
  3507   000489                     PWM3S1P1        equ	1161	;# 
  3508   000489                     PWM3S1P1L       equ	1161	;# 
  3509   00048A                     PWM3S1P1H       equ	1162	;# 
  3510   00048B                     PWM3S1P2        equ	1163	;# 
  3511   00048B                     PWM3S1P2L       equ	1163	;# 
  3512   00048C                     PWM3S1P2H       equ	1164	;# 
  3513   00049C                     PWMLOAD         equ	1180	;# 
  3514   00049D                     PWMEN           equ	1181	;# 
  3515   00049E                     PIE0            equ	1182	;# 
  3516   00049F                     PIE1            equ	1183	;# 
  3517   0004A0                     PIE2            equ	1184	;# 
  3518   0004A1                     PIE3            equ	1185	;# 
  3519   0004A2                     PIE4            equ	1186	;# 
  3520   0004A3                     PIE5            equ	1187	;# 
  3521   0004A4                     PIE6            equ	1188	;# 
  3522   0004A5                     PIE7            equ	1189	;# 
  3523   0004A6                     PIE8            equ	1190	;# 
  3524   0004A7                     PIE9            equ	1191	;# 
  3525   0004A8                     PIE10           equ	1192	;# 
  3526   0004A9                     PIE11           equ	1193	;# 
  3527   0004AA                     PIE12           equ	1194	;# 
  3528   0004AB                     PIE13           equ	1195	;# 
  3529   0004AC                     PIE14           equ	1196	;# 
  3530   0004AD                     PIE15           equ	1197	;# 
  3531   0004AE                     PIR0            equ	1198	;# 
  3532   0004AF                     PIR1            equ	1199	;# 
  3533   0004B0                     PIR2            equ	1200	;# 
  3534   0004B1                     PIR3            equ	1201	;# 
  3535   0004B2                     PIR4            equ	1202	;# 
  3536   0004B3                     PIR5            equ	1203	;# 
  3537   0004B4                     PIR6            equ	1204	;# 
  3538   0004B5                     PIR7            equ	1205	;# 
  3539   0004B6                     PIR8            equ	1206	;# 
  3540   0004B7                     PIR9            equ	1207	;# 
  3541   0004B8                     PIR10           equ	1208	;# 
  3542   0004B9                     PIR11           equ	1209	;# 
  3543   0004BA                     PIR12           equ	1210	;# 
  3544   0004BB                     PIR13           equ	1211	;# 
  3545   0004BC                     PIR14           equ	1212	;# 
  3546   0004BD                     PIR15           equ	1213	;# 
  3547   0004BE                     LATA            equ	1214	;# 
  3548   0004BF                     LATB            equ	1215	;# 
  3549   0004C0                     LATC            equ	1216	;# 
  3550   0004C1                     LATD            equ	1217	;# 
  3551   0004C2                     LATE            equ	1218	;# 
  3552   0004C3                     LATF            equ	1219	;# 
  3553   0004C6                     TRISA           equ	1222	;# 
  3554   0004C7                     TRISB           equ	1223	;# 
  3555   0004C8                     TRISC           equ	1224	;# 
  3556   0004C9                     TRISD           equ	1225	;# 
  3557   0004CA                     TRISE           equ	1226	;# 
  3558   0004CB                     TRISF           equ	1227	;# 
  3559   0004CE                     PORTA           equ	1230	;# 
  3560   0004CF                     PORTB           equ	1231	;# 
  3561   0004D0                     PORTC           equ	1232	;# 
  3562   0004D1                     PORTD           equ	1233	;# 
  3563   0004D2                     PORTE           equ	1234	;# 
  3564   0004D3                     PORTF           equ	1235	;# 
  3565   0004D6                     INTCON0         equ	1238	;# 
  3566   0004D7                     INTCON1         equ	1239	;# 
  3567   0004D8                     STATUS          equ	1240	;# 
  3568   0004D9                     FSR2            equ	1241	;# 
  3569   0004D9                     FSR2L           equ	1241	;# 
  3570   0004DA                     FSR2H           equ	1242	;# 
  3571   0004DB                     PLUSW2          equ	1243	;# 
  3572   0004DC                     PREINC2         equ	1244	;# 
  3573   0004DD                     POSTDEC2        equ	1245	;# 
  3574   0004DE                     POSTINC2        equ	1246	;# 
  3575   0004DF                     INDF2           equ	1247	;# 
  3576   0004E0                     BSR             equ	1248	;# 
  3577   0004E1                     FSR1            equ	1249	;# 
  3578   0004E1                     FSR1L           equ	1249	;# 
  3579   0004E2                     FSR1H           equ	1250	;# 
  3580   0004E3                     PLUSW1          equ	1251	;# 
  3581   0004E4                     PREINC1         equ	1252	;# 
  3582   0004E5                     POSTDEC1        equ	1253	;# 
  3583   0004E6                     POSTINC1        equ	1254	;# 
  3584   0004E7                     INDF1           equ	1255	;# 
  3585   0004E8                     WREG            equ	1256	;# 
  3586   0004E9                     FSR0            equ	1257	;# 
  3587   0004E9                     FSR0L           equ	1257	;# 
  3588   0004EA                     FSR0H           equ	1258	;# 
  3589   0004EB                     PLUSW0          equ	1259	;# 
  3590   0004EC                     PREINC0         equ	1260	;# 
  3591   0004ED                     POSTDEC0        equ	1261	;# 
  3592   0004EE                     POSTINC0        equ	1262	;# 
  3593   0004EF                     INDF0           equ	1263	;# 
  3594   0004F0                     PCON0           equ	1264	;# 
  3595   0004F1                     PCON1           equ	1265	;# 
  3596   0004F2                     CPUDOZE         equ	1266	;# 
  3597   0004F3                     PROD            equ	1267	;# 
  3598   0004F3                     PRODL           equ	1267	;# 
  3599   0004F4                     PRODH           equ	1268	;# 
  3600   0004F5                     TABLAT          equ	1269	;# 
  3601   0004F6                     TBLPTR          equ	1270	;# 
  3602   0004F6                     TBLPTRL         equ	1270	;# 
  3603   0004F7                     TBLPTRH         equ	1271	;# 
  3604   0004F8                     TBLPTRU         equ	1272	;# 
  3605   0004F9                     PCLAT           equ	1273	;# 
  3606   0004F9                     PCL             equ	1273	;# 
  3607   0004FA                     PCLATH          equ	1274	;# 
  3608   0004FB                     PCLATU          equ	1275	;# 
  3609   0004FC                     STKPTR          equ	1276	;# 
  3610   0004FD                     TOS             equ	1277	;# 
  3611   0004FD                     TOSL            equ	1277	;# 
  3612   0004FE                     TOSH            equ	1278	;# 
  3613   0004FF                     TOSU            equ	1279	;# 
  3614   000039                     CLKRCON         equ	57	;# 
  3615   00003A                     CLKRCLK         equ	58	;# 
  3616   000040                     NVMCON0         equ	64	;# 
  3617   000041                     NVMCON1         equ	65	;# 
  3618   000042                     NVMLOCK         equ	66	;# 
  3619   000043                     NVMADR          equ	67	;# 
  3620   000043                     NVMADRL         equ	67	;# 
  3621   000044                     NVMADRH         equ	68	;# 
  3622   000045                     NVMADRU         equ	69	;# 
  3623   000046                     NVMDAT          equ	70	;# 
  3624   000046                     NVMDATL         equ	70	;# 
  3625   000047                     NVMDATH         equ	71	;# 
  3626   000048                     VREGCON         equ	72	;# 
  3627   000049                     BORCON          equ	73	;# 
  3628   00004A                     HLVDCON0        equ	74	;# 
  3629   00004B                     HLVDCON1        equ	75	;# 
  3630   00004C                     ZCDCON          equ	76	;# 
  3631   000060                     PMD0            equ	96	;# 
  3632   000061                     PMD1            equ	97	;# 
  3633   000063                     PMD3            equ	99	;# 
  3634   000064                     PMD4            equ	100	;# 
  3635   000065                     PMD5            equ	101	;# 
  3636   000066                     PMD6            equ	102	;# 
  3637   000067                     PMD7            equ	103	;# 
  3638   000068                     PMD8            equ	104	;# 
  3639   00006A                     MD1CON0         equ	106	;# 
  3640   00006B                     MD1CON1         equ	107	;# 
  3641   00006C                     MD1SRC          equ	108	;# 
  3642   00006D                     MD1CARL         equ	109	;# 
  3643   00006E                     MD1CARH         equ	110	;# 
  3644   00006F                     CMOUT           equ	111	;# 
  3645   000070                     CM1CON0         equ	112	;# 
  3646   000071                     CM1CON1         equ	113	;# 
  3647   000072                     CM1NCH          equ	114	;# 
  3648   000073                     CM1PCH          equ	115	;# 
  3649   000074                     CM2CON0         equ	116	;# 
  3650   000075                     CM2CON1         equ	117	;# 
  3651   000076                     CM2NCH          equ	118	;# 
  3652   000077                     CM2PCH          equ	119	;# 
  3653   000078                     WDTCON0         equ	120	;# 
  3654   000079                     WDTCON1         equ	121	;# 
  3655   00007A                     WDTPS           equ	122	;# 
  3656   00007A                     WDTPSL          equ	122	;# 
  3657   00007B                     WDTPSH          equ	123	;# 
  3658   00007C                     WDTTMR          equ	124	;# 
  3659   00007D                     DAC1DAT         equ	125	;# 
  3660   00007D                     DAC1DATL        equ	125	;# 
  3661   00007F                     DAC1CON         equ	127	;# 
  3662   000080                     SPI1RXB         equ	128	;# 
  3663   000081                     SPI1TXB         equ	129	;# 
  3664   000082                     SPI1TCNT        equ	130	;# 
  3665   000082                     SPI1TCNTL       equ	130	;# 
  3666   000083                     SPI1TCNTH       equ	131	;# 
  3667   000084                     SPI1CON0        equ	132	;# 
  3668   000085                     SPI1CON1        equ	133	;# 
  3669   000086                     SPI1CON2        equ	134	;# 
  3670   000087                     SPI1STATUS      equ	135	;# 
  3671   000088                     SPI1TWIDTH      equ	136	;# 
  3672   000089                     SPI1BAUD        equ	137	;# 
  3673   00008A                     SPI1INTF        equ	138	;# 
  3674   00008B                     SPI1INTE        equ	139	;# 
  3675   00008C                     SPI1CLK         equ	140	;# 
  3676   00008D                     SPI2RXB         equ	141	;# 
  3677   00008E                     SPI2TXB         equ	142	;# 
  3678   00008F                     SPI2TCNT        equ	143	;# 
  3679   00008F                     SPI2TCNTL       equ	143	;# 
  3680   000090                     SPI2TCNTH       equ	144	;# 
  3681   000091                     SPI2CON0        equ	145	;# 
  3682   000092                     SPI2CON1        equ	146	;# 
  3683   000093                     SPI2CON2        equ	147	;# 
  3684   000094                     SPI2STATUS      equ	148	;# 
  3685   000095                     SPI2TWIDTH      equ	149	;# 
  3686   000096                     SPI2BAUD        equ	150	;# 
  3687   000097                     SPI2INTF        equ	151	;# 
  3688   000098                     SPI2INTE        equ	152	;# 
  3689   000099                     SPI2CLK         equ	153	;# 
  3690   0000AC                     ACTCON          equ	172	;# 
  3691   0000AD                     OSCCON1         equ	173	;# 
  3692   0000AE                     OSCCON2         equ	174	;# 
  3693   0000AF                     OSCCON3         equ	175	;# 
  3694   0000B0                     OSCTUNE         equ	176	;# 
  3695   0000B1                     OSCFRQ          equ	177	;# 
  3696   0000B1                     OSCFREQ         equ	177	;# 
  3697   0000B2                     OSCSTAT         equ	178	;# 
  3698   0000B2                     OSCSTAT1        equ	178	;# 
  3699   0000B3                     OSCEN           equ	179	;# 
  3700   0000B4                     PRLOCK          equ	180	;# 
  3701   0000B5                     SCANPR          equ	181	;# 
  3702   0000B6                     DMA1PR          equ	182	;# 
  3703   0000B7                     DMA2PR          equ	183	;# 
  3704   0000B8                     DMA3PR          equ	184	;# 
  3705   0000B9                     DMA4PR          equ	185	;# 
  3706   0000BA                     DMA5PR          equ	186	;# 
  3707   0000BB                     DMA6PR          equ	187	;# 
  3708   0000BE                     MAINPR          equ	190	;# 
  3709   0000BF                     ISRPR           equ	191	;# 
  3710   0000D4                     CLCDATA         equ	212	;# 
  3711   0000D5                     CLCSELECT       equ	213	;# 
  3712   0000D6                     CLCnCON         equ	214	;# 
  3713   0000D7                     CLCnPOL         equ	215	;# 
  3714   0000D8                     CLCnSEL0        equ	216	;# 
  3715   0000D9                     CLCnSEL1        equ	217	;# 
  3716   0000DA                     CLCnSEL2        equ	218	;# 
  3717   0000DB                     CLCnSEL3        equ	219	;# 
  3718   0000DC                     CLCnGLS0        equ	220	;# 
  3719   0000DD                     CLCnGLS1        equ	221	;# 
  3720   0000DE                     CLCnGLS2        equ	222	;# 
  3721   0000DF                     CLCnGLS3        equ	223	;# 
  3722   0000E8                     DMASELECT       equ	232	;# 
  3723   0000E9                     DMAnBUF         equ	233	;# 
  3724   0000EA                     DMAnDCNT        equ	234	;# 
  3725   0000EA                     DMAnDCNTL       equ	234	;# 
  3726   0000EB                     DMAnDCNTH       equ	235	;# 
  3727   0000EC                     DMAnDPTR        equ	236	;# 
  3728   0000EC                     DMAnDPTRL       equ	236	;# 
  3729   0000ED                     DMAnDPTRH       equ	237	;# 
  3730   0000EE                     DMAnDSZ         equ	238	;# 
  3731   0000EE                     DMAnDSZL        equ	238	;# 
  3732   0000EF                     DMAnDSZH        equ	239	;# 
  3733   0000F0                     DMAnDSA         equ	240	;# 
  3734   0000F0                     DMAnDSAL        equ	240	;# 
  3735   0000F1                     DMAnDSAH        equ	241	;# 
  3736   0000F2                     DMAnSCNT        equ	242	;# 
  3737   0000F2                     DMAnSCNTL       equ	242	;# 
  3738   0000F3                     DMAnSCNTH       equ	243	;# 
  3739   0000F4                     DMAnSPTR        equ	244	;# 
  3740   0000F4                     DMAnSPTRL       equ	244	;# 
  3741   0000F5                     DMAnSPTRH       equ	245	;# 
  3742   0000F6                     DMAnSPTRU       equ	246	;# 
  3743   0000F7                     DMAnSSZ         equ	247	;# 
  3744   0000F7                     DMAnSSZL        equ	247	;# 
  3745   0000F8                     DMAnSSZH        equ	248	;# 
  3746   0000F9                     DMAnSSA         equ	249	;# 
  3747   0000F9                     DMAnSSAL        equ	249	;# 
  3748   0000FA                     DMAnSSAH        equ	250	;# 
  3749   0000FB                     DMAnSSAU        equ	251	;# 
  3750   0000FC                     DMAnCON0        equ	252	;# 
  3751   0000FD                     DMAnCON1        equ	253	;# 
  3752   0000FE                     DMAnAIRQ        equ	254	;# 
  3753   0000FF                     DMAnSIRQ        equ	255	;# 
  3754   000200                     PPSLOCK         equ	512	;# 
  3755   000201                     RA0PPS          equ	513	;# 
  3756   000202                     RA1PPS          equ	514	;# 
  3757   000203                     RA2PPS          equ	515	;# 
  3758   000204                     RA3PPS          equ	516	;# 
  3759   000205                     RA4PPS          equ	517	;# 
  3760   000206                     RA5PPS          equ	518	;# 
  3761   000207                     RA6PPS          equ	519	;# 
  3762   000208                     RA7PPS          equ	520	;# 
  3763   000209                     RB0PPS          equ	521	;# 
  3764   00020A                     RB1PPS          equ	522	;# 
  3765   00020B                     RB2PPS          equ	523	;# 
  3766   00020C                     RB3PPS          equ	524	;# 
  3767   00020D                     RB4PPS          equ	525	;# 
  3768   00020E                     RB5PPS          equ	526	;# 
  3769   00020F                     RB6PPS          equ	527	;# 
  3770   000210                     RB7PPS          equ	528	;# 
  3771   000211                     RC0PPS          equ	529	;# 
  3772   000212                     RC1PPS          equ	530	;# 
  3773   000213                     RC2PPS          equ	531	;# 
  3774   000214                     RC3PPS          equ	532	;# 
  3775   000215                     RC4PPS          equ	533	;# 
  3776   000216                     RC5PPS          equ	534	;# 
  3777   000217                     RC6PPS          equ	535	;# 
  3778   000218                     RC7PPS          equ	536	;# 
  3779   000219                     RD0PPS          equ	537	;# 
  3780   00021A                     RD1PPS          equ	538	;# 
  3781   00021B                     RD2PPS          equ	539	;# 
  3782   00021C                     RD3PPS          equ	540	;# 
  3783   00021D                     RD4PPS          equ	541	;# 
  3784   00021E                     RD5PPS          equ	542	;# 
  3785   00021F                     RD6PPS          equ	543	;# 
  3786   000220                     RD7PPS          equ	544	;# 
  3787   000221                     RE0PPS          equ	545	;# 
  3788   000222                     RE1PPS          equ	546	;# 
  3789   000223                     RE2PPS          equ	547	;# 
  3790   000229                     RF0PPS          equ	553	;# 
  3791   00022A                     RF1PPS          equ	554	;# 
  3792   00022B                     RF2PPS          equ	555	;# 
  3793   00022C                     RF3PPS          equ	556	;# 
  3794   00022D                     RF4PPS          equ	557	;# 
  3795   00022E                     RF5PPS          equ	558	;# 
  3796   00022F                     RF6PPS          equ	559	;# 
  3797   000230                     RF7PPS          equ	560	;# 
  3798   00023E                     INT0PPS         equ	574	;# 
  3799   00023F                     INT1PPS         equ	575	;# 
  3800   000240                     INT2PPS         equ	576	;# 
  3801   000241                     T0CKIPPS        equ	577	;# 
  3802   000242                     T1CKIPPS        equ	578	;# 
  3803   000243                     T1GPPS          equ	579	;# 
  3804   000244                     T3CKIPPS        equ	580	;# 
  3805   000245                     T3GPPS          equ	581	;# 
  3806   000246                     T5CKIPPS        equ	582	;# 
  3807   000247                     T5GPPS          equ	583	;# 
  3808   000248                     T2INPPS         equ	584	;# 
  3809   000249                     T4INPPS         equ	585	;# 
  3810   00024A                     T6INPPS         equ	586	;# 
  3811   00024F                     CCP1PPS         equ	591	;# 
  3812   000250                     CCP2PPS         equ	592	;# 
  3813   000251                     CCP3PPS         equ	593	;# 
  3814   000253                     PWM1ERSPPS      equ	595	;# 
  3815   000254                     PWM2ERSPPS      equ	596	;# 
  3816   000255                     PWM3ERSPPS      equ	597	;# 
  3817   000257                     PWMIN0PPS       equ	599	;# 
  3818   000258                     PWMIN1PPS       equ	600	;# 
  3819   000259                     SMT1WINPPS      equ	601	;# 
  3820   00025A                     SMT1SIGPPS      equ	602	;# 
  3821   00025B                     CWG1PPS         equ	603	;# 
  3822   00025B                     CWG1INPPS       equ	603	;# 
  3823   00025C                     CWG2PPS         equ	604	;# 
  3824   00025C                     CWG2INPPS       equ	604	;# 
  3825   00025D                     CWG3PPS         equ	605	;# 
  3826   00025D                     CWG3INPPS       equ	605	;# 
  3827   00025E                     MD1CARLPPS      equ	606	;# 
  3828   00025E                     MDCARLPPS       equ	606	;# 
  3829   00025F                     MD1CARHPPS      equ	607	;# 
  3830   00025F                     MDCARHPPS       equ	607	;# 
  3831   000260                     MD1SRCPPS       equ	608	;# 
  3832   000260                     MDSRCPPS        equ	608	;# 
  3833   000261                     CLCIN0PPS       equ	609	;# 
  3834   000262                     CLCIN1PPS       equ	610	;# 
  3835   000263                     CLCIN2PPS       equ	611	;# 
  3836   000264                     CLCIN3PPS       equ	612	;# 
  3837   000265                     CLCIN4PPS       equ	613	;# 
  3838   000266                     CLCIN5PPS       equ	614	;# 
  3839   000267                     CLCIN6PPS       equ	615	;# 
  3840   000268                     CLCIN7PPS       equ	616	;# 
  3841   000269                     ADACTPPS        equ	617	;# 
  3842   00026A                     SPI1SCKPPS      equ	618	;# 
  3843   00026B                     SPI1SDIPPS      equ	619	;# 
  3844   00026C                     SPI1SSPPS       equ	620	;# 
  3845   00026D                     SPI2SCKPPS      equ	621	;# 
  3846   00026E                     SPI2SDIPPS      equ	622	;# 
  3847   00026F                     SPI2SSPPS       equ	623	;# 
  3848   000270                     I2C1SDAPPS      equ	624	;# 
  3849   000271                     I2C1SCLPPS      equ	625	;# 
  3850   000272                     U1RXPPS         equ	626	;# 
  3851   000273                     U1CTSPPS        equ	627	;# 
  3852   000274                     U2RXPPS         equ	628	;# 
  3853   000275                     U2CTSPPS        equ	629	;# 
  3854   000276                     U3RXPPS         equ	630	;# 
  3855   000277                     U3CTSPPS        equ	631	;# 
  3856   000278                     U4RXPPS         equ	632	;# 
  3857   000279                     U4CTSPPS        equ	633	;# 
  3858   00027A                     U5RXPPS         equ	634	;# 
  3859   00027B                     U5CTSPPS        equ	635	;# 
  3860   000286                     RC4I2C          equ	646	;# 
  3861   000287                     RC3I2C          equ	647	;# 
  3862   000288                     RB2I2C          equ	648	;# 
  3863   000289                     RB1I2C          equ	649	;# 
  3864   00028B                     I2C1RXB         equ	651	;# 
  3865   00028C                     I2C1TXB         equ	652	;# 
  3866   00028D                     I2C1CNT         equ	653	;# 
  3867   00028E                     I2C1ADB0        equ	654	;# 
  3868   00028F                     I2C1ADB1        equ	655	;# 
  3869   000290                     I2C1ADR0        equ	656	;# 
  3870   000291                     I2C1ADR1        equ	657	;# 
  3871   000292                     I2C1ADR2        equ	658	;# 
  3872   000293                     I2C1ADR3        equ	659	;# 
  3873   000294                     I2C1CON0        equ	660	;# 
  3874   000295                     I2C1CON1        equ	661	;# 
  3875   000296                     I2C1CON2        equ	662	;# 
  3876   000297                     I2C1ERR         equ	663	;# 
  3877   000298                     I2C1STAT0       equ	664	;# 
  3878   000299                     I2C1STAT1       equ	665	;# 
  3879   00029A                     I2C1PIR         equ	666	;# 
  3880   00029B                     I2C1PIE         equ	667	;# 
  3881   00029C                     I2C1CLK         equ	668	;# 
  3882   00029D                     I2C1BTO         equ	669	;# 
  3883   0002A1                     U1RXB           equ	673	;# 
  3884   0002A1                     U1RXBL          equ	673	;# 
  3885   0002A2                     U1RXCHK         equ	674	;# 
  3886   0002A3                     U1TXB           equ	675	;# 
  3887   0002A3                     U1TXBL          equ	675	;# 
  3888   0002A4                     U1TXCHK         equ	676	;# 
  3889   0002A5                     U1P1            equ	677	;# 
  3890   0002A5                     U1P1L           equ	677	;# 
  3891   0002A6                     U1P1H           equ	678	;# 
  3892   0002A7                     U1P2            equ	679	;# 
  3893   0002A7                     U1P2L           equ	679	;# 
  3894   0002A8                     U1P2H           equ	680	;# 
  3895   0002A9                     U1P3            equ	681	;# 
  3896   0002A9                     U1P3L           equ	681	;# 
  3897   0002AA                     U1P3H           equ	682	;# 
  3898   0002AB                     U1CON0          equ	683	;# 
  3899   0002AC                     U1CON1          equ	684	;# 
  3900   0002AD                     U1CON2          equ	685	;# 
  3901   0002AE                     U1BRG           equ	686	;# 
  3902   0002AE                     U1BRGL          equ	686	;# 
  3903   0002AF                     U1BRGH          equ	687	;# 
  3904   0002B0                     U1FIFO          equ	688	;# 
  3905   0002B1                     U1UIR           equ	689	;# 
  3906   0002B2                     U1ERRIR         equ	690	;# 
  3907   0002B3                     U1ERRIE         equ	691	;# 
  3908   0002B4                     U2RXB           equ	692	;# 
  3909   0002B4                     U2RXBL          equ	692	;# 
  3910   0002B6                     U2TXB           equ	694	;# 
  3911   0002B6                     U2TXBL          equ	694	;# 
  3912   0002B8                     U2P1            equ	696	;# 
  3913   0002B8                     U2P1L           equ	696	;# 
  3914   0002BA                     U2P2            equ	698	;# 
  3915   0002BA                     U2P2L           equ	698	;# 
  3916   0002BC                     U2P3            equ	700	;# 
  3917   0002BC                     U2P3L           equ	700	;# 
  3918   0002BE                     U2CON0          equ	702	;# 
  3919   0002BF                     U2CON1          equ	703	;# 
  3920   0002C0                     U2CON2          equ	704	;# 
  3921   0002C1                     U2BRG           equ	705	;# 
  3922   0002C1                     U2BRGL          equ	705	;# 
  3923   0002C2                     U2BRGH          equ	706	;# 
  3924   0002C3                     U2FIFO          equ	707	;# 
  3925   0002C4                     U2UIR           equ	708	;# 
  3926   0002C5                     U2ERRIR         equ	709	;# 
  3927   0002C6                     U2ERRIE         equ	710	;# 
  3928   0002C7                     U3RXB           equ	711	;# 
  3929   0002C7                     U3RXBL          equ	711	;# 
  3930   0002C9                     U3TXB           equ	713	;# 
  3931   0002C9                     U3TXBL          equ	713	;# 
  3932   0002CB                     U3P1            equ	715	;# 
  3933   0002CB                     U3P1L           equ	715	;# 
  3934   0002CD                     U3P2            equ	717	;# 
  3935   0002CD                     U3P2L           equ	717	;# 
  3936   0002CF                     U3P3            equ	719	;# 
  3937   0002CF                     U3P3L           equ	719	;# 
  3938   0002D1                     U3CON0          equ	721	;# 
  3939   0002D2                     U3CON1          equ	722	;# 
  3940   0002D3                     U3CON2          equ	723	;# 
  3941   0002D4                     U3BRG           equ	724	;# 
  3942   0002D4                     U3BRGL          equ	724	;# 
  3943   0002D5                     U3BRGH          equ	725	;# 
  3944   0002D6                     U3FIFO          equ	726	;# 
  3945   0002D7                     U3UIR           equ	727	;# 
  3946   0002D8                     U3ERRIR         equ	728	;# 
  3947   0002D9                     U3ERRIE         equ	729	;# 
  3948   0002DA                     U4RXB           equ	730	;# 
  3949   0002DA                     U4RXBL          equ	730	;# 
  3950   0002DC                     U4TXB           equ	732	;# 
  3951   0002DC                     U4TXBL          equ	732	;# 
  3952   0002DE                     U4P1            equ	734	;# 
  3953   0002DE                     U4P1L           equ	734	;# 
  3954   0002E0                     U4P2            equ	736	;# 
  3955   0002E0                     U4P2L           equ	736	;# 
  3956   0002E2                     U4P3            equ	738	;# 
  3957   0002E2                     U4P3L           equ	738	;# 
  3958   0002E4                     U4CON0          equ	740	;# 
  3959   0002E5                     U4CON1          equ	741	;# 
  3960   0002E6                     U4CON2          equ	742	;# 
  3961   0002E7                     U4BRG           equ	743	;# 
  3962   0002E7                     U4BRGL          equ	743	;# 
  3963   0002E8                     U4BRGH          equ	744	;# 
  3964   0002E9                     U4FIFO          equ	745	;# 
  3965   0002EA                     U4UIR           equ	746	;# 
  3966   0002EB                     U4ERRIR         equ	747	;# 
  3967   0002EC                     U4ERRIE         equ	748	;# 
  3968   0002ED                     U5RXB           equ	749	;# 
  3969   0002ED                     U5RXBL          equ	749	;# 
  3970   0002EF                     U5TXB           equ	751	;# 
  3971   0002EF                     U5TXBL          equ	751	;# 
  3972   0002F1                     U5P1            equ	753	;# 
  3973   0002F1                     U5P1L           equ	753	;# 
  3974   0002F3                     U5P2            equ	755	;# 
  3975   0002F3                     U5P2L           equ	755	;# 
  3976   0002F5                     U5P3            equ	757	;# 
  3977   0002F5                     U5P3L           equ	757	;# 
  3978   0002F7                     U5CON0          equ	759	;# 
  3979   0002F8                     U5CON1          equ	760	;# 
  3980   0002F9                     U5CON2          equ	761	;# 
  3981   0002FA                     U5BRG           equ	762	;# 
  3982   0002FA                     U5BRGL          equ	762	;# 
  3983   0002FB                     U5BRGH          equ	763	;# 
  3984   0002FC                     U5FIFO          equ	764	;# 
  3985   0002FD                     U5UIR           equ	765	;# 
  3986   0002FE                     U5ERRIR         equ	766	;# 
  3987   0002FF                     U5ERRIE         equ	767	;# 
  3988   000300                     SMT1TMR         equ	768	;# 
  3989   000300                     SMT1TMRL        equ	768	;# 
  3990   000301                     SMT1TMRH        equ	769	;# 
  3991   000302                     SMT1TMRU        equ	770	;# 
  3992   000303                     SMT1CPR         equ	771	;# 
  3993   000303                     SMT1CPRL        equ	771	;# 
  3994   000304                     SMT1CPRH        equ	772	;# 
  3995   000305                     SMT1CPRU        equ	773	;# 
  3996   000306                     SMT1CPW         equ	774	;# 
  3997   000306                     SMT1CPWL        equ	774	;# 
  3998   000307                     SMT1CPWH        equ	775	;# 
  3999   000308                     SMT1CPWU        equ	776	;# 
  4000   000309                     SMT1PR          equ	777	;# 
  4001   000309                     SMT1PRL         equ	777	;# 
  4002   00030A                     SMT1PRH         equ	778	;# 
  4003   00030B                     SMT1PRU         equ	779	;# 
  4004   00030C                     SMT1CON0        equ	780	;# 
  4005   00030D                     SMT1CON1        equ	781	;# 
  4006   00030E                     SMT1STAT        equ	782	;# 
  4007   00030F                     SMT1CLK         equ	783	;# 
  4008   000310                     SMT1SIG         equ	784	;# 
  4009   000311                     SMT1WIN         equ	785	;# 
  4010   000318                     TMR0L           equ	792	;# 
  4011   000318                     TMR0            equ	792	;# 
  4012   000319                     TMR0H           equ	793	;# 
  4013   000319                     PR0             equ	793	;# 
  4014   00031A                     T0CON0          equ	794	;# 
  4015   00031B                     T0CON1          equ	795	;# 
  4016   00031C                     TMR1            equ	796	;# 
  4017   00031C                     TMR1L           equ	796	;# 
  4018   00031D                     TMR1H           equ	797	;# 
  4019   00031E                     T1CON           equ	798	;# 
  4020   00031E                     TMR1CON         equ	798	;# 
  4021   00031F                     T1GCON          equ	799	;# 
  4022   00031F                     TMR1GCON        equ	799	;# 
  4023   000320                     T1GATE          equ	800	;# 
  4024   000320                     TMR1GATE        equ	800	;# 
  4025   000321                     T1CLK           equ	801	;# 
  4026   000321                     TMR1CLK         equ	801	;# 
  4027   000321                     PR1             equ	801	;# 
  4028   000322                     T2TMR           equ	802	;# 
  4029   000322                     TMR2            equ	802	;# 
  4030   000323                     T2PR            equ	803	;# 
  4031   000323                     PR2             equ	803	;# 
  4032   000324                     T2CON           equ	804	;# 
  4033   000325                     T2HLT           equ	805	;# 
  4034   000326                     T2CLKCON        equ	806	;# 
  4035   000326                     T2CLK           equ	806	;# 
  4036   000327                     T2RST           equ	807	;# 
  4037   000328                     TMR3            equ	808	;# 
  4038   000328                     TMR3L           equ	808	;# 
  4039   000329                     TMR3H           equ	809	;# 
  4040   00032A                     T3CON           equ	810	;# 
  4041   00032A                     TMR3CON         equ	810	;# 
  4042   00032B                     T3GCON          equ	811	;# 
  4043   00032B                     TMR3GCON        equ	811	;# 
  4044   00032C                     T3GATE          equ	812	;# 
  4045   00032C                     TMR3GATE        equ	812	;# 
  4046   00032D                     T3CLK           equ	813	;# 
  4047   00032D                     TMR3CLK         equ	813	;# 
  4048   00032D                     PR3             equ	813	;# 
  4049   00032E                     T4TMR           equ	814	;# 
  4050   00032E                     TMR4            equ	814	;# 
  4051   00032F                     T4PR            equ	815	;# 
  4052   00032F                     PR4             equ	815	;# 
  4053   000330                     T4CON           equ	816	;# 
  4054   000331                     T4HLT           equ	817	;# 
  4055   000332                     T4CLKCON        equ	818	;# 
  4056   000332                     T4CLK           equ	818	;# 
  4057   000333                     T4RST           equ	819	;# 
  4058   000334                     TMR5            equ	820	;# 
  4059   000334                     TMR5L           equ	820	;# 
  4060   000335                     TMR5H           equ	821	;# 
  4061   000336                     T5CON           equ	822	;# 
  4062   000336                     TMR5CON         equ	822	;# 
  4063   000337                     T5GCON          equ	823	;# 
  4064   000337                     TMR5GCON        equ	823	;# 
  4065   000338                     T5GATE          equ	824	;# 
  4066   000338                     TMR5GATE        equ	824	;# 
  4067   000339                     T5CLK           equ	825	;# 
  4068   000339                     TMR5CLK         equ	825	;# 
  4069   000339                     PR5             equ	825	;# 
  4070   00033A                     T6TMR           equ	826	;# 
  4071   00033A                     TMR6            equ	826	;# 
  4072   00033B                     T6PR            equ	827	;# 
  4073   00033B                     PR6             equ	827	;# 
  4074   00033C                     T6CON           equ	828	;# 
  4075   00033D                     T6HLT           equ	829	;# 
  4076   00033E                     T6CLKCON        equ	830	;# 
  4077   00033E                     T6CLK           equ	830	;# 
  4078   00033F                     T6RST           equ	831	;# 
  4079   000340                     CCPR1           equ	832	;# 
  4080   000340                     CCPR1L          equ	832	;# 
  4081   000341                     CCPR1H          equ	833	;# 
  4082   000342                     CCP1CON         equ	834	;# 
  4083   000343                     CCP1CAP         equ	835	;# 
  4084   000344                     CCPR2           equ	836	;# 
  4085   000344                     CCPR2L          equ	836	;# 
  4086   000345                     CCPR2H          equ	837	;# 
  4087   000346                     CCP2CON         equ	838	;# 
  4088   000347                     CCP2CAP         equ	839	;# 
  4089   000348                     CCPR3           equ	840	;# 
  4090   000348                     CCPR3L          equ	840	;# 
  4091   000349                     CCPR3H          equ	841	;# 
  4092   00034A                     CCP3CON         equ	842	;# 
  4093   00034B                     CCP3CAP         equ	843	;# 
  4094   00034C                     CCPTMRS0        equ	844	;# 
  4095   00034F                     CRCDATA         equ	847	;# 
  4096   00034F                     CRCDATL         equ	847	;# 
  4097   000350                     CRCDATH         equ	848	;# 
  4098   000351                     CRCACC          equ	849	;# 
  4099   000351                     CRCACCL         equ	849	;# 
  4100   000352                     CRCACCH         equ	850	;# 
  4101   000353                     CRCSHFT         equ	851	;# 
  4102   000353                     CRCSHIFTL       equ	851	;# 
  4103   000354                     CRCSHIFTH       equ	852	;# 
  4104   000355                     CRCXOR          equ	853	;# 
  4105   000355                     CRCXORL         equ	853	;# 
  4106   000356                     CRCXORH         equ	854	;# 
  4107   000357                     CRCCON0         equ	855	;# 
  4108   000358                     CRCCON1         equ	856	;# 
  4109   00035A                     SCANLADR        equ	858	;# 
  4110   00035A                     SCANLADRL       equ	858	;# 
  4111   00035B                     SCANLADRH       equ	859	;# 
  4112   00035C                     SCANLADRU       equ	860	;# 
  4113   00035D                     SCANHADR        equ	861	;# 
  4114   00035D                     SCANHADRL       equ	861	;# 
  4115   00035E                     SCANHADRH       equ	862	;# 
  4116   00035F                     SCANHADRU       equ	863	;# 
  4117   000360                     SCANCON0        equ	864	;# 
  4118   000361                     SCANTRIG        equ	865	;# 
  4119   000362                     IPR0            equ	866	;# 
  4120   000363                     IPR1            equ	867	;# 
  4121   000364                     IPR2            equ	868	;# 
  4122   000365                     IPR3            equ	869	;# 
  4123   000366                     IPR4            equ	870	;# 
  4124   000367                     IPR5            equ	871	;# 
  4125   000368                     IPR6            equ	872	;# 
  4126   000369                     IPR7            equ	873	;# 
  4127   00036A                     IPR8            equ	874	;# 
  4128   00036B                     IPR9            equ	875	;# 
  4129   00036C                     IPR10           equ	876	;# 
  4130   00036D                     IPR11           equ	877	;# 
  4131   00036E                     IPR12           equ	878	;# 
  4132   00036F                     IPR13           equ	879	;# 
  4133   000370                     IPR14           equ	880	;# 
  4134   000371                     IPR15           equ	881	;# 
  4135   000373                     STATUS_CSHAD    equ	883	;# 
  4136   000374                     WREG_CSHAD      equ	884	;# 
  4137   000375                     BSR_CSHAD       equ	885	;# 
  4138   000376                     SHADCON         equ	886	;# 
  4139   000377                     STATUS_SHAD     equ	887	;# 
  4140   000378                     WREG_SHAD       equ	888	;# 
  4141   000379                     BSR_SHAD        equ	889	;# 
  4142   00037A                     PCLATH_SHAD     equ	890	;# 
  4143   00037B                     PCLATU_SHAD     equ	891	;# 
  4144   00037C                     FSR0SH          equ	892	;# 
  4145   00037C                     FSR0L_SHAD      equ	892	;# 
  4146   00037D                     FSR0H_SHAD      equ	893	;# 
  4147   00037E                     FSR1SH          equ	894	;# 
  4148   00037E                     FSR1L_SHAD      equ	894	;# 
  4149   00037F                     FSR1H_SHAD      equ	895	;# 
  4150   000380                     FSR2SH          equ	896	;# 
  4151   000380                     FSR2L_SHAD      equ	896	;# 
  4152   000381                     FSR2H_SHAD      equ	897	;# 
  4153   000382                     PRODSH          equ	898	;# 
  4154   000382                     PRODL_SHAD      equ	898	;# 
  4155   000383                     PRODH_SHAD      equ	899	;# 
  4156   0003BC                     CWG1CLK         equ	956	;# 
  4157   0003BC                     CWG1CLKCON      equ	956	;# 
  4158   0003BD                     CWG1ISM         equ	957	;# 
  4159   0003BD                     CWG1DAT         equ	957	;# 
  4160   0003BE                     CWG1DBR         equ	958	;# 
  4161   0003BF                     CWG1DBF         equ	959	;# 
  4162   0003C0                     CWG1CON0        equ	960	;# 
  4163   0003C1                     CWG1CON1        equ	961	;# 
  4164   0003C2                     CWG1AS0         equ	962	;# 
  4165   0003C3                     CWG1AS1         equ	963	;# 
  4166   0003C4                     CWG1STR         equ	964	;# 
  4167   0003C5                     CWG2CLK         equ	965	;# 
  4168   0003C5                     CWG2CLKCON      equ	965	;# 
  4169   0003C6                     CWG2ISM         equ	966	;# 
  4170   0003C6                     CWG2DAT         equ	966	;# 
  4171   0003C7                     CWG2DBR         equ	967	;# 
  4172   0003C8                     CWG2DBF         equ	968	;# 
  4173   0003C9                     CWG2CON0        equ	969	;# 
  4174   0003CA                     CWG2CON1        equ	970	;# 
  4175   0003CB                     CWG2AS0         equ	971	;# 
  4176   0003CC                     CWG2AS1         equ	972	;# 
  4177   0003CD                     CWG2STR         equ	973	;# 
  4178   0003CE                     CWG3CLK         equ	974	;# 
  4179   0003CE                     CWG3CLKCON      equ	974	;# 
  4180   0003CF                     CWG3ISM         equ	975	;# 
  4181   0003CF                     CWG3DAT         equ	975	;# 
  4182   0003D0                     CWG3DBR         equ	976	;# 
  4183   0003D1                     CWG3DBF         equ	977	;# 
  4184   0003D2                     CWG3CON0        equ	978	;# 
  4185   0003D3                     CWG3CON1        equ	979	;# 
  4186   0003D4                     CWG3AS0         equ	980	;# 
  4187   0003D5                     CWG3AS1         equ	981	;# 
  4188   0003D6                     CWG3STR         equ	982	;# 
  4189   0003D7                     FVRCON          equ	983	;# 
  4190   0003D8                     ADCPCON         equ	984	;# 
  4191   0003D8                     ADCP            equ	984	;# 
  4192   0003D9                     ADLTH           equ	985	;# 
  4193   0003D9                     ADLTHL          equ	985	;# 
  4194   0003DA                     ADLTHH          equ	986	;# 
  4195   0003DB                     ADUTH           equ	987	;# 
  4196   0003DB                     ADUTHL          equ	987	;# 
  4197   0003DC                     ADUTHH          equ	988	;# 
  4198   0003DD                     ADERR           equ	989	;# 
  4199   0003DD                     ADERRL          equ	989	;# 
  4200   0003DE                     ADERRH          equ	990	;# 
  4201   0003DF                     ADSTPT          equ	991	;# 
  4202   0003DF                     ADSTPTL         equ	991	;# 
  4203   0003E0                     ADSTPTH         equ	992	;# 
  4204   0003E1                     ADFLTR          equ	993	;# 
  4205   0003E1                     ADFLTRL         equ	993	;# 
  4206   0003E2                     ADFLTRH         equ	994	;# 
  4207   0003E3                     ADACC           equ	995	;# 
  4208   0003E3                     ADACCL          equ	995	;# 
  4209   0003E4                     ADACCH          equ	996	;# 
  4210   0003E5                     ADACCU          equ	997	;# 
  4211   0003E6                     ADCNT           equ	998	;# 
  4212   0003E7                     ADRPT           equ	999	;# 
  4213   0003E8                     ADPREV          equ	1000	;# 
  4214   0003E8                     ADPREVL         equ	1000	;# 
  4215   0003E9                     ADPREVH         equ	1001	;# 
  4216   0003EA                     ADRES           equ	1002	;# 
  4217   0003EA                     ADRESL          equ	1002	;# 
  4218   0003EB                     ADRESH          equ	1003	;# 
  4219   0003EC                     ADPCH           equ	1004	;# 
  4220   0003EE                     ADACQ           equ	1006	;# 
  4221   0003EE                     ADACQL          equ	1006	;# 
  4222   0003EF                     ADACQH          equ	1007	;# 
  4223   0003F0                     ADCAP           equ	1008	;# 
  4224   0003F1                     ADPRE           equ	1009	;# 
  4225   0003F1                     ADPREL          equ	1009	;# 
  4226   0003F2                     ADPREH          equ	1010	;# 
  4227   0003F3                     ADCON0          equ	1011	;# 
  4228   0003F4                     ADCON1          equ	1012	;# 
  4229   0003F5                     ADCON2          equ	1013	;# 
  4230   0003F6                     ADCON3          equ	1014	;# 
  4231   0003F7                     ADSTAT          equ	1015	;# 
  4232   0003F8                     ADREF           equ	1016	;# 
  4233   0003F9                     ADACT           equ	1017	;# 
  4234   0003FA                     ADCLK           equ	1018	;# 
  4235   000400                     ANSELA          equ	1024	;# 
  4236   000401                     WPUA            equ	1025	;# 
  4237   000402                     ODCONA          equ	1026	;# 
  4238   000403                     SLRCONA         equ	1027	;# 
  4239   000404                     INLVLA          equ	1028	;# 
  4240   000405                     IOCAP           equ	1029	;# 
  4241   000406                     IOCAN           equ	1030	;# 
  4242   000407                     IOCAF           equ	1031	;# 
  4243   000408                     ANSELB          equ	1032	;# 
  4244   000409                     WPUB            equ	1033	;# 
  4245   00040A                     ODCONB          equ	1034	;# 
  4246   00040B                     SLRCONB         equ	1035	;# 
  4247   00040C                     INLVLB          equ	1036	;# 
  4248   00040D                     IOCBP           equ	1037	;# 
  4249   00040E                     IOCBN           equ	1038	;# 
  4250   00040F                     IOCBF           equ	1039	;# 
  4251   000410                     ANSELC          equ	1040	;# 
  4252   000411                     WPUC            equ	1041	;# 
  4253   000412                     ODCONC          equ	1042	;# 
  4254   000413                     SLRCONC         equ	1043	;# 
  4255   000414                     INLVLC          equ	1044	;# 
  4256   000415                     IOCCP           equ	1045	;# 
  4257   000416                     IOCCN           equ	1046	;# 
  4258   000417                     IOCCF           equ	1047	;# 
  4259   000418                     ANSELD          equ	1048	;# 
  4260   000419                     WPUD            equ	1049	;# 
  4261   00041A                     ODCOND          equ	1050	;# 
  4262   00041B                     SLRCOND         equ	1051	;# 
  4263   00041C                     INLVLD          equ	1052	;# 
  4264   000420                     ANSELE          equ	1056	;# 
  4265   000421                     WPUE            equ	1057	;# 
  4266   000422                     ODCONE          equ	1058	;# 
  4267   000423                     SLRCONE         equ	1059	;# 
  4268   000424                     INLVLE          equ	1060	;# 
  4269   000425                     IOCEP           equ	1061	;# 
  4270   000426                     IOCEN           equ	1062	;# 
  4271   000427                     IOCEF           equ	1063	;# 
  4272   000428                     ANSELF          equ	1064	;# 
  4273   000429                     WPUF            equ	1065	;# 
  4274   00042A                     ODCONF          equ	1066	;# 
  4275   00042B                     SLRCONF         equ	1067	;# 
  4276   00042C                     INLVLF          equ	1068	;# 
  4277   000440                     NCO1ACC         equ	1088	;# 
  4278   000440                     NCO1ACCL        equ	1088	;# 
  4279   000441                     NCO1ACCH        equ	1089	;# 
  4280   000442                     NCO1ACCU        equ	1090	;# 
  4281   000443                     NCO1INC         equ	1091	;# 
  4282   000443                     NCO1INCL        equ	1091	;# 
  4283   000444                     NCO1INCH        equ	1092	;# 
  4284   000445                     NCO1INCU        equ	1093	;# 
  4285   000446                     NCO1CON         equ	1094	;# 
  4286   000447                     NCO1CLK         equ	1095	;# 
  4287   000448                     NCO2ACC         equ	1096	;# 
  4288   000448                     NCO2ACCL        equ	1096	;# 
  4289   000449                     NCO2ACCH        equ	1097	;# 
  4290   00044A                     NCO2ACCU        equ	1098	;# 
  4291   00044B                     NCO2INC         equ	1099	;# 
  4292   00044B                     NCO2INCL        equ	1099	;# 
  4293   00044C                     NCO2INCH        equ	1100	;# 
  4294   00044D                     NCO2INCU        equ	1101	;# 
  4295   00044E                     NCO2CON         equ	1102	;# 
  4296   00044F                     NCO2CLK         equ	1103	;# 
  4297   000450                     NCO3ACC         equ	1104	;# 
  4298   000450                     NCO3ACCL        equ	1104	;# 
  4299   000451                     NCO3ACCH        equ	1105	;# 
  4300   000452                     NCO3ACCU        equ	1106	;# 
  4301   000453                     NCO3INC         equ	1107	;# 
  4302   000453                     NCO3INCL        equ	1107	;# 
  4303   000454                     NCO3INCH        equ	1108	;# 
  4304   000455                     NCO3INCU        equ	1109	;# 
  4305   000456                     NCO3CON         equ	1110	;# 
  4306   000457                     NCO3CLK         equ	1111	;# 
  4307   000459                     IVTLOCK         equ	1113	;# 
  4308   00045A                     IVTAD           equ	1114	;# 
  4309   00045A                     IVTADL          equ	1114	;# 
  4310   00045B                     IVTADH          equ	1115	;# 
  4311   00045C                     IVTADU          equ	1116	;# 
  4312   00045D                     IVTBASE         equ	1117	;# 
  4313   00045D                     IVTBASEL        equ	1117	;# 
  4314   00045E                     IVTBASEH        equ	1118	;# 
  4315   00045F                     IVTBASEU        equ	1119	;# 
  4316   000460                     PWM1ERS         equ	1120	;# 
  4317   000461                     PWM1CLK         equ	1121	;# 
  4318   000462                     PWM1LDS         equ	1122	;# 
  4319   000463                     PWM1PR          equ	1123	;# 
  4320   000463                     PWM1PRL         equ	1123	;# 
  4321   000464                     PWM1PRH         equ	1124	;# 
  4322   000465                     PWM1CPRE        equ	1125	;# 
  4323   000466                     PWM1PIPOS       equ	1126	;# 
  4324   000467                     PWM1GIR         equ	1127	;# 
  4325   000468                     PWM1GIE         equ	1128	;# 
  4326   000469                     PWM1CON         equ	1129	;# 
  4327   00046A                     PWM1S1CFG       equ	1130	;# 
  4328   00046B                     PWM1S1P1        equ	1131	;# 
  4329   00046B                     PWM1S1P1L       equ	1131	;# 
  4330   00046C                     PWM1S1P1H       equ	1132	;# 
  4331   00046D                     PWM1S1P2        equ	1133	;# 
  4332   00046D                     PWM1S1P2L       equ	1133	;# 
  4333   00046E                     PWM1S1P2H       equ	1134	;# 
  4334   00046F                     PWM2ERS         equ	1135	;# 
  4335   000470                     PWM2CLK         equ	1136	;# 
  4336   000471                     PWM2LDS         equ	1137	;# 
  4337   000472                     PWM2PR          equ	1138	;# 
  4338   000472                     PWM2PRL         equ	1138	;# 
  4339   000473                     PWM2PRH         equ	1139	;# 
  4340   000474                     PWM2CPRE        equ	1140	;# 
  4341   000475                     PWM2PIPOS       equ	1141	;# 
  4342   000476                     PWM2GIR         equ	1142	;# 
  4343   000477                     PWM2GIE         equ	1143	;# 
  4344   000478                     PWM2CON         equ	1144	;# 
  4345   000479                     PWM2S1CFG       equ	1145	;# 
  4346   00047A                     PWM2S1P1        equ	1146	;# 
  4347   00047A                     PWM2S1P1L       equ	1146	;# 
  4348   00047B                     PWM2S1P1H       equ	1147	;# 
  4349   00047C                     PWM2S1P2        equ	1148	;# 
  4350   00047C                     PWM2S1P2L       equ	1148	;# 
  4351   00047D                     PWM2S1P2H       equ	1149	;# 
  4352   00047E                     PWM3ERS         equ	1150	;# 
  4353   00047F                     PWM3CLK         equ	1151	;# 
  4354   000480                     PWM3LDS         equ	1152	;# 
  4355   000481                     PWM3PR          equ	1153	;# 
  4356   000481                     PWM3PRL         equ	1153	;# 
  4357   000482                     PWM3PRH         equ	1154	;# 
  4358   000483                     PWM3CPRE        equ	1155	;# 
  4359   000484                     PWM3PIPOS       equ	1156	;# 
  4360   000485                     PWM3GIR         equ	1157	;# 
  4361   000486                     PWM3GIE         equ	1158	;# 
  4362   000487                     PWM3CON         equ	1159	;# 
  4363   000488                     PWM3S1CFG       equ	1160	;# 
  4364   000489                     PWM3S1P1        equ	1161	;# 
  4365   000489                     PWM3S1P1L       equ	1161	;# 
  4366   00048A                     PWM3S1P1H       equ	1162	;# 
  4367   00048B                     PWM3S1P2        equ	1163	;# 
  4368   00048B                     PWM3S1P2L       equ	1163	;# 
  4369   00048C                     PWM3S1P2H       equ	1164	;# 
  4370   00049C                     PWMLOAD         equ	1180	;# 
  4371   00049D                     PWMEN           equ	1181	;# 
  4372   00049E                     PIE0            equ	1182	;# 
  4373   00049F                     PIE1            equ	1183	;# 
  4374   0004A0                     PIE2            equ	1184	;# 
  4375   0004A1                     PIE3            equ	1185	;# 
  4376   0004A2                     PIE4            equ	1186	;# 
  4377   0004A3                     PIE5            equ	1187	;# 
  4378   0004A4                     PIE6            equ	1188	;# 
  4379   0004A5                     PIE7            equ	1189	;# 
  4380   0004A6                     PIE8            equ	1190	;# 
  4381   0004A7                     PIE9            equ	1191	;# 
  4382   0004A8                     PIE10           equ	1192	;# 
  4383   0004A9                     PIE11           equ	1193	;# 
  4384   0004AA                     PIE12           equ	1194	;# 
  4385   0004AB                     PIE13           equ	1195	;# 
  4386   0004AC                     PIE14           equ	1196	;# 
  4387   0004AD                     PIE15           equ	1197	;# 
  4388   0004AE                     PIR0            equ	1198	;# 
  4389   0004AF                     PIR1            equ	1199	;# 
  4390   0004B0                     PIR2            equ	1200	;# 
  4391   0004B1                     PIR3            equ	1201	;# 
  4392   0004B2                     PIR4            equ	1202	;# 
  4393   0004B3                     PIR5            equ	1203	;# 
  4394   0004B4                     PIR6            equ	1204	;# 
  4395   0004B5                     PIR7            equ	1205	;# 
  4396   0004B6                     PIR8            equ	1206	;# 
  4397   0004B7                     PIR9            equ	1207	;# 
  4398   0004B8                     PIR10           equ	1208	;# 
  4399   0004B9                     PIR11           equ	1209	;# 
  4400   0004BA                     PIR12           equ	1210	;# 
  4401   0004BB                     PIR13           equ	1211	;# 
  4402   0004BC                     PIR14           equ	1212	;# 
  4403   0004BD                     PIR15           equ	1213	;# 
  4404   0004BE                     LATA            equ	1214	;# 
  4405   0004BF                     LATB            equ	1215	;# 
  4406   0004C0                     LATC            equ	1216	;# 
  4407   0004C1                     LATD            equ	1217	;# 
  4408   0004C2                     LATE            equ	1218	;# 
  4409   0004C3                     LATF            equ	1219	;# 
  4410   0004C6                     TRISA           equ	1222	;# 
  4411   0004C7                     TRISB           equ	1223	;# 
  4412   0004C8                     TRISC           equ	1224	;# 
  4413   0004C9                     TRISD           equ	1225	;# 
  4414   0004CA                     TRISE           equ	1226	;# 
  4415   0004CB                     TRISF           equ	1227	;# 
  4416   0004CE                     PORTA           equ	1230	;# 
  4417   0004CF                     PORTB           equ	1231	;# 
  4418   0004D0                     PORTC           equ	1232	;# 
  4419   0004D1                     PORTD           equ	1233	;# 
  4420   0004D2                     PORTE           equ	1234	;# 
  4421   0004D3                     PORTF           equ	1235	;# 
  4422   0004D6                     INTCON0         equ	1238	;# 
  4423   0004D7                     INTCON1         equ	1239	;# 
  4424   0004D8                     STATUS          equ	1240	;# 
  4425   0004D9                     FSR2            equ	1241	;# 
  4426   0004D9                     FSR2L           equ	1241	;# 
  4427   0004DA                     FSR2H           equ	1242	;# 
  4428   0004DB                     PLUSW2          equ	1243	;# 
  4429   0004DC                     PREINC2         equ	1244	;# 
  4430   0004DD                     POSTDEC2        equ	1245	;# 
  4431   0004DE                     POSTINC2        equ	1246	;# 
  4432   0004DF                     INDF2           equ	1247	;# 
  4433   0004E0                     BSR             equ	1248	;# 
  4434   0004E1                     FSR1            equ	1249	;# 
  4435   0004E1                     FSR1L           equ	1249	;# 
  4436   0004E2                     FSR1H           equ	1250	;# 
  4437   0004E3                     PLUSW1          equ	1251	;# 
  4438   0004E4                     PREINC1         equ	1252	;# 
  4439   0004E5                     POSTDEC1        equ	1253	;# 
  4440   0004E6                     POSTINC1        equ	1254	;# 
  4441   0004E7                     INDF1           equ	1255	;# 
  4442   0004E8                     WREG            equ	1256	;# 
  4443   0004E9                     FSR0            equ	1257	;# 
  4444   0004E9                     FSR0L           equ	1257	;# 
  4445   0004EA                     FSR0H           equ	1258	;# 
  4446   0004EB                     PLUSW0          equ	1259	;# 
  4447   0004EC                     PREINC0         equ	1260	;# 
  4448   0004ED                     POSTDEC0        equ	1261	;# 
  4449   0004EE                     POSTINC0        equ	1262	;# 
  4450   0004EF                     INDF0           equ	1263	;# 
  4451   0004F0                     PCON0           equ	1264	;# 
  4452   0004F1                     PCON1           equ	1265	;# 
  4453   0004F2                     CPUDOZE         equ	1266	;# 
  4454   0004F3                     PROD            equ	1267	;# 
  4455   0004F3                     PRODL           equ	1267	;# 
  4456   0004F4                     PRODH           equ	1268	;# 
  4457   0004F5                     TABLAT          equ	1269	;# 
  4458   0004F6                     TBLPTR          equ	1270	;# 
  4459   0004F6                     TBLPTRL         equ	1270	;# 
  4460   0004F7                     TBLPTRH         equ	1271	;# 
  4461   0004F8                     TBLPTRU         equ	1272	;# 
  4462   0004F9                     PCLAT           equ	1273	;# 
  4463   0004F9                     PCL             equ	1273	;# 
  4464   0004FA                     PCLATH          equ	1274	;# 
  4465   0004FB                     PCLATU          equ	1275	;# 
  4466   0004FC                     STKPTR          equ	1276	;# 
  4467   0004FD                     TOS             equ	1277	;# 
  4468   0004FD                     TOSL            equ	1277	;# 
  4469   0004FE                     TOSH            equ	1278	;# 
  4470   0004FF                     TOSU            equ	1279	;# 
  4471   000039                     CLKRCON         equ	57	;# 
  4472   00003A                     CLKRCLK         equ	58	;# 
  4473   000040                     NVMCON0         equ	64	;# 
  4474   000041                     NVMCON1         equ	65	;# 
  4475   000042                     NVMLOCK         equ	66	;# 
  4476   000043                     NVMADR          equ	67	;# 
  4477   000043                     NVMADRL         equ	67	;# 
  4478   000044                     NVMADRH         equ	68	;# 
  4479   000045                     NVMADRU         equ	69	;# 
  4480   000046                     NVMDAT          equ	70	;# 
  4481   000046                     NVMDATL         equ	70	;# 
  4482   000047                     NVMDATH         equ	71	;# 
  4483   000048                     VREGCON         equ	72	;# 
  4484   000049                     BORCON          equ	73	;# 
  4485   00004A                     HLVDCON0        equ	74	;# 
  4486   00004B                     HLVDCON1        equ	75	;# 
  4487   00004C                     ZCDCON          equ	76	;# 
  4488   000060                     PMD0            equ	96	;# 
  4489   000061                     PMD1            equ	97	;# 
  4490   000063                     PMD3            equ	99	;# 
  4491   000064                     PMD4            equ	100	;# 
  4492   000065                     PMD5            equ	101	;# 
  4493   000066                     PMD6            equ	102	;# 
  4494   000067                     PMD7            equ	103	;# 
  4495   000068                     PMD8            equ	104	;# 
  4496   00006A                     MD1CON0         equ	106	;# 
  4497   00006B                     MD1CON1         equ	107	;# 
  4498   00006C                     MD1SRC          equ	108	;# 
  4499   00006D                     MD1CARL         equ	109	;# 
  4500   00006E                     MD1CARH         equ	110	;# 
  4501   00006F                     CMOUT           equ	111	;# 
  4502   000070                     CM1CON0         equ	112	;# 
  4503   000071                     CM1CON1         equ	113	;# 
  4504   000072                     CM1NCH          equ	114	;# 
  4505   000073                     CM1PCH          equ	115	;# 
  4506   000074                     CM2CON0         equ	116	;# 
  4507   000075                     CM2CON1         equ	117	;# 
  4508   000076                     CM2NCH          equ	118	;# 
  4509   000077                     CM2PCH          equ	119	;# 
  4510   000078                     WDTCON0         equ	120	;# 
  4511   000079                     WDTCON1         equ	121	;# 
  4512   00007A                     WDTPS           equ	122	;# 
  4513   00007A                     WDTPSL          equ	122	;# 
  4514   00007B                     WDTPSH          equ	123	;# 
  4515   00007C                     WDTTMR          equ	124	;# 
  4516   00007D                     DAC1DAT         equ	125	;# 
  4517   00007D                     DAC1DATL        equ	125	;# 
  4518   00007F                     DAC1CON         equ	127	;# 
  4519   000080                     SPI1RXB         equ	128	;# 
  4520   000081                     SPI1TXB         equ	129	;# 
  4521   000082                     SPI1TCNT        equ	130	;# 
  4522   000082                     SPI1TCNTL       equ	130	;# 
  4523   000083                     SPI1TCNTH       equ	131	;# 
  4524   000084                     SPI1CON0        equ	132	;# 
  4525   000085                     SPI1CON1        equ	133	;# 
  4526   000086                     SPI1CON2        equ	134	;# 
  4527   000087                     SPI1STATUS      equ	135	;# 
  4528   000088                     SPI1TWIDTH      equ	136	;# 
  4529   000089                     SPI1BAUD        equ	137	;# 
  4530   00008A                     SPI1INTF        equ	138	;# 
  4531   00008B                     SPI1INTE        equ	139	;# 
  4532   00008C                     SPI1CLK         equ	140	;# 
  4533   00008D                     SPI2RXB         equ	141	;# 
  4534   00008E                     SPI2TXB         equ	142	;# 
  4535   00008F                     SPI2TCNT        equ	143	;# 
  4536   00008F                     SPI2TCNTL       equ	143	;# 
  4537   000090                     SPI2TCNTH       equ	144	;# 
  4538   000091                     SPI2CON0        equ	145	;# 
  4539   000092                     SPI2CON1        equ	146	;# 
  4540   000093                     SPI2CON2        equ	147	;# 
  4541   000094                     SPI2STATUS      equ	148	;# 
  4542   000095                     SPI2TWIDTH      equ	149	;# 
  4543   000096                     SPI2BAUD        equ	150	;# 
  4544   000097                     SPI2INTF        equ	151	;# 
  4545   000098                     SPI2INTE        equ	152	;# 
  4546   000099                     SPI2CLK         equ	153	;# 
  4547   0000AC                     ACTCON          equ	172	;# 
  4548   0000AD                     OSCCON1         equ	173	;# 
  4549   0000AE                     OSCCON2         equ	174	;# 
  4550   0000AF                     OSCCON3         equ	175	;# 
  4551   0000B0                     OSCTUNE         equ	176	;# 
  4552   0000B1                     OSCFRQ          equ	177	;# 
  4553   0000B1                     OSCFREQ         equ	177	;# 
  4554   0000B2                     OSCSTAT         equ	178	;# 
  4555   0000B2                     OSCSTAT1        equ	178	;# 
  4556   0000B3                     OSCEN           equ	179	;# 
  4557   0000B4                     PRLOCK          equ	180	;# 
  4558   0000B5                     SCANPR          equ	181	;# 
  4559   0000B6                     DMA1PR          equ	182	;# 
  4560   0000B7                     DMA2PR          equ	183	;# 
  4561   0000B8                     DMA3PR          equ	184	;# 
  4562   0000B9                     DMA4PR          equ	185	;# 
  4563   0000BA                     DMA5PR          equ	186	;# 
  4564   0000BB                     DMA6PR          equ	187	;# 
  4565   0000BE                     MAINPR          equ	190	;# 
  4566   0000BF                     ISRPR           equ	191	;# 
  4567   0000D4                     CLCDATA         equ	212	;# 
  4568   0000D5                     CLCSELECT       equ	213	;# 
  4569   0000D6                     CLCnCON         equ	214	;# 
  4570   0000D7                     CLCnPOL         equ	215	;# 
  4571   0000D8                     CLCnSEL0        equ	216	;# 
  4572   0000D9                     CLCnSEL1        equ	217	;# 
  4573   0000DA                     CLCnSEL2        equ	218	;# 
  4574   0000DB                     CLCnSEL3        equ	219	;# 
  4575   0000DC                     CLCnGLS0        equ	220	;# 
  4576   0000DD                     CLCnGLS1        equ	221	;# 
  4577   0000DE                     CLCnGLS2        equ	222	;# 
  4578   0000DF                     CLCnGLS3        equ	223	;# 
  4579   0000E8                     DMASELECT       equ	232	;# 
  4580   0000E9                     DMAnBUF         equ	233	;# 
  4581   0000EA                     DMAnDCNT        equ	234	;# 
  4582   0000EA                     DMAnDCNTL       equ	234	;# 
  4583   0000EB                     DMAnDCNTH       equ	235	;# 
  4584   0000EC                     DMAnDPTR        equ	236	;# 
  4585   0000EC                     DMAnDPTRL       equ	236	;# 
  4586   0000ED                     DMAnDPTRH       equ	237	;# 
  4587   0000EE                     DMAnDSZ         equ	238	;# 
  4588   0000EE                     DMAnDSZL        equ	238	;# 
  4589   0000EF                     DMAnDSZH        equ	239	;# 
  4590   0000F0                     DMAnDSA         equ	240	;# 
  4591   0000F0                     DMAnDSAL        equ	240	;# 
  4592   0000F1                     DMAnDSAH        equ	241	;# 
  4593   0000F2                     DMAnSCNT        equ	242	;# 
  4594   0000F2                     DMAnSCNTL       equ	242	;# 
  4595   0000F3                     DMAnSCNTH       equ	243	;# 
  4596   0000F4                     DMAnSPTR        equ	244	;# 
  4597   0000F4                     DMAnSPTRL       equ	244	;# 
  4598   0000F5                     DMAnSPTRH       equ	245	;# 
  4599   0000F6                     DMAnSPTRU       equ	246	;# 
  4600   0000F7                     DMAnSSZ         equ	247	;# 
  4601   0000F7                     DMAnSSZL        equ	247	;# 
  4602   0000F8                     DMAnSSZH        equ	248	;# 
  4603   0000F9                     DMAnSSA         equ	249	;# 
  4604   0000F9                     DMAnSSAL        equ	249	;# 
  4605   0000FA                     DMAnSSAH        equ	250	;# 
  4606   0000FB                     DMAnSSAU        equ	251	;# 
  4607   0000FC                     DMAnCON0        equ	252	;# 
  4608   0000FD                     DMAnCON1        equ	253	;# 
  4609   0000FE                     DMAnAIRQ        equ	254	;# 
  4610   0000FF                     DMAnSIRQ        equ	255	;# 
  4611   000200                     PPSLOCK         equ	512	;# 
  4612   000201                     RA0PPS          equ	513	;# 
  4613   000202                     RA1PPS          equ	514	;# 
  4614   000203                     RA2PPS          equ	515	;# 
  4615   000204                     RA3PPS          equ	516	;# 
  4616   000205                     RA4PPS          equ	517	;# 
  4617   000206                     RA5PPS          equ	518	;# 
  4618   000207                     RA6PPS          equ	519	;# 
  4619   000208                     RA7PPS          equ	520	;# 
  4620   000209                     RB0PPS          equ	521	;# 
  4621   00020A                     RB1PPS          equ	522	;# 
  4622   00020B                     RB2PPS          equ	523	;# 
  4623   00020C                     RB3PPS          equ	524	;# 
  4624   00020D                     RB4PPS          equ	525	;# 
  4625   00020E                     RB5PPS          equ	526	;# 
  4626   00020F                     RB6PPS          equ	527	;# 
  4627   000210                     RB7PPS          equ	528	;# 
  4628   000211                     RC0PPS          equ	529	;# 
  4629   000212                     RC1PPS          equ	530	;# 
  4630   000213                     RC2PPS          equ	531	;# 
  4631   000214                     RC3PPS          equ	532	;# 
  4632   000215                     RC4PPS          equ	533	;# 
  4633   000216                     RC5PPS          equ	534	;# 
  4634   000217                     RC6PPS          equ	535	;# 
  4635   000218                     RC7PPS          equ	536	;# 
  4636   000219                     RD0PPS          equ	537	;# 
  4637   00021A                     RD1PPS          equ	538	;# 
  4638   00021B                     RD2PPS          equ	539	;# 
  4639   00021C                     RD3PPS          equ	540	;# 
  4640   00021D                     RD4PPS          equ	541	;# 
  4641   00021E                     RD5PPS          equ	542	;# 
  4642   00021F                     RD6PPS          equ	543	;# 
  4643   000220                     RD7PPS          equ	544	;# 
  4644   000221                     RE0PPS          equ	545	;# 
  4645   000222                     RE1PPS          equ	546	;# 
  4646   000223                     RE2PPS          equ	547	;# 
  4647   000229                     RF0PPS          equ	553	;# 
  4648   00022A                     RF1PPS          equ	554	;# 
  4649   00022B                     RF2PPS          equ	555	;# 
  4650   00022C                     RF3PPS          equ	556	;# 
  4651   00022D                     RF4PPS          equ	557	;# 
  4652   00022E                     RF5PPS          equ	558	;# 
  4653   00022F                     RF6PPS          equ	559	;# 
  4654   000230                     RF7PPS          equ	560	;# 
  4655   00023E                     INT0PPS         equ	574	;# 
  4656   00023F                     INT1PPS         equ	575	;# 
  4657   000240                     INT2PPS         equ	576	;# 
  4658   000241                     T0CKIPPS        equ	577	;# 
  4659   000242                     T1CKIPPS        equ	578	;# 
  4660   000243                     T1GPPS          equ	579	;# 
  4661   000244                     T3CKIPPS        equ	580	;# 
  4662   000245                     T3GPPS          equ	581	;# 
  4663   000246                     T5CKIPPS        equ	582	;# 
  4664   000247                     T5GPPS          equ	583	;# 
  4665   000248                     T2INPPS         equ	584	;# 
  4666   000249                     T4INPPS         equ	585	;# 
  4667   00024A                     T6INPPS         equ	586	;# 
  4668   00024F                     CCP1PPS         equ	591	;# 
  4669   000250                     CCP2PPS         equ	592	;# 
  4670   000251                     CCP3PPS         equ	593	;# 
  4671   000253                     PWM1ERSPPS      equ	595	;# 
  4672   000254                     PWM2ERSPPS      equ	596	;# 
  4673   000255                     PWM3ERSPPS      equ	597	;# 
  4674   000257                     PWMIN0PPS       equ	599	;# 
  4675   000258                     PWMIN1PPS       equ	600	;# 
  4676   000259                     SMT1WINPPS      equ	601	;# 
  4677   00025A                     SMT1SIGPPS      equ	602	;# 
  4678   00025B                     CWG1PPS         equ	603	;# 
  4679   00025B                     CWG1INPPS       equ	603	;# 
  4680   00025C                     CWG2PPS         equ	604	;# 
  4681   00025C                     CWG2INPPS       equ	604	;# 
  4682   00025D                     CWG3PPS         equ	605	;# 
  4683   00025D                     CWG3INPPS       equ	605	;# 
  4684   00025E                     MD1CARLPPS      equ	606	;# 
  4685   00025E                     MDCARLPPS       equ	606	;# 
  4686   00025F                     MD1CARHPPS      equ	607	;# 
  4687   00025F                     MDCARHPPS       equ	607	;# 
  4688   000260                     MD1SRCPPS       equ	608	;# 
  4689   000260                     MDSRCPPS        equ	608	;# 
  4690   000261                     CLCIN0PPS       equ	609	;# 
  4691   000262                     CLCIN1PPS       equ	610	;# 
  4692   000263                     CLCIN2PPS       equ	611	;# 
  4693   000264                     CLCIN3PPS       equ	612	;# 
  4694   000265                     CLCIN4PPS       equ	613	;# 
  4695   000266                     CLCIN5PPS       equ	614	;# 
  4696   000267                     CLCIN6PPS       equ	615	;# 
  4697   000268                     CLCIN7PPS       equ	616	;# 
  4698   000269                     ADACTPPS        equ	617	;# 
  4699   00026A                     SPI1SCKPPS      equ	618	;# 
  4700   00026B                     SPI1SDIPPS      equ	619	;# 
  4701   00026C                     SPI1SSPPS       equ	620	;# 
  4702   00026D                     SPI2SCKPPS      equ	621	;# 
  4703   00026E                     SPI2SDIPPS      equ	622	;# 
  4704   00026F                     SPI2SSPPS       equ	623	;# 
  4705   000270                     I2C1SDAPPS      equ	624	;# 
  4706   000271                     I2C1SCLPPS      equ	625	;# 
  4707   000272                     U1RXPPS         equ	626	;# 
  4708   000273                     U1CTSPPS        equ	627	;# 
  4709   000274                     U2RXPPS         equ	628	;# 
  4710   000275                     U2CTSPPS        equ	629	;# 
  4711   000276                     U3RXPPS         equ	630	;# 
  4712   000277                     U3CTSPPS        equ	631	;# 
  4713   000278                     U4RXPPS         equ	632	;# 
  4714   000279                     U4CTSPPS        equ	633	;# 
  4715   00027A                     U5RXPPS         equ	634	;# 
  4716   00027B                     U5CTSPPS        equ	635	;# 
  4717   000286                     RC4I2C          equ	646	;# 
  4718   000287                     RC3I2C          equ	647	;# 
  4719   000288                     RB2I2C          equ	648	;# 
  4720   000289                     RB1I2C          equ	649	;# 
  4721   00028B                     I2C1RXB         equ	651	;# 
  4722   00028C                     I2C1TXB         equ	652	;# 
  4723   00028D                     I2C1CNT         equ	653	;# 
  4724   00028E                     I2C1ADB0        equ	654	;# 
  4725   00028F                     I2C1ADB1        equ	655	;# 
  4726   000290                     I2C1ADR0        equ	656	;# 
  4727   000291                     I2C1ADR1        equ	657	;# 
  4728   000292                     I2C1ADR2        equ	658	;# 
  4729   000293                     I2C1ADR3        equ	659	;# 
  4730   000294                     I2C1CON0        equ	660	;# 
  4731   000295                     I2C1CON1        equ	661	;# 
  4732   000296                     I2C1CON2        equ	662	;# 
  4733   000297                     I2C1ERR         equ	663	;# 
  4734   000298                     I2C1STAT0       equ	664	;# 
  4735   000299                     I2C1STAT1       equ	665	;# 
  4736   00029A                     I2C1PIR         equ	666	;# 
  4737   00029B                     I2C1PIE         equ	667	;# 
  4738   00029C                     I2C1CLK         equ	668	;# 
  4739   00029D                     I2C1BTO         equ	669	;# 
  4740   0002A1                     U1RXB           equ	673	;# 
  4741   0002A1                     U1RXBL          equ	673	;# 
  4742   0002A2                     U1RXCHK         equ	674	;# 
  4743   0002A3                     U1TXB           equ	675	;# 
  4744   0002A3                     U1TXBL          equ	675	;# 
  4745   0002A4                     U1TXCHK         equ	676	;# 
  4746   0002A5                     U1P1            equ	677	;# 
  4747   0002A5                     U1P1L           equ	677	;# 
  4748   0002A6                     U1P1H           equ	678	;# 
  4749   0002A7                     U1P2            equ	679	;# 
  4750   0002A7                     U1P2L           equ	679	;# 
  4751   0002A8                     U1P2H           equ	680	;# 
  4752   0002A9                     U1P3            equ	681	;# 
  4753   0002A9                     U1P3L           equ	681	;# 
  4754   0002AA                     U1P3H           equ	682	;# 
  4755   0002AB                     U1CON0          equ	683	;# 
  4756   0002AC                     U1CON1          equ	684	;# 
  4757   0002AD                     U1CON2          equ	685	;# 
  4758   0002AE                     U1BRG           equ	686	;# 
  4759   0002AE                     U1BRGL          equ	686	;# 
  4760   0002AF                     U1BRGH          equ	687	;# 
  4761   0002B0                     U1FIFO          equ	688	;# 
  4762   0002B1                     U1UIR           equ	689	;# 
  4763   0002B2                     U1ERRIR         equ	690	;# 
  4764   0002B3                     U1ERRIE         equ	691	;# 
  4765   0002B4                     U2RXB           equ	692	;# 
  4766   0002B4                     U2RXBL          equ	692	;# 
  4767   0002B6                     U2TXB           equ	694	;# 
  4768   0002B6                     U2TXBL          equ	694	;# 
  4769   0002B8                     U2P1            equ	696	;# 
  4770   0002B8                     U2P1L           equ	696	;# 
  4771   0002BA                     U2P2            equ	698	;# 
  4772   0002BA                     U2P2L           equ	698	;# 
  4773   0002BC                     U2P3            equ	700	;# 
  4774   0002BC                     U2P3L           equ	700	;# 
  4775   0002BE                     U2CON0          equ	702	;# 
  4776   0002BF                     U2CON1          equ	703	;# 
  4777   0002C0                     U2CON2          equ	704	;# 
  4778   0002C1                     U2BRG           equ	705	;# 
  4779   0002C1                     U2BRGL          equ	705	;# 
  4780   0002C2                     U2BRGH          equ	706	;# 
  4781   0002C3                     U2FIFO          equ	707	;# 
  4782   0002C4                     U2UIR           equ	708	;# 
  4783   0002C5                     U2ERRIR         equ	709	;# 
  4784   0002C6                     U2ERRIE         equ	710	;# 
  4785   0002C7                     U3RXB           equ	711	;# 
  4786   0002C7                     U3RXBL          equ	711	;# 
  4787   0002C9                     U3TXB           equ	713	;# 
  4788   0002C9                     U3TXBL          equ	713	;# 
  4789   0002CB                     U3P1            equ	715	;# 
  4790   0002CB                     U3P1L           equ	715	;# 
  4791   0002CD                     U3P2            equ	717	;# 
  4792   0002CD                     U3P2L           equ	717	;# 
  4793   0002CF                     U3P3            equ	719	;# 
  4794   0002CF                     U3P3L           equ	719	;# 
  4795   0002D1                     U3CON0          equ	721	;# 
  4796   0002D2                     U3CON1          equ	722	;# 
  4797   0002D3                     U3CON2          equ	723	;# 
  4798   0002D4                     U3BRG           equ	724	;# 
  4799   0002D4                     U3BRGL          equ	724	;# 
  4800   0002D5                     U3BRGH          equ	725	;# 
  4801   0002D6                     U3FIFO          equ	726	;# 
  4802   0002D7                     U3UIR           equ	727	;# 
  4803   0002D8                     U3ERRIR         equ	728	;# 
  4804   0002D9                     U3ERRIE         equ	729	;# 
  4805   0002DA                     U4RXB           equ	730	;# 
  4806   0002DA                     U4RXBL          equ	730	;# 
  4807   0002DC                     U4TXB           equ	732	;# 
  4808   0002DC                     U4TXBL          equ	732	;# 
  4809   0002DE                     U4P1            equ	734	;# 
  4810   0002DE                     U4P1L           equ	734	;# 
  4811   0002E0                     U4P2            equ	736	;# 
  4812   0002E0                     U4P2L           equ	736	;# 
  4813   0002E2                     U4P3            equ	738	;# 
  4814   0002E2                     U4P3L           equ	738	;# 
  4815   0002E4                     U4CON0          equ	740	;# 
  4816   0002E5                     U4CON1          equ	741	;# 
  4817   0002E6                     U4CON2          equ	742	;# 
  4818   0002E7                     U4BRG           equ	743	;# 
  4819   0002E7                     U4BRGL          equ	743	;# 
  4820   0002E8                     U4BRGH          equ	744	;# 
  4821   0002E9                     U4FIFO          equ	745	;# 
  4822   0002EA                     U4UIR           equ	746	;# 
  4823   0002EB                     U4ERRIR         equ	747	;# 
  4824   0002EC                     U4ERRIE         equ	748	;# 
  4825   0002ED                     U5RXB           equ	749	;# 
  4826   0002ED                     U5RXBL          equ	749	;# 
  4827   0002EF                     U5TXB           equ	751	;# 
  4828   0002EF                     U5TXBL          equ	751	;# 
  4829   0002F1                     U5P1            equ	753	;# 
  4830   0002F1                     U5P1L           equ	753	;# 
  4831   0002F3                     U5P2            equ	755	;# 
  4832   0002F3                     U5P2L           equ	755	;# 
  4833   0002F5                     U5P3            equ	757	;# 
  4834   0002F5                     U5P3L           equ	757	;# 
  4835   0002F7                     U5CON0          equ	759	;# 
  4836   0002F8                     U5CON1          equ	760	;# 
  4837   0002F9                     U5CON2          equ	761	;# 
  4838   0002FA                     U5BRG           equ	762	;# 
  4839   0002FA                     U5BRGL          equ	762	;# 
  4840   0002FB                     U5BRGH          equ	763	;# 
  4841   0002FC                     U5FIFO          equ	764	;# 
  4842   0002FD                     U5UIR           equ	765	;# 
  4843   0002FE                     U5ERRIR         equ	766	;# 
  4844   0002FF                     U5ERRIE         equ	767	;# 
  4845   000300                     SMT1TMR         equ	768	;# 
  4846   000300                     SMT1TMRL        equ	768	;# 
  4847   000301                     SMT1TMRH        equ	769	;# 
  4848   000302                     SMT1TMRU        equ	770	;# 
  4849   000303                     SMT1CPR         equ	771	;# 
  4850   000303                     SMT1CPRL        equ	771	;# 
  4851   000304                     SMT1CPRH        equ	772	;# 
  4852   000305                     SMT1CPRU        equ	773	;# 
  4853   000306                     SMT1CPW         equ	774	;# 
  4854   000306                     SMT1CPWL        equ	774	;# 
  4855   000307                     SMT1CPWH        equ	775	;# 
  4856   000308                     SMT1CPWU        equ	776	;# 
  4857   000309                     SMT1PR          equ	777	;# 
  4858   000309                     SMT1PRL         equ	777	;# 
  4859   00030A                     SMT1PRH         equ	778	;# 
  4860   00030B                     SMT1PRU         equ	779	;# 
  4861   00030C                     SMT1CON0        equ	780	;# 
  4862   00030D                     SMT1CON1        equ	781	;# 
  4863   00030E                     SMT1STAT        equ	782	;# 
  4864   00030F                     SMT1CLK         equ	783	;# 
  4865   000310                     SMT1SIG         equ	784	;# 
  4866   000311                     SMT1WIN         equ	785	;# 
  4867   000318                     TMR0L           equ	792	;# 
  4868   000318                     TMR0            equ	792	;# 
  4869   000319                     TMR0H           equ	793	;# 
  4870   000319                     PR0             equ	793	;# 
  4871   00031A                     T0CON0          equ	794	;# 
  4872   00031B                     T0CON1          equ	795	;# 
  4873   00031C                     TMR1            equ	796	;# 
  4874   00031C                     TMR1L           equ	796	;# 
  4875   00031D                     TMR1H           equ	797	;# 
  4876   00031E                     T1CON           equ	798	;# 
  4877   00031E                     TMR1CON         equ	798	;# 
  4878   00031F                     T1GCON          equ	799	;# 
  4879   00031F                     TMR1GCON        equ	799	;# 
  4880   000320                     T1GATE          equ	800	;# 
  4881   000320                     TMR1GATE        equ	800	;# 
  4882   000321                     T1CLK           equ	801	;# 
  4883   000321                     TMR1CLK         equ	801	;# 
  4884   000321                     PR1             equ	801	;# 
  4885   000322                     T2TMR           equ	802	;# 
  4886   000322                     TMR2            equ	802	;# 
  4887   000323                     T2PR            equ	803	;# 
  4888   000323                     PR2             equ	803	;# 
  4889   000324                     T2CON           equ	804	;# 
  4890   000325                     T2HLT           equ	805	;# 
  4891   000326                     T2CLKCON        equ	806	;# 
  4892   000326                     T2CLK           equ	806	;# 
  4893   000327                     T2RST           equ	807	;# 
  4894   000328                     TMR3            equ	808	;# 
  4895   000328                     TMR3L           equ	808	;# 
  4896   000329                     TMR3H           equ	809	;# 
  4897   00032A                     T3CON           equ	810	;# 
  4898   00032A                     TMR3CON         equ	810	;# 
  4899   00032B                     T3GCON          equ	811	;# 
  4900   00032B                     TMR3GCON        equ	811	;# 
  4901   00032C                     T3GATE          equ	812	;# 
  4902   00032C                     TMR3GATE        equ	812	;# 
  4903   00032D                     T3CLK           equ	813	;# 
  4904   00032D                     TMR3CLK         equ	813	;# 
  4905   00032D                     PR3             equ	813	;# 
  4906   00032E                     T4TMR           equ	814	;# 
  4907   00032E                     TMR4            equ	814	;# 
  4908   00032F                     T4PR            equ	815	;# 
  4909   00032F                     PR4             equ	815	;# 
  4910   000330                     T4CON           equ	816	;# 
  4911   000331                     T4HLT           equ	817	;# 
  4912   000332                     T4CLKCON        equ	818	;# 
  4913   000332                     T4CLK           equ	818	;# 
  4914   000333                     T4RST           equ	819	;# 
  4915   000334                     TMR5            equ	820	;# 
  4916   000334                     TMR5L           equ	820	;# 
  4917   000335                     TMR5H           equ	821	;# 
  4918   000336                     T5CON           equ	822	;# 
  4919   000336                     TMR5CON         equ	822	;# 
  4920   000337                     T5GCON          equ	823	;# 
  4921   000337                     TMR5GCON        equ	823	;# 
  4922   000338                     T5GATE          equ	824	;# 
  4923   000338                     TMR5GATE        equ	824	;# 
  4924   000339                     T5CLK           equ	825	;# 
  4925   000339                     TMR5CLK         equ	825	;# 
  4926   000339                     PR5             equ	825	;# 
  4927   00033A                     T6TMR           equ	826	;# 
  4928   00033A                     TMR6            equ	826	;# 
  4929   00033B                     T6PR            equ	827	;# 
  4930   00033B                     PR6             equ	827	;# 
  4931   00033C                     T6CON           equ	828	;# 
  4932   00033D                     T6HLT           equ	829	;# 
  4933   00033E                     T6CLKCON        equ	830	;# 
  4934   00033E                     T6CLK           equ	830	;# 
  4935   00033F                     T6RST           equ	831	;# 
  4936   000340                     CCPR1           equ	832	;# 
  4937   000340                     CCPR1L          equ	832	;# 
  4938   000341                     CCPR1H          equ	833	;# 
  4939   000342                     CCP1CON         equ	834	;# 
  4940   000343                     CCP1CAP         equ	835	;# 
  4941   000344                     CCPR2           equ	836	;# 
  4942   000344                     CCPR2L          equ	836	;# 
  4943   000345                     CCPR2H          equ	837	;# 
  4944   000346                     CCP2CON         equ	838	;# 
  4945   000347                     CCP2CAP         equ	839	;# 
  4946   000348                     CCPR3           equ	840	;# 
  4947   000348                     CCPR3L          equ	840	;# 
  4948   000349                     CCPR3H          equ	841	;# 
  4949   00034A                     CCP3CON         equ	842	;# 
  4950   00034B                     CCP3CAP         equ	843	;# 
  4951   00034C                     CCPTMRS0        equ	844	;# 
  4952   00034F                     CRCDATA         equ	847	;# 
  4953   00034F                     CRCDATL         equ	847	;# 
  4954   000350                     CRCDATH         equ	848	;# 
  4955   000351                     CRCACC          equ	849	;# 
  4956   000351                     CRCACCL         equ	849	;# 
  4957   000352                     CRCACCH         equ	850	;# 
  4958   000353                     CRCSHFT         equ	851	;# 
  4959   000353                     CRCSHIFTL       equ	851	;# 
  4960   000354                     CRCSHIFTH       equ	852	;# 
  4961   000355                     CRCXOR          equ	853	;# 
  4962   000355                     CRCXORL         equ	853	;# 
  4963   000356                     CRCXORH         equ	854	;# 
  4964   000357                     CRCCON0         equ	855	;# 
  4965   000358                     CRCCON1         equ	856	;# 
  4966   00035A                     SCANLADR        equ	858	;# 
  4967   00035A                     SCANLADRL       equ	858	;# 
  4968   00035B                     SCANLADRH       equ	859	;# 
  4969   00035C                     SCANLADRU       equ	860	;# 
  4970   00035D                     SCANHADR        equ	861	;# 
  4971   00035D                     SCANHADRL       equ	861	;# 
  4972   00035E                     SCANHADRH       equ	862	;# 
  4973   00035F                     SCANHADRU       equ	863	;# 
  4974   000360                     SCANCON0        equ	864	;# 
  4975   000361                     SCANTRIG        equ	865	;# 
  4976   000362                     IPR0            equ	866	;# 
  4977   000363                     IPR1            equ	867	;# 
  4978   000364                     IPR2            equ	868	;# 
  4979   000365                     IPR3            equ	869	;# 
  4980   000366                     IPR4            equ	870	;# 
  4981   000367                     IPR5            equ	871	;# 
  4982   000368                     IPR6            equ	872	;# 
  4983   000369                     IPR7            equ	873	;# 
  4984   00036A                     IPR8            equ	874	;# 
  4985   00036B                     IPR9            equ	875	;# 
  4986   00036C                     IPR10           equ	876	;# 
  4987   00036D                     IPR11           equ	877	;# 
  4988   00036E                     IPR12           equ	878	;# 
  4989   00036F                     IPR13           equ	879	;# 
  4990   000370                     IPR14           equ	880	;# 
  4991   000371                     IPR15           equ	881	;# 
  4992   000373                     STATUS_CSHAD    equ	883	;# 
  4993   000374                     WREG_CSHAD      equ	884	;# 
  4994   000375                     BSR_CSHAD       equ	885	;# 
  4995   000376                     SHADCON         equ	886	;# 
  4996   000377                     STATUS_SHAD     equ	887	;# 
  4997   000378                     WREG_SHAD       equ	888	;# 
  4998   000379                     BSR_SHAD        equ	889	;# 
  4999   00037A                     PCLATH_SHAD     equ	890	;# 
  5000   00037B                     PCLATU_SHAD     equ	891	;# 
  5001   00037C                     FSR0SH          equ	892	;# 
  5002   00037C                     FSR0L_SHAD      equ	892	;# 
  5003   00037D                     FSR0H_SHAD      equ	893	;# 
  5004   00037E                     FSR1SH          equ	894	;# 
  5005   00037E                     FSR1L_SHAD      equ	894	;# 
  5006   00037F                     FSR1H_SHAD      equ	895	;# 
  5007   000380                     FSR2SH          equ	896	;# 
  5008   000380                     FSR2L_SHAD      equ	896	;# 
  5009   000381                     FSR2H_SHAD      equ	897	;# 
  5010   000382                     PRODSH          equ	898	;# 
  5011   000382                     PRODL_SHAD      equ	898	;# 
  5012   000383                     PRODH_SHAD      equ	899	;# 
  5013   0003BC                     CWG1CLK         equ	956	;# 
  5014   0003BC                     CWG1CLKCON      equ	956	;# 
  5015   0003BD                     CWG1ISM         equ	957	;# 
  5016   0003BD                     CWG1DAT         equ	957	;# 
  5017   0003BE                     CWG1DBR         equ	958	;# 
  5018   0003BF                     CWG1DBF         equ	959	;# 
  5019   0003C0                     CWG1CON0        equ	960	;# 
  5020   0003C1                     CWG1CON1        equ	961	;# 
  5021   0003C2                     CWG1AS0         equ	962	;# 
  5022   0003C3                     CWG1AS1         equ	963	;# 
  5023   0003C4                     CWG1STR         equ	964	;# 
  5024   0003C5                     CWG2CLK         equ	965	;# 
  5025   0003C5                     CWG2CLKCON      equ	965	;# 
  5026   0003C6                     CWG2ISM         equ	966	;# 
  5027   0003C6                     CWG2DAT         equ	966	;# 
  5028   0003C7                     CWG2DBR         equ	967	;# 
  5029   0003C8                     CWG2DBF         equ	968	;# 
  5030   0003C9                     CWG2CON0        equ	969	;# 
  5031   0003CA                     CWG2CON1        equ	970	;# 
  5032   0003CB                     CWG2AS0         equ	971	;# 
  5033   0003CC                     CWG2AS1         equ	972	;# 
  5034   0003CD                     CWG2STR         equ	973	;# 
  5035   0003CE                     CWG3CLK         equ	974	;# 
  5036   0003CE                     CWG3CLKCON      equ	974	;# 
  5037   0003CF                     CWG3ISM         equ	975	;# 
  5038   0003CF                     CWG3DAT         equ	975	;# 
  5039   0003D0                     CWG3DBR         equ	976	;# 
  5040   0003D1                     CWG3DBF         equ	977	;# 
  5041   0003D2                     CWG3CON0        equ	978	;# 
  5042   0003D3                     CWG3CON1        equ	979	;# 
  5043   0003D4                     CWG3AS0         equ	980	;# 
  5044   0003D5                     CWG3AS1         equ	981	;# 
  5045   0003D6                     CWG3STR         equ	982	;# 
  5046   0003D7                     FVRCON          equ	983	;# 
  5047   0003D8                     ADCPCON         equ	984	;# 
  5048   0003D8                     ADCP            equ	984	;# 
  5049   0003D9                     ADLTH           equ	985	;# 
  5050   0003D9                     ADLTHL          equ	985	;# 
  5051   0003DA                     ADLTHH          equ	986	;# 
  5052   0003DB                     ADUTH           equ	987	;# 
  5053   0003DB                     ADUTHL          equ	987	;# 
  5054   0003DC                     ADUTHH          equ	988	;# 
  5055   0003DD                     ADERR           equ	989	;# 
  5056   0003DD                     ADERRL          equ	989	;# 
  5057   0003DE                     ADERRH          equ	990	;# 
  5058   0003DF                     ADSTPT          equ	991	;# 
  5059   0003DF                     ADSTPTL         equ	991	;# 
  5060   0003E0                     ADSTPTH         equ	992	;# 
  5061   0003E1                     ADFLTR          equ	993	;# 
  5062   0003E1                     ADFLTRL         equ	993	;# 
  5063   0003E2                     ADFLTRH         equ	994	;# 
  5064   0003E3                     ADACC           equ	995	;# 
  5065   0003E3                     ADACCL          equ	995	;# 
  5066   0003E4                     ADACCH          equ	996	;# 
  5067   0003E5                     ADACCU          equ	997	;# 
  5068   0003E6                     ADCNT           equ	998	;# 
  5069   0003E7                     ADRPT           equ	999	;# 
  5070   0003E8                     ADPREV          equ	1000	;# 
  5071   0003E8                     ADPREVL         equ	1000	;# 
  5072   0003E9                     ADPREVH         equ	1001	;# 
  5073   0003EA                     ADRES           equ	1002	;# 
  5074   0003EA                     ADRESL          equ	1002	;# 
  5075   0003EB                     ADRESH          equ	1003	;# 
  5076   0003EC                     ADPCH           equ	1004	;# 
  5077   0003EE                     ADACQ           equ	1006	;# 
  5078   0003EE                     ADACQL          equ	1006	;# 
  5079   0003EF                     ADACQH          equ	1007	;# 
  5080   0003F0                     ADCAP           equ	1008	;# 
  5081   0003F1                     ADPRE           equ	1009	;# 
  5082   0003F1                     ADPREL          equ	1009	;# 
  5083   0003F2                     ADPREH          equ	1010	;# 
  5084   0003F3                     ADCON0          equ	1011	;# 
  5085   0003F4                     ADCON1          equ	1012	;# 
  5086   0003F5                     ADCON2          equ	1013	;# 
  5087   0003F6                     ADCON3          equ	1014	;# 
  5088   0003F7                     ADSTAT          equ	1015	;# 
  5089   0003F8                     ADREF           equ	1016	;# 
  5090   0003F9                     ADACT           equ	1017	;# 
  5091   0003FA                     ADCLK           equ	1018	;# 
  5092   000400                     ANSELA          equ	1024	;# 
  5093   000401                     WPUA            equ	1025	;# 
  5094   000402                     ODCONA          equ	1026	;# 
  5095   000403                     SLRCONA         equ	1027	;# 
  5096   000404                     INLVLA          equ	1028	;# 
  5097   000405                     IOCAP           equ	1029	;# 
  5098   000406                     IOCAN           equ	1030	;# 
  5099   000407                     IOCAF           equ	1031	;# 
  5100   000408                     ANSELB          equ	1032	;# 
  5101   000409                     WPUB            equ	1033	;# 
  5102   00040A                     ODCONB          equ	1034	;# 
  5103   00040B                     SLRCONB         equ	1035	;# 
  5104   00040C                     INLVLB          equ	1036	;# 
  5105   00040D                     IOCBP           equ	1037	;# 
  5106   00040E                     IOCBN           equ	1038	;# 
  5107   00040F                     IOCBF           equ	1039	;# 
  5108   000410                     ANSELC          equ	1040	;# 
  5109   000411                     WPUC            equ	1041	;# 
  5110   000412                     ODCONC          equ	1042	;# 
  5111   000413                     SLRCONC         equ	1043	;# 
  5112   000414                     INLVLC          equ	1044	;# 
  5113   000415                     IOCCP           equ	1045	;# 
  5114   000416                     IOCCN           equ	1046	;# 
  5115   000417                     IOCCF           equ	1047	;# 
  5116   000418                     ANSELD          equ	1048	;# 
  5117   000419                     WPUD            equ	1049	;# 
  5118   00041A                     ODCOND          equ	1050	;# 
  5119   00041B                     SLRCOND         equ	1051	;# 
  5120   00041C                     INLVLD          equ	1052	;# 
  5121   000420                     ANSELE          equ	1056	;# 
  5122   000421                     WPUE            equ	1057	;# 
  5123   000422                     ODCONE          equ	1058	;# 
  5124   000423                     SLRCONE         equ	1059	;# 
  5125   000424                     INLVLE          equ	1060	;# 
  5126   000425                     IOCEP           equ	1061	;# 
  5127   000426                     IOCEN           equ	1062	;# 
  5128   000427                     IOCEF           equ	1063	;# 
  5129   000428                     ANSELF          equ	1064	;# 
  5130   000429                     WPUF            equ	1065	;# 
  5131   00042A                     ODCONF          equ	1066	;# 
  5132   00042B                     SLRCONF         equ	1067	;# 
  5133   00042C                     INLVLF          equ	1068	;# 
  5134   000440                     NCO1ACC         equ	1088	;# 
  5135   000440                     NCO1ACCL        equ	1088	;# 
  5136   000441                     NCO1ACCH        equ	1089	;# 
  5137   000442                     NCO1ACCU        equ	1090	;# 
  5138   000443                     NCO1INC         equ	1091	;# 
  5139   000443                     NCO1INCL        equ	1091	;# 
  5140   000444                     NCO1INCH        equ	1092	;# 
  5141   000445                     NCO1INCU        equ	1093	;# 
  5142   000446                     NCO1CON         equ	1094	;# 
  5143   000447                     NCO1CLK         equ	1095	;# 
  5144   000448                     NCO2ACC         equ	1096	;# 
  5145   000448                     NCO2ACCL        equ	1096	;# 
  5146   000449                     NCO2ACCH        equ	1097	;# 
  5147   00044A                     NCO2ACCU        equ	1098	;# 
  5148   00044B                     NCO2INC         equ	1099	;# 
  5149   00044B                     NCO2INCL        equ	1099	;# 
  5150   00044C                     NCO2INCH        equ	1100	;# 
  5151   00044D                     NCO2INCU        equ	1101	;# 
  5152   00044E                     NCO2CON         equ	1102	;# 
  5153   00044F                     NCO2CLK         equ	1103	;# 
  5154   000450                     NCO3ACC         equ	1104	;# 
  5155   000450                     NCO3ACCL        equ	1104	;# 
  5156   000451                     NCO3ACCH        equ	1105	;# 
  5157   000452                     NCO3ACCU        equ	1106	;# 
  5158   000453                     NCO3INC         equ	1107	;# 
  5159   000453                     NCO3INCL        equ	1107	;# 
  5160   000454                     NCO3INCH        equ	1108	;# 
  5161   000455                     NCO3INCU        equ	1109	;# 
  5162   000456                     NCO3CON         equ	1110	;# 
  5163   000457                     NCO3CLK         equ	1111	;# 
  5164   000459                     IVTLOCK         equ	1113	;# 
  5165   00045A                     IVTAD           equ	1114	;# 
  5166   00045A                     IVTADL          equ	1114	;# 
  5167   00045B                     IVTADH          equ	1115	;# 
  5168   00045C                     IVTADU          equ	1116	;# 
  5169   00045D                     IVTBASE         equ	1117	;# 
  5170   00045D                     IVTBASEL        equ	1117	;# 
  5171   00045E                     IVTBASEH        equ	1118	;# 
  5172   00045F                     IVTBASEU        equ	1119	;# 
  5173   000460                     PWM1ERS         equ	1120	;# 
  5174   000461                     PWM1CLK         equ	1121	;# 
  5175   000462                     PWM1LDS         equ	1122	;# 
  5176   000463                     PWM1PR          equ	1123	;# 
  5177   000463                     PWM1PRL         equ	1123	;# 
  5178   000464                     PWM1PRH         equ	1124	;# 
  5179   000465                     PWM1CPRE        equ	1125	;# 
  5180   000466                     PWM1PIPOS       equ	1126	;# 
  5181   000467                     PWM1GIR         equ	1127	;# 
  5182   000468                     PWM1GIE         equ	1128	;# 
  5183   000469                     PWM1CON         equ	1129	;# 
  5184   00046A                     PWM1S1CFG       equ	1130	;# 
  5185   00046B                     PWM1S1P1        equ	1131	;# 
  5186   00046B                     PWM1S1P1L       equ	1131	;# 
  5187   00046C                     PWM1S1P1H       equ	1132	;# 
  5188   00046D                     PWM1S1P2        equ	1133	;# 
  5189   00046D                     PWM1S1P2L       equ	1133	;# 
  5190   00046E                     PWM1S1P2H       equ	1134	;# 
  5191   00046F                     PWM2ERS         equ	1135	;# 
  5192   000470                     PWM2CLK         equ	1136	;# 
  5193   000471                     PWM2LDS         equ	1137	;# 
  5194   000472                     PWM2PR          equ	1138	;# 
  5195   000472                     PWM2PRL         equ	1138	;# 
  5196   000473                     PWM2PRH         equ	1139	;# 
  5197   000474                     PWM2CPRE        equ	1140	;# 
  5198   000475                     PWM2PIPOS       equ	1141	;# 
  5199   000476                     PWM2GIR         equ	1142	;# 
  5200   000477                     PWM2GIE         equ	1143	;# 
  5201   000478                     PWM2CON         equ	1144	;# 
  5202   000479                     PWM2S1CFG       equ	1145	;# 
  5203   00047A                     PWM2S1P1        equ	1146	;# 
  5204   00047A                     PWM2S1P1L       equ	1146	;# 
  5205   00047B                     PWM2S1P1H       equ	1147	;# 
  5206   00047C                     PWM2S1P2        equ	1148	;# 
  5207   00047C                     PWM2S1P2L       equ	1148	;# 
  5208   00047D                     PWM2S1P2H       equ	1149	;# 
  5209   00047E                     PWM3ERS         equ	1150	;# 
  5210   00047F                     PWM3CLK         equ	1151	;# 
  5211   000480                     PWM3LDS         equ	1152	;# 
  5212   000481                     PWM3PR          equ	1153	;# 
  5213   000481                     PWM3PRL         equ	1153	;# 
  5214   000482                     PWM3PRH         equ	1154	;# 
  5215   000483                     PWM3CPRE        equ	1155	;# 
  5216   000484                     PWM3PIPOS       equ	1156	;# 
  5217   000485                     PWM3GIR         equ	1157	;# 
  5218   000486                     PWM3GIE         equ	1158	;# 
  5219   000487                     PWM3CON         equ	1159	;# 
  5220   000488                     PWM3S1CFG       equ	1160	;# 
  5221   000489                     PWM3S1P1        equ	1161	;# 
  5222   000489                     PWM3S1P1L       equ	1161	;# 
  5223   00048A                     PWM3S1P1H       equ	1162	;# 
  5224   00048B                     PWM3S1P2        equ	1163	;# 
  5225   00048B                     PWM3S1P2L       equ	1163	;# 
  5226   00048C                     PWM3S1P2H       equ	1164	;# 
  5227   00049C                     PWMLOAD         equ	1180	;# 
  5228   00049D                     PWMEN           equ	1181	;# 
  5229   00049E                     PIE0            equ	1182	;# 
  5230   00049F                     PIE1            equ	1183	;# 
  5231   0004A0                     PIE2            equ	1184	;# 
  5232   0004A1                     PIE3            equ	1185	;# 
  5233   0004A2                     PIE4            equ	1186	;# 
  5234   0004A3                     PIE5            equ	1187	;# 
  5235   0004A4                     PIE6            equ	1188	;# 
  5236   0004A5                     PIE7            equ	1189	;# 
  5237   0004A6                     PIE8            equ	1190	;# 
  5238   0004A7                     PIE9            equ	1191	;# 
  5239   0004A8                     PIE10           equ	1192	;# 
  5240   0004A9                     PIE11           equ	1193	;# 
  5241   0004AA                     PIE12           equ	1194	;# 
  5242   0004AB                     PIE13           equ	1195	;# 
  5243   0004AC                     PIE14           equ	1196	;# 
  5244   0004AD                     PIE15           equ	1197	;# 
  5245   0004AE                     PIR0            equ	1198	;# 
  5246   0004AF                     PIR1            equ	1199	;# 
  5247   0004B0                     PIR2            equ	1200	;# 
  5248   0004B1                     PIR3            equ	1201	;# 
  5249   0004B2                     PIR4            equ	1202	;# 
  5250   0004B3                     PIR5            equ	1203	;# 
  5251   0004B4                     PIR6            equ	1204	;# 
  5252   0004B5                     PIR7            equ	1205	;# 
  5253   0004B6                     PIR8            equ	1206	;# 
  5254   0004B7                     PIR9            equ	1207	;# 
  5255   0004B8                     PIR10           equ	1208	;# 
  5256   0004B9                     PIR11           equ	1209	;# 
  5257   0004BA                     PIR12           equ	1210	;# 
  5258   0004BB                     PIR13           equ	1211	;# 
  5259   0004BC                     PIR14           equ	1212	;# 
  5260   0004BD                     PIR15           equ	1213	;# 
  5261   0004BE                     LATA            equ	1214	;# 
  5262   0004BF                     LATB            equ	1215	;# 
  5263   0004C0                     LATC            equ	1216	;# 
  5264   0004C1                     LATD            equ	1217	;# 
  5265   0004C2                     LATE            equ	1218	;# 
  5266   0004C3                     LATF            equ	1219	;# 
  5267   0004C6                     TRISA           equ	1222	;# 
  5268   0004C7                     TRISB           equ	1223	;# 
  5269   0004C8                     TRISC           equ	1224	;# 
  5270   0004C9                     TRISD           equ	1225	;# 
  5271   0004CA                     TRISE           equ	1226	;# 
  5272   0004CB                     TRISF           equ	1227	;# 
  5273   0004CE                     PORTA           equ	1230	;# 
  5274   0004CF                     PORTB           equ	1231	;# 
  5275   0004D0                     PORTC           equ	1232	;# 
  5276   0004D1                     PORTD           equ	1233	;# 
  5277   0004D2                     PORTE           equ	1234	;# 
  5278   0004D3                     PORTF           equ	1235	;# 
  5279   0004D6                     INTCON0         equ	1238	;# 
  5280   0004D7                     INTCON1         equ	1239	;# 
  5281   0004D8                     STATUS          equ	1240	;# 
  5282   0004D9                     FSR2            equ	1241	;# 
  5283   0004D9                     FSR2L           equ	1241	;# 
  5284   0004DA                     FSR2H           equ	1242	;# 
  5285   0004DB                     PLUSW2          equ	1243	;# 
  5286   0004DC                     PREINC2         equ	1244	;# 
  5287   0004DD                     POSTDEC2        equ	1245	;# 
  5288   0004DE                     POSTINC2        equ	1246	;# 
  5289   0004DF                     INDF2           equ	1247	;# 
  5290   0004E0                     BSR             equ	1248	;# 
  5291   0004E1                     FSR1            equ	1249	;# 
  5292   0004E1                     FSR1L           equ	1249	;# 
  5293   0004E2                     FSR1H           equ	1250	;# 
  5294   0004E3                     PLUSW1          equ	1251	;# 
  5295   0004E4                     PREINC1         equ	1252	;# 
  5296   0004E5                     POSTDEC1        equ	1253	;# 
  5297   0004E6                     POSTINC1        equ	1254	;# 
  5298   0004E7                     INDF1           equ	1255	;# 
  5299   0004E8                     WREG            equ	1256	;# 
  5300   0004E9                     FSR0            equ	1257	;# 
  5301   0004E9                     FSR0L           equ	1257	;# 
  5302   0004EA                     FSR0H           equ	1258	;# 
  5303   0004EB                     PLUSW0          equ	1259	;# 
  5304   0004EC                     PREINC0         equ	1260	;# 
  5305   0004ED                     POSTDEC0        equ	1261	;# 
  5306   0004EE                     POSTINC0        equ	1262	;# 
  5307   0004EF                     INDF0           equ	1263	;# 
  5308   0004F0                     PCON0           equ	1264	;# 
  5309   0004F1                     PCON1           equ	1265	;# 
  5310   0004F2                     CPUDOZE         equ	1266	;# 
  5311   0004F3                     PROD            equ	1267	;# 
  5312   0004F3                     PRODL           equ	1267	;# 
  5313   0004F4                     PRODH           equ	1268	;# 
  5314   0004F5                     TABLAT          equ	1269	;# 
  5315   0004F6                     TBLPTR          equ	1270	;# 
  5316   0004F6                     TBLPTRL         equ	1270	;# 
  5317   0004F7                     TBLPTRH         equ	1271	;# 
  5318   0004F8                     TBLPTRU         equ	1272	;# 
  5319   0004F9                     PCLAT           equ	1273	;# 
  5320   0004F9                     PCL             equ	1273	;# 
  5321   0004FA                     PCLATH          equ	1274	;# 
  5322   0004FB                     PCLATU          equ	1275	;# 
  5323   0004FC                     STKPTR          equ	1276	;# 
  5324   0004FD                     TOS             equ	1277	;# 
  5325   0004FD                     TOSL            equ	1277	;# 
  5326   0004FE                     TOSH            equ	1278	;# 
  5327   0004FF                     TOSU            equ	1279	;# 
  5328   000039                     CLKRCON         equ	57	;# 
  5329   00003A                     CLKRCLK         equ	58	;# 
  5330   000040                     NVMCON0         equ	64	;# 
  5331   000041                     NVMCON1         equ	65	;# 
  5332   000042                     NVMLOCK         equ	66	;# 
  5333   000043                     NVMADR          equ	67	;# 
  5334   000043                     NVMADRL         equ	67	;# 
  5335   000044                     NVMADRH         equ	68	;# 
  5336   000045                     NVMADRU         equ	69	;# 
  5337   000046                     NVMDAT          equ	70	;# 
  5338   000046                     NVMDATL         equ	70	;# 
  5339   000047                     NVMDATH         equ	71	;# 
  5340   000048                     VREGCON         equ	72	;# 
  5341   000049                     BORCON          equ	73	;# 
  5342   00004A                     HLVDCON0        equ	74	;# 
  5343   00004B                     HLVDCON1        equ	75	;# 
  5344   00004C                     ZCDCON          equ	76	;# 
  5345   000060                     PMD0            equ	96	;# 
  5346   000061                     PMD1            equ	97	;# 
  5347   000063                     PMD3            equ	99	;# 
  5348   000064                     PMD4            equ	100	;# 
  5349   000065                     PMD5            equ	101	;# 
  5350   000066                     PMD6            equ	102	;# 
  5351   000067                     PMD7            equ	103	;# 
  5352   000068                     PMD8            equ	104	;# 
  5353   00006A                     MD1CON0         equ	106	;# 
  5354   00006B                     MD1CON1         equ	107	;# 
  5355   00006C                     MD1SRC          equ	108	;# 
  5356   00006D                     MD1CARL         equ	109	;# 
  5357   00006E                     MD1CARH         equ	110	;# 
  5358   00006F                     CMOUT           equ	111	;# 
  5359   000070                     CM1CON0         equ	112	;# 
  5360   000071                     CM1CON1         equ	113	;# 
  5361   000072                     CM1NCH          equ	114	;# 
  5362   000073                     CM1PCH          equ	115	;# 
  5363   000074                     CM2CON0         equ	116	;# 
  5364   000075                     CM2CON1         equ	117	;# 
  5365   000076                     CM2NCH          equ	118	;# 
  5366   000077                     CM2PCH          equ	119	;# 
  5367   000078                     WDTCON0         equ	120	;# 
  5368   000079                     WDTCON1         equ	121	;# 
  5369   00007A                     WDTPS           equ	122	;# 
  5370   00007A                     WDTPSL          equ	122	;# 
  5371   00007B                     WDTPSH          equ	123	;# 
  5372   00007C                     WDTTMR          equ	124	;# 
  5373   00007D                     DAC1DAT         equ	125	;# 
  5374   00007D                     DAC1DATL        equ	125	;# 
  5375   00007F                     DAC1CON         equ	127	;# 
  5376   000080                     SPI1RXB         equ	128	;# 
  5377   000081                     SPI1TXB         equ	129	;# 
  5378   000082                     SPI1TCNT        equ	130	;# 
  5379   000082                     SPI1TCNTL       equ	130	;# 
  5380   000083                     SPI1TCNTH       equ	131	;# 
  5381   000084                     SPI1CON0        equ	132	;# 
  5382   000085                     SPI1CON1        equ	133	;# 
  5383   000086                     SPI1CON2        equ	134	;# 
  5384   000087                     SPI1STATUS      equ	135	;# 
  5385   000088                     SPI1TWIDTH      equ	136	;# 
  5386   000089                     SPI1BAUD        equ	137	;# 
  5387   00008A                     SPI1INTF        equ	138	;# 
  5388   00008B                     SPI1INTE        equ	139	;# 
  5389   00008C                     SPI1CLK         equ	140	;# 
  5390   00008D                     SPI2RXB         equ	141	;# 
  5391   00008E                     SPI2TXB         equ	142	;# 
  5392   00008F                     SPI2TCNT        equ	143	;# 
  5393   00008F                     SPI2TCNTL       equ	143	;# 
  5394   000090                     SPI2TCNTH       equ	144	;# 
  5395   000091                     SPI2CON0        equ	145	;# 
  5396   000092                     SPI2CON1        equ	146	;# 
  5397   000093                     SPI2CON2        equ	147	;# 
  5398   000094                     SPI2STATUS      equ	148	;# 
  5399   000095                     SPI2TWIDTH      equ	149	;# 
  5400   000096                     SPI2BAUD        equ	150	;# 
  5401   000097                     SPI2INTF        equ	151	;# 
  5402   000098                     SPI2INTE        equ	152	;# 
  5403   000099                     SPI2CLK         equ	153	;# 
  5404   0000AC                     ACTCON          equ	172	;# 
  5405   0000AD                     OSCCON1         equ	173	;# 
  5406   0000AE                     OSCCON2         equ	174	;# 
  5407   0000AF                     OSCCON3         equ	175	;# 
  5408   0000B0                     OSCTUNE         equ	176	;# 
  5409   0000B1                     OSCFRQ          equ	177	;# 
  5410   0000B1                     OSCFREQ         equ	177	;# 
  5411   0000B2                     OSCSTAT         equ	178	;# 
  5412   0000B2                     OSCSTAT1        equ	178	;# 
  5413   0000B3                     OSCEN           equ	179	;# 
  5414   0000B4                     PRLOCK          equ	180	;# 
  5415   0000B5                     SCANPR          equ	181	;# 
  5416   0000B6                     DMA1PR          equ	182	;# 
  5417   0000B7                     DMA2PR          equ	183	;# 
  5418   0000B8                     DMA3PR          equ	184	;# 
  5419   0000B9                     DMA4PR          equ	185	;# 
  5420   0000BA                     DMA5PR          equ	186	;# 
  5421   0000BB                     DMA6PR          equ	187	;# 
  5422   0000BE                     MAINPR          equ	190	;# 
  5423   0000BF                     ISRPR           equ	191	;# 
  5424   0000D4                     CLCDATA         equ	212	;# 
  5425   0000D5                     CLCSELECT       equ	213	;# 
  5426   0000D6                     CLCnCON         equ	214	;# 
  5427   0000D7                     CLCnPOL         equ	215	;# 
  5428   0000D8                     CLCnSEL0        equ	216	;# 
  5429   0000D9                     CLCnSEL1        equ	217	;# 
  5430   0000DA                     CLCnSEL2        equ	218	;# 
  5431   0000DB                     CLCnSEL3        equ	219	;# 
  5432   0000DC                     CLCnGLS0        equ	220	;# 
  5433   0000DD                     CLCnGLS1        equ	221	;# 
  5434   0000DE                     CLCnGLS2        equ	222	;# 
  5435   0000DF                     CLCnGLS3        equ	223	;# 
  5436   0000E8                     DMASELECT       equ	232	;# 
  5437   0000E9                     DMAnBUF         equ	233	;# 
  5438   0000EA                     DMAnDCNT        equ	234	;# 
  5439   0000EA                     DMAnDCNTL       equ	234	;# 
  5440   0000EB                     DMAnDCNTH       equ	235	;# 
  5441   0000EC                     DMAnDPTR        equ	236	;# 
  5442   0000EC                     DMAnDPTRL       equ	236	;# 
  5443   0000ED                     DMAnDPTRH       equ	237	;# 
  5444   0000EE                     DMAnDSZ         equ	238	;# 
  5445   0000EE                     DMAnDSZL        equ	238	;# 
  5446   0000EF                     DMAnDSZH        equ	239	;# 
  5447   0000F0                     DMAnDSA         equ	240	;# 
  5448   0000F0                     DMAnDSAL        equ	240	;# 
  5449   0000F1                     DMAnDSAH        equ	241	;# 
  5450   0000F2                     DMAnSCNT        equ	242	;# 
  5451   0000F2                     DMAnSCNTL       equ	242	;# 
  5452   0000F3                     DMAnSCNTH       equ	243	;# 
  5453   0000F4                     DMAnSPTR        equ	244	;# 
  5454   0000F4                     DMAnSPTRL       equ	244	;# 
  5455   0000F5                     DMAnSPTRH       equ	245	;# 
  5456   0000F6                     DMAnSPTRU       equ	246	;# 
  5457   0000F7                     DMAnSSZ         equ	247	;# 
  5458   0000F7                     DMAnSSZL        equ	247	;# 
  5459   0000F8                     DMAnSSZH        equ	248	;# 
  5460   0000F9                     DMAnSSA         equ	249	;# 
  5461   0000F9                     DMAnSSAL        equ	249	;# 
  5462   0000FA                     DMAnSSAH        equ	250	;# 
  5463   0000FB                     DMAnSSAU        equ	251	;# 
  5464   0000FC                     DMAnCON0        equ	252	;# 
  5465   0000FD                     DMAnCON1        equ	253	;# 
  5466   0000FE                     DMAnAIRQ        equ	254	;# 
  5467   0000FF                     DMAnSIRQ        equ	255	;# 
  5468   000200                     PPSLOCK         equ	512	;# 
  5469   000201                     RA0PPS          equ	513	;# 
  5470   000202                     RA1PPS          equ	514	;# 
  5471   000203                     RA2PPS          equ	515	;# 
  5472   000204                     RA3PPS          equ	516	;# 
  5473   000205                     RA4PPS          equ	517	;# 
  5474   000206                     RA5PPS          equ	518	;# 
  5475   000207                     RA6PPS          equ	519	;# 
  5476   000208                     RA7PPS          equ	520	;# 
  5477   000209                     RB0PPS          equ	521	;# 
  5478   00020A                     RB1PPS          equ	522	;# 
  5479   00020B                     RB2PPS          equ	523	;# 
  5480   00020C                     RB3PPS          equ	524	;# 
  5481   00020D                     RB4PPS          equ	525	;# 
  5482   00020E                     RB5PPS          equ	526	;# 
  5483   00020F                     RB6PPS          equ	527	;# 
  5484   000210                     RB7PPS          equ	528	;# 
  5485   000211                     RC0PPS          equ	529	;# 
  5486   000212                     RC1PPS          equ	530	;# 
  5487   000213                     RC2PPS          equ	531	;# 
  5488   000214                     RC3PPS          equ	532	;# 
  5489   000215                     RC4PPS          equ	533	;# 
  5490   000216                     RC5PPS          equ	534	;# 
  5491   000217                     RC6PPS          equ	535	;# 
  5492   000218                     RC7PPS          equ	536	;# 
  5493   000219                     RD0PPS          equ	537	;# 
  5494   00021A                     RD1PPS          equ	538	;# 
  5495   00021B                     RD2PPS          equ	539	;# 
  5496   00021C                     RD3PPS          equ	540	;# 
  5497   00021D                     RD4PPS          equ	541	;# 
  5498   00021E                     RD5PPS          equ	542	;# 
  5499   00021F                     RD6PPS          equ	543	;# 
  5500   000220                     RD7PPS          equ	544	;# 
  5501   000221                     RE0PPS          equ	545	;# 
  5502   000222                     RE1PPS          equ	546	;# 
  5503   000223                     RE2PPS          equ	547	;# 
  5504   000229                     RF0PPS          equ	553	;# 
  5505   00022A                     RF1PPS          equ	554	;# 
  5506   00022B                     RF2PPS          equ	555	;# 
  5507   00022C                     RF3PPS          equ	556	;# 
  5508   00022D                     RF4PPS          equ	557	;# 
  5509   00022E                     RF5PPS          equ	558	;# 
  5510   00022F                     RF6PPS          equ	559	;# 
  5511   000230                     RF7PPS          equ	560	;# 
  5512   00023E                     INT0PPS         equ	574	;# 
  5513   00023F                     INT1PPS         equ	575	;# 
  5514   000240                     INT2PPS         equ	576	;# 
  5515   000241                     T0CKIPPS        equ	577	;# 
  5516   000242                     T1CKIPPS        equ	578	;# 
  5517   000243                     T1GPPS          equ	579	;# 
  5518   000244                     T3CKIPPS        equ	580	;# 
  5519   000245                     T3GPPS          equ	581	;# 
  5520   000246                     T5CKIPPS        equ	582	;# 
  5521   000247                     T5GPPS          equ	583	;# 
  5522   000248                     T2INPPS         equ	584	;# 
  5523   000249                     T4INPPS         equ	585	;# 
  5524   00024A                     T6INPPS         equ	586	;# 
  5525   00024F                     CCP1PPS         equ	591	;# 
  5526   000250                     CCP2PPS         equ	592	;# 
  5527   000251                     CCP3PPS         equ	593	;# 
  5528   000253                     PWM1ERSPPS      equ	595	;# 
  5529   000254                     PWM2ERSPPS      equ	596	;# 
  5530   000255                     PWM3ERSPPS      equ	597	;# 
  5531   000257                     PWMIN0PPS       equ	599	;# 
  5532   000258                     PWMIN1PPS       equ	600	;# 
  5533   000259                     SMT1WINPPS      equ	601	;# 
  5534   00025A                     SMT1SIGPPS      equ	602	;# 
  5535   00025B                     CWG1PPS         equ	603	;# 
  5536   00025B                     CWG1INPPS       equ	603	;# 
  5537   00025C                     CWG2PPS         equ	604	;# 
  5538   00025C                     CWG2INPPS       equ	604	;# 
  5539   00025D                     CWG3PPS         equ	605	;# 
  5540   00025D                     CWG3INPPS       equ	605	;# 
  5541   00025E                     MD1CARLPPS      equ	606	;# 
  5542   00025E                     MDCARLPPS       equ	606	;# 
  5543   00025F                     MD1CARHPPS      equ	607	;# 
  5544   00025F                     MDCARHPPS       equ	607	;# 
  5545   000260                     MD1SRCPPS       equ	608	;# 
  5546   000260                     MDSRCPPS        equ	608	;# 
  5547   000261                     CLCIN0PPS       equ	609	;# 
  5548   000262                     CLCIN1PPS       equ	610	;# 
  5549   000263                     CLCIN2PPS       equ	611	;# 
  5550   000264                     CLCIN3PPS       equ	612	;# 
  5551   000265                     CLCIN4PPS       equ	613	;# 
  5552   000266                     CLCIN5PPS       equ	614	;# 
  5553   000267                     CLCIN6PPS       equ	615	;# 
  5554   000268                     CLCIN7PPS       equ	616	;# 
  5555   000269                     ADACTPPS        equ	617	;# 
  5556   00026A                     SPI1SCKPPS      equ	618	;# 
  5557   00026B                     SPI1SDIPPS      equ	619	;# 
  5558   00026C                     SPI1SSPPS       equ	620	;# 
  5559   00026D                     SPI2SCKPPS      equ	621	;# 
  5560   00026E                     SPI2SDIPPS      equ	622	;# 
  5561   00026F                     SPI2SSPPS       equ	623	;# 
  5562   000270                     I2C1SDAPPS      equ	624	;# 
  5563   000271                     I2C1SCLPPS      equ	625	;# 
  5564   000272                     U1RXPPS         equ	626	;# 
  5565   000273                     U1CTSPPS        equ	627	;# 
  5566   000274                     U2RXPPS         equ	628	;# 
  5567   000275                     U2CTSPPS        equ	629	;# 
  5568   000276                     U3RXPPS         equ	630	;# 
  5569   000277                     U3CTSPPS        equ	631	;# 
  5570   000278                     U4RXPPS         equ	632	;# 
  5571   000279                     U4CTSPPS        equ	633	;# 
  5572   00027A                     U5RXPPS         equ	634	;# 
  5573   00027B                     U5CTSPPS        equ	635	;# 
  5574   000286                     RC4I2C          equ	646	;# 
  5575   000287                     RC3I2C          equ	647	;# 
  5576   000288                     RB2I2C          equ	648	;# 
  5577   000289                     RB1I2C          equ	649	;# 
  5578   00028B                     I2C1RXB         equ	651	;# 
  5579   00028C                     I2C1TXB         equ	652	;# 
  5580   00028D                     I2C1CNT         equ	653	;# 
  5581   00028E                     I2C1ADB0        equ	654	;# 
  5582   00028F                     I2C1ADB1        equ	655	;# 
  5583   000290                     I2C1ADR0        equ	656	;# 
  5584   000291                     I2C1ADR1        equ	657	;# 
  5585   000292                     I2C1ADR2        equ	658	;# 
  5586   000293                     I2C1ADR3        equ	659	;# 
  5587   000294                     I2C1CON0        equ	660	;# 
  5588   000295                     I2C1CON1        equ	661	;# 
  5589   000296                     I2C1CON2        equ	662	;# 
  5590   000297                     I2C1ERR         equ	663	;# 
  5591   000298                     I2C1STAT0       equ	664	;# 
  5592   000299                     I2C1STAT1       equ	665	;# 
  5593   00029A                     I2C1PIR         equ	666	;# 
  5594   00029B                     I2C1PIE         equ	667	;# 
  5595   00029C                     I2C1CLK         equ	668	;# 
  5596   00029D                     I2C1BTO         equ	669	;# 
  5597   0002A1                     U1RXB           equ	673	;# 
  5598   0002A1                     U1RXBL          equ	673	;# 
  5599   0002A2                     U1RXCHK         equ	674	;# 
  5600   0002A3                     U1TXB           equ	675	;# 
  5601   0002A3                     U1TXBL          equ	675	;# 
  5602   0002A4                     U1TXCHK         equ	676	;# 
  5603   0002A5                     U1P1            equ	677	;# 
  5604   0002A5                     U1P1L           equ	677	;# 
  5605   0002A6                     U1P1H           equ	678	;# 
  5606   0002A7                     U1P2            equ	679	;# 
  5607   0002A7                     U1P2L           equ	679	;# 
  5608   0002A8                     U1P2H           equ	680	;# 
  5609   0002A9                     U1P3            equ	681	;# 
  5610   0002A9                     U1P3L           equ	681	;# 
  5611   0002AA                     U1P3H           equ	682	;# 
  5612   0002AB                     U1CON0          equ	683	;# 
  5613   0002AC                     U1CON1          equ	684	;# 
  5614   0002AD                     U1CON2          equ	685	;# 
  5615   0002AE                     U1BRG           equ	686	;# 
  5616   0002AE                     U1BRGL          equ	686	;# 
  5617   0002AF                     U1BRGH          equ	687	;# 
  5618   0002B0                     U1FIFO          equ	688	;# 
  5619   0002B1                     U1UIR           equ	689	;# 
  5620   0002B2                     U1ERRIR         equ	690	;# 
  5621   0002B3                     U1ERRIE         equ	691	;# 
  5622   0002B4                     U2RXB           equ	692	;# 
  5623   0002B4                     U2RXBL          equ	692	;# 
  5624   0002B6                     U2TXB           equ	694	;# 
  5625   0002B6                     U2TXBL          equ	694	;# 
  5626   0002B8                     U2P1            equ	696	;# 
  5627   0002B8                     U2P1L           equ	696	;# 
  5628   0002BA                     U2P2            equ	698	;# 
  5629   0002BA                     U2P2L           equ	698	;# 
  5630   0002BC                     U2P3            equ	700	;# 
  5631   0002BC                     U2P3L           equ	700	;# 
  5632   0002BE                     U2CON0          equ	702	;# 
  5633   0002BF                     U2CON1          equ	703	;# 
  5634   0002C0                     U2CON2          equ	704	;# 
  5635   0002C1                     U2BRG           equ	705	;# 
  5636   0002C1                     U2BRGL          equ	705	;# 
  5637   0002C2                     U2BRGH          equ	706	;# 
  5638   0002C3                     U2FIFO          equ	707	;# 
  5639   0002C4                     U2UIR           equ	708	;# 
  5640   0002C5                     U2ERRIR         equ	709	;# 
  5641   0002C6                     U2ERRIE         equ	710	;# 
  5642   0002C7                     U3RXB           equ	711	;# 
  5643   0002C7                     U3RXBL          equ	711	;# 
  5644   0002C9                     U3TXB           equ	713	;# 
  5645   0002C9                     U3TXBL          equ	713	;# 
  5646   0002CB                     U3P1            equ	715	;# 
  5647   0002CB                     U3P1L           equ	715	;# 
  5648   0002CD                     U3P2            equ	717	;# 
  5649   0002CD                     U3P2L           equ	717	;# 
  5650   0002CF                     U3P3            equ	719	;# 
  5651   0002CF                     U3P3L           equ	719	;# 
  5652   0002D1                     U3CON0          equ	721	;# 
  5653   0002D2                     U3CON1          equ	722	;# 
  5654   0002D3                     U3CON2          equ	723	;# 
  5655   0002D4                     U3BRG           equ	724	;# 
  5656   0002D4                     U3BRGL          equ	724	;# 
  5657   0002D5                     U3BRGH          equ	725	;# 
  5658   0002D6                     U3FIFO          equ	726	;# 
  5659   0002D7                     U3UIR           equ	727	;# 
  5660   0002D8                     U3ERRIR         equ	728	;# 
  5661   0002D9                     U3ERRIE         equ	729	;# 
  5662   0002DA                     U4RXB           equ	730	;# 
  5663   0002DA                     U4RXBL          equ	730	;# 
  5664   0002DC                     U4TXB           equ	732	;# 
  5665   0002DC                     U4TXBL          equ	732	;# 
  5666   0002DE                     U4P1            equ	734	;# 
  5667   0002DE                     U4P1L           equ	734	;# 
  5668   0002E0                     U4P2            equ	736	;# 
  5669   0002E0                     U4P2L           equ	736	;# 
  5670   0002E2                     U4P3            equ	738	;# 
  5671   0002E2                     U4P3L           equ	738	;# 
  5672   0002E4                     U4CON0          equ	740	;# 
  5673   0002E5                     U4CON1          equ	741	;# 
  5674   0002E6                     U4CON2          equ	742	;# 
  5675   0002E7                     U4BRG           equ	743	;# 
  5676   0002E7                     U4BRGL          equ	743	;# 
  5677   0002E8                     U4BRGH          equ	744	;# 
  5678   0002E9                     U4FIFO          equ	745	;# 
  5679   0002EA                     U4UIR           equ	746	;# 
  5680   0002EB                     U4ERRIR         equ	747	;# 
  5681   0002EC                     U4ERRIE         equ	748	;# 
  5682   0002ED                     U5RXB           equ	749	;# 
  5683   0002ED                     U5RXBL          equ	749	;# 
  5684   0002EF                     U5TXB           equ	751	;# 
  5685   0002EF                     U5TXBL          equ	751	;# 
  5686   0002F1                     U5P1            equ	753	;# 
  5687   0002F1                     U5P1L           equ	753	;# 
  5688   0002F3                     U5P2            equ	755	;# 
  5689   0002F3                     U5P2L           equ	755	;# 
  5690   0002F5                     U5P3            equ	757	;# 
  5691   0002F5                     U5P3L           equ	757	;# 
  5692   0002F7                     U5CON0          equ	759	;# 
  5693   0002F8                     U5CON1          equ	760	;# 
  5694   0002F9                     U5CON2          equ	761	;# 
  5695   0002FA                     U5BRG           equ	762	;# 
  5696   0002FA                     U5BRGL          equ	762	;# 
  5697   0002FB                     U5BRGH          equ	763	;# 
  5698   0002FC                     U5FIFO          equ	764	;# 
  5699   0002FD                     U5UIR           equ	765	;# 
  5700   0002FE                     U5ERRIR         equ	766	;# 
  5701   0002FF                     U5ERRIE         equ	767	;# 
  5702   000300                     SMT1TMR         equ	768	;# 
  5703   000300                     SMT1TMRL        equ	768	;# 
  5704   000301                     SMT1TMRH        equ	769	;# 
  5705   000302                     SMT1TMRU        equ	770	;# 
  5706   000303                     SMT1CPR         equ	771	;# 
  5707   000303                     SMT1CPRL        equ	771	;# 
  5708   000304                     SMT1CPRH        equ	772	;# 
  5709   000305                     SMT1CPRU        equ	773	;# 
  5710   000306                     SMT1CPW         equ	774	;# 
  5711   000306                     SMT1CPWL        equ	774	;# 
  5712   000307                     SMT1CPWH        equ	775	;# 
  5713   000308                     SMT1CPWU        equ	776	;# 
  5714   000309                     SMT1PR          equ	777	;# 
  5715   000309                     SMT1PRL         equ	777	;# 
  5716   00030A                     SMT1PRH         equ	778	;# 
  5717   00030B                     SMT1PRU         equ	779	;# 
  5718   00030C                     SMT1CON0        equ	780	;# 
  5719   00030D                     SMT1CON1        equ	781	;# 
  5720   00030E                     SMT1STAT        equ	782	;# 
  5721   00030F                     SMT1CLK         equ	783	;# 
  5722   000310                     SMT1SIG         equ	784	;# 
  5723   000311                     SMT1WIN         equ	785	;# 
  5724   000318                     TMR0L           equ	792	;# 
  5725   000318                     TMR0            equ	792	;# 
  5726   000319                     TMR0H           equ	793	;# 
  5727   000319                     PR0             equ	793	;# 
  5728   00031A                     T0CON0          equ	794	;# 
  5729   00031B                     T0CON1          equ	795	;# 
  5730   00031C                     TMR1            equ	796	;# 
  5731   00031C                     TMR1L           equ	796	;# 
  5732   00031D                     TMR1H           equ	797	;# 
  5733   00031E                     T1CON           equ	798	;# 
  5734   00031E                     TMR1CON         equ	798	;# 
  5735   00031F                     T1GCON          equ	799	;# 
  5736   00031F                     TMR1GCON        equ	799	;# 
  5737   000320                     T1GATE          equ	800	;# 
  5738   000320                     TMR1GATE        equ	800	;# 
  5739   000321                     T1CLK           equ	801	;# 
  5740   000321                     TMR1CLK         equ	801	;# 
  5741   000321                     PR1             equ	801	;# 
  5742   000322                     T2TMR           equ	802	;# 
  5743   000322                     TMR2            equ	802	;# 
  5744   000323                     T2PR            equ	803	;# 
  5745   000323                     PR2             equ	803	;# 
  5746   000324                     T2CON           equ	804	;# 
  5747   000325                     T2HLT           equ	805	;# 
  5748   000326                     T2CLKCON        equ	806	;# 
  5749   000326                     T2CLK           equ	806	;# 
  5750   000327                     T2RST           equ	807	;# 
  5751   000328                     TMR3            equ	808	;# 
  5752   000328                     TMR3L           equ	808	;# 
  5753   000329                     TMR3H           equ	809	;# 
  5754   00032A                     T3CON           equ	810	;# 
  5755   00032A                     TMR3CON         equ	810	;# 
  5756   00032B                     T3GCON          equ	811	;# 
  5757   00032B                     TMR3GCON        equ	811	;# 
  5758   00032C                     T3GATE          equ	812	;# 
  5759   00032C                     TMR3GATE        equ	812	;# 
  5760   00032D                     T3CLK           equ	813	;# 
  5761   00032D                     TMR3CLK         equ	813	;# 
  5762   00032D                     PR3             equ	813	;# 
  5763   00032E                     T4TMR           equ	814	;# 
  5764   00032E                     TMR4            equ	814	;# 
  5765   00032F                     T4PR            equ	815	;# 
  5766   00032F                     PR4             equ	815	;# 
  5767   000330                     T4CON           equ	816	;# 
  5768   000331                     T4HLT           equ	817	;# 
  5769   000332                     T4CLKCON        equ	818	;# 
  5770   000332                     T4CLK           equ	818	;# 
  5771   000333                     T4RST           equ	819	;# 
  5772   000334                     TMR5            equ	820	;# 
  5773   000334                     TMR5L           equ	820	;# 
  5774   000335                     TMR5H           equ	821	;# 
  5775   000336                     T5CON           equ	822	;# 
  5776   000336                     TMR5CON         equ	822	;# 
  5777   000337                     T5GCON          equ	823	;# 
  5778   000337                     TMR5GCON        equ	823	;# 
  5779   000338                     T5GATE          equ	824	;# 
  5780   000338                     TMR5GATE        equ	824	;# 
  5781   000339                     T5CLK           equ	825	;# 
  5782   000339                     TMR5CLK         equ	825	;# 
  5783   000339                     PR5             equ	825	;# 
  5784   00033A                     T6TMR           equ	826	;# 
  5785   00033A                     TMR6            equ	826	;# 
  5786   00033B                     T6PR            equ	827	;# 
  5787   00033B                     PR6             equ	827	;# 
  5788   00033C                     T6CON           equ	828	;# 
  5789   00033D                     T6HLT           equ	829	;# 
  5790   00033E                     T6CLKCON        equ	830	;# 
  5791   00033E                     T6CLK           equ	830	;# 
  5792   00033F                     T6RST           equ	831	;# 
  5793   000340                     CCPR1           equ	832	;# 
  5794   000340                     CCPR1L          equ	832	;# 
  5795   000341                     CCPR1H          equ	833	;# 
  5796   000342                     CCP1CON         equ	834	;# 
  5797   000343                     CCP1CAP         equ	835	;# 
  5798   000344                     CCPR2           equ	836	;# 
  5799   000344                     CCPR2L          equ	836	;# 
  5800   000345                     CCPR2H          equ	837	;# 
  5801   000346                     CCP2CON         equ	838	;# 
  5802   000347                     CCP2CAP         equ	839	;# 
  5803   000348                     CCPR3           equ	840	;# 
  5804   000348                     CCPR3L          equ	840	;# 
  5805   000349                     CCPR3H          equ	841	;# 
  5806   00034A                     CCP3CON         equ	842	;# 
  5807   00034B                     CCP3CAP         equ	843	;# 
  5808   00034C                     CCPTMRS0        equ	844	;# 
  5809   00034F                     CRCDATA         equ	847	;# 
  5810   00034F                     CRCDATL         equ	847	;# 
  5811   000350                     CRCDATH         equ	848	;# 
  5812   000351                     CRCACC          equ	849	;# 
  5813   000351                     CRCACCL         equ	849	;# 
  5814   000352                     CRCACCH         equ	850	;# 
  5815   000353                     CRCSHFT         equ	851	;# 
  5816   000353                     CRCSHIFTL       equ	851	;# 
  5817   000354                     CRCSHIFTH       equ	852	;# 
  5818   000355                     CRCXOR          equ	853	;# 
  5819   000355                     CRCXORL         equ	853	;# 
  5820   000356                     CRCXORH         equ	854	;# 
  5821   000357                     CRCCON0         equ	855	;# 
  5822   000358                     CRCCON1         equ	856	;# 
  5823   00035A                     SCANLADR        equ	858	;# 
  5824   00035A                     SCANLADRL       equ	858	;# 
  5825   00035B                     SCANLADRH       equ	859	;# 
  5826   00035C                     SCANLADRU       equ	860	;# 
  5827   00035D                     SCANHADR        equ	861	;# 
  5828   00035D                     SCANHADRL       equ	861	;# 
  5829   00035E                     SCANHADRH       equ	862	;# 
  5830   00035F                     SCANHADRU       equ	863	;# 
  5831   000360                     SCANCON0        equ	864	;# 
  5832   000361                     SCANTRIG        equ	865	;# 
  5833   000362                     IPR0            equ	866	;# 
  5834   000363                     IPR1            equ	867	;# 
  5835   000364                     IPR2            equ	868	;# 
  5836   000365                     IPR3            equ	869	;# 
  5837   000366                     IPR4            equ	870	;# 
  5838   000367                     IPR5            equ	871	;# 
  5839   000368                     IPR6            equ	872	;# 
  5840   000369                     IPR7            equ	873	;# 
  5841   00036A                     IPR8            equ	874	;# 
  5842   00036B                     IPR9            equ	875	;# 
  5843   00036C                     IPR10           equ	876	;# 
  5844   00036D                     IPR11           equ	877	;# 
  5845   00036E                     IPR12           equ	878	;# 
  5846   00036F                     IPR13           equ	879	;# 
  5847   000370                     IPR14           equ	880	;# 
  5848   000371                     IPR15           equ	881	;# 
  5849   000373                     STATUS_CSHAD    equ	883	;# 
  5850   000374                     WREG_CSHAD      equ	884	;# 
  5851   000375                     BSR_CSHAD       equ	885	;# 
  5852   000376                     SHADCON         equ	886	;# 
  5853   000377                     STATUS_SHAD     equ	887	;# 
  5854   000378                     WREG_SHAD       equ	888	;# 
  5855   000379                     BSR_SHAD        equ	889	;# 
  5856   00037A                     PCLATH_SHAD     equ	890	;# 
  5857   00037B                     PCLATU_SHAD     equ	891	;# 
  5858   00037C                     FSR0SH          equ	892	;# 
  5859   00037C                     FSR0L_SHAD      equ	892	;# 
  5860   00037D                     FSR0H_SHAD      equ	893	;# 
  5861   00037E                     FSR1SH          equ	894	;# 
  5862   00037E                     FSR1L_SHAD      equ	894	;# 
  5863   00037F                     FSR1H_SHAD      equ	895	;# 
  5864   000380                     FSR2SH          equ	896	;# 
  5865   000380                     FSR2L_SHAD      equ	896	;# 
  5866   000381                     FSR2H_SHAD      equ	897	;# 
  5867   000382                     PRODSH          equ	898	;# 
  5868   000382                     PRODL_SHAD      equ	898	;# 
  5869   000383                     PRODH_SHAD      equ	899	;# 
  5870   0003BC                     CWG1CLK         equ	956	;# 
  5871   0003BC                     CWG1CLKCON      equ	956	;# 
  5872   0003BD                     CWG1ISM         equ	957	;# 
  5873   0003BD                     CWG1DAT         equ	957	;# 
  5874   0003BE                     CWG1DBR         equ	958	;# 
  5875   0003BF                     CWG1DBF         equ	959	;# 
  5876   0003C0                     CWG1CON0        equ	960	;# 
  5877   0003C1                     CWG1CON1        equ	961	;# 
  5878   0003C2                     CWG1AS0         equ	962	;# 
  5879   0003C3                     CWG1AS1         equ	963	;# 
  5880   0003C4                     CWG1STR         equ	964	;# 
  5881   0003C5                     CWG2CLK         equ	965	;# 
  5882   0003C5                     CWG2CLKCON      equ	965	;# 
  5883   0003C6                     CWG2ISM         equ	966	;# 
  5884   0003C6                     CWG2DAT         equ	966	;# 
  5885   0003C7                     CWG2DBR         equ	967	;# 
  5886   0003C8                     CWG2DBF         equ	968	;# 
  5887   0003C9                     CWG2CON0        equ	969	;# 
  5888   0003CA                     CWG2CON1        equ	970	;# 
  5889   0003CB                     CWG2AS0         equ	971	;# 
  5890   0003CC                     CWG2AS1         equ	972	;# 
  5891   0003CD                     CWG2STR         equ	973	;# 
  5892   0003CE                     CWG3CLK         equ	974	;# 
  5893   0003CE                     CWG3CLKCON      equ	974	;# 
  5894   0003CF                     CWG3ISM         equ	975	;# 
  5895   0003CF                     CWG3DAT         equ	975	;# 
  5896   0003D0                     CWG3DBR         equ	976	;# 
  5897   0003D1                     CWG3DBF         equ	977	;# 
  5898   0003D2                     CWG3CON0        equ	978	;# 
  5899   0003D3                     CWG3CON1        equ	979	;# 
  5900   0003D4                     CWG3AS0         equ	980	;# 
  5901   0003D5                     CWG3AS1         equ	981	;# 
  5902   0003D6                     CWG3STR         equ	982	;# 
  5903   0003D7                     FVRCON          equ	983	;# 
  5904   0003D8                     ADCPCON         equ	984	;# 
  5905   0003D8                     ADCP            equ	984	;# 
  5906   0003D9                     ADLTH           equ	985	;# 
  5907   0003D9                     ADLTHL          equ	985	;# 
  5908   0003DA                     ADLTHH          equ	986	;# 
  5909   0003DB                     ADUTH           equ	987	;# 
  5910   0003DB                     ADUTHL          equ	987	;# 
  5911   0003DC                     ADUTHH          equ	988	;# 
  5912   0003DD                     ADERR           equ	989	;# 
  5913   0003DD                     ADERRL          equ	989	;# 
  5914   0003DE                     ADERRH          equ	990	;# 
  5915   0003DF                     ADSTPT          equ	991	;# 
  5916   0003DF                     ADSTPTL         equ	991	;# 
  5917   0003E0                     ADSTPTH         equ	992	;# 
  5918   0003E1                     ADFLTR          equ	993	;# 
  5919   0003E1                     ADFLTRL         equ	993	;# 
  5920   0003E2                     ADFLTRH         equ	994	;# 
  5921   0003E3                     ADACC           equ	995	;# 
  5922   0003E3                     ADACCL          equ	995	;# 
  5923   0003E4                     ADACCH          equ	996	;# 
  5924   0003E5                     ADACCU          equ	997	;# 
  5925   0003E6                     ADCNT           equ	998	;# 
  5926   0003E7                     ADRPT           equ	999	;# 
  5927   0003E8                     ADPREV          equ	1000	;# 
  5928   0003E8                     ADPREVL         equ	1000	;# 
  5929   0003E9                     ADPREVH         equ	1001	;# 
  5930   0003EA                     ADRES           equ	1002	;# 
  5931   0003EA                     ADRESL          equ	1002	;# 
  5932   0003EB                     ADRESH          equ	1003	;# 
  5933   0003EC                     ADPCH           equ	1004	;# 
  5934   0003EE                     ADACQ           equ	1006	;# 
  5935   0003EE                     ADACQL          equ	1006	;# 
  5936   0003EF                     ADACQH          equ	1007	;# 
  5937   0003F0                     ADCAP           equ	1008	;# 
  5938   0003F1                     ADPRE           equ	1009	;# 
  5939   0003F1                     ADPREL          equ	1009	;# 
  5940   0003F2                     ADPREH          equ	1010	;# 
  5941   0003F3                     ADCON0          equ	1011	;# 
  5942   0003F4                     ADCON1          equ	1012	;# 
  5943   0003F5                     ADCON2          equ	1013	;# 
  5944   0003F6                     ADCON3          equ	1014	;# 
  5945   0003F7                     ADSTAT          equ	1015	;# 
  5946   0003F8                     ADREF           equ	1016	;# 
  5947   0003F9                     ADACT           equ	1017	;# 
  5948   0003FA                     ADCLK           equ	1018	;# 
  5949   000400                     ANSELA          equ	1024	;# 
  5950   000401                     WPUA            equ	1025	;# 
  5951   000402                     ODCONA          equ	1026	;# 
  5952   000403                     SLRCONA         equ	1027	;# 
  5953   000404                     INLVLA          equ	1028	;# 
  5954   000405                     IOCAP           equ	1029	;# 
  5955   000406                     IOCAN           equ	1030	;# 
  5956   000407                     IOCAF           equ	1031	;# 
  5957   000408                     ANSELB          equ	1032	;# 
  5958   000409                     WPUB            equ	1033	;# 
  5959   00040A                     ODCONB          equ	1034	;# 
  5960   00040B                     SLRCONB         equ	1035	;# 
  5961   00040C                     INLVLB          equ	1036	;# 
  5962   00040D                     IOCBP           equ	1037	;# 
  5963   00040E                     IOCBN           equ	1038	;# 
  5964   00040F                     IOCBF           equ	1039	;# 
  5965   000410                     ANSELC          equ	1040	;# 
  5966   000411                     WPUC            equ	1041	;# 
  5967   000412                     ODCONC          equ	1042	;# 
  5968   000413                     SLRCONC         equ	1043	;# 
  5969   000414                     INLVLC          equ	1044	;# 
  5970   000415                     IOCCP           equ	1045	;# 
  5971   000416                     IOCCN           equ	1046	;# 
  5972   000417                     IOCCF           equ	1047	;# 
  5973   000418                     ANSELD          equ	1048	;# 
  5974   000419                     WPUD            equ	1049	;# 
  5975   00041A                     ODCOND          equ	1050	;# 
  5976   00041B                     SLRCOND         equ	1051	;# 
  5977   00041C                     INLVLD          equ	1052	;# 
  5978   000420                     ANSELE          equ	1056	;# 
  5979   000421                     WPUE            equ	1057	;# 
  5980   000422                     ODCONE          equ	1058	;# 
  5981   000423                     SLRCONE         equ	1059	;# 
  5982   000424                     INLVLE          equ	1060	;# 
  5983   000425                     IOCEP           equ	1061	;# 
  5984   000426                     IOCEN           equ	1062	;# 
  5985   000427                     IOCEF           equ	1063	;# 
  5986   000428                     ANSELF          equ	1064	;# 
  5987   000429                     WPUF            equ	1065	;# 
  5988   00042A                     ODCONF          equ	1066	;# 
  5989   00042B                     SLRCONF         equ	1067	;# 
  5990   00042C                     INLVLF          equ	1068	;# 
  5991   000440                     NCO1ACC         equ	1088	;# 
  5992   000440                     NCO1ACCL        equ	1088	;# 
  5993   000441                     NCO1ACCH        equ	1089	;# 
  5994   000442                     NCO1ACCU        equ	1090	;# 
  5995   000443                     NCO1INC         equ	1091	;# 
  5996   000443                     NCO1INCL        equ	1091	;# 
  5997   000444                     NCO1INCH        equ	1092	;# 
  5998   000445                     NCO1INCU        equ	1093	;# 
  5999   000446                     NCO1CON         equ	1094	;# 
  6000   000447                     NCO1CLK         equ	1095	;# 
  6001   000448                     NCO2ACC         equ	1096	;# 
  6002   000448                     NCO2ACCL        equ	1096	;# 
  6003   000449                     NCO2ACCH        equ	1097	;# 
  6004   00044A                     NCO2ACCU        equ	1098	;# 
  6005   00044B                     NCO2INC         equ	1099	;# 
  6006   00044B                     NCO2INCL        equ	1099	;# 
  6007   00044C                     NCO2INCH        equ	1100	;# 
  6008   00044D                     NCO2INCU        equ	1101	;# 
  6009   00044E                     NCO2CON         equ	1102	;# 
  6010   00044F                     NCO2CLK         equ	1103	;# 
  6011   000450                     NCO3ACC         equ	1104	;# 
  6012   000450                     NCO3ACCL        equ	1104	;# 
  6013   000451                     NCO3ACCH        equ	1105	;# 
  6014   000452                     NCO3ACCU        equ	1106	;# 
  6015   000453                     NCO3INC         equ	1107	;# 
  6016   000453                     NCO3INCL        equ	1107	;# 
  6017   000454                     NCO3INCH        equ	1108	;# 
  6018   000455                     NCO3INCU        equ	1109	;# 
  6019   000456                     NCO3CON         equ	1110	;# 
  6020   000457                     NCO3CLK         equ	1111	;# 
  6021   000459                     IVTLOCK         equ	1113	;# 
  6022   00045A                     IVTAD           equ	1114	;# 
  6023   00045A                     IVTADL          equ	1114	;# 
  6024   00045B                     IVTADH          equ	1115	;# 
  6025   00045C                     IVTADU          equ	1116	;# 
  6026   00045D                     IVTBASE         equ	1117	;# 
  6027   00045D                     IVTBASEL        equ	1117	;# 
  6028   00045E                     IVTBASEH        equ	1118	;# 
  6029   00045F                     IVTBASEU        equ	1119	;# 
  6030   000460                     PWM1ERS         equ	1120	;# 
  6031   000461                     PWM1CLK         equ	1121	;# 
  6032   000462                     PWM1LDS         equ	1122	;# 
  6033   000463                     PWM1PR          equ	1123	;# 
  6034   000463                     PWM1PRL         equ	1123	;# 
  6035   000464                     PWM1PRH         equ	1124	;# 
  6036   000465                     PWM1CPRE        equ	1125	;# 
  6037   000466                     PWM1PIPOS       equ	1126	;# 
  6038   000467                     PWM1GIR         equ	1127	;# 
  6039   000468                     PWM1GIE         equ	1128	;# 
  6040   000469                     PWM1CON         equ	1129	;# 
  6041   00046A                     PWM1S1CFG       equ	1130	;# 
  6042   00046B                     PWM1S1P1        equ	1131	;# 
  6043   00046B                     PWM1S1P1L       equ	1131	;# 
  6044   00046C                     PWM1S1P1H       equ	1132	;# 
  6045   00046D                     PWM1S1P2        equ	1133	;# 
  6046   00046D                     PWM1S1P2L       equ	1133	;# 
  6047   00046E                     PWM1S1P2H       equ	1134	;# 
  6048   00046F                     PWM2ERS         equ	1135	;# 
  6049   000470                     PWM2CLK         equ	1136	;# 
  6050   000471                     PWM2LDS         equ	1137	;# 
  6051   000472                     PWM2PR          equ	1138	;# 
  6052   000472                     PWM2PRL         equ	1138	;# 
  6053   000473                     PWM2PRH         equ	1139	;# 
  6054   000474                     PWM2CPRE        equ	1140	;# 
  6055   000475                     PWM2PIPOS       equ	1141	;# 
  6056   000476                     PWM2GIR         equ	1142	;# 
  6057   000477                     PWM2GIE         equ	1143	;# 
  6058   000478                     PWM2CON         equ	1144	;# 
  6059   000479                     PWM2S1CFG       equ	1145	;# 
  6060   00047A                     PWM2S1P1        equ	1146	;# 
  6061   00047A                     PWM2S1P1L       equ	1146	;# 
  6062   00047B                     PWM2S1P1H       equ	1147	;# 
  6063   00047C                     PWM2S1P2        equ	1148	;# 
  6064   00047C                     PWM2S1P2L       equ	1148	;# 
  6065   00047D                     PWM2S1P2H       equ	1149	;# 
  6066   00047E                     PWM3ERS         equ	1150	;# 
  6067   00047F                     PWM3CLK         equ	1151	;# 
  6068   000480                     PWM3LDS         equ	1152	;# 
  6069   000481                     PWM3PR          equ	1153	;# 
  6070   000481                     PWM3PRL         equ	1153	;# 
  6071   000482                     PWM3PRH         equ	1154	;# 
  6072   000483                     PWM3CPRE        equ	1155	;# 
  6073   000484                     PWM3PIPOS       equ	1156	;# 
  6074   000485                     PWM3GIR         equ	1157	;# 
  6075   000486                     PWM3GIE         equ	1158	;# 
  6076   000487                     PWM3CON         equ	1159	;# 
  6077   000488                     PWM3S1CFG       equ	1160	;# 
  6078   000489                     PWM3S1P1        equ	1161	;# 
  6079   000489                     PWM3S1P1L       equ	1161	;# 
  6080   00048A                     PWM3S1P1H       equ	1162	;# 
  6081   00048B                     PWM3S1P2        equ	1163	;# 
  6082   00048B                     PWM3S1P2L       equ	1163	;# 
  6083   00048C                     PWM3S1P2H       equ	1164	;# 
  6084   00049C                     PWMLOAD         equ	1180	;# 
  6085   00049D                     PWMEN           equ	1181	;# 
  6086   00049E                     PIE0            equ	1182	;# 
  6087   00049F                     PIE1            equ	1183	;# 
  6088   0004A0                     PIE2            equ	1184	;# 
  6089   0004A1                     PIE3            equ	1185	;# 
  6090   0004A2                     PIE4            equ	1186	;# 
  6091   0004A3                     PIE5            equ	1187	;# 
  6092   0004A4                     PIE6            equ	1188	;# 
  6093   0004A5                     PIE7            equ	1189	;# 
  6094   0004A6                     PIE8            equ	1190	;# 
  6095   0004A7                     PIE9            equ	1191	;# 
  6096   0004A8                     PIE10           equ	1192	;# 
  6097   0004A9                     PIE11           equ	1193	;# 
  6098   0004AA                     PIE12           equ	1194	;# 
  6099   0004AB                     PIE13           equ	1195	;# 
  6100   0004AC                     PIE14           equ	1196	;# 
  6101   0004AD                     PIE15           equ	1197	;# 
  6102   0004AE                     PIR0            equ	1198	;# 
  6103   0004AF                     PIR1            equ	1199	;# 
  6104   0004B0                     PIR2            equ	1200	;# 
  6105   0004B1                     PIR3            equ	1201	;# 
  6106   0004B2                     PIR4            equ	1202	;# 
  6107   0004B3                     PIR5            equ	1203	;# 
  6108   0004B4                     PIR6            equ	1204	;# 
  6109   0004B5                     PIR7            equ	1205	;# 
  6110   0004B6                     PIR8            equ	1206	;# 
  6111   0004B7                     PIR9            equ	1207	;# 
  6112   0004B8                     PIR10           equ	1208	;# 
  6113   0004B9                     PIR11           equ	1209	;# 
  6114   0004BA                     PIR12           equ	1210	;# 
  6115   0004BB                     PIR13           equ	1211	;# 
  6116   0004BC                     PIR14           equ	1212	;# 
  6117   0004BD                     PIR15           equ	1213	;# 
  6118   0004BE                     LATA            equ	1214	;# 
  6119   0004BF                     LATB            equ	1215	;# 
  6120   0004C0                     LATC            equ	1216	;# 
  6121   0004C1                     LATD            equ	1217	;# 
  6122   0004C2                     LATE            equ	1218	;# 
  6123   0004C3                     LATF            equ	1219	;# 
  6124   0004C6                     TRISA           equ	1222	;# 
  6125   0004C7                     TRISB           equ	1223	;# 
  6126   0004C8                     TRISC           equ	1224	;# 
  6127   0004C9                     TRISD           equ	1225	;# 
  6128   0004CA                     TRISE           equ	1226	;# 
  6129   0004CB                     TRISF           equ	1227	;# 
  6130   0004CE                     PORTA           equ	1230	;# 
  6131   0004CF                     PORTB           equ	1231	;# 
  6132   0004D0                     PORTC           equ	1232	;# 
  6133   0004D1                     PORTD           equ	1233	;# 
  6134   0004D2                     PORTE           equ	1234	;# 
  6135   0004D3                     PORTF           equ	1235	;# 
  6136   0004D6                     INTCON0         equ	1238	;# 
  6137   0004D7                     INTCON1         equ	1239	;# 
  6138   0004D8                     STATUS          equ	1240	;# 
  6139   0004D9                     FSR2            equ	1241	;# 
  6140   0004D9                     FSR2L           equ	1241	;# 
  6141   0004DA                     FSR2H           equ	1242	;# 
  6142   0004DB                     PLUSW2          equ	1243	;# 
  6143   0004DC                     PREINC2         equ	1244	;# 
  6144   0004DD                     POSTDEC2        equ	1245	;# 
  6145   0004DE                     POSTINC2        equ	1246	;# 
  6146   0004DF                     INDF2           equ	1247	;# 
  6147   0004E0                     BSR             equ	1248	;# 
  6148   0004E1                     FSR1            equ	1249	;# 
  6149   0004E1                     FSR1L           equ	1249	;# 
  6150   0004E2                     FSR1H           equ	1250	;# 
  6151   0004E3                     PLUSW1          equ	1251	;# 
  6152   0004E4                     PREINC1         equ	1252	;# 
  6153   0004E5                     POSTDEC1        equ	1253	;# 
  6154   0004E6                     POSTINC1        equ	1254	;# 
  6155   0004E7                     INDF1           equ	1255	;# 
  6156   0004E8                     WREG            equ	1256	;# 
  6157   0004E9                     FSR0            equ	1257	;# 
  6158   0004E9                     FSR0L           equ	1257	;# 
  6159   0004EA                     FSR0H           equ	1258	;# 
  6160   0004EB                     PLUSW0          equ	1259	;# 
  6161   0004EC                     PREINC0         equ	1260	;# 
  6162   0004ED                     POSTDEC0        equ	1261	;# 
  6163   0004EE                     POSTINC0        equ	1262	;# 
  6164   0004EF                     INDF0           equ	1263	;# 
  6165   0004F0                     PCON0           equ	1264	;# 
  6166   0004F1                     PCON1           equ	1265	;# 
  6167   0004F2                     CPUDOZE         equ	1266	;# 
  6168   0004F3                     PROD            equ	1267	;# 
  6169   0004F3                     PRODL           equ	1267	;# 
  6170   0004F4                     PRODH           equ	1268	;# 
  6171   0004F5                     TABLAT          equ	1269	;# 
  6172   0004F6                     TBLPTR          equ	1270	;# 
  6173   0004F6                     TBLPTRL         equ	1270	;# 
  6174   0004F7                     TBLPTRH         equ	1271	;# 
  6175   0004F8                     TBLPTRU         equ	1272	;# 
  6176   0004F9                     PCLAT           equ	1273	;# 
  6177   0004F9                     PCL             equ	1273	;# 
  6178   0004FA                     PCLATH          equ	1274	;# 
  6179   0004FB                     PCLATU          equ	1275	;# 
  6180   0004FC                     STKPTR          equ	1276	;# 
  6181   0004FD                     TOS             equ	1277	;# 
  6182   0004FD                     TOSL            equ	1277	;# 
  6183   0004FE                     TOSH            equ	1278	;# 
  6184   0004FF                     TOSU            equ	1279	;# 
  6185   000039                     CLKRCON         equ	57	;# 
  6186   00003A                     CLKRCLK         equ	58	;# 
  6187   000040                     NVMCON0         equ	64	;# 
  6188   000041                     NVMCON1         equ	65	;# 
  6189   000042                     NVMLOCK         equ	66	;# 
  6190   000043                     NVMADR          equ	67	;# 
  6191   000043                     NVMADRL         equ	67	;# 
  6192   000044                     NVMADRH         equ	68	;# 
  6193   000045                     NVMADRU         equ	69	;# 
  6194   000046                     NVMDAT          equ	70	;# 
  6195   000046                     NVMDATL         equ	70	;# 
  6196   000047                     NVMDATH         equ	71	;# 
  6197   000048                     VREGCON         equ	72	;# 
  6198   000049                     BORCON          equ	73	;# 
  6199   00004A                     HLVDCON0        equ	74	;# 
  6200   00004B                     HLVDCON1        equ	75	;# 
  6201   00004C                     ZCDCON          equ	76	;# 
  6202   000060                     PMD0            equ	96	;# 
  6203   000061                     PMD1            equ	97	;# 
  6204   000063                     PMD3            equ	99	;# 
  6205   000064                     PMD4            equ	100	;# 
  6206   000065                     PMD5            equ	101	;# 
  6207   000066                     PMD6            equ	102	;# 
  6208   000067                     PMD7            equ	103	;# 
  6209   000068                     PMD8            equ	104	;# 
  6210   00006A                     MD1CON0         equ	106	;# 
  6211   00006B                     MD1CON1         equ	107	;# 
  6212   00006C                     MD1SRC          equ	108	;# 
  6213   00006D                     MD1CARL         equ	109	;# 
  6214   00006E                     MD1CARH         equ	110	;# 
  6215   00006F                     CMOUT           equ	111	;# 
  6216   000070                     CM1CON0         equ	112	;# 
  6217   000071                     CM1CON1         equ	113	;# 
  6218   000072                     CM1NCH          equ	114	;# 
  6219   000073                     CM1PCH          equ	115	;# 
  6220   000074                     CM2CON0         equ	116	;# 
  6221   000075                     CM2CON1         equ	117	;# 
  6222   000076                     CM2NCH          equ	118	;# 
  6223   000077                     CM2PCH          equ	119	;# 
  6224   000078                     WDTCON0         equ	120	;# 
  6225   000079                     WDTCON1         equ	121	;# 
  6226   00007A                     WDTPS           equ	122	;# 
  6227   00007A                     WDTPSL          equ	122	;# 
  6228   00007B                     WDTPSH          equ	123	;# 
  6229   00007C                     WDTTMR          equ	124	;# 
  6230   00007D                     DAC1DAT         equ	125	;# 
  6231   00007D                     DAC1DATL        equ	125	;# 
  6232   00007F                     DAC1CON         equ	127	;# 
  6233   000080                     SPI1RXB         equ	128	;# 
  6234   000081                     SPI1TXB         equ	129	;# 
  6235   000082                     SPI1TCNT        equ	130	;# 
  6236   000082                     SPI1TCNTL       equ	130	;# 
  6237   000083                     SPI1TCNTH       equ	131	;# 
  6238   000084                     SPI1CON0        equ	132	;# 
  6239   000085                     SPI1CON1        equ	133	;# 
  6240   000086                     SPI1CON2        equ	134	;# 
  6241   000087                     SPI1STATUS      equ	135	;# 
  6242   000088                     SPI1TWIDTH      equ	136	;# 
  6243   000089                     SPI1BAUD        equ	137	;# 
  6244   00008A                     SPI1INTF        equ	138	;# 
  6245   00008B                     SPI1INTE        equ	139	;# 
  6246   00008C                     SPI1CLK         equ	140	;# 
  6247   00008D                     SPI2RXB         equ	141	;# 
  6248   00008E                     SPI2TXB         equ	142	;# 
  6249   00008F                     SPI2TCNT        equ	143	;# 
  6250   00008F                     SPI2TCNTL       equ	143	;# 
  6251   000090                     SPI2TCNTH       equ	144	;# 
  6252   000091                     SPI2CON0        equ	145	;# 
  6253   000092                     SPI2CON1        equ	146	;# 
  6254   000093                     SPI2CON2        equ	147	;# 
  6255   000094                     SPI2STATUS      equ	148	;# 
  6256   000095                     SPI2TWIDTH      equ	149	;# 
  6257   000096                     SPI2BAUD        equ	150	;# 
  6258   000097                     SPI2INTF        equ	151	;# 
  6259   000098                     SPI2INTE        equ	152	;# 
  6260   000099                     SPI2CLK         equ	153	;# 
  6261   0000AC                     ACTCON          equ	172	;# 
  6262   0000AD                     OSCCON1         equ	173	;# 
  6263   0000AE                     OSCCON2         equ	174	;# 
  6264   0000AF                     OSCCON3         equ	175	;# 
  6265   0000B0                     OSCTUNE         equ	176	;# 
  6266   0000B1                     OSCFRQ          equ	177	;# 
  6267   0000B1                     OSCFREQ         equ	177	;# 
  6268   0000B2                     OSCSTAT         equ	178	;# 
  6269   0000B2                     OSCSTAT1        equ	178	;# 
  6270   0000B3                     OSCEN           equ	179	;# 
  6271   0000B4                     PRLOCK          equ	180	;# 
  6272   0000B5                     SCANPR          equ	181	;# 
  6273   0000B6                     DMA1PR          equ	182	;# 
  6274   0000B7                     DMA2PR          equ	183	;# 
  6275   0000B8                     DMA3PR          equ	184	;# 
  6276   0000B9                     DMA4PR          equ	185	;# 
  6277   0000BA                     DMA5PR          equ	186	;# 
  6278   0000BB                     DMA6PR          equ	187	;# 
  6279   0000BE                     MAINPR          equ	190	;# 
  6280   0000BF                     ISRPR           equ	191	;# 
  6281   0000D4                     CLCDATA         equ	212	;# 
  6282   0000D5                     CLCSELECT       equ	213	;# 
  6283   0000D6                     CLCnCON         equ	214	;# 
  6284   0000D7                     CLCnPOL         equ	215	;# 
  6285   0000D8                     CLCnSEL0        equ	216	;# 
  6286   0000D9                     CLCnSEL1        equ	217	;# 
  6287   0000DA                     CLCnSEL2        equ	218	;# 
  6288   0000DB                     CLCnSEL3        equ	219	;# 
  6289   0000DC                     CLCnGLS0        equ	220	;# 
  6290   0000DD                     CLCnGLS1        equ	221	;# 
  6291   0000DE                     CLCnGLS2        equ	222	;# 
  6292   0000DF                     CLCnGLS3        equ	223	;# 
  6293   0000E8                     DMASELECT       equ	232	;# 
  6294   0000E9                     DMAnBUF         equ	233	;# 
  6295   0000EA                     DMAnDCNT        equ	234	;# 
  6296   0000EA                     DMAnDCNTL       equ	234	;# 
  6297   0000EB                     DMAnDCNTH       equ	235	;# 
  6298   0000EC                     DMAnDPTR        equ	236	;# 
  6299   0000EC                     DMAnDPTRL       equ	236	;# 
  6300   0000ED                     DMAnDPTRH       equ	237	;# 
  6301   0000EE                     DMAnDSZ         equ	238	;# 
  6302   0000EE                     DMAnDSZL        equ	238	;# 
  6303   0000EF                     DMAnDSZH        equ	239	;# 
  6304   0000F0                     DMAnDSA         equ	240	;# 
  6305   0000F0                     DMAnDSAL        equ	240	;# 
  6306   0000F1                     DMAnDSAH        equ	241	;# 
  6307   0000F2                     DMAnSCNT        equ	242	;# 
  6308   0000F2                     DMAnSCNTL       equ	242	;# 
  6309   0000F3                     DMAnSCNTH       equ	243	;# 
  6310   0000F4                     DMAnSPTR        equ	244	;# 
  6311   0000F4                     DMAnSPTRL       equ	244	;# 
  6312   0000F5                     DMAnSPTRH       equ	245	;# 
  6313   0000F6                     DMAnSPTRU       equ	246	;# 
  6314   0000F7                     DMAnSSZ         equ	247	;# 
  6315   0000F7                     DMAnSSZL        equ	247	;# 
  6316   0000F8                     DMAnSSZH        equ	248	;# 
  6317   0000F9                     DMAnSSA         equ	249	;# 
  6318   0000F9                     DMAnSSAL        equ	249	;# 
  6319   0000FA                     DMAnSSAH        equ	250	;# 
  6320   0000FB                     DMAnSSAU        equ	251	;# 
  6321   0000FC                     DMAnCON0        equ	252	;# 
  6322   0000FD                     DMAnCON1        equ	253	;# 
  6323   0000FE                     DMAnAIRQ        equ	254	;# 
  6324   0000FF                     DMAnSIRQ        equ	255	;# 
  6325   000200                     PPSLOCK         equ	512	;# 
  6326   000201                     RA0PPS          equ	513	;# 
  6327   000202                     RA1PPS          equ	514	;# 
  6328   000203                     RA2PPS          equ	515	;# 
  6329   000204                     RA3PPS          equ	516	;# 
  6330   000205                     RA4PPS          equ	517	;# 
  6331   000206                     RA5PPS          equ	518	;# 
  6332   000207                     RA6PPS          equ	519	;# 
  6333   000208                     RA7PPS          equ	520	;# 
  6334   000209                     RB0PPS          equ	521	;# 
  6335   00020A                     RB1PPS          equ	522	;# 
  6336   00020B                     RB2PPS          equ	523	;# 
  6337   00020C                     RB3PPS          equ	524	;# 
  6338   00020D                     RB4PPS          equ	525	;# 
  6339   00020E                     RB5PPS          equ	526	;# 
  6340   00020F                     RB6PPS          equ	527	;# 
  6341   000210                     RB7PPS          equ	528	;# 
  6342   000211                     RC0PPS          equ	529	;# 
  6343   000212                     RC1PPS          equ	530	;# 
  6344   000213                     RC2PPS          equ	531	;# 
  6345   000214                     RC3PPS          equ	532	;# 
  6346   000215                     RC4PPS          equ	533	;# 
  6347   000216                     RC5PPS          equ	534	;# 
  6348   000217                     RC6PPS          equ	535	;# 
  6349   000218                     RC7PPS          equ	536	;# 
  6350   000219                     RD0PPS          equ	537	;# 
  6351   00021A                     RD1PPS          equ	538	;# 
  6352   00021B                     RD2PPS          equ	539	;# 
  6353   00021C                     RD3PPS          equ	540	;# 
  6354   00021D                     RD4PPS          equ	541	;# 
  6355   00021E                     RD5PPS          equ	542	;# 
  6356   00021F                     RD6PPS          equ	543	;# 
  6357   000220                     RD7PPS          equ	544	;# 
  6358   000221                     RE0PPS          equ	545	;# 
  6359   000222                     RE1PPS          equ	546	;# 
  6360   000223                     RE2PPS          equ	547	;# 
  6361   000229                     RF0PPS          equ	553	;# 
  6362   00022A                     RF1PPS          equ	554	;# 
  6363   00022B                     RF2PPS          equ	555	;# 
  6364   00022C                     RF3PPS          equ	556	;# 
  6365   00022D                     RF4PPS          equ	557	;# 
  6366   00022E                     RF5PPS          equ	558	;# 
  6367   00022F                     RF6PPS          equ	559	;# 
  6368   000230                     RF7PPS          equ	560	;# 
  6369   00023E                     INT0PPS         equ	574	;# 
  6370   00023F                     INT1PPS         equ	575	;# 
  6371   000240                     INT2PPS         equ	576	;# 
  6372   000241                     T0CKIPPS        equ	577	;# 
  6373   000242                     T1CKIPPS        equ	578	;# 
  6374   000243                     T1GPPS          equ	579	;# 
  6375   000244                     T3CKIPPS        equ	580	;# 
  6376   000245                     T3GPPS          equ	581	;# 
  6377   000246                     T5CKIPPS        equ	582	;# 
  6378   000247                     T5GPPS          equ	583	;# 
  6379   000248                     T2INPPS         equ	584	;# 
  6380   000249                     T4INPPS         equ	585	;# 
  6381   00024A                     T6INPPS         equ	586	;# 
  6382   00024F                     CCP1PPS         equ	591	;# 
  6383   000250                     CCP2PPS         equ	592	;# 
  6384   000251                     CCP3PPS         equ	593	;# 
  6385   000253                     PWM1ERSPPS      equ	595	;# 
  6386   000254                     PWM2ERSPPS      equ	596	;# 
  6387   000255                     PWM3ERSPPS      equ	597	;# 
  6388   000257                     PWMIN0PPS       equ	599	;# 
  6389   000258                     PWMIN1PPS       equ	600	;# 
  6390   000259                     SMT1WINPPS      equ	601	;# 
  6391   00025A                     SMT1SIGPPS      equ	602	;# 
  6392   00025B                     CWG1PPS         equ	603	;# 
  6393   00025B                     CWG1INPPS       equ	603	;# 
  6394   00025C                     CWG2PPS         equ	604	;# 
  6395   00025C                     CWG2INPPS       equ	604	;# 
  6396   00025D                     CWG3PPS         equ	605	;# 
  6397   00025D                     CWG3INPPS       equ	605	;# 
  6398   00025E                     MD1CARLPPS      equ	606	;# 
  6399   00025E                     MDCARLPPS       equ	606	;# 
  6400   00025F                     MD1CARHPPS      equ	607	;# 
  6401   00025F                     MDCARHPPS       equ	607	;# 
  6402   000260                     MD1SRCPPS       equ	608	;# 
  6403   000260                     MDSRCPPS        equ	608	;# 
  6404   000261                     CLCIN0PPS       equ	609	;# 
  6405   000262                     CLCIN1PPS       equ	610	;# 
  6406   000263                     CLCIN2PPS       equ	611	;# 
  6407   000264                     CLCIN3PPS       equ	612	;# 
  6408   000265                     CLCIN4PPS       equ	613	;# 
  6409   000266                     CLCIN5PPS       equ	614	;# 
  6410   000267                     CLCIN6PPS       equ	615	;# 
  6411   000268                     CLCIN7PPS       equ	616	;# 
  6412   000269                     ADACTPPS        equ	617	;# 
  6413   00026A                     SPI1SCKPPS      equ	618	;# 
  6414   00026B                     SPI1SDIPPS      equ	619	;# 
  6415   00026C                     SPI1SSPPS       equ	620	;# 
  6416   00026D                     SPI2SCKPPS      equ	621	;# 
  6417   00026E                     SPI2SDIPPS      equ	622	;# 
  6418   00026F                     SPI2SSPPS       equ	623	;# 
  6419   000270                     I2C1SDAPPS      equ	624	;# 
  6420   000271                     I2C1SCLPPS      equ	625	;# 
  6421   000272                     U1RXPPS         equ	626	;# 
  6422   000273                     U1CTSPPS        equ	627	;# 
  6423   000274                     U2RXPPS         equ	628	;# 
  6424   000275                     U2CTSPPS        equ	629	;# 
  6425   000276                     U3RXPPS         equ	630	;# 
  6426   000277                     U3CTSPPS        equ	631	;# 
  6427   000278                     U4RXPPS         equ	632	;# 
  6428   000279                     U4CTSPPS        equ	633	;# 
  6429   00027A                     U5RXPPS         equ	634	;# 
  6430   00027B                     U5CTSPPS        equ	635	;# 
  6431   000286                     RC4I2C          equ	646	;# 
  6432   000287                     RC3I2C          equ	647	;# 
  6433   000288                     RB2I2C          equ	648	;# 
  6434   000289                     RB1I2C          equ	649	;# 
  6435   00028B                     I2C1RXB         equ	651	;# 
  6436   00028C                     I2C1TXB         equ	652	;# 
  6437   00028D                     I2C1CNT         equ	653	;# 
  6438   00028E                     I2C1ADB0        equ	654	;# 
  6439   00028F                     I2C1ADB1        equ	655	;# 
  6440   000290                     I2C1ADR0        equ	656	;# 
  6441   000291                     I2C1ADR1        equ	657	;# 
  6442   000292                     I2C1ADR2        equ	658	;# 
  6443   000293                     I2C1ADR3        equ	659	;# 
  6444   000294                     I2C1CON0        equ	660	;# 
  6445   000295                     I2C1CON1        equ	661	;# 
  6446   000296                     I2C1CON2        equ	662	;# 
  6447   000297                     I2C1ERR         equ	663	;# 
  6448   000298                     I2C1STAT0       equ	664	;# 
  6449   000299                     I2C1STAT1       equ	665	;# 
  6450   00029A                     I2C1PIR         equ	666	;# 
  6451   00029B                     I2C1PIE         equ	667	;# 
  6452   00029C                     I2C1CLK         equ	668	;# 
  6453   00029D                     I2C1BTO         equ	669	;# 
  6454   0002A1                     U1RXB           equ	673	;# 
  6455   0002A1                     U1RXBL          equ	673	;# 
  6456   0002A2                     U1RXCHK         equ	674	;# 
  6457   0002A3                     U1TXB           equ	675	;# 
  6458   0002A3                     U1TXBL          equ	675	;# 
  6459   0002A4                     U1TXCHK         equ	676	;# 
  6460   0002A5                     U1P1            equ	677	;# 
  6461   0002A5                     U1P1L           equ	677	;# 
  6462   0002A6                     U1P1H           equ	678	;# 
  6463   0002A7                     U1P2            equ	679	;# 
  6464   0002A7                     U1P2L           equ	679	;# 
  6465   0002A8                     U1P2H           equ	680	;# 
  6466   0002A9                     U1P3            equ	681	;# 
  6467   0002A9                     U1P3L           equ	681	;# 
  6468   0002AA                     U1P3H           equ	682	;# 
  6469   0002AB                     U1CON0          equ	683	;# 
  6470   0002AC                     U1CON1          equ	684	;# 
  6471   0002AD                     U1CON2          equ	685	;# 
  6472   0002AE                     U1BRG           equ	686	;# 
  6473   0002AE                     U1BRGL          equ	686	;# 
  6474   0002AF                     U1BRGH          equ	687	;# 
  6475   0002B0                     U1FIFO          equ	688	;# 
  6476   0002B1                     U1UIR           equ	689	;# 
  6477   0002B2                     U1ERRIR         equ	690	;# 
  6478   0002B3                     U1ERRIE         equ	691	;# 
  6479   0002B4                     U2RXB           equ	692	;# 
  6480   0002B4                     U2RXBL          equ	692	;# 
  6481   0002B6                     U2TXB           equ	694	;# 
  6482   0002B6                     U2TXBL          equ	694	;# 
  6483   0002B8                     U2P1            equ	696	;# 
  6484   0002B8                     U2P1L           equ	696	;# 
  6485   0002BA                     U2P2            equ	698	;# 
  6486   0002BA                     U2P2L           equ	698	;# 
  6487   0002BC                     U2P3            equ	700	;# 
  6488   0002BC                     U2P3L           equ	700	;# 
  6489   0002BE                     U2CON0          equ	702	;# 
  6490   0002BF                     U2CON1          equ	703	;# 
  6491   0002C0                     U2CON2          equ	704	;# 
  6492   0002C1                     U2BRG           equ	705	;# 
  6493   0002C1                     U2BRGL          equ	705	;# 
  6494   0002C2                     U2BRGH          equ	706	;# 
  6495   0002C3                     U2FIFO          equ	707	;# 
  6496   0002C4                     U2UIR           equ	708	;# 
  6497   0002C5                     U2ERRIR         equ	709	;# 
  6498   0002C6                     U2ERRIE         equ	710	;# 
  6499   0002C7                     U3RXB           equ	711	;# 
  6500   0002C7                     U3RXBL          equ	711	;# 
  6501   0002C9                     U3TXB           equ	713	;# 
  6502   0002C9                     U3TXBL          equ	713	;# 
  6503   0002CB                     U3P1            equ	715	;# 
  6504   0002CB                     U3P1L           equ	715	;# 
  6505   0002CD                     U3P2            equ	717	;# 
  6506   0002CD                     U3P2L           equ	717	;# 
  6507   0002CF                     U3P3            equ	719	;# 
  6508   0002CF                     U3P3L           equ	719	;# 
  6509   0002D1                     U3CON0          equ	721	;# 
  6510   0002D2                     U3CON1          equ	722	;# 
  6511   0002D3                     U3CON2          equ	723	;# 
  6512   0002D4                     U3BRG           equ	724	;# 
  6513   0002D4                     U3BRGL          equ	724	;# 
  6514   0002D5                     U3BRGH          equ	725	;# 
  6515   0002D6                     U3FIFO          equ	726	;# 
  6516   0002D7                     U3UIR           equ	727	;# 
  6517   0002D8                     U3ERRIR         equ	728	;# 
  6518   0002D9                     U3ERRIE         equ	729	;# 
  6519   0002DA                     U4RXB           equ	730	;# 
  6520   0002DA                     U4RXBL          equ	730	;# 
  6521   0002DC                     U4TXB           equ	732	;# 
  6522   0002DC                     U4TXBL          equ	732	;# 
  6523   0002DE                     U4P1            equ	734	;# 
  6524   0002DE                     U4P1L           equ	734	;# 
  6525   0002E0                     U4P2            equ	736	;# 
  6526   0002E0                     U4P2L           equ	736	;# 
  6527   0002E2                     U4P3            equ	738	;# 
  6528   0002E2                     U4P3L           equ	738	;# 
  6529   0002E4                     U4CON0          equ	740	;# 
  6530   0002E5                     U4CON1          equ	741	;# 
  6531   0002E6                     U4CON2          equ	742	;# 
  6532   0002E7                     U4BRG           equ	743	;# 
  6533   0002E7                     U4BRGL          equ	743	;# 
  6534   0002E8                     U4BRGH          equ	744	;# 
  6535   0002E9                     U4FIFO          equ	745	;# 
  6536   0002EA                     U4UIR           equ	746	;# 
  6537   0002EB                     U4ERRIR         equ	747	;# 
  6538   0002EC                     U4ERRIE         equ	748	;# 
  6539   0002ED                     U5RXB           equ	749	;# 
  6540   0002ED                     U5RXBL          equ	749	;# 
  6541   0002EF                     U5TXB           equ	751	;# 
  6542   0002EF                     U5TXBL          equ	751	;# 
  6543   0002F1                     U5P1            equ	753	;# 
  6544   0002F1                     U5P1L           equ	753	;# 
  6545   0002F3                     U5P2            equ	755	;# 
  6546   0002F3                     U5P2L           equ	755	;# 
  6547   0002F5                     U5P3            equ	757	;# 
  6548   0002F5                     U5P3L           equ	757	;# 
  6549   0002F7                     U5CON0          equ	759	;# 
  6550   0002F8                     U5CON1          equ	760	;# 
  6551   0002F9                     U5CON2          equ	761	;# 
  6552   0002FA                     U5BRG           equ	762	;# 
  6553   0002FA                     U5BRGL          equ	762	;# 
  6554   0002FB                     U5BRGH          equ	763	;# 
  6555   0002FC                     U5FIFO          equ	764	;# 
  6556   0002FD                     U5UIR           equ	765	;# 
  6557   0002FE                     U5ERRIR         equ	766	;# 
  6558   0002FF                     U5ERRIE         equ	767	;# 
  6559   000300                     SMT1TMR         equ	768	;# 
  6560   000300                     SMT1TMRL        equ	768	;# 
  6561   000301                     SMT1TMRH        equ	769	;# 
  6562   000302                     SMT1TMRU        equ	770	;# 
  6563   000303                     SMT1CPR         equ	771	;# 
  6564   000303                     SMT1CPRL        equ	771	;# 
  6565   000304                     SMT1CPRH        equ	772	;# 
  6566   000305                     SMT1CPRU        equ	773	;# 
  6567   000306                     SMT1CPW         equ	774	;# 
  6568   000306                     SMT1CPWL        equ	774	;# 
  6569   000307                     SMT1CPWH        equ	775	;# 
  6570   000308                     SMT1CPWU        equ	776	;# 
  6571   000309                     SMT1PR          equ	777	;# 
  6572   000309                     SMT1PRL         equ	777	;# 
  6573   00030A                     SMT1PRH         equ	778	;# 
  6574   00030B                     SMT1PRU         equ	779	;# 
  6575   00030C                     SMT1CON0        equ	780	;# 
  6576   00030D                     SMT1CON1        equ	781	;# 
  6577   00030E                     SMT1STAT        equ	782	;# 
  6578   00030F                     SMT1CLK         equ	783	;# 
  6579   000310                     SMT1SIG         equ	784	;# 
  6580   000311                     SMT1WIN         equ	785	;# 
  6581   000318                     TMR0L           equ	792	;# 
  6582   000318                     TMR0            equ	792	;# 
  6583   000319                     TMR0H           equ	793	;# 
  6584   000319                     PR0             equ	793	;# 
  6585   00031A                     T0CON0          equ	794	;# 
  6586   00031B                     T0CON1          equ	795	;# 
  6587   00031C                     TMR1            equ	796	;# 
  6588   00031C                     TMR1L           equ	796	;# 
  6589   00031D                     TMR1H           equ	797	;# 
  6590   00031E                     T1CON           equ	798	;# 
  6591   00031E                     TMR1CON         equ	798	;# 
  6592   00031F                     T1GCON          equ	799	;# 
  6593   00031F                     TMR1GCON        equ	799	;# 
  6594   000320                     T1GATE          equ	800	;# 
  6595   000320                     TMR1GATE        equ	800	;# 
  6596   000321                     T1CLK           equ	801	;# 
  6597   000321                     TMR1CLK         equ	801	;# 
  6598   000321                     PR1             equ	801	;# 
  6599   000322                     T2TMR           equ	802	;# 
  6600   000322                     TMR2            equ	802	;# 
  6601   000323                     T2PR            equ	803	;# 
  6602   000323                     PR2             equ	803	;# 
  6603   000324                     T2CON           equ	804	;# 
  6604   000325                     T2HLT           equ	805	;# 
  6605   000326                     T2CLKCON        equ	806	;# 
  6606   000326                     T2CLK           equ	806	;# 
  6607   000327                     T2RST           equ	807	;# 
  6608   000328                     TMR3            equ	808	;# 
  6609   000328                     TMR3L           equ	808	;# 
  6610   000329                     TMR3H           equ	809	;# 
  6611   00032A                     T3CON           equ	810	;# 
  6612   00032A                     TMR3CON         equ	810	;# 
  6613   00032B                     T3GCON          equ	811	;# 
  6614   00032B                     TMR3GCON        equ	811	;# 
  6615   00032C                     T3GATE          equ	812	;# 
  6616   00032C                     TMR3GATE        equ	812	;# 
  6617   00032D                     T3CLK           equ	813	;# 
  6618   00032D                     TMR3CLK         equ	813	;# 
  6619   00032D                     PR3             equ	813	;# 
  6620   00032E                     T4TMR           equ	814	;# 
  6621   00032E                     TMR4            equ	814	;# 
  6622   00032F                     T4PR            equ	815	;# 
  6623   00032F                     PR4             equ	815	;# 
  6624   000330                     T4CON           equ	816	;# 
  6625   000331                     T4HLT           equ	817	;# 
  6626   000332                     T4CLKCON        equ	818	;# 
  6627   000332                     T4CLK           equ	818	;# 
  6628   000333                     T4RST           equ	819	;# 
  6629   000334                     TMR5            equ	820	;# 
  6630   000334                     TMR5L           equ	820	;# 
  6631   000335                     TMR5H           equ	821	;# 
  6632   000336                     T5CON           equ	822	;# 
  6633   000336                     TMR5CON         equ	822	;# 
  6634   000337                     T5GCON          equ	823	;# 
  6635   000337                     TMR5GCON        equ	823	;# 
  6636   000338                     T5GATE          equ	824	;# 
  6637   000338                     TMR5GATE        equ	824	;# 
  6638   000339                     T5CLK           equ	825	;# 
  6639   000339                     TMR5CLK         equ	825	;# 
  6640   000339                     PR5             equ	825	;# 
  6641   00033A                     T6TMR           equ	826	;# 
  6642   00033A                     TMR6            equ	826	;# 
  6643   00033B                     T6PR            equ	827	;# 
  6644   00033B                     PR6             equ	827	;# 
  6645   00033C                     T6CON           equ	828	;# 
  6646   00033D                     T6HLT           equ	829	;# 
  6647   00033E                     T6CLKCON        equ	830	;# 
  6648   00033E                     T6CLK           equ	830	;# 
  6649   00033F                     T6RST           equ	831	;# 
  6650   000340                     CCPR1           equ	832	;# 
  6651   000340                     CCPR1L          equ	832	;# 
  6652   000341                     CCPR1H          equ	833	;# 
  6653   000342                     CCP1CON         equ	834	;# 
  6654   000343                     CCP1CAP         equ	835	;# 
  6655   000344                     CCPR2           equ	836	;# 
  6656   000344                     CCPR2L          equ	836	;# 
  6657   000345                     CCPR2H          equ	837	;# 
  6658   000346                     CCP2CON         equ	838	;# 
  6659   000347                     CCP2CAP         equ	839	;# 
  6660   000348                     CCPR3           equ	840	;# 
  6661   000348                     CCPR3L          equ	840	;# 
  6662   000349                     CCPR3H          equ	841	;# 
  6663   00034A                     CCP3CON         equ	842	;# 
  6664   00034B                     CCP3CAP         equ	843	;# 
  6665   00034C                     CCPTMRS0        equ	844	;# 
  6666   00034F                     CRCDATA         equ	847	;# 
  6667   00034F                     CRCDATL         equ	847	;# 
  6668   000350                     CRCDATH         equ	848	;# 
  6669   000351                     CRCACC          equ	849	;# 
  6670   000351                     CRCACCL         equ	849	;# 
  6671   000352                     CRCACCH         equ	850	;# 
  6672   000353                     CRCSHFT         equ	851	;# 
  6673   000353                     CRCSHIFTL       equ	851	;# 
  6674   000354                     CRCSHIFTH       equ	852	;# 
  6675   000355                     CRCXOR          equ	853	;# 
  6676   000355                     CRCXORL         equ	853	;# 
  6677   000356                     CRCXORH         equ	854	;# 
  6678   000357                     CRCCON0         equ	855	;# 
  6679   000358                     CRCCON1         equ	856	;# 
  6680   00035A                     SCANLADR        equ	858	;# 
  6681   00035A                     SCANLADRL       equ	858	;# 
  6682   00035B                     SCANLADRH       equ	859	;# 
  6683   00035C                     SCANLADRU       equ	860	;# 
  6684   00035D                     SCANHADR        equ	861	;# 
  6685   00035D                     SCANHADRL       equ	861	;# 
  6686   00035E                     SCANHADRH       equ	862	;# 
  6687   00035F                     SCANHADRU       equ	863	;# 
  6688   000360                     SCANCON0        equ	864	;# 
  6689   000361                     SCANTRIG        equ	865	;# 
  6690   000362                     IPR0            equ	866	;# 
  6691   000363                     IPR1            equ	867	;# 
  6692   000364                     IPR2            equ	868	;# 
  6693   000365                     IPR3            equ	869	;# 
  6694   000366                     IPR4            equ	870	;# 
  6695   000367                     IPR5            equ	871	;# 
  6696   000368                     IPR6            equ	872	;# 
  6697   000369                     IPR7            equ	873	;# 
  6698   00036A                     IPR8            equ	874	;# 
  6699   00036B                     IPR9            equ	875	;# 
  6700   00036C                     IPR10           equ	876	;# 
  6701   00036D                     IPR11           equ	877	;# 
  6702   00036E                     IPR12           equ	878	;# 
  6703   00036F                     IPR13           equ	879	;# 
  6704   000370                     IPR14           equ	880	;# 
  6705   000371                     IPR15           equ	881	;# 
  6706   000373                     STATUS_CSHAD    equ	883	;# 
  6707   000374                     WREG_CSHAD      equ	884	;# 
  6708   000375                     BSR_CSHAD       equ	885	;# 
  6709   000376                     SHADCON         equ	886	;# 
  6710   000377                     STATUS_SHAD     equ	887	;# 
  6711   000378                     WREG_SHAD       equ	888	;# 
  6712   000379                     BSR_SHAD        equ	889	;# 
  6713   00037A                     PCLATH_SHAD     equ	890	;# 
  6714   00037B                     PCLATU_SHAD     equ	891	;# 
  6715   00037C                     FSR0SH          equ	892	;# 
  6716   00037C                     FSR0L_SHAD      equ	892	;# 
  6717   00037D                     FSR0H_SHAD      equ	893	;# 
  6718   00037E                     FSR1SH          equ	894	;# 
  6719   00037E                     FSR1L_SHAD      equ	894	;# 
  6720   00037F                     FSR1H_SHAD      equ	895	;# 
  6721   000380                     FSR2SH          equ	896	;# 
  6722   000380                     FSR2L_SHAD      equ	896	;# 
  6723   000381                     FSR2H_SHAD      equ	897	;# 
  6724   000382                     PRODSH          equ	898	;# 
  6725   000382                     PRODL_SHAD      equ	898	;# 
  6726   000383                     PRODH_SHAD      equ	899	;# 
  6727   0003BC                     CWG1CLK         equ	956	;# 
  6728   0003BC                     CWG1CLKCON      equ	956	;# 
  6729   0003BD                     CWG1ISM         equ	957	;# 
  6730   0003BD                     CWG1DAT         equ	957	;# 
  6731   0003BE                     CWG1DBR         equ	958	;# 
  6732   0003BF                     CWG1DBF         equ	959	;# 
  6733   0003C0                     CWG1CON0        equ	960	;# 
  6734   0003C1                     CWG1CON1        equ	961	;# 
  6735   0003C2                     CWG1AS0         equ	962	;# 
  6736   0003C3                     CWG1AS1         equ	963	;# 
  6737   0003C4                     CWG1STR         equ	964	;# 
  6738   0003C5                     CWG2CLK         equ	965	;# 
  6739   0003C5                     CWG2CLKCON      equ	965	;# 
  6740   0003C6                     CWG2ISM         equ	966	;# 
  6741   0003C6                     CWG2DAT         equ	966	;# 
  6742   0003C7                     CWG2DBR         equ	967	;# 
  6743   0003C8                     CWG2DBF         equ	968	;# 
  6744   0003C9                     CWG2CON0        equ	969	;# 
  6745   0003CA                     CWG2CON1        equ	970	;# 
  6746   0003CB                     CWG2AS0         equ	971	;# 
  6747   0003CC                     CWG2AS1         equ	972	;# 
  6748   0003CD                     CWG2STR         equ	973	;# 
  6749   0003CE                     CWG3CLK         equ	974	;# 
  6750   0003CE                     CWG3CLKCON      equ	974	;# 
  6751   0003CF                     CWG3ISM         equ	975	;# 
  6752   0003CF                     CWG3DAT         equ	975	;# 
  6753   0003D0                     CWG3DBR         equ	976	;# 
  6754   0003D1                     CWG3DBF         equ	977	;# 
  6755   0003D2                     CWG3CON0        equ	978	;# 
  6756   0003D3                     CWG3CON1        equ	979	;# 
  6757   0003D4                     CWG3AS0         equ	980	;# 
  6758   0003D5                     CWG3AS1         equ	981	;# 
  6759   0003D6                     CWG3STR         equ	982	;# 
  6760   0003D7                     FVRCON          equ	983	;# 
  6761   0003D8                     ADCPCON         equ	984	;# 
  6762   0003D8                     ADCP            equ	984	;# 
  6763   0003D9                     ADLTH           equ	985	;# 
  6764   0003D9                     ADLTHL          equ	985	;# 
  6765   0003DA                     ADLTHH          equ	986	;# 
  6766   0003DB                     ADUTH           equ	987	;# 
  6767   0003DB                     ADUTHL          equ	987	;# 
  6768   0003DC                     ADUTHH          equ	988	;# 
  6769   0003DD                     ADERR           equ	989	;# 
  6770   0003DD                     ADERRL          equ	989	;# 
  6771   0003DE                     ADERRH          equ	990	;# 
  6772   0003DF                     ADSTPT          equ	991	;# 
  6773   0003DF                     ADSTPTL         equ	991	;# 
  6774   0003E0                     ADSTPTH         equ	992	;# 
  6775   0003E1                     ADFLTR          equ	993	;# 
  6776   0003E1                     ADFLTRL         equ	993	;# 
  6777   0003E2                     ADFLTRH         equ	994	;# 
  6778   0003E3                     ADACC           equ	995	;# 
  6779   0003E3                     ADACCL          equ	995	;# 
  6780   0003E4                     ADACCH          equ	996	;# 
  6781   0003E5                     ADACCU          equ	997	;# 
  6782   0003E6                     ADCNT           equ	998	;# 
  6783   0003E7                     ADRPT           equ	999	;# 
  6784   0003E8                     ADPREV          equ	1000	;# 
  6785   0003E8                     ADPREVL         equ	1000	;# 
  6786   0003E9                     ADPREVH         equ	1001	;# 
  6787   0003EA                     ADRES           equ	1002	;# 
  6788   0003EA                     ADRESL          equ	1002	;# 
  6789   0003EB                     ADRESH          equ	1003	;# 
  6790   0003EC                     ADPCH           equ	1004	;# 
  6791   0003EE                     ADACQ           equ	1006	;# 
  6792   0003EE                     ADACQL          equ	1006	;# 
  6793   0003EF                     ADACQH          equ	1007	;# 
  6794   0003F0                     ADCAP           equ	1008	;# 
  6795   0003F1                     ADPRE           equ	1009	;# 
  6796   0003F1                     ADPREL          equ	1009	;# 
  6797   0003F2                     ADPREH          equ	1010	;# 
  6798   0003F3                     ADCON0          equ	1011	;# 
  6799   0003F4                     ADCON1          equ	1012	;# 
  6800   0003F5                     ADCON2          equ	1013	;# 
  6801   0003F6                     ADCON3          equ	1014	;# 
  6802   0003F7                     ADSTAT          equ	1015	;# 
  6803   0003F8                     ADREF           equ	1016	;# 
  6804   0003F9                     ADACT           equ	1017	;# 
  6805   0003FA                     ADCLK           equ	1018	;# 
  6806   000400                     ANSELA          equ	1024	;# 
  6807   000401                     WPUA            equ	1025	;# 
  6808   000402                     ODCONA          equ	1026	;# 
  6809   000403                     SLRCONA         equ	1027	;# 
  6810   000404                     INLVLA          equ	1028	;# 
  6811   000405                     IOCAP           equ	1029	;# 
  6812   000406                     IOCAN           equ	1030	;# 
  6813   000407                     IOCAF           equ	1031	;# 
  6814   000408                     ANSELB          equ	1032	;# 
  6815   000409                     WPUB            equ	1033	;# 
  6816   00040A                     ODCONB          equ	1034	;# 
  6817   00040B                     SLRCONB         equ	1035	;# 
  6818   00040C                     INLVLB          equ	1036	;# 
  6819   00040D                     IOCBP           equ	1037	;# 
  6820   00040E                     IOCBN           equ	1038	;# 
  6821   00040F                     IOCBF           equ	1039	;# 
  6822   000410                     ANSELC          equ	1040	;# 
  6823   000411                     WPUC            equ	1041	;# 
  6824   000412                     ODCONC          equ	1042	;# 
  6825   000413                     SLRCONC         equ	1043	;# 
  6826   000414                     INLVLC          equ	1044	;# 
  6827   000415                     IOCCP           equ	1045	;# 
  6828   000416                     IOCCN           equ	1046	;# 
  6829   000417                     IOCCF           equ	1047	;# 
  6830   000418                     ANSELD          equ	1048	;# 
  6831   000419                     WPUD            equ	1049	;# 
  6832   00041A                     ODCOND          equ	1050	;# 
  6833   00041B                     SLRCOND         equ	1051	;# 
  6834   00041C                     INLVLD          equ	1052	;# 
  6835   000420                     ANSELE          equ	1056	;# 
  6836   000421                     WPUE            equ	1057	;# 
  6837   000422                     ODCONE          equ	1058	;# 
  6838   000423                     SLRCONE         equ	1059	;# 
  6839   000424                     INLVLE          equ	1060	;# 
  6840   000425                     IOCEP           equ	1061	;# 
  6841   000426                     IOCEN           equ	1062	;# 
  6842   000427                     IOCEF           equ	1063	;# 
  6843   000428                     ANSELF          equ	1064	;# 
  6844   000429                     WPUF            equ	1065	;# 
  6845   00042A                     ODCONF          equ	1066	;# 
  6846   00042B                     SLRCONF         equ	1067	;# 
  6847   00042C                     INLVLF          equ	1068	;# 
  6848   000440                     NCO1ACC         equ	1088	;# 
  6849   000440                     NCO1ACCL        equ	1088	;# 
  6850   000441                     NCO1ACCH        equ	1089	;# 
  6851   000442                     NCO1ACCU        equ	1090	;# 
  6852   000443                     NCO1INC         equ	1091	;# 
  6853   000443                     NCO1INCL        equ	1091	;# 
  6854   000444                     NCO1INCH        equ	1092	;# 
  6855   000445                     NCO1INCU        equ	1093	;# 
  6856   000446                     NCO1CON         equ	1094	;# 
  6857   000447                     NCO1CLK         equ	1095	;# 
  6858   000448                     NCO2ACC         equ	1096	;# 
  6859   000448                     NCO2ACCL        equ	1096	;# 
  6860   000449                     NCO2ACCH        equ	1097	;# 
  6861   00044A                     NCO2ACCU        equ	1098	;# 
  6862   00044B                     NCO2INC         equ	1099	;# 
  6863   00044B                     NCO2INCL        equ	1099	;# 
  6864   00044C                     NCO2INCH        equ	1100	;# 
  6865   00044D                     NCO2INCU        equ	1101	;# 
  6866   00044E                     NCO2CON         equ	1102	;# 
  6867   00044F                     NCO2CLK         equ	1103	;# 
  6868   000450                     NCO3ACC         equ	1104	;# 
  6869   000450                     NCO3ACCL        equ	1104	;# 
  6870   000451                     NCO3ACCH        equ	1105	;# 
  6871   000452                     NCO3ACCU        equ	1106	;# 
  6872   000453                     NCO3INC         equ	1107	;# 
  6873   000453                     NCO3INCL        equ	1107	;# 
  6874   000454                     NCO3INCH        equ	1108	;# 
  6875   000455                     NCO3INCU        equ	1109	;# 
  6876   000456                     NCO3CON         equ	1110	;# 
  6877   000457                     NCO3CLK         equ	1111	;# 
  6878   000459                     IVTLOCK         equ	1113	;# 
  6879   00045A                     IVTAD           equ	1114	;# 
  6880   00045A                     IVTADL          equ	1114	;# 
  6881   00045B                     IVTADH          equ	1115	;# 
  6882   00045C                     IVTADU          equ	1116	;# 
  6883   00045D                     IVTBASE         equ	1117	;# 
  6884   00045D                     IVTBASEL        equ	1117	;# 
  6885   00045E                     IVTBASEH        equ	1118	;# 
  6886   00045F                     IVTBASEU        equ	1119	;# 
  6887   000460                     PWM1ERS         equ	1120	;# 
  6888   000461                     PWM1CLK         equ	1121	;# 
  6889   000462                     PWM1LDS         equ	1122	;# 
  6890   000463                     PWM1PR          equ	1123	;# 
  6891   000463                     PWM1PRL         equ	1123	;# 
  6892   000464                     PWM1PRH         equ	1124	;# 
  6893   000465                     PWM1CPRE        equ	1125	;# 
  6894   000466                     PWM1PIPOS       equ	1126	;# 
  6895   000467                     PWM1GIR         equ	1127	;# 
  6896   000468                     PWM1GIE         equ	1128	;# 
  6897   000469                     PWM1CON         equ	1129	;# 
  6898   00046A                     PWM1S1CFG       equ	1130	;# 
  6899   00046B                     PWM1S1P1        equ	1131	;# 
  6900   00046B                     PWM1S1P1L       equ	1131	;# 
  6901   00046C                     PWM1S1P1H       equ	1132	;# 
  6902   00046D                     PWM1S1P2        equ	1133	;# 
  6903   00046D                     PWM1S1P2L       equ	1133	;# 
  6904   00046E                     PWM1S1P2H       equ	1134	;# 
  6905   00046F                     PWM2ERS         equ	1135	;# 
  6906   000470                     PWM2CLK         equ	1136	;# 
  6907   000471                     PWM2LDS         equ	1137	;# 
  6908   000472                     PWM2PR          equ	1138	;# 
  6909   000472                     PWM2PRL         equ	1138	;# 
  6910   000473                     PWM2PRH         equ	1139	;# 
  6911   000474                     PWM2CPRE        equ	1140	;# 
  6912   000475                     PWM2PIPOS       equ	1141	;# 
  6913   000476                     PWM2GIR         equ	1142	;# 
  6914   000477                     PWM2GIE         equ	1143	;# 
  6915   000478                     PWM2CON         equ	1144	;# 
  6916   000479                     PWM2S1CFG       equ	1145	;# 
  6917   00047A                     PWM2S1P1        equ	1146	;# 
  6918   00047A                     PWM2S1P1L       equ	1146	;# 
  6919   00047B                     PWM2S1P1H       equ	1147	;# 
  6920   00047C                     PWM2S1P2        equ	1148	;# 
  6921   00047C                     PWM2S1P2L       equ	1148	;# 
  6922   00047D                     PWM2S1P2H       equ	1149	;# 
  6923   00047E                     PWM3ERS         equ	1150	;# 
  6924   00047F                     PWM3CLK         equ	1151	;# 
  6925   000480                     PWM3LDS         equ	1152	;# 
  6926   000481                     PWM3PR          equ	1153	;# 
  6927   000481                     PWM3PRL         equ	1153	;# 
  6928   000482                     PWM3PRH         equ	1154	;# 
  6929   000483                     PWM3CPRE        equ	1155	;# 
  6930   000484                     PWM3PIPOS       equ	1156	;# 
  6931   000485                     PWM3GIR         equ	1157	;# 
  6932   000486                     PWM3GIE         equ	1158	;# 
  6933   000487                     PWM3CON         equ	1159	;# 
  6934   000488                     PWM3S1CFG       equ	1160	;# 
  6935   000489                     PWM3S1P1        equ	1161	;# 
  6936   000489                     PWM3S1P1L       equ	1161	;# 
  6937   00048A                     PWM3S1P1H       equ	1162	;# 
  6938   00048B                     PWM3S1P2        equ	1163	;# 
  6939   00048B                     PWM3S1P2L       equ	1163	;# 
  6940   00048C                     PWM3S1P2H       equ	1164	;# 
  6941   00049C                     PWMLOAD         equ	1180	;# 
  6942   00049D                     PWMEN           equ	1181	;# 
  6943   00049E                     PIE0            equ	1182	;# 
  6944   00049F                     PIE1            equ	1183	;# 
  6945   0004A0                     PIE2            equ	1184	;# 
  6946   0004A1                     PIE3            equ	1185	;# 
  6947   0004A2                     PIE4            equ	1186	;# 
  6948   0004A3                     PIE5            equ	1187	;# 
  6949   0004A4                     PIE6            equ	1188	;# 
  6950   0004A5                     PIE7            equ	1189	;# 
  6951   0004A6                     PIE8            equ	1190	;# 
  6952   0004A7                     PIE9            equ	1191	;# 
  6953   0004A8                     PIE10           equ	1192	;# 
  6954   0004A9                     PIE11           equ	1193	;# 
  6955   0004AA                     PIE12           equ	1194	;# 
  6956   0004AB                     PIE13           equ	1195	;# 
  6957   0004AC                     PIE14           equ	1196	;# 
  6958   0004AD                     PIE15           equ	1197	;# 
  6959   0004AE                     PIR0            equ	1198	;# 
  6960   0004AF                     PIR1            equ	1199	;# 
  6961   0004B0                     PIR2            equ	1200	;# 
  6962   0004B1                     PIR3            equ	1201	;# 
  6963   0004B2                     PIR4            equ	1202	;# 
  6964   0004B3                     PIR5            equ	1203	;# 
  6965   0004B4                     PIR6            equ	1204	;# 
  6966   0004B5                     PIR7            equ	1205	;# 
  6967   0004B6                     PIR8            equ	1206	;# 
  6968   0004B7                     PIR9            equ	1207	;# 
  6969   0004B8                     PIR10           equ	1208	;# 
  6970   0004B9                     PIR11           equ	1209	;# 
  6971   0004BA                     PIR12           equ	1210	;# 
  6972   0004BB                     PIR13           equ	1211	;# 
  6973   0004BC                     PIR14           equ	1212	;# 
  6974   0004BD                     PIR15           equ	1213	;# 
  6975   0004BE                     LATA            equ	1214	;# 
  6976   0004BF                     LATB            equ	1215	;# 
  6977   0004C0                     LATC            equ	1216	;# 
  6978   0004C1                     LATD            equ	1217	;# 
  6979   0004C2                     LATE            equ	1218	;# 
  6980   0004C3                     LATF            equ	1219	;# 
  6981   0004C6                     TRISA           equ	1222	;# 
  6982   0004C7                     TRISB           equ	1223	;# 
  6983   0004C8                     TRISC           equ	1224	;# 
  6984   0004C9                     TRISD           equ	1225	;# 
  6985   0004CA                     TRISE           equ	1226	;# 
  6986   0004CB                     TRISF           equ	1227	;# 
  6987   0004CE                     PORTA           equ	1230	;# 
  6988   0004CF                     PORTB           equ	1231	;# 
  6989   0004D0                     PORTC           equ	1232	;# 
  6990   0004D1                     PORTD           equ	1233	;# 
  6991   0004D2                     PORTE           equ	1234	;# 
  6992   0004D3                     PORTF           equ	1235	;# 
  6993   0004D6                     INTCON0         equ	1238	;# 
  6994   0004D7                     INTCON1         equ	1239	;# 
  6995   0004D8                     STATUS          equ	1240	;# 
  6996   0004D9                     FSR2            equ	1241	;# 
  6997   0004D9                     FSR2L           equ	1241	;# 
  6998   0004DA                     FSR2H           equ	1242	;# 
  6999   0004DB                     PLUSW2          equ	1243	;# 
  7000   0004DC                     PREINC2         equ	1244	;# 
  7001   0004DD                     POSTDEC2        equ	1245	;# 
  7002   0004DE                     POSTINC2        equ	1246	;# 
  7003   0004DF                     INDF2           equ	1247	;# 
  7004   0004E0                     BSR             equ	1248	;# 
  7005   0004E1                     FSR1            equ	1249	;# 
  7006   0004E1                     FSR1L           equ	1249	;# 
  7007   0004E2                     FSR1H           equ	1250	;# 
  7008   0004E3                     PLUSW1          equ	1251	;# 
  7009   0004E4                     PREINC1         equ	1252	;# 
  7010   0004E5                     POSTDEC1        equ	1253	;# 
  7011   0004E6                     POSTINC1        equ	1254	;# 
  7012   0004E7                     INDF1           equ	1255	;# 
  7013   0004E8                     WREG            equ	1256	;# 
  7014   0004E9                     FSR0            equ	1257	;# 
  7015   0004E9                     FSR0L           equ	1257	;# 
  7016   0004EA                     FSR0H           equ	1258	;# 
  7017   0004EB                     PLUSW0          equ	1259	;# 
  7018   0004EC                     PREINC0         equ	1260	;# 
  7019   0004ED                     POSTDEC0        equ	1261	;# 
  7020   0004EE                     POSTINC0        equ	1262	;# 
  7021   0004EF                     INDF0           equ	1263	;# 
  7022   0004F0                     PCON0           equ	1264	;# 
  7023   0004F1                     PCON1           equ	1265	;# 
  7024   0004F2                     CPUDOZE         equ	1266	;# 
  7025   0004F3                     PROD            equ	1267	;# 
  7026   0004F3                     PRODL           equ	1267	;# 
  7027   0004F4                     PRODH           equ	1268	;# 
  7028   0004F5                     TABLAT          equ	1269	;# 
  7029   0004F6                     TBLPTR          equ	1270	;# 
  7030   0004F6                     TBLPTRL         equ	1270	;# 
  7031   0004F7                     TBLPTRH         equ	1271	;# 
  7032   0004F8                     TBLPTRU         equ	1272	;# 
  7033   0004F9                     PCLAT           equ	1273	;# 
  7034   0004F9                     PCL             equ	1273	;# 
  7035   0004FA                     PCLATH          equ	1274	;# 
  7036   0004FB                     PCLATU          equ	1275	;# 
  7037   0004FC                     STKPTR          equ	1276	;# 
  7038   0004FD                     TOS             equ	1277	;# 
  7039   0004FD                     TOSL            equ	1277	;# 
  7040   0004FE                     TOSH            equ	1278	;# 
  7041   0004FF                     TOSU            equ	1279	;# 
  7042   000039                     CLKRCON         equ	57	;# 
  7043   00003A                     CLKRCLK         equ	58	;# 
  7044   000040                     NVMCON0         equ	64	;# 
  7045   000041                     NVMCON1         equ	65	;# 
  7046   000042                     NVMLOCK         equ	66	;# 
  7047   000043                     NVMADR          equ	67	;# 
  7048   000043                     NVMADRL         equ	67	;# 
  7049   000044                     NVMADRH         equ	68	;# 
  7050   000045                     NVMADRU         equ	69	;# 
  7051   000046                     NVMDAT          equ	70	;# 
  7052   000046                     NVMDATL         equ	70	;# 
  7053   000047                     NVMDATH         equ	71	;# 
  7054   000048                     VREGCON         equ	72	;# 
  7055   000049                     BORCON          equ	73	;# 
  7056   00004A                     HLVDCON0        equ	74	;# 
  7057   00004B                     HLVDCON1        equ	75	;# 
  7058   00004C                     ZCDCON          equ	76	;# 
  7059   000060                     PMD0            equ	96	;# 
  7060   000061                     PMD1            equ	97	;# 
  7061   000063                     PMD3            equ	99	;# 
  7062   000064                     PMD4            equ	100	;# 
  7063   000065                     PMD5            equ	101	;# 
  7064   000066                     PMD6            equ	102	;# 
  7065   000067                     PMD7            equ	103	;# 
  7066   000068                     PMD8            equ	104	;# 
  7067   00006A                     MD1CON0         equ	106	;# 
  7068   00006B                     MD1CON1         equ	107	;# 
  7069   00006C                     MD1SRC          equ	108	;# 
  7070   00006D                     MD1CARL         equ	109	;# 
  7071   00006E                     MD1CARH         equ	110	;# 
  7072   00006F                     CMOUT           equ	111	;# 
  7073   000070                     CM1CON0         equ	112	;# 
  7074   000071                     CM1CON1         equ	113	;# 
  7075   000072                     CM1NCH          equ	114	;# 
  7076   000073                     CM1PCH          equ	115	;# 
  7077   000074                     CM2CON0         equ	116	;# 
  7078   000075                     CM2CON1         equ	117	;# 
  7079   000076                     CM2NCH          equ	118	;# 
  7080   000077                     CM2PCH          equ	119	;# 
  7081   000078                     WDTCON0         equ	120	;# 
  7082   000079                     WDTCON1         equ	121	;# 
  7083   00007A                     WDTPS           equ	122	;# 
  7084   00007A                     WDTPSL          equ	122	;# 
  7085   00007B                     WDTPSH          equ	123	;# 
  7086   00007C                     WDTTMR          equ	124	;# 
  7087   00007D                     DAC1DAT         equ	125	;# 
  7088   00007D                     DAC1DATL        equ	125	;# 
  7089   00007F                     DAC1CON         equ	127	;# 
  7090   000080                     SPI1RXB         equ	128	;# 
  7091   000081                     SPI1TXB         equ	129	;# 
  7092   000082                     SPI1TCNT        equ	130	;# 
  7093   000082                     SPI1TCNTL       equ	130	;# 
  7094   000083                     SPI1TCNTH       equ	131	;# 
  7095   000084                     SPI1CON0        equ	132	;# 
  7096   000085                     SPI1CON1        equ	133	;# 
  7097   000086                     SPI1CON2        equ	134	;# 
  7098   000087                     SPI1STATUS      equ	135	;# 
  7099   000088                     SPI1TWIDTH      equ	136	;# 
  7100   000089                     SPI1BAUD        equ	137	;# 
  7101   00008A                     SPI1INTF        equ	138	;# 
  7102   00008B                     SPI1INTE        equ	139	;# 
  7103   00008C                     SPI1CLK         equ	140	;# 
  7104   00008D                     SPI2RXB         equ	141	;# 
  7105   00008E                     SPI2TXB         equ	142	;# 
  7106   00008F                     SPI2TCNT        equ	143	;# 
  7107   00008F                     SPI2TCNTL       equ	143	;# 
  7108   000090                     SPI2TCNTH       equ	144	;# 
  7109   000091                     SPI2CON0        equ	145	;# 
  7110   000092                     SPI2CON1        equ	146	;# 
  7111   000093                     SPI2CON2        equ	147	;# 
  7112   000094                     SPI2STATUS      equ	148	;# 
  7113   000095                     SPI2TWIDTH      equ	149	;# 
  7114   000096                     SPI2BAUD        equ	150	;# 
  7115   000097                     SPI2INTF        equ	151	;# 
  7116   000098                     SPI2INTE        equ	152	;# 
  7117   000099                     SPI2CLK         equ	153	;# 
  7118   0000AC                     ACTCON          equ	172	;# 
  7119   0000AD                     OSCCON1         equ	173	;# 
  7120   0000AE                     OSCCON2         equ	174	;# 
  7121   0000AF                     OSCCON3         equ	175	;# 
  7122   0000B0                     OSCTUNE         equ	176	;# 
  7123   0000B1                     OSCFRQ          equ	177	;# 
  7124   0000B1                     OSCFREQ         equ	177	;# 
  7125   0000B2                     OSCSTAT         equ	178	;# 
  7126   0000B2                     OSCSTAT1        equ	178	;# 
  7127   0000B3                     OSCEN           equ	179	;# 
  7128   0000B4                     PRLOCK          equ	180	;# 
  7129   0000B5                     SCANPR          equ	181	;# 
  7130   0000B6                     DMA1PR          equ	182	;# 
  7131   0000B7                     DMA2PR          equ	183	;# 
  7132   0000B8                     DMA3PR          equ	184	;# 
  7133   0000B9                     DMA4PR          equ	185	;# 
  7134   0000BA                     DMA5PR          equ	186	;# 
  7135   0000BB                     DMA6PR          equ	187	;# 
  7136   0000BE                     MAINPR          equ	190	;# 
  7137   0000BF                     ISRPR           equ	191	;# 
  7138   0000D4                     CLCDATA         equ	212	;# 
  7139   0000D5                     CLCSELECT       equ	213	;# 
  7140   0000D6                     CLCnCON         equ	214	;# 
  7141   0000D7                     CLCnPOL         equ	215	;# 
  7142   0000D8                     CLCnSEL0        equ	216	;# 
  7143   0000D9                     CLCnSEL1        equ	217	;# 
  7144   0000DA                     CLCnSEL2        equ	218	;# 
  7145   0000DB                     CLCnSEL3        equ	219	;# 
  7146   0000DC                     CLCnGLS0        equ	220	;# 
  7147   0000DD                     CLCnGLS1        equ	221	;# 
  7148   0000DE                     CLCnGLS2        equ	222	;# 
  7149   0000DF                     CLCnGLS3        equ	223	;# 
  7150   0000E8                     DMASELECT       equ	232	;# 
  7151   0000E9                     DMAnBUF         equ	233	;# 
  7152   0000EA                     DMAnDCNT        equ	234	;# 
  7153   0000EA                     DMAnDCNTL       equ	234	;# 
  7154   0000EB                     DMAnDCNTH       equ	235	;# 
  7155   0000EC                     DMAnDPTR        equ	236	;# 
  7156   0000EC                     DMAnDPTRL       equ	236	;# 
  7157   0000ED                     DMAnDPTRH       equ	237	;# 
  7158   0000EE                     DMAnDSZ         equ	238	;# 
  7159   0000EE                     DMAnDSZL        equ	238	;# 
  7160   0000EF                     DMAnDSZH        equ	239	;# 
  7161   0000F0                     DMAnDSA         equ	240	;# 
  7162   0000F0                     DMAnDSAL        equ	240	;# 
  7163   0000F1                     DMAnDSAH        equ	241	;# 
  7164   0000F2                     DMAnSCNT        equ	242	;# 
  7165   0000F2                     DMAnSCNTL       equ	242	;# 
  7166   0000F3                     DMAnSCNTH       equ	243	;# 
  7167   0000F4                     DMAnSPTR        equ	244	;# 
  7168   0000F4                     DMAnSPTRL       equ	244	;# 
  7169   0000F5                     DMAnSPTRH       equ	245	;# 
  7170   0000F6                     DMAnSPTRU       equ	246	;# 
  7171   0000F7                     DMAnSSZ         equ	247	;# 
  7172   0000F7                     DMAnSSZL        equ	247	;# 
  7173   0000F8                     DMAnSSZH        equ	248	;# 
  7174   0000F9                     DMAnSSA         equ	249	;# 
  7175   0000F9                     DMAnSSAL        equ	249	;# 
  7176   0000FA                     DMAnSSAH        equ	250	;# 
  7177   0000FB                     DMAnSSAU        equ	251	;# 
  7178   0000FC                     DMAnCON0        equ	252	;# 
  7179   0000FD                     DMAnCON1        equ	253	;# 
  7180   0000FE                     DMAnAIRQ        equ	254	;# 
  7181   0000FF                     DMAnSIRQ        equ	255	;# 
  7182   000200                     PPSLOCK         equ	512	;# 
  7183   000201                     RA0PPS          equ	513	;# 
  7184   000202                     RA1PPS          equ	514	;# 
  7185   000203                     RA2PPS          equ	515	;# 
  7186   000204                     RA3PPS          equ	516	;# 
  7187   000205                     RA4PPS          equ	517	;# 
  7188   000206                     RA5PPS          equ	518	;# 
  7189   000207                     RA6PPS          equ	519	;# 
  7190   000208                     RA7PPS          equ	520	;# 
  7191   000209                     RB0PPS          equ	521	;# 
  7192   00020A                     RB1PPS          equ	522	;# 
  7193   00020B                     RB2PPS          equ	523	;# 
  7194   00020C                     RB3PPS          equ	524	;# 
  7195   00020D                     RB4PPS          equ	525	;# 
  7196   00020E                     RB5PPS          equ	526	;# 
  7197   00020F                     RB6PPS          equ	527	;# 
  7198   000210                     RB7PPS          equ	528	;# 
  7199   000211                     RC0PPS          equ	529	;# 
  7200   000212                     RC1PPS          equ	530	;# 
  7201   000213                     RC2PPS          equ	531	;# 
  7202   000214                     RC3PPS          equ	532	;# 
  7203   000215                     RC4PPS          equ	533	;# 
  7204   000216                     RC5PPS          equ	534	;# 
  7205   000217                     RC6PPS          equ	535	;# 
  7206   000218                     RC7PPS          equ	536	;# 
  7207   000219                     RD0PPS          equ	537	;# 
  7208   00021A                     RD1PPS          equ	538	;# 
  7209   00021B                     RD2PPS          equ	539	;# 
  7210   00021C                     RD3PPS          equ	540	;# 
  7211   00021D                     RD4PPS          equ	541	;# 
  7212   00021E                     RD5PPS          equ	542	;# 
  7213   00021F                     RD6PPS          equ	543	;# 
  7214   000220                     RD7PPS          equ	544	;# 
  7215   000221                     RE0PPS          equ	545	;# 
  7216   000222                     RE1PPS          equ	546	;# 
  7217   000223                     RE2PPS          equ	547	;# 
  7218   000229                     RF0PPS          equ	553	;# 
  7219   00022A                     RF1PPS          equ	554	;# 
  7220   00022B                     RF2PPS          equ	555	;# 
  7221   00022C                     RF3PPS          equ	556	;# 
  7222   00022D                     RF4PPS          equ	557	;# 
  7223   00022E                     RF5PPS          equ	558	;# 
  7224   00022F                     RF6PPS          equ	559	;# 
  7225   000230                     RF7PPS          equ	560	;# 
  7226   00023E                     INT0PPS         equ	574	;# 
  7227   00023F                     INT1PPS         equ	575	;# 
  7228   000240                     INT2PPS         equ	576	;# 
  7229   000241                     T0CKIPPS        equ	577	;# 
  7230   000242                     T1CKIPPS        equ	578	;# 
  7231   000243                     T1GPPS          equ	579	;# 
  7232   000244                     T3CKIPPS        equ	580	;# 
  7233   000245                     T3GPPS          equ	581	;# 
  7234   000246                     T5CKIPPS        equ	582	;# 
  7235   000247                     T5GPPS          equ	583	;# 
  7236   000248                     T2INPPS         equ	584	;# 
  7237   000249                     T4INPPS         equ	585	;# 
  7238   00024A                     T6INPPS         equ	586	;# 
  7239   00024F                     CCP1PPS         equ	591	;# 
  7240   000250                     CCP2PPS         equ	592	;# 
  7241   000251                     CCP3PPS         equ	593	;# 
  7242   000253                     PWM1ERSPPS      equ	595	;# 
  7243   000254                     PWM2ERSPPS      equ	596	;# 
  7244   000255                     PWM3ERSPPS      equ	597	;# 
  7245   000257                     PWMIN0PPS       equ	599	;# 
  7246   000258                     PWMIN1PPS       equ	600	;# 
  7247   000259                     SMT1WINPPS      equ	601	;# 
  7248   00025A                     SMT1SIGPPS      equ	602	;# 
  7249   00025B                     CWG1PPS         equ	603	;# 
  7250   00025B                     CWG1INPPS       equ	603	;# 
  7251   00025C                     CWG2PPS         equ	604	;# 
  7252   00025C                     CWG2INPPS       equ	604	;# 
  7253   00025D                     CWG3PPS         equ	605	;# 
  7254   00025D                     CWG3INPPS       equ	605	;# 
  7255   00025E                     MD1CARLPPS      equ	606	;# 
  7256   00025E                     MDCARLPPS       equ	606	;# 
  7257   00025F                     MD1CARHPPS      equ	607	;# 
  7258   00025F                     MDCARHPPS       equ	607	;# 
  7259   000260                     MD1SRCPPS       equ	608	;# 
  7260   000260                     MDSRCPPS        equ	608	;# 
  7261   000261                     CLCIN0PPS       equ	609	;# 
  7262   000262                     CLCIN1PPS       equ	610	;# 
  7263   000263                     CLCIN2PPS       equ	611	;# 
  7264   000264                     CLCIN3PPS       equ	612	;# 
  7265   000265                     CLCIN4PPS       equ	613	;# 
  7266   000266                     CLCIN5PPS       equ	614	;# 
  7267   000267                     CLCIN6PPS       equ	615	;# 
  7268   000268                     CLCIN7PPS       equ	616	;# 
  7269   000269                     ADACTPPS        equ	617	;# 
  7270   00026A                     SPI1SCKPPS      equ	618	;# 
  7271   00026B                     SPI1SDIPPS      equ	619	;# 
  7272   00026C                     SPI1SSPPS       equ	620	;# 
  7273   00026D                     SPI2SCKPPS      equ	621	;# 
  7274   00026E                     SPI2SDIPPS      equ	622	;# 
  7275   00026F                     SPI2SSPPS       equ	623	;# 
  7276   000270                     I2C1SDAPPS      equ	624	;# 
  7277   000271                     I2C1SCLPPS      equ	625	;# 
  7278   000272                     U1RXPPS         equ	626	;# 
  7279   000273                     U1CTSPPS        equ	627	;# 
  7280   000274                     U2RXPPS         equ	628	;# 
  7281   000275                     U2CTSPPS        equ	629	;# 
  7282   000276                     U3RXPPS         equ	630	;# 
  7283   000277                     U3CTSPPS        equ	631	;# 
  7284   000278                     U4RXPPS         equ	632	;# 
  7285   000279                     U4CTSPPS        equ	633	;# 
  7286   00027A                     U5RXPPS         equ	634	;# 
  7287   00027B                     U5CTSPPS        equ	635	;# 
  7288   000286                     RC4I2C          equ	646	;# 
  7289   000287                     RC3I2C          equ	647	;# 
  7290   000288                     RB2I2C          equ	648	;# 
  7291   000289                     RB1I2C          equ	649	;# 
  7292   00028B                     I2C1RXB         equ	651	;# 
  7293   00028C                     I2C1TXB         equ	652	;# 
  7294   00028D                     I2C1CNT         equ	653	;# 
  7295   00028E                     I2C1ADB0        equ	654	;# 
  7296   00028F                     I2C1ADB1        equ	655	;# 
  7297   000290                     I2C1ADR0        equ	656	;# 
  7298   000291                     I2C1ADR1        equ	657	;# 
  7299   000292                     I2C1ADR2        equ	658	;# 
  7300   000293                     I2C1ADR3        equ	659	;# 
  7301   000294                     I2C1CON0        equ	660	;# 
  7302   000295                     I2C1CON1        equ	661	;# 
  7303   000296                     I2C1CON2        equ	662	;# 
  7304   000297                     I2C1ERR         equ	663	;# 
  7305   000298                     I2C1STAT0       equ	664	;# 
  7306   000299                     I2C1STAT1       equ	665	;# 
  7307   00029A                     I2C1PIR         equ	666	;# 
  7308   00029B                     I2C1PIE         equ	667	;# 
  7309   00029C                     I2C1CLK         equ	668	;# 
  7310   00029D                     I2C1BTO         equ	669	;# 
  7311   0002A1                     U1RXB           equ	673	;# 
  7312   0002A1                     U1RXBL          equ	673	;# 
  7313   0002A2                     U1RXCHK         equ	674	;# 
  7314   0002A3                     U1TXB           equ	675	;# 
  7315   0002A3                     U1TXBL          equ	675	;# 
  7316   0002A4                     U1TXCHK         equ	676	;# 
  7317   0002A5                     U1P1            equ	677	;# 
  7318   0002A5                     U1P1L           equ	677	;# 
  7319   0002A6                     U1P1H           equ	678	;# 
  7320   0002A7                     U1P2            equ	679	;# 
  7321   0002A7                     U1P2L           equ	679	;# 
  7322   0002A8                     U1P2H           equ	680	;# 
  7323   0002A9                     U1P3            equ	681	;# 
  7324   0002A9                     U1P3L           equ	681	;# 
  7325   0002AA                     U1P3H           equ	682	;# 
  7326   0002AB                     U1CON0          equ	683	;# 
  7327   0002AC                     U1CON1          equ	684	;# 
  7328   0002AD                     U1CON2          equ	685	;# 
  7329   0002AE                     U1BRG           equ	686	;# 
  7330   0002AE                     U1BRGL          equ	686	;# 
  7331   0002AF                     U1BRGH          equ	687	;# 
  7332   0002B0                     U1FIFO          equ	688	;# 
  7333   0002B1                     U1UIR           equ	689	;# 
  7334   0002B2                     U1ERRIR         equ	690	;# 
  7335   0002B3                     U1ERRIE         equ	691	;# 
  7336   0002B4                     U2RXB           equ	692	;# 
  7337   0002B4                     U2RXBL          equ	692	;# 
  7338   0002B6                     U2TXB           equ	694	;# 
  7339   0002B6                     U2TXBL          equ	694	;# 
  7340   0002B8                     U2P1            equ	696	;# 
  7341   0002B8                     U2P1L           equ	696	;# 
  7342   0002BA                     U2P2            equ	698	;# 
  7343   0002BA                     U2P2L           equ	698	;# 
  7344   0002BC                     U2P3            equ	700	;# 
  7345   0002BC                     U2P3L           equ	700	;# 
  7346   0002BE                     U2CON0          equ	702	;# 
  7347   0002BF                     U2CON1          equ	703	;# 
  7348   0002C0                     U2CON2          equ	704	;# 
  7349   0002C1                     U2BRG           equ	705	;# 
  7350   0002C1                     U2BRGL          equ	705	;# 
  7351   0002C2                     U2BRGH          equ	706	;# 
  7352   0002C3                     U2FIFO          equ	707	;# 
  7353   0002C4                     U2UIR           equ	708	;# 
  7354   0002C5                     U2ERRIR         equ	709	;# 
  7355   0002C6                     U2ERRIE         equ	710	;# 
  7356   0002C7                     U3RXB           equ	711	;# 
  7357   0002C7                     U3RXBL          equ	711	;# 
  7358   0002C9                     U3TXB           equ	713	;# 
  7359   0002C9                     U3TXBL          equ	713	;# 
  7360   0002CB                     U3P1            equ	715	;# 
  7361   0002CB                     U3P1L           equ	715	;# 
  7362   0002CD                     U3P2            equ	717	;# 
  7363   0002CD                     U3P2L           equ	717	;# 
  7364   0002CF                     U3P3            equ	719	;# 
  7365   0002CF                     U3P3L           equ	719	;# 
  7366   0002D1                     U3CON0          equ	721	;# 
  7367   0002D2                     U3CON1          equ	722	;# 
  7368   0002D3                     U3CON2          equ	723	;# 
  7369   0002D4                     U3BRG           equ	724	;# 
  7370   0002D4                     U3BRGL          equ	724	;# 
  7371   0002D5                     U3BRGH          equ	725	;# 
  7372   0002D6                     U3FIFO          equ	726	;# 
  7373   0002D7                     U3UIR           equ	727	;# 
  7374   0002D8                     U3ERRIR         equ	728	;# 
  7375   0002D9                     U3ERRIE         equ	729	;# 
  7376   0002DA                     U4RXB           equ	730	;# 
  7377   0002DA                     U4RXBL          equ	730	;# 
  7378   0002DC                     U4TXB           equ	732	;# 
  7379   0002DC                     U4TXBL          equ	732	;# 
  7380   0002DE                     U4P1            equ	734	;# 
  7381   0002DE                     U4P1L           equ	734	;# 
  7382   0002E0                     U4P2            equ	736	;# 
  7383   0002E0                     U4P2L           equ	736	;# 
  7384   0002E2                     U4P3            equ	738	;# 
  7385   0002E2                     U4P3L           equ	738	;# 
  7386   0002E4                     U4CON0          equ	740	;# 
  7387   0002E5                     U4CON1          equ	741	;# 
  7388   0002E6                     U4CON2          equ	742	;# 
  7389   0002E7                     U4BRG           equ	743	;# 
  7390   0002E7                     U4BRGL          equ	743	;# 
  7391   0002E8                     U4BRGH          equ	744	;# 
  7392   0002E9                     U4FIFO          equ	745	;# 
  7393   0002EA                     U4UIR           equ	746	;# 
  7394   0002EB                     U4ERRIR         equ	747	;# 
  7395   0002EC                     U4ERRIE         equ	748	;# 
  7396   0002ED                     U5RXB           equ	749	;# 
  7397   0002ED                     U5RXBL          equ	749	;# 
  7398   0002EF                     U5TXB           equ	751	;# 
  7399   0002EF                     U5TXBL          equ	751	;# 
  7400   0002F1                     U5P1            equ	753	;# 
  7401   0002F1                     U5P1L           equ	753	;# 
  7402   0002F3                     U5P2            equ	755	;# 
  7403   0002F3                     U5P2L           equ	755	;# 
  7404   0002F5                     U5P3            equ	757	;# 
  7405   0002F5                     U5P3L           equ	757	;# 
  7406   0002F7                     U5CON0          equ	759	;# 
  7407   0002F8                     U5CON1          equ	760	;# 
  7408   0002F9                     U5CON2          equ	761	;# 
  7409   0002FA                     U5BRG           equ	762	;# 
  7410   0002FA                     U5BRGL          equ	762	;# 
  7411   0002FB                     U5BRGH          equ	763	;# 
  7412   0002FC                     U5FIFO          equ	764	;# 
  7413   0002FD                     U5UIR           equ	765	;# 
  7414   0002FE                     U5ERRIR         equ	766	;# 
  7415   0002FF                     U5ERRIE         equ	767	;# 
  7416   000300                     SMT1TMR         equ	768	;# 
  7417   000300                     SMT1TMRL        equ	768	;# 
  7418   000301                     SMT1TMRH        equ	769	;# 
  7419   000302                     SMT1TMRU        equ	770	;# 
  7420   000303                     SMT1CPR         equ	771	;# 
  7421   000303                     SMT1CPRL        equ	771	;# 
  7422   000304                     SMT1CPRH        equ	772	;# 
  7423   000305                     SMT1CPRU        equ	773	;# 
  7424   000306                     SMT1CPW         equ	774	;# 
  7425   000306                     SMT1CPWL        equ	774	;# 
  7426   000307                     SMT1CPWH        equ	775	;# 
  7427   000308                     SMT1CPWU        equ	776	;# 
  7428   000309                     SMT1PR          equ	777	;# 
  7429   000309                     SMT1PRL         equ	777	;# 
  7430   00030A                     SMT1PRH         equ	778	;# 
  7431   00030B                     SMT1PRU         equ	779	;# 
  7432   00030C                     SMT1CON0        equ	780	;# 
  7433   00030D                     SMT1CON1        equ	781	;# 
  7434   00030E                     SMT1STAT        equ	782	;# 
  7435   00030F                     SMT1CLK         equ	783	;# 
  7436   000310                     SMT1SIG         equ	784	;# 
  7437   000311                     SMT1WIN         equ	785	;# 
  7438   000318                     TMR0L           equ	792	;# 
  7439   000318                     TMR0            equ	792	;# 
  7440   000319                     TMR0H           equ	793	;# 
  7441   000319                     PR0             equ	793	;# 
  7442   00031A                     T0CON0          equ	794	;# 
  7443   00031B                     T0CON1          equ	795	;# 
  7444   00031C                     TMR1            equ	796	;# 
  7445   00031C                     TMR1L           equ	796	;# 
  7446   00031D                     TMR1H           equ	797	;# 
  7447   00031E                     T1CON           equ	798	;# 
  7448   00031E                     TMR1CON         equ	798	;# 
  7449   00031F                     T1GCON          equ	799	;# 
  7450   00031F                     TMR1GCON        equ	799	;# 
  7451   000320                     T1GATE          equ	800	;# 
  7452   000320                     TMR1GATE        equ	800	;# 
  7453   000321                     T1CLK           equ	801	;# 
  7454   000321                     TMR1CLK         equ	801	;# 
  7455   000321                     PR1             equ	801	;# 
  7456   000322                     T2TMR           equ	802	;# 
  7457   000322                     TMR2            equ	802	;# 
  7458   000323                     T2PR            equ	803	;# 
  7459   000323                     PR2             equ	803	;# 
  7460   000324                     T2CON           equ	804	;# 
  7461   000325                     T2HLT           equ	805	;# 
  7462   000326                     T2CLKCON        equ	806	;# 
  7463   000326                     T2CLK           equ	806	;# 
  7464   000327                     T2RST           equ	807	;# 
  7465   000328                     TMR3            equ	808	;# 
  7466   000328                     TMR3L           equ	808	;# 
  7467   000329                     TMR3H           equ	809	;# 
  7468   00032A                     T3CON           equ	810	;# 
  7469   00032A                     TMR3CON         equ	810	;# 
  7470   00032B                     T3GCON          equ	811	;# 
  7471   00032B                     TMR3GCON        equ	811	;# 
  7472   00032C                     T3GATE          equ	812	;# 
  7473   00032C                     TMR3GATE        equ	812	;# 
  7474   00032D                     T3CLK           equ	813	;# 
  7475   00032D                     TMR3CLK         equ	813	;# 
  7476   00032D                     PR3             equ	813	;# 
  7477   00032E                     T4TMR           equ	814	;# 
  7478   00032E                     TMR4            equ	814	;# 
  7479   00032F                     T4PR            equ	815	;# 
  7480   00032F                     PR4             equ	815	;# 
  7481   000330                     T4CON           equ	816	;# 
  7482   000331                     T4HLT           equ	817	;# 
  7483   000332                     T4CLKCON        equ	818	;# 
  7484   000332                     T4CLK           equ	818	;# 
  7485   000333                     T4RST           equ	819	;# 
  7486   000334                     TMR5            equ	820	;# 
  7487   000334                     TMR5L           equ	820	;# 
  7488   000335                     TMR5H           equ	821	;# 
  7489   000336                     T5CON           equ	822	;# 
  7490   000336                     TMR5CON         equ	822	;# 
  7491   000337                     T5GCON          equ	823	;# 
  7492   000337                     TMR5GCON        equ	823	;# 
  7493   000338                     T5GATE          equ	824	;# 
  7494   000338                     TMR5GATE        equ	824	;# 
  7495   000339                     T5CLK           equ	825	;# 
  7496   000339                     TMR5CLK         equ	825	;# 
  7497   000339                     PR5             equ	825	;# 
  7498   00033A                     T6TMR           equ	826	;# 
  7499   00033A                     TMR6            equ	826	;# 
  7500   00033B                     T6PR            equ	827	;# 
  7501   00033B                     PR6             equ	827	;# 
  7502   00033C                     T6CON           equ	828	;# 
  7503   00033D                     T6HLT           equ	829	;# 
  7504   00033E                     T6CLKCON        equ	830	;# 
  7505   00033E                     T6CLK           equ	830	;# 
  7506   00033F                     T6RST           equ	831	;# 
  7507   000340                     CCPR1           equ	832	;# 
  7508   000340                     CCPR1L          equ	832	;# 
  7509   000341                     CCPR1H          equ	833	;# 
  7510   000342                     CCP1CON         equ	834	;# 
  7511   000343                     CCP1CAP         equ	835	;# 
  7512   000344                     CCPR2           equ	836	;# 
  7513   000344                     CCPR2L          equ	836	;# 
  7514   000345                     CCPR2H          equ	837	;# 
  7515   000346                     CCP2CON         equ	838	;# 
  7516   000347                     CCP2CAP         equ	839	;# 
  7517   000348                     CCPR3           equ	840	;# 
  7518   000348                     CCPR3L          equ	840	;# 
  7519   000349                     CCPR3H          equ	841	;# 
  7520   00034A                     CCP3CON         equ	842	;# 
  7521   00034B                     CCP3CAP         equ	843	;# 
  7522   00034C                     CCPTMRS0        equ	844	;# 
  7523   00034F                     CRCDATA         equ	847	;# 
  7524   00034F                     CRCDATL         equ	847	;# 
  7525   000350                     CRCDATH         equ	848	;# 
  7526   000351                     CRCACC          equ	849	;# 
  7527   000351                     CRCACCL         equ	849	;# 
  7528   000352                     CRCACCH         equ	850	;# 
  7529   000353                     CRCSHFT         equ	851	;# 
  7530   000353                     CRCSHIFTL       equ	851	;# 
  7531   000354                     CRCSHIFTH       equ	852	;# 
  7532   000355                     CRCXOR          equ	853	;# 
  7533   000355                     CRCXORL         equ	853	;# 
  7534   000356                     CRCXORH         equ	854	;# 
  7535   000357                     CRCCON0         equ	855	;# 
  7536   000358                     CRCCON1         equ	856	;# 
  7537   00035A                     SCANLADR        equ	858	;# 
  7538   00035A                     SCANLADRL       equ	858	;# 
  7539   00035B                     SCANLADRH       equ	859	;# 
  7540   00035C                     SCANLADRU       equ	860	;# 
  7541   00035D                     SCANHADR        equ	861	;# 
  7542   00035D                     SCANHADRL       equ	861	;# 
  7543   00035E                     SCANHADRH       equ	862	;# 
  7544   00035F                     SCANHADRU       equ	863	;# 
  7545   000360                     SCANCON0        equ	864	;# 
  7546   000361                     SCANTRIG        equ	865	;# 
  7547   000362                     IPR0            equ	866	;# 
  7548   000363                     IPR1            equ	867	;# 
  7549   000364                     IPR2            equ	868	;# 
  7550   000365                     IPR3            equ	869	;# 
  7551   000366                     IPR4            equ	870	;# 
  7552   000367                     IPR5            equ	871	;# 
  7553   000368                     IPR6            equ	872	;# 
  7554   000369                     IPR7            equ	873	;# 
  7555   00036A                     IPR8            equ	874	;# 
  7556   00036B                     IPR9            equ	875	;# 
  7557   00036C                     IPR10           equ	876	;# 
  7558   00036D                     IPR11           equ	877	;# 
  7559   00036E                     IPR12           equ	878	;# 
  7560   00036F                     IPR13           equ	879	;# 
  7561   000370                     IPR14           equ	880	;# 
  7562   000371                     IPR15           equ	881	;# 
  7563   000373                     STATUS_CSHAD    equ	883	;# 
  7564   000374                     WREG_CSHAD      equ	884	;# 
  7565   000375                     BSR_CSHAD       equ	885	;# 
  7566   000376                     SHADCON         equ	886	;# 
  7567   000377                     STATUS_SHAD     equ	887	;# 
  7568   000378                     WREG_SHAD       equ	888	;# 
  7569   000379                     BSR_SHAD        equ	889	;# 
  7570   00037A                     PCLATH_SHAD     equ	890	;# 
  7571   00037B                     PCLATU_SHAD     equ	891	;# 
  7572   00037C                     FSR0SH          equ	892	;# 
  7573   00037C                     FSR0L_SHAD      equ	892	;# 
  7574   00037D                     FSR0H_SHAD      equ	893	;# 
  7575   00037E                     FSR1SH          equ	894	;# 
  7576   00037E                     FSR1L_SHAD      equ	894	;# 
  7577   00037F                     FSR1H_SHAD      equ	895	;# 
  7578   000380                     FSR2SH          equ	896	;# 
  7579   000380                     FSR2L_SHAD      equ	896	;# 
  7580   000381                     FSR2H_SHAD      equ	897	;# 
  7581   000382                     PRODSH          equ	898	;# 
  7582   000382                     PRODL_SHAD      equ	898	;# 
  7583   000383                     PRODH_SHAD      equ	899	;# 
  7584   0003BC                     CWG1CLK         equ	956	;# 
  7585   0003BC                     CWG1CLKCON      equ	956	;# 
  7586   0003BD                     CWG1ISM         equ	957	;# 
  7587   0003BD                     CWG1DAT         equ	957	;# 
  7588   0003BE                     CWG1DBR         equ	958	;# 
  7589   0003BF                     CWG1DBF         equ	959	;# 
  7590   0003C0                     CWG1CON0        equ	960	;# 
  7591   0003C1                     CWG1CON1        equ	961	;# 
  7592   0003C2                     CWG1AS0         equ	962	;# 
  7593   0003C3                     CWG1AS1         equ	963	;# 
  7594   0003C4                     CWG1STR         equ	964	;# 
  7595   0003C5                     CWG2CLK         equ	965	;# 
  7596   0003C5                     CWG2CLKCON      equ	965	;# 
  7597   0003C6                     CWG2ISM         equ	966	;# 
  7598   0003C6                     CWG2DAT         equ	966	;# 
  7599   0003C7                     CWG2DBR         equ	967	;# 
  7600   0003C8                     CWG2DBF         equ	968	;# 
  7601   0003C9                     CWG2CON0        equ	969	;# 
  7602   0003CA                     CWG2CON1        equ	970	;# 
  7603   0003CB                     CWG2AS0         equ	971	;# 
  7604   0003CC                     CWG2AS1         equ	972	;# 
  7605   0003CD                     CWG2STR         equ	973	;# 
  7606   0003CE                     CWG3CLK         equ	974	;# 
  7607   0003CE                     CWG3CLKCON      equ	974	;# 
  7608   0003CF                     CWG3ISM         equ	975	;# 
  7609   0003CF                     CWG3DAT         equ	975	;# 
  7610   0003D0                     CWG3DBR         equ	976	;# 
  7611   0003D1                     CWG3DBF         equ	977	;# 
  7612   0003D2                     CWG3CON0        equ	978	;# 
  7613   0003D3                     CWG3CON1        equ	979	;# 
  7614   0003D4                     CWG3AS0         equ	980	;# 
  7615   0003D5                     CWG3AS1         equ	981	;# 
  7616   0003D6                     CWG3STR         equ	982	;# 
  7617   0003D7                     FVRCON          equ	983	;# 
  7618   0003D8                     ADCPCON         equ	984	;# 
  7619   0003D8                     ADCP            equ	984	;# 
  7620   0003D9                     ADLTH           equ	985	;# 
  7621   0003D9                     ADLTHL          equ	985	;# 
  7622   0003DA                     ADLTHH          equ	986	;# 
  7623   0003DB                     ADUTH           equ	987	;# 
  7624   0003DB                     ADUTHL          equ	987	;# 
  7625   0003DC                     ADUTHH          equ	988	;# 
  7626   0003DD                     ADERR           equ	989	;# 
  7627   0003DD                     ADERRL          equ	989	;# 
  7628   0003DE                     ADERRH          equ	990	;# 
  7629   0003DF                     ADSTPT          equ	991	;# 
  7630   0003DF                     ADSTPTL         equ	991	;# 
  7631   0003E0                     ADSTPTH         equ	992	;# 
  7632   0003E1                     ADFLTR          equ	993	;# 
  7633   0003E1                     ADFLTRL         equ	993	;# 
  7634   0003E2                     ADFLTRH         equ	994	;# 
  7635   0003E3                     ADACC           equ	995	;# 
  7636   0003E3                     ADACCL          equ	995	;# 
  7637   0003E4                     ADACCH          equ	996	;# 
  7638   0003E5                     ADACCU          equ	997	;# 
  7639   0003E6                     ADCNT           equ	998	;# 
  7640   0003E7                     ADRPT           equ	999	;# 
  7641   0003E8                     ADPREV          equ	1000	;# 
  7642   0003E8                     ADPREVL         equ	1000	;# 
  7643   0003E9                     ADPREVH         equ	1001	;# 
  7644   0003EA                     ADRES           equ	1002	;# 
  7645   0003EA                     ADRESL          equ	1002	;# 
  7646   0003EB                     ADRESH          equ	1003	;# 
  7647   0003EC                     ADPCH           equ	1004	;# 
  7648   0003EE                     ADACQ           equ	1006	;# 
  7649   0003EE                     ADACQL          equ	1006	;# 
  7650   0003EF                     ADACQH          equ	1007	;# 
  7651   0003F0                     ADCAP           equ	1008	;# 
  7652   0003F1                     ADPRE           equ	1009	;# 
  7653   0003F1                     ADPREL          equ	1009	;# 
  7654   0003F2                     ADPREH          equ	1010	;# 
  7655   0003F3                     ADCON0          equ	1011	;# 
  7656   0003F4                     ADCON1          equ	1012	;# 
  7657   0003F5                     ADCON2          equ	1013	;# 
  7658   0003F6                     ADCON3          equ	1014	;# 
  7659   0003F7                     ADSTAT          equ	1015	;# 
  7660   0003F8                     ADREF           equ	1016	;# 
  7661   0003F9                     ADACT           equ	1017	;# 
  7662   0003FA                     ADCLK           equ	1018	;# 
  7663   000400                     ANSELA          equ	1024	;# 
  7664   000401                     WPUA            equ	1025	;# 
  7665   000402                     ODCONA          equ	1026	;# 
  7666   000403                     SLRCONA         equ	1027	;# 
  7667   000404                     INLVLA          equ	1028	;# 
  7668   000405                     IOCAP           equ	1029	;# 
  7669   000406                     IOCAN           equ	1030	;# 
  7670   000407                     IOCAF           equ	1031	;# 
  7671   000408                     ANSELB          equ	1032	;# 
  7672   000409                     WPUB            equ	1033	;# 
  7673   00040A                     ODCONB          equ	1034	;# 
  7674   00040B                     SLRCONB         equ	1035	;# 
  7675   00040C                     INLVLB          equ	1036	;# 
  7676   00040D                     IOCBP           equ	1037	;# 
  7677   00040E                     IOCBN           equ	1038	;# 
  7678   00040F                     IOCBF           equ	1039	;# 
  7679   000410                     ANSELC          equ	1040	;# 
  7680   000411                     WPUC            equ	1041	;# 
  7681   000412                     ODCONC          equ	1042	;# 
  7682   000413                     SLRCONC         equ	1043	;# 
  7683   000414                     INLVLC          equ	1044	;# 
  7684   000415                     IOCCP           equ	1045	;# 
  7685   000416                     IOCCN           equ	1046	;# 
  7686   000417                     IOCCF           equ	1047	;# 
  7687   000418                     ANSELD          equ	1048	;# 
  7688   000419                     WPUD            equ	1049	;# 
  7689   00041A                     ODCOND          equ	1050	;# 
  7690   00041B                     SLRCOND         equ	1051	;# 
  7691   00041C                     INLVLD          equ	1052	;# 
  7692   000420                     ANSELE          equ	1056	;# 
  7693   000421                     WPUE            equ	1057	;# 
  7694   000422                     ODCONE          equ	1058	;# 
  7695   000423                     SLRCONE         equ	1059	;# 
  7696   000424                     INLVLE          equ	1060	;# 
  7697   000425                     IOCEP           equ	1061	;# 
  7698   000426                     IOCEN           equ	1062	;# 
  7699   000427                     IOCEF           equ	1063	;# 
  7700   000428                     ANSELF          equ	1064	;# 
  7701   000429                     WPUF            equ	1065	;# 
  7702   00042A                     ODCONF          equ	1066	;# 
  7703   00042B                     SLRCONF         equ	1067	;# 
  7704   00042C                     INLVLF          equ	1068	;# 
  7705   000440                     NCO1ACC         equ	1088	;# 
  7706   000440                     NCO1ACCL        equ	1088	;# 
  7707   000441                     NCO1ACCH        equ	1089	;# 
  7708   000442                     NCO1ACCU        equ	1090	;# 
  7709   000443                     NCO1INC         equ	1091	;# 
  7710   000443                     NCO1INCL        equ	1091	;# 
  7711   000444                     NCO1INCH        equ	1092	;# 
  7712   000445                     NCO1INCU        equ	1093	;# 
  7713   000446                     NCO1CON         equ	1094	;# 
  7714   000447                     NCO1CLK         equ	1095	;# 
  7715   000448                     NCO2ACC         equ	1096	;# 
  7716   000448                     NCO2ACCL        equ	1096	;# 
  7717   000449                     NCO2ACCH        equ	1097	;# 
  7718   00044A                     NCO2ACCU        equ	1098	;# 
  7719   00044B                     NCO2INC         equ	1099	;# 
  7720   00044B                     NCO2INCL        equ	1099	;# 
  7721   00044C                     NCO2INCH        equ	1100	;# 
  7722   00044D                     NCO2INCU        equ	1101	;# 
  7723   00044E                     NCO2CON         equ	1102	;# 
  7724   00044F                     NCO2CLK         equ	1103	;# 
  7725   000450                     NCO3ACC         equ	1104	;# 
  7726   000450                     NCO3ACCL        equ	1104	;# 
  7727   000451                     NCO3ACCH        equ	1105	;# 
  7728   000452                     NCO3ACCU        equ	1106	;# 
  7729   000453                     NCO3INC         equ	1107	;# 
  7730   000453                     NCO3INCL        equ	1107	;# 
  7731   000454                     NCO3INCH        equ	1108	;# 
  7732   000455                     NCO3INCU        equ	1109	;# 
  7733   000456                     NCO3CON         equ	1110	;# 
  7734   000457                     NCO3CLK         equ	1111	;# 
  7735   000459                     IVTLOCK         equ	1113	;# 
  7736   00045A                     IVTAD           equ	1114	;# 
  7737   00045A                     IVTADL          equ	1114	;# 
  7738   00045B                     IVTADH          equ	1115	;# 
  7739   00045C                     IVTADU          equ	1116	;# 
  7740   00045D                     IVTBASE         equ	1117	;# 
  7741   00045D                     IVTBASEL        equ	1117	;# 
  7742   00045E                     IVTBASEH        equ	1118	;# 
  7743   00045F                     IVTBASEU        equ	1119	;# 
  7744   000460                     PWM1ERS         equ	1120	;# 
  7745   000461                     PWM1CLK         equ	1121	;# 
  7746   000462                     PWM1LDS         equ	1122	;# 
  7747   000463                     PWM1PR          equ	1123	;# 
  7748   000463                     PWM1PRL         equ	1123	;# 
  7749   000464                     PWM1PRH         equ	1124	;# 
  7750   000465                     PWM1CPRE        equ	1125	;# 
  7751   000466                     PWM1PIPOS       equ	1126	;# 
  7752   000467                     PWM1GIR         equ	1127	;# 
  7753   000468                     PWM1GIE         equ	1128	;# 
  7754   000469                     PWM1CON         equ	1129	;# 
  7755   00046A                     PWM1S1CFG       equ	1130	;# 
  7756   00046B                     PWM1S1P1        equ	1131	;# 
  7757   00046B                     PWM1S1P1L       equ	1131	;# 
  7758   00046C                     PWM1S1P1H       equ	1132	;# 
  7759   00046D                     PWM1S1P2        equ	1133	;# 
  7760   00046D                     PWM1S1P2L       equ	1133	;# 
  7761   00046E                     PWM1S1P2H       equ	1134	;# 
  7762   00046F                     PWM2ERS         equ	1135	;# 
  7763   000470                     PWM2CLK         equ	1136	;# 
  7764   000471                     PWM2LDS         equ	1137	;# 
  7765   000472                     PWM2PR          equ	1138	;# 
  7766   000472                     PWM2PRL         equ	1138	;# 
  7767   000473                     PWM2PRH         equ	1139	;# 
  7768   000474                     PWM2CPRE        equ	1140	;# 
  7769   000475                     PWM2PIPOS       equ	1141	;# 
  7770   000476                     PWM2GIR         equ	1142	;# 
  7771   000477                     PWM2GIE         equ	1143	;# 
  7772   000478                     PWM2CON         equ	1144	;# 
  7773   000479                     PWM2S1CFG       equ	1145	;# 
  7774   00047A                     PWM2S1P1        equ	1146	;# 
  7775   00047A                     PWM2S1P1L       equ	1146	;# 
  7776   00047B                     PWM2S1P1H       equ	1147	;# 
  7777   00047C                     PWM2S1P2        equ	1148	;# 
  7778   00047C                     PWM2S1P2L       equ	1148	;# 
  7779   00047D                     PWM2S1P2H       equ	1149	;# 
  7780   00047E                     PWM3ERS         equ	1150	;# 
  7781   00047F                     PWM3CLK         equ	1151	;# 
  7782   000480                     PWM3LDS         equ	1152	;# 
  7783   000481                     PWM3PR          equ	1153	;# 
  7784   000481                     PWM3PRL         equ	1153	;# 
  7785   000482                     PWM3PRH         equ	1154	;# 
  7786   000483                     PWM3CPRE        equ	1155	;# 
  7787   000484                     PWM3PIPOS       equ	1156	;# 
  7788   000485                     PWM3GIR         equ	1157	;# 
  7789   000486                     PWM3GIE         equ	1158	;# 
  7790   000487                     PWM3CON         equ	1159	;# 
  7791   000488                     PWM3S1CFG       equ	1160	;# 
  7792   000489                     PWM3S1P1        equ	1161	;# 
  7793   000489                     PWM3S1P1L       equ	1161	;# 
  7794   00048A                     PWM3S1P1H       equ	1162	;# 
  7795   00048B                     PWM3S1P2        equ	1163	;# 
  7796   00048B                     PWM3S1P2L       equ	1163	;# 
  7797   00048C                     PWM3S1P2H       equ	1164	;# 
  7798   00049C                     PWMLOAD         equ	1180	;# 
  7799   00049D                     PWMEN           equ	1181	;# 
  7800   00049E                     PIE0            equ	1182	;# 
  7801   00049F                     PIE1            equ	1183	;# 
  7802   0004A0                     PIE2            equ	1184	;# 
  7803   0004A1                     PIE3            equ	1185	;# 
  7804   0004A2                     PIE4            equ	1186	;# 
  7805   0004A3                     PIE5            equ	1187	;# 
  7806   0004A4                     PIE6            equ	1188	;# 
  7807   0004A5                     PIE7            equ	1189	;# 
  7808   0004A6                     PIE8            equ	1190	;# 
  7809   0004A7                     PIE9            equ	1191	;# 
  7810   0004A8                     PIE10           equ	1192	;# 
  7811   0004A9                     PIE11           equ	1193	;# 
  7812   0004AA                     PIE12           equ	1194	;# 
  7813   0004AB                     PIE13           equ	1195	;# 
  7814   0004AC                     PIE14           equ	1196	;# 
  7815   0004AD                     PIE15           equ	1197	;# 
  7816   0004AE                     PIR0            equ	1198	;# 
  7817   0004AF                     PIR1            equ	1199	;# 
  7818   0004B0                     PIR2            equ	1200	;# 
  7819   0004B1                     PIR3            equ	1201	;# 
  7820   0004B2                     PIR4            equ	1202	;# 
  7821   0004B3                     PIR5            equ	1203	;# 
  7822   0004B4                     PIR6            equ	1204	;# 
  7823   0004B5                     PIR7            equ	1205	;# 
  7824   0004B6                     PIR8            equ	1206	;# 
  7825   0004B7                     PIR9            equ	1207	;# 
  7826   0004B8                     PIR10           equ	1208	;# 
  7827   0004B9                     PIR11           equ	1209	;# 
  7828   0004BA                     PIR12           equ	1210	;# 
  7829   0004BB                     PIR13           equ	1211	;# 
  7830   0004BC                     PIR14           equ	1212	;# 
  7831   0004BD                     PIR15           equ	1213	;# 
  7832   0004BE                     LATA            equ	1214	;# 
  7833   0004BF                     LATB            equ	1215	;# 
  7834   0004C0                     LATC            equ	1216	;# 
  7835   0004C1                     LATD            equ	1217	;# 
  7836   0004C2                     LATE            equ	1218	;# 
  7837   0004C3                     LATF            equ	1219	;# 
  7838   0004C6                     TRISA           equ	1222	;# 
  7839   0004C7                     TRISB           equ	1223	;# 
  7840   0004C8                     TRISC           equ	1224	;# 
  7841   0004C9                     TRISD           equ	1225	;# 
  7842   0004CA                     TRISE           equ	1226	;# 
  7843   0004CB                     TRISF           equ	1227	;# 
  7844   0004CE                     PORTA           equ	1230	;# 
  7845   0004CF                     PORTB           equ	1231	;# 
  7846   0004D0                     PORTC           equ	1232	;# 
  7847   0004D1                     PORTD           equ	1233	;# 
  7848   0004D2                     PORTE           equ	1234	;# 
  7849   0004D3                     PORTF           equ	1235	;# 
  7850   0004D6                     INTCON0         equ	1238	;# 
  7851   0004D7                     INTCON1         equ	1239	;# 
  7852   0004D8                     STATUS          equ	1240	;# 
  7853   0004D9                     FSR2            equ	1241	;# 
  7854   0004D9                     FSR2L           equ	1241	;# 
  7855   0004DA                     FSR2H           equ	1242	;# 
  7856   0004DB                     PLUSW2          equ	1243	;# 
  7857   0004DC                     PREINC2         equ	1244	;# 
  7858   0004DD                     POSTDEC2        equ	1245	;# 
  7859   0004DE                     POSTINC2        equ	1246	;# 
  7860   0004DF                     INDF2           equ	1247	;# 
  7861   0004E0                     BSR             equ	1248	;# 
  7862   0004E1                     FSR1            equ	1249	;# 
  7863   0004E1                     FSR1L           equ	1249	;# 
  7864   0004E2                     FSR1H           equ	1250	;# 
  7865   0004E3                     PLUSW1          equ	1251	;# 
  7866   0004E4                     PREINC1         equ	1252	;# 
  7867   0004E5                     POSTDEC1        equ	1253	;# 
  7868   0004E6                     POSTINC1        equ	1254	;# 
  7869   0004E7                     INDF1           equ	1255	;# 
  7870   0004E8                     WREG            equ	1256	;# 
  7871   0004E9                     FSR0            equ	1257	;# 
  7872   0004E9                     FSR0L           equ	1257	;# 
  7873   0004EA                     FSR0H           equ	1258	;# 
  7874   0004EB                     PLUSW0          equ	1259	;# 
  7875   0004EC                     PREINC0         equ	1260	;# 
  7876   0004ED                     POSTDEC0        equ	1261	;# 
  7877   0004EE                     POSTINC0        equ	1262	;# 
  7878   0004EF                     INDF0           equ	1263	;# 
  7879   0004F0                     PCON0           equ	1264	;# 
  7880   0004F1                     PCON1           equ	1265	;# 
  7881   0004F2                     CPUDOZE         equ	1266	;# 
  7882   0004F3                     PROD            equ	1267	;# 
  7883   0004F3                     PRODL           equ	1267	;# 
  7884   0004F4                     PRODH           equ	1268	;# 
  7885   0004F5                     TABLAT          equ	1269	;# 
  7886   0004F6                     TBLPTR          equ	1270	;# 
  7887   0004F6                     TBLPTRL         equ	1270	;# 
  7888   0004F7                     TBLPTRH         equ	1271	;# 
  7889   0004F8                     TBLPTRU         equ	1272	;# 
  7890   0004F9                     PCLAT           equ	1273	;# 
  7891   0004F9                     PCL             equ	1273	;# 
  7892   0004FA                     PCLATH          equ	1274	;# 
  7893   0004FB                     PCLATU          equ	1275	;# 
  7894   0004FC                     STKPTR          equ	1276	;# 
  7895   0004FD                     TOS             equ	1277	;# 
  7896   0004FD                     TOSL            equ	1277	;# 
  7897   0004FE                     TOSH            equ	1278	;# 
  7898   0004FF                     TOSU            equ	1279	;# 
  7899                           
  7900 ;; Function _SPI1_Deinitialize is unused but had its address taken
  7901   000000                     _SPI1_Deinitialize equ	0
  7902                           
  7903 ;; Function _SPI1_Close is unused but had its address taken
  7904   000000                     _SPI1_Close     equ	0
  7905                           
  7906 ;; Function _SPI1_BufferExchange is unused but had its address taken
  7907   000000                     _SPI1_BufferExchange equ	0
  7908                           
  7909 ;; Function _SPI1_BufferWrite is unused but had its address taken
  7910   000000                     _SPI1_BufferWrite equ	0
  7911                           
  7912 ;; Function _SPI1_BufferRead is unused but had its address taken
  7913   000000                     _SPI1_BufferRead equ	0
  7914                           
  7915 ;; Function _SPI1_ByteWrite is unused but had its address taken
  7916   000000                     _SPI1_ByteWrite equ	0
  7917                           
  7918 ;; Function _SPI1_ByteRead is unused but had its address taken
  7919   000000                     _SPI1_ByteRead  equ	0
  7920                           
  7921 ;; Function _SPI1_IsTxReady is unused but had its address taken
  7922   000000                     _SPI1_IsTxReady equ	0
  7923                           
  7924 ;; Function _SPI1_IsRxReady is unused but had its address taken
  7925   000000                     _SPI1_IsRxReady equ	0
  7926                           
  7927 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
  7928   000000                     _INT1_DefaultInterruptHandler equ	0
  7929                           
  7930 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
  7931   000000                     _INT2_DefaultInterruptHandler equ	0
  7932                           
  7933 ;; Function _TMR0_Initialize is unused but had its address taken
  7934   000000                     _TMR0_Initialize equ	0
  7935                           
  7936 ;; Function _TMR0_Start is unused but had its address taken
  7937   000000                     _TMR0_Start     equ	0
  7938                           
  7939 ;; Function _TMR0_Stop is unused but had its address taken
  7940   000000                     _TMR0_Stop      equ	0
  7941                           
  7942 ;; Function _TMR0_Reload is unused but had its address taken
  7943   000000                     _TMR0_Reload    equ	0
  7944                           
  7945 ;; Function _TMR0_OverflowCallbackRegister is unused but had its address taken
  7946   000000                     _TMR0_OverflowCallbackRegister equ	0
  7947                           
  7948                           	psect	idataCOMRAM
  7949   012930                     __pidataCOMRAM:
  7950                           	callstack 0
  7951                           
  7952                           ;initializer for _rf24_datarates
  7953   012930  31                 	db	49
  7954   012931  4D                 	db	77
  7955   012932  62                 	db	98
  7956   012933  70                 	db	112
  7957   012934  73                 	db	115
  7958   012935  00                 	db	0
  7959   012936  00                 	db	0
  7960   012937  00                 	db	0
  7961   012938  32                 	db	50
  7962   012939  4D                 	db	77
  7963   01293A  62                 	db	98
  7964   01293B  70                 	db	112
  7965   01293C  73                 	db	115
  7966   01293D  00                 	db	0
  7967   01293E  00                 	db	0
  7968   01293F  00                 	db	0
  7969   012940  32                 	db	50
  7970   012941  35                 	db	53
  7971   012942  30                 	db	48
  7972   012943  4B                 	db	75
  7973   012944  62                 	db	98
  7974   012945  70                 	db	112
  7975   012946  73                 	db	115
  7976   012947  00                 	db	0
  7977                           
  7978                           	psect	idataBANK8
  7979   01287E                     __pidataBANK8:
  7980                           	callstack 0
  7981                           
  7982                           ;initializer for main@F17924
  7983   01287E  77                 	db	119
  7984   01287F  61                 	db	97
  7985   012880  73                 	db	115
  7986   012881  73                 	db	115
  7987   012882  75                 	db	117
  7988   012883  70                 	db	112
  7989   012884  00                 	db	0
  7990   012885  00                 	db	0
  7991   012886  00                 	db	0
  7992   012887  00                 	db	0
  7993   012888  00                 	db	0
  7994   012889  00                 	db	0
  7995   01288A  00                 	db	0
  7996   01288B  00                 	db	0
  7997   01288C  00                 	db	0
  7998   01288D  00                 	db	0
  7999   01288E  00                 	db	0
  8000   01288F  00                 	db	0
  8001   012890  00                 	db	0
  8002   012891  00                 	db	0
  8003   012892  00                 	db	0
  8004   012893  00                 	db	0
  8005   012894  00                 	db	0
  8006   012895  00                 	db	0
  8007   012896  00                 	db	0
  8008   012897  00                 	db	0
  8009   012898  00                 	db	0
  8010   012899  00                 	db	0
  8011   01289A  00                 	db	0
  8012   01289B  00                 	db	0
  8013   01289C  00                 	db	0
  8014   01289D  00                 	db	0
  8015                           
  8016                           	psect	idataBANK9
  8017   01289E                     __pidataBANK9:
  8018                           	callstack 0
  8019                           
  8020                           ;initializer for _rf24_pa_dbm
  8021   01289E  50                 	db	80
  8022   01289F  41                 	db	65
  8023   0128A0  5F                 	db	95
  8024   0128A1  4D                 	db	77
  8025   0128A2  49                 	db	73
  8026   0128A3  4E                 	db	78
  8027   0128A4  00                 	db	0
  8028   0128A5  00                 	db	0
  8029   0128A6  50                 	db	80
  8030   0128A7  41                 	db	65
  8031   0128A8  5F                 	db	95
  8032   0128A9  4C                 	db	76
  8033   0128AA  4F                 	db	79
  8034   0128AB  57                 	db	87
  8035   0128AC  00                 	db	0
  8036   0128AD  00                 	db	0
  8037   0128AE  50                 	db	80
  8038   0128AF  41                 	db	65
  8039   0128B0  5F                 	db	95
  8040   0128B1  48                 	db	72
  8041   0128B2  49                 	db	73
  8042   0128B3  47                 	db	71
  8043   0128B4  48                 	db	72
  8044   0128B5  00                 	db	0
  8045   0128B6  50                 	db	80
  8046   0128B7  41                 	db	65
  8047   0128B8  5F                 	db	95
  8048   0128B9  4D                 	db	77
  8049   0128BA  41                 	db	65
  8050   0128BB  58                 	db	88
  8051   0128BC  00                 	db	0
  8052   0128BD  00                 	db	0
  8053                           
  8054                           	psect	idataBANK11
  8055   011604                     __pidataBANK11:
  8056                           	callstack 0
  8057                           
  8058                           ;initializer for main@F17916
  8059   011604  01                 	db	1
  8060   011605  01                 	db	1
  8061   011606  01                 	db	1
  8062   011607  01                 	db	1
  8063   011608  01                 	db	1
  8064   011609  01                 	db	1
  8065   01160A  01                 	db	1
  8066   01160B  01                 	db	1
  8067   01160C  01                 	db	1
  8068   01160D  01                 	db	1
  8069   01160E  01                 	db	1
  8070   01160F  01                 	db	1
  8071   011610  01                 	db	1
  8072   011611  01                 	db	1
  8073   011612  01                 	db	1
  8074   011613  01                 	db	1
  8075   011614  01                 	db	1
  8076   011615  01                 	db	1
  8077   011616  01                 	db	1
  8078   011617  01                 	db	1
  8079   011618  01                 	db	1
  8080   011619  01                 	db	1
  8081   01161A  01                 	db	1
  8082   01161B  01                 	db	1
  8083   01161C  01                 	db	1
  8084   01161D  01                 	db	1
  8085   01161E  01                 	db	1
  8086   01161F  01                 	db	1
  8087   011620  01                 	db	1
  8088   011621  01                 	db	1
  8089   011622  01                 	db	1
  8090   011623  01                 	db	1
  8091   011624  01                 	db	1
  8092   011625  01                 	db	1
  8093   011626  01                 	db	1
  8094   011627  01                 	db	1
  8095   011628  01                 	db	1
  8096   011629  01                 	db	1
  8097   01162A  01                 	db	1
  8098   01162B  01                 	db	1
  8099   01162C  01                 	db	1
  8100   01162D  01                 	db	1
  8101   01162E  01                 	db	1
  8102   01162F  01                 	db	1
  8103   011630  01                 	db	1
  8104   011631  01                 	db	1
  8105   011632  01                 	db	1
  8106   011633  01                 	db	1
  8107   011634  01                 	db	1
  8108   011635  01                 	db	1
  8109   011636  01                 	db	1
  8110   011637  01                 	db	1
  8111   011638  01                 	db	1
  8112   011639  01                 	db	1
  8113   01163A  01                 	db	1
  8114   01163B  01                 	db	1
  8115   01163C  01                 	db	1
  8116   01163D  01                 	db	1
  8117   01163E  01                 	db	1
  8118   01163F  01                 	db	1
  8119   011640  01                 	db	1
  8120   011641  01                 	db	1
  8121   011642  01                 	db	1
  8122   011643  01                 	db	1
  8123   011644  01                 	db	1
  8124   011645  01                 	db	1
  8125   011646  01                 	db	1
  8126   011647  01                 	db	1
  8127   011648  01                 	db	1
  8128   011649  01                 	db	1
  8129   01164A  01                 	db	1
  8130   01164B  01                 	db	1
  8131   01164C  01                 	db	1
  8132   01164D  01                 	db	1
  8133   01164E  01                 	db	1
  8134   01164F  01                 	db	1
  8135   011650  01                 	db	1
  8136   011651  01                 	db	1
  8137   011652  01                 	db	1
  8138   011653  01                 	db	1
  8139   011654  01                 	db	1
  8140   011655  01                 	db	1
  8141   011656  01                 	db	1
  8142   011657  01                 	db	1
  8143   011658  01                 	db	1
  8144   011659  01                 	db	1
  8145   01165A  01                 	db	1
  8146   01165B  01                 	db	1
  8147   01165C  01                 	db	1
  8148   01165D  01                 	db	1
  8149   01165E  01                 	db	1
  8150   01165F  01                 	db	1
  8151   011660  01                 	db	1
  8152   011661  01                 	db	1
  8153   011662  01                 	db	1
  8154   011663  01                 	db	1
  8155   011664  01                 	db	1
  8156   011665  01                 	db	1
  8157   011666  01                 	db	1
  8158   011667  01                 	db	1
  8159   011668  01                 	db	1
  8160   011669  01                 	db	1
  8161   01166A  01                 	db	1
  8162   01166B  01                 	db	1
  8163   01166C  01                 	db	1
  8164   01166D  01                 	db	1
  8165   01166E  01                 	db	1
  8166   01166F  01                 	db	1
  8167   011670  01                 	db	1
  8168   011671  01                 	db	1
  8169   011672  01                 	db	1
  8170   011673  01                 	db	1
  8171   011674  01                 	db	1
  8172   011675  01                 	db	1
  8173   011676  01                 	db	1
  8174   011677  01                 	db	1
  8175   011678  01                 	db	1
  8176   011679  01                 	db	1
  8177   01167A  01                 	db	1
  8178   01167B  01                 	db	1
  8179   01167C  01                 	db	1
  8180   01167D  01                 	db	1
  8181   01167E  01                 	db	1
  8182   01167F  01                 	db	1
  8183   011680  01                 	db	1
  8184   011681  01                 	db	1
  8185   011682  01                 	db	1
  8186   011683  01                 	db	1
  8187   011684  01                 	db	1
  8188   011685  01                 	db	1
  8189   011686  01                 	db	1
  8190   011687  01                 	db	1
  8191   011688  01                 	db	1
  8192   011689  01                 	db	1
  8193   01168A  01                 	db	1
  8194   01168B  01                 	db	1
  8195   01168C  01                 	db	1
  8196   01168D  01                 	db	1
  8197   01168E  01                 	db	1
  8198   01168F  01                 	db	1
  8199   011690  01                 	db	1
  8200   011691  01                 	db	1
  8201   011692  01                 	db	1
  8202   011693  01                 	db	1
  8203   011694  01                 	db	1
  8204   011695  01                 	db	1
  8205   011696  01                 	db	1
  8206   011697  01                 	db	1
  8207   011698  01                 	db	1
  8208   011699  01                 	db	1
  8209   01169A  01                 	db	1
  8210   01169B  01                 	db	1
  8211   01169C  01                 	db	1
  8212   01169D  01                 	db	1
  8213   01169E  01                 	db	1
  8214   01169F  01                 	db	1
  8215   0116A0  01                 	db	1
  8216   0116A1  01                 	db	1
  8217   0116A2  01                 	db	1
  8218   0116A3  01                 	db	1
  8219   0116A4  01                 	db	1
  8220   0116A5  01                 	db	1
  8221   0116A6  01                 	db	1
  8222   0116A7  01                 	db	1
  8223   0116A8  01                 	db	1
  8224   0116A9  01                 	db	1
  8225   0116AA  01                 	db	1
  8226   0116AB  01                 	db	1
  8227   0116AC  01                 	db	1
  8228   0116AD  01                 	db	1
  8229   0116AE  01                 	db	1
  8230   0116AF  01                 	db	1
  8231   0116B0  01                 	db	1
  8232   0116B1  01                 	db	1
  8233   0116B2  01                 	db	1
  8234   0116B3  01                 	db	1
  8235   0116B4  01                 	db	1
  8236   0116B5  01                 	db	1
  8237   0116B6  01                 	db	1
  8238   0116B7  01                 	db	1
  8239   0116B8  01                 	db	1
  8240   0116B9  01                 	db	1
  8241   0116BA  01                 	db	1
  8242   0116BB  01                 	db	1
  8243   0116BC  01                 	db	1
  8244   0116BD  01                 	db	1
  8245   0116BE  01                 	db	1
  8246   0116BF  01                 	db	1
  8247   0116C0  01                 	db	1
  8248   0116C1  01                 	db	1
  8249   0116C2  01                 	db	1
  8250   0116C3  01                 	db	1
  8251   0116C4  01                 	db	1
  8252   0116C5  01                 	db	1
  8253   0116C6  01                 	db	1
  8254   0116C7  01                 	db	1
  8255   0116C8  01                 	db	1
  8256   0116C9  01                 	db	1
  8257   0116CA  01                 	db	1
  8258   0116CB  01                 	db	1
  8259                           
  8260                           	psect	idataBANK12
  8261   0116CC                     __pidataBANK12:
  8262                           	callstack 0
  8263                           
  8264                           ;initializer for main@F17918
  8265   0116CC  02                 	db	2
  8266   0116CD  02                 	db	2
  8267   0116CE  02                 	db	2
  8268   0116CF  02                 	db	2
  8269   0116D0  02                 	db	2
  8270   0116D1  02                 	db	2
  8271   0116D2  02                 	db	2
  8272   0116D3  02                 	db	2
  8273   0116D4  02                 	db	2
  8274   0116D5  02                 	db	2
  8275   0116D6  02                 	db	2
  8276   0116D7  02                 	db	2
  8277   0116D8  02                 	db	2
  8278   0116D9  02                 	db	2
  8279   0116DA  02                 	db	2
  8280   0116DB  02                 	db	2
  8281   0116DC  02                 	db	2
  8282   0116DD  02                 	db	2
  8283   0116DE  02                 	db	2
  8284   0116DF  02                 	db	2
  8285   0116E0  02                 	db	2
  8286   0116E1  02                 	db	2
  8287   0116E2  02                 	db	2
  8288   0116E3  02                 	db	2
  8289   0116E4  02                 	db	2
  8290   0116E5  02                 	db	2
  8291   0116E6  02                 	db	2
  8292   0116E7  02                 	db	2
  8293   0116E8  02                 	db	2
  8294   0116E9  02                 	db	2
  8295   0116EA  02                 	db	2
  8296   0116EB  02                 	db	2
  8297   0116EC  02                 	db	2
  8298   0116ED  02                 	db	2
  8299   0116EE  02                 	db	2
  8300   0116EF  02                 	db	2
  8301   0116F0  02                 	db	2
  8302   0116F1  02                 	db	2
  8303   0116F2  02                 	db	2
  8304   0116F3  02                 	db	2
  8305   0116F4  02                 	db	2
  8306   0116F5  02                 	db	2
  8307   0116F6  02                 	db	2
  8308   0116F7  02                 	db	2
  8309   0116F8  02                 	db	2
  8310   0116F9  02                 	db	2
  8311   0116FA  02                 	db	2
  8312   0116FB  02                 	db	2
  8313   0116FC  02                 	db	2
  8314   0116FD  02                 	db	2
  8315   0116FE  02                 	db	2
  8316   0116FF  02                 	db	2
  8317   011700  02                 	db	2
  8318   011701  02                 	db	2
  8319   011702  02                 	db	2
  8320   011703  02                 	db	2
  8321   011704  02                 	db	2
  8322   011705  02                 	db	2
  8323   011706  02                 	db	2
  8324   011707  02                 	db	2
  8325   011708  02                 	db	2
  8326   011709  02                 	db	2
  8327   01170A  02                 	db	2
  8328   01170B  02                 	db	2
  8329   01170C  02                 	db	2
  8330   01170D  02                 	db	2
  8331   01170E  02                 	db	2
  8332   01170F  02                 	db	2
  8333   011710  02                 	db	2
  8334   011711  02                 	db	2
  8335   011712  02                 	db	2
  8336   011713  02                 	db	2
  8337   011714  02                 	db	2
  8338   011715  02                 	db	2
  8339   011716  02                 	db	2
  8340   011717  02                 	db	2
  8341   011718  02                 	db	2
  8342   011719  02                 	db	2
  8343   01171A  02                 	db	2
  8344   01171B  02                 	db	2
  8345   01171C  02                 	db	2
  8346   01171D  02                 	db	2
  8347   01171E  02                 	db	2
  8348   01171F  02                 	db	2
  8349   011720  02                 	db	2
  8350   011721  02                 	db	2
  8351   011722  02                 	db	2
  8352   011723  02                 	db	2
  8353   011724  02                 	db	2
  8354   011725  02                 	db	2
  8355   011726  02                 	db	2
  8356   011727  02                 	db	2
  8357   011728  02                 	db	2
  8358   011729  02                 	db	2
  8359   01172A  02                 	db	2
  8360   01172B  02                 	db	2
  8361   01172C  02                 	db	2
  8362   01172D  02                 	db	2
  8363   01172E  02                 	db	2
  8364   01172F  02                 	db	2
  8365   011730  02                 	db	2
  8366   011731  02                 	db	2
  8367   011732  02                 	db	2
  8368   011733  02                 	db	2
  8369   011734  02                 	db	2
  8370   011735  02                 	db	2
  8371   011736  02                 	db	2
  8372   011737  02                 	db	2
  8373   011738  02                 	db	2
  8374   011739  02                 	db	2
  8375   01173A  02                 	db	2
  8376   01173B  02                 	db	2
  8377   01173C  02                 	db	2
  8378   01173D  02                 	db	2
  8379   01173E  02                 	db	2
  8380   01173F  02                 	db	2
  8381   011740  02                 	db	2
  8382   011741  02                 	db	2
  8383   011742  02                 	db	2
  8384   011743  02                 	db	2
  8385   011744  02                 	db	2
  8386   011745  02                 	db	2
  8387   011746  02                 	db	2
  8388   011747  02                 	db	2
  8389   011748  02                 	db	2
  8390   011749  02                 	db	2
  8391   01174A  02                 	db	2
  8392   01174B  02                 	db	2
  8393   01174C  02                 	db	2
  8394   01174D  02                 	db	2
  8395   01174E  02                 	db	2
  8396   01174F  02                 	db	2
  8397   011750  02                 	db	2
  8398   011751  02                 	db	2
  8399   011752  02                 	db	2
  8400   011753  02                 	db	2
  8401   011754  02                 	db	2
  8402   011755  02                 	db	2
  8403   011756  02                 	db	2
  8404   011757  02                 	db	2
  8405   011758  02                 	db	2
  8406   011759  02                 	db	2
  8407   01175A  02                 	db	2
  8408   01175B  02                 	db	2
  8409   01175C  02                 	db	2
  8410   01175D  02                 	db	2
  8411   01175E  02                 	db	2
  8412   01175F  02                 	db	2
  8413   011760  02                 	db	2
  8414   011761  02                 	db	2
  8415   011762  02                 	db	2
  8416   011763  02                 	db	2
  8417   011764  02                 	db	2
  8418   011765  02                 	db	2
  8419   011766  02                 	db	2
  8420   011767  02                 	db	2
  8421   011768  02                 	db	2
  8422   011769  02                 	db	2
  8423   01176A  02                 	db	2
  8424   01176B  02                 	db	2
  8425   01176C  02                 	db	2
  8426   01176D  02                 	db	2
  8427   01176E  02                 	db	2
  8428   01176F  02                 	db	2
  8429   011770  02                 	db	2
  8430   011771  02                 	db	2
  8431   011772  02                 	db	2
  8432   011773  02                 	db	2
  8433   011774  02                 	db	2
  8434   011775  02                 	db	2
  8435   011776  02                 	db	2
  8436   011777  02                 	db	2
  8437   011778  02                 	db	2
  8438   011779  02                 	db	2
  8439   01177A  02                 	db	2
  8440   01177B  02                 	db	2
  8441   01177C  02                 	db	2
  8442   01177D  02                 	db	2
  8443   01177E  02                 	db	2
  8444   01177F  02                 	db	2
  8445   011780  02                 	db	2
  8446   011781  02                 	db	2
  8447   011782  02                 	db	2
  8448   011783  02                 	db	2
  8449   011784  02                 	db	2
  8450   011785  02                 	db	2
  8451   011786  02                 	db	2
  8452   011787  02                 	db	2
  8453   011788  02                 	db	2
  8454   011789  02                 	db	2
  8455   01178A  02                 	db	2
  8456   01178B  02                 	db	2
  8457   01178C  02                 	db	2
  8458   01178D  02                 	db	2
  8459   01178E  02                 	db	2
  8460   01178F  02                 	db	2
  8461   011790  02                 	db	2
  8462   011791  02                 	db	2
  8463   011792  02                 	db	2
  8464   011793  02                 	db	2
  8465                           
  8466                           	psect	idataBANK13
  8467   011794                     __pidataBANK13:
  8468                           	callstack 0
  8469                           
  8470                           ;initializer for main@F17920
  8471   011794  03                 	db	3
  8472   011795  03                 	db	3
  8473   011796  03                 	db	3
  8474   011797  03                 	db	3
  8475   011798  03                 	db	3
  8476   011799  03                 	db	3
  8477   01179A  03                 	db	3
  8478   01179B  03                 	db	3
  8479   01179C  03                 	db	3
  8480   01179D  03                 	db	3
  8481   01179E  03                 	db	3
  8482   01179F  03                 	db	3
  8483   0117A0  03                 	db	3
  8484   0117A1  03                 	db	3
  8485   0117A2  03                 	db	3
  8486   0117A3  03                 	db	3
  8487   0117A4  03                 	db	3
  8488   0117A5  03                 	db	3
  8489   0117A6  03                 	db	3
  8490   0117A7  03                 	db	3
  8491   0117A8  03                 	db	3
  8492   0117A9  03                 	db	3
  8493   0117AA  03                 	db	3
  8494   0117AB  03                 	db	3
  8495   0117AC  03                 	db	3
  8496   0117AD  03                 	db	3
  8497   0117AE  03                 	db	3
  8498   0117AF  03                 	db	3
  8499   0117B0  03                 	db	3
  8500   0117B1  03                 	db	3
  8501   0117B2  03                 	db	3
  8502   0117B3  03                 	db	3
  8503   0117B4  03                 	db	3
  8504   0117B5  03                 	db	3
  8505   0117B6  03                 	db	3
  8506   0117B7  03                 	db	3
  8507   0117B8  03                 	db	3
  8508   0117B9  03                 	db	3
  8509   0117BA  03                 	db	3
  8510   0117BB  03                 	db	3
  8511   0117BC  03                 	db	3
  8512   0117BD  03                 	db	3
  8513   0117BE  03                 	db	3
  8514   0117BF  03                 	db	3
  8515   0117C0  03                 	db	3
  8516   0117C1  03                 	db	3
  8517   0117C2  03                 	db	3
  8518   0117C3  03                 	db	3
  8519   0117C4  03                 	db	3
  8520   0117C5  03                 	db	3
  8521   0117C6  03                 	db	3
  8522   0117C7  03                 	db	3
  8523   0117C8  03                 	db	3
  8524   0117C9  03                 	db	3
  8525   0117CA  03                 	db	3
  8526   0117CB  03                 	db	3
  8527   0117CC  03                 	db	3
  8528   0117CD  03                 	db	3
  8529   0117CE  03                 	db	3
  8530   0117CF  03                 	db	3
  8531   0117D0  03                 	db	3
  8532   0117D1  03                 	db	3
  8533   0117D2  03                 	db	3
  8534   0117D3  03                 	db	3
  8535   0117D4  03                 	db	3
  8536   0117D5  03                 	db	3
  8537   0117D6  03                 	db	3
  8538   0117D7  03                 	db	3
  8539   0117D8  03                 	db	3
  8540   0117D9  03                 	db	3
  8541   0117DA  03                 	db	3
  8542   0117DB  03                 	db	3
  8543   0117DC  03                 	db	3
  8544   0117DD  03                 	db	3
  8545   0117DE  03                 	db	3
  8546   0117DF  03                 	db	3
  8547   0117E0  03                 	db	3
  8548   0117E1  03                 	db	3
  8549   0117E2  03                 	db	3
  8550   0117E3  03                 	db	3
  8551   0117E4  03                 	db	3
  8552   0117E5  03                 	db	3
  8553   0117E6  03                 	db	3
  8554   0117E7  03                 	db	3
  8555   0117E8  03                 	db	3
  8556   0117E9  03                 	db	3
  8557   0117EA  03                 	db	3
  8558   0117EB  03                 	db	3
  8559   0117EC  03                 	db	3
  8560   0117ED  03                 	db	3
  8561   0117EE  03                 	db	3
  8562   0117EF  03                 	db	3
  8563   0117F0  03                 	db	3
  8564   0117F1  03                 	db	3
  8565   0117F2  03                 	db	3
  8566   0117F3  03                 	db	3
  8567   0117F4  03                 	db	3
  8568   0117F5  03                 	db	3
  8569   0117F6  03                 	db	3
  8570   0117F7  03                 	db	3
  8571   0117F8  03                 	db	3
  8572   0117F9  03                 	db	3
  8573   0117FA  03                 	db	3
  8574   0117FB  03                 	db	3
  8575   0117FC  03                 	db	3
  8576   0117FD  03                 	db	3
  8577   0117FE  03                 	db	3
  8578   0117FF  03                 	db	3
  8579   011800  03                 	db	3
  8580   011801  03                 	db	3
  8581   011802  03                 	db	3
  8582   011803  03                 	db	3
  8583   011804  03                 	db	3
  8584   011805  03                 	db	3
  8585   011806  03                 	db	3
  8586   011807  03                 	db	3
  8587   011808  03                 	db	3
  8588   011809  03                 	db	3
  8589   01180A  03                 	db	3
  8590   01180B  03                 	db	3
  8591   01180C  03                 	db	3
  8592   01180D  03                 	db	3
  8593   01180E  03                 	db	3
  8594   01180F  03                 	db	3
  8595   011810  03                 	db	3
  8596   011811  03                 	db	3
  8597   011812  03                 	db	3
  8598   011813  03                 	db	3
  8599   011814  03                 	db	3
  8600   011815  03                 	db	3
  8601   011816  03                 	db	3
  8602   011817  03                 	db	3
  8603   011818  03                 	db	3
  8604   011819  03                 	db	3
  8605   01181A  03                 	db	3
  8606   01181B  03                 	db	3
  8607   01181C  03                 	db	3
  8608   01181D  03                 	db	3
  8609   01181E  03                 	db	3
  8610   01181F  03                 	db	3
  8611   011820  03                 	db	3
  8612   011821  03                 	db	3
  8613   011822  03                 	db	3
  8614   011823  03                 	db	3
  8615   011824  03                 	db	3
  8616   011825  03                 	db	3
  8617   011826  03                 	db	3
  8618   011827  03                 	db	3
  8619   011828  03                 	db	3
  8620   011829  03                 	db	3
  8621   01182A  03                 	db	3
  8622   01182B  03                 	db	3
  8623   01182C  03                 	db	3
  8624   01182D  03                 	db	3
  8625   01182E  03                 	db	3
  8626   01182F  03                 	db	3
  8627   011830  03                 	db	3
  8628   011831  03                 	db	3
  8629   011832  03                 	db	3
  8630   011833  03                 	db	3
  8631   011834  03                 	db	3
  8632   011835  03                 	db	3
  8633   011836  03                 	db	3
  8634   011837  03                 	db	3
  8635   011838  03                 	db	3
  8636   011839  03                 	db	3
  8637   01183A  03                 	db	3
  8638   01183B  03                 	db	3
  8639   01183C  03                 	db	3
  8640   01183D  03                 	db	3
  8641   01183E  03                 	db	3
  8642   01183F  03                 	db	3
  8643   011840  03                 	db	3
  8644   011841  03                 	db	3
  8645   011842  03                 	db	3
  8646   011843  03                 	db	3
  8647   011844  03                 	db	3
  8648   011845  03                 	db	3
  8649   011846  03                 	db	3
  8650   011847  03                 	db	3
  8651   011848  03                 	db	3
  8652   011849  03                 	db	3
  8653   01184A  03                 	db	3
  8654   01184B  03                 	db	3
  8655   01184C  03                 	db	3
  8656   01184D  03                 	db	3
  8657   01184E  03                 	db	3
  8658   01184F  03                 	db	3
  8659   011850  03                 	db	3
  8660   011851  03                 	db	3
  8661   011852  03                 	db	3
  8662   011853  03                 	db	3
  8663   011854  03                 	db	3
  8664   011855  03                 	db	3
  8665   011856  03                 	db	3
  8666   011857  03                 	db	3
  8667   011858  03                 	db	3
  8668   011859  03                 	db	3
  8669   01185A  03                 	db	3
  8670   01185B  03                 	db	3
  8671                           
  8672                           	psect	mediumconst
  8673   00FE52                     __pmediumconst:
  8674                           	callstack 0
  8675   00FE52  00                 	db	0
  8676   00FE53                     _SPI1_nrf24:
  8677                           	callstack 0
  8678   00FE53  48                 	db	low _SPI1_Initialize
  8679   00FE54  29                 	db	high _SPI1_Initialize
  8680   00FE55  01                 	db	low (_SPI1_Initialize shr (0+16))
  8681   00FE56  00                 	db	0
  8682   00FE57  00                 	db	0
  8683   00FE58  00                 	db	0
  8684   00FE59  96                 	db	low _SPI1_Open
  8685   00FE5A  13                 	db	high _SPI1_Open
  8686   00FE5B  01                 	db	low (_SPI1_Open shr (0+16))
  8687   00FE5C  00                 	db	0
  8688   00FE5D  00                 	db	0
  8689   00FE5E  00                 	db	0
  8690   00FE5F  00                 	db	0
  8691   00FE60  00                 	db	0
  8692   00FE61  00                 	db	0
  8693   00FE62  00                 	db	0
  8694   00FE63  00                 	db	0
  8695   00FE64  00                 	db	0
  8696   00FE65  00                 	db	0
  8697   00FE66  00                 	db	0
  8698   00FE67  00                 	db	0
  8699   00FE68  94                 	db	low _SPI1_ByteExchange
  8700   00FE69  24                 	db	high _SPI1_ByteExchange
  8701   00FE6A  01                 	db	low (_SPI1_ByteExchange shr (0+16))
  8702   00FE6B  00                 	db	0
  8703   00FE6C  00                 	db	0
  8704   00FE6D  00                 	db	0
  8705   00FE6E  00                 	db	0
  8706   00FE6F  00                 	db	0
  8707   00FE70  00                 	db	0
  8708   00FE71  00                 	db	0
  8709   00FE72  00                 	db	0
  8710   00FE73  00                 	db	0
  8711   00FE74  00                 	db	0
  8712   00FE75  00                 	db	0
  8713   00FE76  00                 	db	0
  8714   00FE77  00                 	db	0
  8715   00FE78  00                 	db	0
  8716   00FE79  00                 	db	0
  8717   00FE7A  00                 	db	0
  8718   00FE7B  00                 	db	0
  8719   00FE7C  00                 	db	0
  8720   00FE7D                     __end_of_SPI1_nrf24:
  8721                           	callstack 0
  8722   00FE7D                     _Timer0:
  8723                           	callstack 0
  8724   00FE7D  00                 	db	0
  8725   00FE7E  00                 	db	0
  8726   00FE7F  00                 	db	0
  8727   00FE80  00                 	db	0
  8728   00FE81  00                 	db	0
  8729   00FE82  00                 	db	0
  8730   00FE83  00                 	db	0
  8731   00FE84  00                 	db	0
  8732   00FE85  00                 	db	0
  8733   00FE86  00                 	db	0
  8734   00FE87  00                 	db	0
  8735   00FE88  00                 	db	0
  8736   00FE89  00                 	db	0
  8737   00FE8A  00                 	db	0
  8738   00FE8B  00                 	db	0
  8739   00FE8C  00                 	db	0
  8740   00FE8D  00                 	db	0
  8741   00FE8E  00                 	db	0
  8742   00FE8F                     __end_of_Timer0:
  8743                           	callstack 0
  8744   00FE8F                     _spi1_configuration:
  8745                           	callstack 0
  8746   00FE8F  02                 	db	2
  8747   00FE90  40                 	db	64
  8748   00FE91  00                 	db	0
  8749   00FE92  4F                 	db	79
  8750   00FE93  00                 	db	0
  8751   00FE94  02                 	db	2
  8752   00FE95  40                 	db	64
  8753   00FE96  00                 	db	0
  8754   00FE97  00                 	db	0
  8755   00FE98  00                 	db	0
  8756   00FE99                     __end_of_spi1_configuration:
  8757                           	callstack 0
  8758   00FE99                     _rf24_crclength:
  8759                           	callstack 0
  8760   00FE99  44                 	db	68
  8761   00FE9A  69                 	db	105
  8762   00FE9B  73                 	db	115
  8763   00FE9C  61                 	db	97
  8764   00FE9D  62                 	db	98
  8765   00FE9E  6C                 	db	108
  8766   00FE9F  65                 	db	101
  8767   00FEA0  64                 	db	100
  8768   00FEA1  00                 	db	0
  8769   00FEA2  00                 	db	0
  8770   00FEA3  38                 	db	56
  8771   00FEA4  20                 	db	32
  8772   00FEA5  62                 	db	98
  8773   00FEA6  69                 	db	105
  8774   00FEA7  74                 	db	116
  8775   00FEA8  73                 	db	115
  8776   00FEA9  00                 	db	0
  8777   00FEAA  00                 	db	0
  8778   00FEAB  00                 	db	0
  8779   00FEAC  00                 	db	0
  8780   00FEAD  31                 	db	49
  8781   00FEAE  36                 	db	54
  8782   00FEAF  20                 	db	32
  8783   00FEB0  62                 	db	98
  8784   00FEB1  69                 	db	105
  8785   00FEB2  74                 	db	116
  8786   00FEB3  73                 	db	115
  8787   00FEB4  00                 	db	0
  8788   00FEB5  00                 	db	0
  8789   00FEB6  00                 	db	0
  8790   00FEB7                     __end_of_rf24_crclength:
  8791                           	callstack 0
  8792   00FEB7                     STR_18:
  8793   00FEB7  53                 	db	83	;'S'
  8794   00FEB8  54                 	db	84	;'T'
  8795   00FEB9  41                 	db	65	;'A'
  8796   00FEBA  54                 	db	84	;'T'
  8797   00FEBB  55                 	db	85	;'U'
  8798   00FEBC  53                 	db	83	;'S'
  8799   00FEBD  09                 	db	9
  8800   00FEBE  09                 	db	9
  8801   00FEBF  20                 	db	32
  8802   00FEC0  3D                 	db	61	;'='
  8803   00FEC1  20                 	db	32
  8804   00FEC2  30                 	db	48	;'0'
  8805   00FEC3  78                 	db	120	;'x'
  8806   00FEC4  25                 	db	37
  8807   00FEC5  30                 	db	48	;'0'
  8808   00FEC6  32                 	db	50	;'2'
  8809   00FEC7  78                 	db	120	;'x'
  8810   00FEC8  20                 	db	32
  8811   00FEC9  52                 	db	82	;'R'
  8812   00FECA  58                 	db	88	;'X'
  8813   00FECB  5F                 	db	95	;'_'
  8814   00FECC  44                 	db	68	;'D'
  8815   00FECD  52                 	db	82	;'R'
  8816   00FECE  3D                 	db	61	;'='
  8817   00FECF  25                 	db	37
  8818   00FED0  78                 	db	120	;'x'
  8819   00FED1  20                 	db	32
  8820   00FED2  54                 	db	84	;'T'
  8821   00FED3  58                 	db	88	;'X'
  8822   00FED4  5F                 	db	95	;'_'
  8823   00FED5  44                 	db	68	;'D'
  8824   00FED6  53                 	db	83	;'S'
  8825   00FED7  3D                 	db	61	;'='
  8826   00FED8  25                 	db	37
  8827   00FED9  78                 	db	120	;'x'
  8828   00FEDA  20                 	db	32
  8829   00FEDB  4D                 	db	77	;'M'
  8830   00FEDC  41                 	db	65	;'A'
  8831   00FEDD  58                 	db	88	;'X'
  8832   00FEDE  5F                 	db	95	;'_'
  8833   00FEDF  52                 	db	82	;'R'
  8834   00FEE0  54                 	db	84	;'T'
  8835   00FEE1  3D                 	db	61	;'='
  8836   00FEE2  25                 	db	37
  8837   00FEE3  78                 	db	120	;'x'
  8838   00FEE4  20                 	db	32
  8839   00FEE5  52                 	db	82	;'R'
  8840   00FEE6  58                 	db	88	;'X'
  8841   00FEE7  5F                 	db	95	;'_'
  8842   00FEE8  50                 	db	80	;'P'
  8843   00FEE9  5F                 	db	95	;'_'
  8844   00FEEA  4E                 	db	78	;'N'
  8845   00FEEB  4F                 	db	79	;'O'
  8846   00FEEC  3D                 	db	61	;'='
  8847   00FEED  25                 	db	37
  8848   00FEEE  78                 	db	120	;'x'
  8849   00FEEF  20                 	db	32
  8850   00FEF0  54                 	db	84	;'T'
  8851   00FEF1  58                 	db	88	;'X'
  8852   00FEF2  5F                 	db	95	;'_'
  8853   00FEF3  46                 	db	70	;'F'
  8854   00FEF4  55                 	db	85	;'U'
  8855   00FEF5  4C                 	db	76	;'L'
  8856   00FEF6  4C                 	db	76	;'L'
  8857   00FEF7  3D                 	db	61	;'='
  8858   00FEF8  25                 	db	37
  8859   00FEF9  78                 	db	120	;'x'
  8860   00FEFA  0D                 	db	13
  8861   00FEFB  0A                 	db	10
  8862   00FEFC  00                 	db	0
  8863   00FEFD                     STR_3:
  8864   00FEFD  3D                 	db	61	;'='
  8865   00FEFE  3D                 	db	61	;'='
  8866   00FEFF  3D                 	db	61	;'='
  8867   00FF00  3D                 	db	61	;'='
  8868   00FF01  3D                 	db	61	;'='
  8869   00FF02  3D                 	db	61	;'='
  8870   00FF03  3D                 	db	61	;'='
  8871   00FF04  3D                 	db	61	;'='
  8872   00FF05  3D                 	db	61	;'='
  8873   00FF06  3D                 	db	61	;'='
  8874   00FF07  3D                 	db	61	;'='
  8875   00FF08  3D                 	db	61	;'='
  8876   00FF09  3D                 	db	61	;'='
  8877   00FF0A  3D                 	db	61	;'='
  8878   00FF0B  3D                 	db	61	;'='
  8879   00FF0C  3D                 	db	61	;'='
  8880   00FF0D  20                 	db	32
  8881   00FF0E  4E                 	db	78	;'N'
  8882   00FF0F  52                 	db	82	;'R'
  8883   00FF10  46                 	db	70	;'F'
  8884   00FF11  20                 	db	32
  8885   00FF12  43                 	db	67	;'C'
  8886   00FF13  6F                 	db	111	;'o'
  8887   00FF14  6E                 	db	110	;'n'
  8888   00FF15  66                 	db	102	;'f'
  8889   00FF16  69                 	db	105	;'i'
  8890   00FF17  67                 	db	103	;'g'
  8891   00FF18  75                 	db	117	;'u'
  8892   00FF19  72                 	db	114	;'r'
  8893   00FF1A  61                 	db	97	;'a'
  8894   00FF1B  74                 	db	116	;'t'
  8895   00FF1C  69                 	db	105	;'i'
  8896   00FF1D  6F                 	db	111	;'o'
  8897   00FF1E  6E                 	db	110	;'n'
  8898   00FF1F  20                 	db	32
  8899   00FF20  3D                 	db	61	;'='
  8900   00FF21  3D                 	db	61	;'='
  8901   00FF22  3D                 	db	61	;'='
  8902   00FF23  3D                 	db	61	;'='
  8903   00FF24  3D                 	db	61	;'='
  8904   00FF25  3D                 	db	61	;'='
  8905   00FF26  3D                 	db	61	;'='
  8906   00FF27  3D                 	db	61	;'='
  8907   00FF28  3D                 	db	61	;'='
  8908   00FF29  3D                 	db	61	;'='
  8909   00FF2A  3D                 	db	61	;'='
  8910   00FF2B  3D                 	db	61	;'='
  8911   00FF2C  3D                 	db	61	;'='
  8912   00FF2D  3D                 	db	61	;'='
  8913   00FF2E  3D                 	db	61	;'='
  8914   00FF2F  3D                 	db	61	;'='
  8915   00FF30  0A                 	db	10
  8916   00FF31  00                 	db	0
  8917   00FF32                     STR_17:
  8918   00FF32  52                 	db	82	;'R'
  8919   00FF33  65                 	db	101	;'e'
  8920   00FF34  74                 	db	116	;'t'
  8921   00FF35  72                 	db	114	;'r'
  8922   00FF36  61                 	db	97	;'a'
  8923   00FF37  6E                 	db	110	;'n'
  8924   00FF38  73                 	db	115	;'s'
  8925   00FF39  6D                 	db	109	;'m'
  8926   00FF3A  69                 	db	105	;'i'
  8927   00FF3B  74                 	db	116	;'t'
  8928   00FF3C  09                 	db	9
  8929   00FF3D  20                 	db	32
  8930   00FF3E  3D                 	db	61	;'='
  8931   00FF3F  20                 	db	32
  8932   00FF40  25                 	db	37
  8933   00FF41  64                 	db	100	;'d'
  8934   00FF42  20                 	db	32
  8935   00FF43  75                 	db	117	;'u'
  8936   00FF44  73                 	db	115	;'s'
  8937   00FF45  0A                 	db	10
  8938   00FF46  00                 	db	0
  8939   00FF47                     STR_15:
  8940   00FF47  43                 	db	67	;'C'
  8941   00FF48  52                 	db	82	;'R'
  8942   00FF49  43                 	db	67	;'C'
  8943   00FF4A  20                 	db	32
  8944   00FF4B  4C                 	db	76	;'L'
  8945   00FF4C  65                 	db	101	;'e'
  8946   00FF4D  6E                 	db	110	;'n'
  8947   00FF4E  67                 	db	103	;'g'
  8948   00FF4F  74                 	db	116	;'t'
  8949   00FF50  68                 	db	104	;'h'
  8950   00FF51  09                 	db	9
  8951   00FF52  20                 	db	32
  8952   00FF53  3D                 	db	61	;'='
  8953   00FF54  20                 	db	32
  8954   00FF55  25                 	db	37
  8955   00FF56  73                 	db	115	;'s'
  8956   00FF57  0A                 	db	10
  8957   00FF58  00                 	db	0
  8958   00FF59                     STR_14:
  8959   00FF59  44                 	db	68	;'D'
  8960   00FF5A  61                 	db	97	;'a'
  8961   00FF5B  74                 	db	116	;'t'
  8962   00FF5C  61                 	db	97	;'a'
  8963   00FF5D  20                 	db	32
  8964   00FF5E  52                 	db	82	;'R'
  8965   00FF5F  61                 	db	97	;'a'
  8966   00FF60  74                 	db	116	;'t'
  8967   00FF61  65                 	db	101	;'e'
  8968   00FF62  09                 	db	9
  8969   00FF63  20                 	db	32
  8970   00FF64  3D                 	db	61	;'='
  8971   00FF65  20                 	db	32
  8972   00FF66  25                 	db	37
  8973   00FF67  73                 	db	115	;'s'
  8974   00FF68  0A                 	db	10
  8975   00FF69  00                 	db	0
  8976   00FF6A                     STR_16:
  8977   00FF6A  50                 	db	80	;'P'
  8978   00FF6B  41                 	db	65	;'A'
  8979   00FF6C  20                 	db	32
  8980   00FF6D  50                 	db	80	;'P'
  8981   00FF6E  6F                 	db	111	;'o'
  8982   00FF6F  77                 	db	119	;'w'
  8983   00FF70  65                 	db	101	;'e'
  8984   00FF71  72                 	db	114	;'r'
  8985   00FF72  09                 	db	9
  8986   00FF73  20                 	db	32
  8987   00FF74  3D                 	db	61	;'='
  8988   00FF75  20                 	db	32
  8989   00FF76  25                 	db	37
  8990   00FF77  73                 	db	115	;'s'
  8991   00FF78  0A                 	db	10
  8992   00FF79  00                 	db	0
  8993   00FF7A                     STR_13:
  8994   00FF7A  44                 	db	68	;'D'
  8995   00FF7B  59                 	db	89	;'Y'
  8996   00FF7C  4E                 	db	78	;'N'
  8997   00FF7D  50                 	db	80	;'P'
  8998   00FF7E  44                 	db	68	;'D'
  8999   00FF7F  2F                 	db	47
  9000   00FF80  46                 	db	70	;'F'
  9001   00FF81  45                 	db	69	;'E'
  9002   00FF82  41                 	db	65	;'A'
  9003   00FF83  54                 	db	84	;'T'
  9004   00FF84  55                 	db	85	;'U'
  9005   00FF85  52                 	db	82	;'R'
  9006   00FF86  45                 	db	69	;'E'
  9007   00FF87  00                 	db	0
  9008   00FF88                     STR_4:
  9009   00FF88  52                 	db	82	;'R'
  9010   00FF89  58                 	db	88	;'X'
  9011   00FF8A  5F                 	db	95	;'_'
  9012   00FF8B  41                 	db	65	;'A'
  9013   00FF8C  44                 	db	68	;'D'
  9014   00FF8D  44                 	db	68	;'D'
  9015   00FF8E  52                 	db	82	;'R'
  9016   00FF8F  5F                 	db	95	;'_'
  9017   00FF90  50                 	db	80	;'P'
  9018   00FF91  30                 	db	48	;'0'
  9019   00FF92  2D                 	db	45
  9020   00FF93  31                 	db	49	;'1'
  9021   00FF94  00                 	db	0
  9022   00FF95                     STR_5:
  9023   00FF95  52                 	db	82	;'R'
  9024   00FF96  58                 	db	88	;'X'
  9025   00FF97  5F                 	db	95	;'_'
  9026   00FF98  41                 	db	65	;'A'
  9027   00FF99  44                 	db	68	;'D'
  9028   00FF9A  44                 	db	68	;'D'
  9029   00FF9B  52                 	db	82	;'R'
  9030   00FF9C  5F                 	db	95	;'_'
  9031   00FF9D  50                 	db	80	;'P'
  9032   00FF9E  32                 	db	50	;'2'
  9033   00FF9F  2D                 	db	45
  9034   00FFA0  35                 	db	53	;'5'
  9035   00FFA1  00                 	db	0
  9036   00FFA2                     STR_7:
  9037   00FFA2  52                 	db	82	;'R'
  9038   00FFA3  58                 	db	88	;'X'
  9039   00FFA4  5F                 	db	95	;'_'
  9040   00FFA5  50                 	db	80	;'P'
  9041   00FFA6  57                 	db	87	;'W'
  9042   00FFA7  5F                 	db	95	;'_'
  9043   00FFA8  50                 	db	80	;'P'
  9044   00FFA9  30                 	db	48	;'0'
  9045   00FFAA  2D                 	db	45
  9046   00FFAB  36                 	db	54	;'6'
  9047   00FFAC  00                 	db	0
  9048   00FFAD                     STR_9:
  9049   00FFAD  45                 	db	69	;'E'
  9050   00FFAE  4E                 	db	78	;'N'
  9051   00FFAF  5F                 	db	95	;'_'
  9052   00FFB0  52                 	db	82	;'R'
  9053   00FFB1  58                 	db	88	;'X'
  9054   00FFB2  41                 	db	65	;'A'
  9055   00FFB3  44                 	db	68	;'D'
  9056   00FFB4  44                 	db	68	;'D'
  9057   00FFB5  52                 	db	82	;'R'
  9058   00FFB6  00                 	db	0
  9059   00FFB7                     STR_6:
  9060   00FFB7  54                 	db	84	;'T'
  9061   00FFB8  58                 	db	88	;'X'
  9062   00FFB9  5F                 	db	95	;'_'
  9063   00FFBA  41                 	db	65	;'A'
  9064   00FFBB  44                 	db	68	;'D'
  9065   00FFBC  44                 	db	68	;'D'
  9066   00FFBD  52                 	db	82	;'R'
  9067   00FFBE  09                 	db	9
  9068   00FFBF  00                 	db	0
  9069   00FFC0                     STR_11:
  9070   00FFC0  52                 	db	82	;'R'
  9071   00FFC1  46                 	db	70	;'F'
  9072   00FFC2  5F                 	db	95	;'_'
  9073   00FFC3  53                 	db	83	;'S'
  9074   00FFC4  45                 	db	69	;'E'
  9075   00FFC5  54                 	db	84	;'T'
  9076   00FFC6  55                 	db	85	;'U'
  9077   00FFC7  50                 	db	80	;'P'
  9078   00FFC8  00                 	db	0
  9079   00FFC9                     STR_12:
  9080   00FFC9  43                 	db	67	;'C'
  9081   00FFCA  4F                 	db	79	;'O'
  9082   00FFCB  4E                 	db	78	;'N'
  9083   00FFCC  46                 	db	70	;'F'
  9084   00FFCD  49                 	db	73	;'I'
  9085   00FFCE  47                 	db	71	;'G'
  9086   00FFCF  09                 	db	9
  9087   00FFD0  00                 	db	0
  9088   00FFD1                     STR_24:
  9089   00FFD1  20                 	db	32
  9090   00FFD2  30                 	db	48	;'0'
  9091   00FFD3  78                 	db	120	;'x'
  9092   00FFD4  25                 	db	37
  9093   00FFD5  30                 	db	48	;'0'
  9094   00FFD6  32                 	db	50	;'2'
  9095   00FFD7  78                 	db	120	;'x'
  9096   00FFD8  00                 	db	0
  9097   00FFD9                     STR_26:
  9098   00FFD9  28                 	db	40
  9099   00FFDA  6E                 	db	110	;'n'
  9100   00FFDB  75                 	db	117	;'u'
  9101   00FFDC  6C                 	db	108	;'l'
  9102   00FFDD  6C                 	db	108	;'l'
  9103   00FFDE  29                 	db	41
  9104   00FFDF  00                 	db	0
  9105   00FFE0                     STR_8:
  9106   00FFE0  45                 	db	69	;'E'
  9107   00FFE1  4E                 	db	78	;'N'
  9108   00FFE2  5F                 	db	95	;'_'
  9109   00FFE3  41                 	db	65	;'A'
  9110   00FFE4  41                 	db	65	;'A'
  9111   00FFE5  09                 	db	9
  9112   00FFE6  00                 	db	0
  9113   00FFE7                     STR_10:
  9114   00FFE7  52                 	db	82	;'R'
  9115   00FFE8  46                 	db	70	;'F'
  9116   00FFE9  5F                 	db	95	;'_'
  9117   00FFEA  43                 	db	67	;'C'
  9118   00FFEB  48                 	db	72	;'H'
  9119   00FFEC  09                 	db	9
  9120   00FFED  00                 	db	0
  9121   00FFEE                     STR_19:
  9122   00FFEE  25                 	db	37
  9123   00FFEF  73                 	db	115	;'s'
  9124   00FFF0  09                 	db	9
  9125   00FFF1  20                 	db	32
  9126   00FFF2  3D                 	db	61	;'='
  9127   00FFF3  00                 	db	0
  9128   00FFF4                     STR_1:
  9129   00FFF4  47                 	db	71	;'G'
  9130   00FFF5  41                 	db	65	;'A'
  9131   00FFF6  4D                 	db	77	;'M'
  9132   00FFF7  45                 	db	69	;'E'
  9133   00FFF8  34                 	db	52	;'4'
  9134   00FFF9  00                 	db	0
  9135   00FFFA                     STR_20:
  9136   00FFFA  20                 	db	32
  9137   00FFFB  30                 	db	48	;'0'
  9138   00FFFC  78                 	db	120	;'x'
  9139   00FFFD  00                 	db	0
  9140   00FFD4                     STR_21          equ	STR_24+3
  9141   00FFEE                     STR_23          equ	STR_19
  9142   00FFF4                     STR_2           equ	STR_1
  9143   00FEFA                     STR_22          equ	STR_18+67
  9144   00FEFA                     STR_25          equ	STR_18+67
  9145   00FFFE  00                 	db	0	; dummy byte at the end
  9146   000003                     __activetblptr  equ	3
  9147                           
  9148                           	psect	nvCOMRAM
  9149   00055A                     __pnvCOMRAM:
  9150                           	callstack 0
  9151   00055A                     _INT2_InterruptHandler:
  9152                           	callstack 0
  9153   00055A                     	ds	3
  9154   00055D                     _INT1_InterruptHandler:
  9155                           	callstack 0
  9156   00055D                     	ds	3
  9157   0000AC                     _ACTCON         set	172
  9158   0000B0                     _OSCTUNE        set	176
  9159   0000B1                     _OSCFRQ         set	177
  9160   0000B3                     _OSCEN          set	179
  9161   0000AF                     _OSCCON3        set	175
  9162   0000AD                     _OSCCON1        set	173
  9163   000080                     _SPI1RXB        set	128
  9164   000081                     _SPI1TXB        set	129
  9165   000082                     _SPI1TCNTL      set	130
  9166   000083                     _SPI1TCNTH      set	131
  9167   00008A                     _SPI1INTFbits   set	138
  9168   000084                     _SPI1CON0bits   set	132
  9169   000087                     _SPI1STATUSbits set	135
  9170   00008C                     _SPI1CLK        set	140
  9171   000089                     _SPI1BAUD       set	137
  9172   000086                     _SPI1CON2       set	134
  9173   000085                     _SPI1CON1       set	133
  9174   000084                     _SPI1CON0       set	132
  9175   000214                     _RC3PPS         set	532
  9176   00026A                     _SPI1SCKPPS     set	618
  9177   000216                     _RC5PPS         set	534
  9178   00026B                     _SPI1SDIPPS     set	619
  9179   000286                     _RC4I2C         set	646
  9180   000287                     _RC3I2C         set	647
  9181   000288                     _RB2I2C         set	648
  9182   000289                     _RB1I2C         set	649
  9183   00031A                     _T0CON0bits     set	794
  9184   00031A                     _T0CON0         set	794
  9185   00031B                     _T0CON1         set	795
  9186   000318                     _TMR0L          set	792
  9187   000319                     _TMR0H          set	793
  9188   000416                     _IOCCNbits      set	1046
  9189   000417                     _IOCCFbits      set	1047
  9190   000427                     _IOCEF          set	1063
  9191   000426                     _IOCEN          set	1062
  9192   000425                     _IOCEP          set	1061
  9193   000417                     _IOCCF          set	1047
  9194   000416                     _IOCCN          set	1046
  9195   000415                     _IOCCP          set	1045
  9196   00040F                     _IOCBF          set	1039
  9197   00040E                     _IOCBN          set	1038
  9198   00040D                     _IOCBP          set	1037
  9199   000407                     _IOCAF          set	1031
  9200   000406                     _IOCAN          set	1030
  9201   000405                     _IOCAP          set	1029
  9202   00042C                     _INLVLF         set	1068
  9203   000424                     _INLVLE         set	1060
  9204   00041C                     _INLVLD         set	1052
  9205   000414                     _INLVLC         set	1044
  9206   00040C                     _INLVLB         set	1036
  9207   000404                     _INLVLA         set	1028
  9208   00042B                     _SLRCONF        set	1067
  9209   000423                     _SLRCONE        set	1059
  9210   00041B                     _SLRCOND        set	1051
  9211   000413                     _SLRCONC        set	1043
  9212   00040B                     _SLRCONB        set	1035
  9213   000403                     _SLRCONA        set	1027
  9214   000429                     _WPUF           set	1065
  9215   000421                     _WPUE           set	1057
  9216   000419                     _WPUD           set	1049
  9217   000411                     _WPUC           set	1041
  9218   000409                     _WPUB           set	1033
  9219   000401                     _WPUA           set	1025
  9220   000428                     _ANSELF         set	1064
  9221   000420                     _ANSELE         set	1056
  9222   000418                     _ANSELD         set	1048
  9223   000410                     _ANSELC         set	1040
  9224   000408                     _ANSELB         set	1032
  9225   000400                     _ANSELA         set	1024
  9226   00042A                     _ODCONF         set	1066
  9227   000422                     _ODCONE         set	1058
  9228   00041A                     _ODCOND         set	1050
  9229   000412                     _ODCONC         set	1042
  9230   00040A                     _ODCONB         set	1034
  9231   000402                     _ODCONA         set	1026
  9232   0004C0                     _LATCbits       set	1216
  9233   0004C3                     _LATFbits       set	1219
  9234   0004AE                     _PIR0bits       set	1198
  9235   00049E                     _PIE0bits       set	1182
  9236   0004B8                     _PIR10bits      set	1208
  9237   0004B4                     _PIR6bits       set	1204
  9238   00049F                     _PIE1bits       set	1183
  9239   0004AF                     _PIR1bits       set	1199
  9240   0004D6                     _INTCON0bits    set	1238
  9241   0004CB                     _TRISF          set	1227
  9242   0004CA                     _TRISE          set	1226
  9243   0004C9                     _TRISD          set	1225
  9244   0004C8                     _TRISC          set	1224
  9245   0004C7                     _TRISB          set	1223
  9246   0004C6                     _TRISA          set	1222
  9247   0004C3                     _LATF           set	1219
  9248   0004C2                     _LATE           set	1218
  9249   0004C1                     _LATD           set	1217
  9250   0004C0                     _LATC           set	1216
  9251   0004BF                     _LATB           set	1215
  9252   0004BE                     _LATA           set	1214
  9253   0004B1                     _PIR3bits       set	1201
  9254   0004C8                     _TRISCbits      set	1224
  9255   0004A1                     _PIE3bits       set	1185
  9256                           
  9257                           ; #config settings
  9258                           
  9259                           	psect	cinit
  9260   010E88                     __pcinit:
  9261                           	callstack 0
  9262   010E88                     start_initialization:
  9263                           	callstack 0
  9264   010E88                     __initialization:
  9265                           	callstack 0
  9266                           
  9267                           ; Initialize objects allocated to BANK13 (200 bytes)
  9268                           ; load TBLPTR registers with __pidataBANK13
  9269   010E88  0E94               	movlw	low __pidataBANK13
  9270   010E8A  6EF6               	movwf	tblptrl,c
  9271   010E8C  0E17               	movlw	high __pidataBANK13
  9272   010E8E  6EF7               	movwf	tblptrh,c
  9273   010E90  0E01               	movlw	low (__pidataBANK13 shr (0+16))
  9274   010E92  6EF8               	movwf	tblptru,c
  9275   010E94  EE03  F100         	lfsr	0,__pdataBANK13
  9276   010E98  EE10 F0C8          	lfsr	1,200
  9277   010E9C                     copy_data0:
  9278   010E9C  0009               	tblrd		*+
  9279   010E9E  C4F5 F4EE          	movff	tablat,postinc0
  9280   010EA2  50E5               	movf	postdec1,w,c
  9281   010EA4  50E1               	movf	fsr1l,w,c
  9282   010EA6  E1FA               	bnz	copy_data0
  9283                           
  9284                           ; Initialize objects allocated to BANK12 (200 bytes)
  9285                           ; load TBLPTR registers with __pidataBANK12
  9286   010EA8  0ECC               	movlw	low __pidataBANK12
  9287   010EAA  6EF6               	movwf	tblptrl,c
  9288   010EAC  0E16               	movlw	high __pidataBANK12
  9289   010EAE  6EF7               	movwf	tblptrh,c
  9290   010EB0  0E01               	movlw	low (__pidataBANK12 shr (0+16))
  9291   010EB2  6EF8               	movwf	tblptru,c
  9292   010EB4  EE03  F000         	lfsr	0,__pdataBANK12
  9293   010EB8  EE10 F0C8          	lfsr	1,200
  9294   010EBC                     copy_data1:
  9295   010EBC  0009               	tblrd		*+
  9296   010EBE  C4F5 F4EE          	movff	tablat,postinc0
  9297   010EC2  50E5               	movf	postdec1,w,c
  9298   010EC4  50E1               	movf	fsr1l,w,c
  9299   010EC6  E1FA               	bnz	copy_data1
  9300                           
  9301                           ; Initialize objects allocated to BANK11 (200 bytes)
  9302                           ; load TBLPTR registers with __pidataBANK11
  9303   010EC8  0E04               	movlw	low __pidataBANK11
  9304   010ECA  6EF6               	movwf	tblptrl,c
  9305   010ECC  0E16               	movlw	high __pidataBANK11
  9306   010ECE  6EF7               	movwf	tblptrh,c
  9307   010ED0  0E01               	movlw	low (__pidataBANK11 shr (0+16))
  9308   010ED2  6EF8               	movwf	tblptru,c
  9309   010ED4  EE02  F300         	lfsr	0,__pdataBANK11
  9310   010ED8  EE10 F0C8          	lfsr	1,200
  9311   010EDC                     copy_data2:
  9312   010EDC  0009               	tblrd		*+
  9313   010EDE  C4F5 F4EE          	movff	tablat,postinc0
  9314   010EE2  50E5               	movf	postdec1,w,c
  9315   010EE4  50E1               	movf	fsr1l,w,c
  9316   010EE6  E1FA               	bnz	copy_data2
  9317                           
  9318                           ; Initialize objects allocated to BANK9 (32 bytes)
  9319                           ; load TBLPTR registers with __pidataBANK9
  9320   010EE8  0E9E               	movlw	low __pidataBANK9
  9321   010EEA  6EF6               	movwf	tblptrl,c
  9322   010EEC  0E28               	movlw	high __pidataBANK9
  9323   010EEE  6EF7               	movwf	tblptrh,c
  9324   010EF0  0E01               	movlw	low (__pidataBANK9 shr (0+16))
  9325   010EF2  6EF8               	movwf	tblptru,c
  9326   010EF4  EE02  F1C8         	lfsr	0,__pdataBANK9
  9327   010EF8  EE10 F020          	lfsr	1,32
  9328   010EFC                     copy_data3:
  9329   010EFC  0009               	tblrd		*+
  9330   010EFE  C4F5 F4EE          	movff	tablat,postinc0
  9331   010F02  50E5               	movf	postdec1,w,c
  9332   010F04  50E1               	movf	fsr1l,w,c
  9333   010F06  E1FA               	bnz	copy_data3
  9334                           
  9335                           ; Initialize objects allocated to BANK8 (32 bytes)
  9336                           ; load TBLPTR registers with __pidataBANK8
  9337   010F08  0E7E               	movlw	low __pidataBANK8
  9338   010F0A  6EF6               	movwf	tblptrl,c
  9339   010F0C  0E28               	movlw	high __pidataBANK8
  9340   010F0E  6EF7               	movwf	tblptrh,c
  9341   010F10  0E01               	movlw	low (__pidataBANK8 shr (0+16))
  9342   010F12  6EF8               	movwf	tblptru,c
  9343   010F14  EE02  F0C8         	lfsr	0,__pdataBANK8
  9344   010F18  EE10 F020          	lfsr	1,32
  9345   010F1C                     copy_data4:
  9346   010F1C  0009               	tblrd		*+
  9347   010F1E  C4F5 F4EE          	movff	tablat,postinc0
  9348   010F22  50E5               	movf	postdec1,w,c
  9349   010F24  50E1               	movf	fsr1l,w,c
  9350   010F26  E1FA               	bnz	copy_data4
  9351                           
  9352                           ; Initialize objects allocated to COMRAM (24 bytes)
  9353                           ; load TBLPTR registers with __pidataCOMRAM
  9354   010F28  0E30               	movlw	low __pidataCOMRAM
  9355   010F2A  6EF6               	movwf	tblptrl,c
  9356   010F2C  0E29               	movlw	high __pidataCOMRAM
  9357   010F2E  6EF7               	movwf	tblptrh,c
  9358   010F30  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  9359   010F32  6EF8               	movwf	tblptru,c
  9360   010F34  EE01  F137         	lfsr	0,__pdataCOMRAM
  9361   010F38  EE10 F018          	lfsr	1,24
  9362   010F3C                     copy_data5:
  9363   010F3C  0009               	tblrd		*+
  9364   010F3E  C4F5 F4EE          	movff	tablat,postinc0
  9365   010F42  50E5               	movf	postdec1,w,c
  9366   010F44  50E1               	movf	fsr1l,w,c
  9367   010F46  E1FA               	bnz	copy_data5
  9368                           
  9369                           ; Clear objects allocated to BANK14 (200 bytes)
  9370   010F48  EE03  F200         	lfsr	0,__pbssBANK14
  9371   010F4C  0EC8               	movlw	200
  9372   010F4E                     clear_0:
  9373   010F4E  6AEE               	clrf	postinc0,c
  9374   010F50  06E8               	decf	wreg,f,c
  9375   010F52  E1FD               	bnz	clear_0
  9376                           
  9377                           ; Clear objects allocated to BANK10 (200 bytes)
  9378   010F54  EE02  F200         	lfsr	0,__pbssBANK10
  9379   010F58  0EC8               	movlw	200
  9380   010F5A                     clear_1:
  9381   010F5A  6AEE               	clrf	postinc0,c
  9382   010F5C  06E8               	decf	wreg,f,c
  9383   010F5E  E1FD               	bnz	clear_1
  9384                           
  9385                           ; Clear objects allocated to BANK7 (32 bytes)
  9386   010F60  EE01  F3C8         	lfsr	0,__pbssBANK7
  9387   010F64  0E20               	movlw	32
  9388   010F66                     clear_2:
  9389   010F66  6AEE               	clrf	postinc0,c
  9390   010F68  06E8               	decf	wreg,f,c
  9391   010F6A  E1FD               	bnz	clear_2
  9392                           
  9393                           ; Clear objects allocated to BANK5 (8 bytes)
  9394   010F6C  EE01  F1E6         	lfsr	0,__pbssBANK5
  9395   010F70  0E08               	movlw	8
  9396   010F72                     clear_3:
  9397   010F72  6AEE               	clrf	postinc0,c
  9398   010F74  06E8               	decf	wreg,f,c
  9399   010F76  E1FD               	bnz	clear_3
  9400                           
  9401                           ; Clear objects allocated to COMRAM (11 bytes)
  9402   010F78  EE01  F14F         	lfsr	0,__pbssCOMRAM
  9403   010F7C  0E0B               	movlw	11
  9404   010F7E                     clear_4:
  9405   010F7E  6AEE               	clrf	postinc0,c
  9406   010F80  06E8               	decf	wreg,f,c
  9407   010F82  E1FD               	bnz	clear_4
  9408                           
  9409                           ;
  9410                           ; Setup IVTBASE
  9411                           ;
  9412   00045D                     IVTBASEL        equ	1117
  9413   00045E                     IVTBASEH        equ	1118
  9414   00045F                     IVTBASEU        equ	1119
  9415   010F84  0104               	movlb	4
  9416   010F86  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  9417   010F88  6F5D               	movwf	93,b
  9418   010F8A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  9419   010F8C  6F5E               	movwf	94,b
  9420   010F8E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  9421   010F90  6F5F               	movwf	95,b
  9422   010F92                     end_of_initialization:
  9423                           	callstack 0
  9424   010F92                     __end_of__initialization:
  9425                           	callstack 0
  9426   010F92  0100               	movlb	0
  9427   010F94  EF51  F089         	goto	_main	;jump to C main() function
  9428                           
  9429                           	psect	bssCOMRAM
  9430   00054F                     __pbssCOMRAM:
  9431                           	callstack 0
  9432   00054F                     _TMR0_OverflowCallback:
  9433                           	callstack 0
  9434   00054F                     	ds	3
  9435   000552                     _INT0_InterruptHandler:
  9436                           	callstack 0
  9437   000552                     	ds	3
  9438   000555                     _RC6_InterruptHandler:
  9439                           	callstack 0
  9440   000555                     	ds	3
  9441   000558                     _received_index:
  9442                           	callstack 0
  9443   000558                     	ds	2
  9444                           
  9445                           	psect	dataCOMRAM
  9446   000537                     __pdataCOMRAM:
  9447                           	callstack 0
  9448   000537                     _rf24_datarates:
  9449                           	callstack 0
  9450   000537                     	ds	24
  9451                           
  9452                           	psect	bssBANK5
  9453   0005E6                     __pbssBANK5:
  9454                           	callstack 0
  9455   0005E6                     _width:
  9456                           	callstack 0
  9457   0005E6                     	ds	2
  9458   0005E8                     _prec:
  9459                           	callstack 0
  9460   0005E8                     	ds	2
  9461   0005EA                     _flags:
  9462                           	callstack 0
  9463   0005EA                     	ds	1
  9464   0005EB                     _dev:
  9465                           	callstack 0
  9466   0005EB                     	ds	3
  9467                           
  9468                           	psect	bssBANK7
  9469   0007C8                     __pbssBANK7:
  9470                           	callstack 0
  9471   0007C8                     _dbuf:
  9472                           	callstack 0
  9473   0007C8                     	ds	32
  9474                           
  9475                           	psect	dataBANK8
  9476   0008C8                     __pdataBANK8:
  9477                           	callstack 0
  9478   0008C8                     main@F17924:
  9479                           	callstack 0
  9480   0008C8                     	ds	32
  9481                           
  9482                           	psect	dataBANK9
  9483   0009C8                     __pdataBANK9:
  9484                           	callstack 0
  9485   0009C8                     _rf24_pa_dbm:
  9486                           	callstack 0
  9487   0009C8                     	ds	32
  9488                           
  9489                           	psect	bssBANK10
  9490   000A00                     __pbssBANK10:
  9491                           	callstack 0
  9492   000A00                     _received_data:
  9493                           	callstack 0
  9494   000A00                     	ds	200
  9495                           
  9496                           	psect	dataBANK11
  9497   000B00                     __pdataBANK11:
  9498                           	callstack 0
  9499   000B00                     main@F17916:
  9500                           	callstack 0
  9501   000B00                     	ds	200
  9502                           
  9503                           	psect	dataBANK12
  9504   000C00                     __pdataBANK12:
  9505                           	callstack 0
  9506   000C00                     main@F17918:
  9507                           	callstack 0
  9508   000C00                     	ds	200
  9509                           
  9510                           	psect	dataBANK13
  9511   000D00                     __pdataBANK13:
  9512                           	callstack 0
  9513   000D00                     main@F17920:
  9514                           	callstack 0
  9515   000D00                     	ds	200
  9516                           
  9517                           	psect	bssBANK14
  9518   000E00                     __pbssBANK14:
  9519                           	callstack 0
  9520   000E00                     	ds	200
  9521                           
  9522                           	psect	cstackBANK9
  9523   000900                     __pcstackBANK9:
  9524                           	callstack 0
  9525   000900                     main@gridB:
  9526                           	callstack 0
  9527                           
  9528                           ; 200 bytes @ 0x0
  9529   000900                     	ds	200
  9530                           
  9531                           	psect	cstackBANK8
  9532   000800                     __pcstackBANK8:
  9533                           	callstack 0
  9534   000800                     main@gridG:
  9535                           	callstack 0
  9536                           
  9537                           ; 200 bytes @ 0x0
  9538   000800                     	ds	200
  9539                           
  9540                           	psect	cstackBANK7
  9541   000700                     __pcstackBANK7:
  9542                           	callstack 0
  9543   000700                     main@gridR:
  9544                           	callstack 0
  9545                           
  9546                           ; 200 bytes @ 0x0
  9547   000700                     	ds	200
  9548                           
  9549                           	psect	cstackBANK6
  9550   000600                     __pcstackBANK6:
  9551                           	callstack 0
  9552   000600                     main@gridE:
  9553                           	callstack 0
  9554                           
  9555                           ; 200 bytes @ 0x0
  9556   000600                     	ds	200
  9557   0006C8                     main@buf:
  9558                           	callstack 0
  9559                           
  9560                           ; 32 bytes @ 0xC8
  9561   0006C8                     	ds	32
  9562                           
  9563                           	psect	cstackBANK5
  9564   000560                     __pcstackBANK5:
  9565                           	callstack 0
  9566   000560                     ?___awdiv:
  9567                           	callstack 0
  9568   000560                     ?___awmod:
  9569                           	callstack 0
  9570   000560                     ?_read_prec_or_width:
  9571                           	callstack 0
  9572   000560                     SPI1_Open@spiConfigIndex:
  9573                           	callstack 0
  9574   000560                     SPI1_ByteExchange@byteData:
  9575                           	callstack 0
  9576   000560                     sendByte@byte:
  9577                           	callstack 0
  9578   000560                     DELAY_milliseconds@milliseconds:
  9579                           	callstack 0
  9580   000560                     DELAY_microseconds@microseconds:
  9581                           	callstack 0
  9582   000560                     ___awdiv@dividend:
  9583                           	callstack 0
  9584   000560                     ___awmod@dividend:
  9585                           	callstack 0
  9586   000560                     read_prec_or_width@fmt:
  9587                           	callstack 0
  9588   000560                     fputc@c:
  9589                           	callstack 0
  9590   000560                     RC6_SetInterruptHandler@InterruptHandler:
  9591                           	callstack 0
  9592   000560                     INT1_SetInterruptHandler@InterruptHandler:
  9593                           	callstack 0
  9594   000560                     INT2_SetInterruptHandler@InterruptHandler:
  9595                           	callstack 0
  9596   000560                     
  9597                           ; 1 bytes @ 0x0
  9598   000560                     	ds	1
  9599   000561                     SPI1_ByteExchange@returnValue:
  9600                           	callstack 0
  9601   000561                     sendRGB@g:
  9602                           	callstack 0
  9603   000561                     Nrf24_init@dev:
  9604                           	callstack 0
  9605                           
  9606                           ; 2 bytes @ 0x1
  9607   000561                     	ds	1
  9608   000562                     sendRGB@b:
  9609                           	callstack 0
  9610   000562                     Nrf24_configRegister@value:
  9611                           	callstack 0
  9612   000562                     SPI_read_buff@buffer:
  9613                           	callstack 0
  9614   000562                     SPI_write_buff@buffer:
  9615                           	callstack 0
  9616   000562                     Nrf24_flushRx@dev:
  9617                           	callstack 0
  9618   000562                     ___awdiv@divisor:
  9619                           	callstack 0
  9620   000562                     ___awmod@divisor:
  9621                           	callstack 0
  9622   000562                     read_prec_or_width@ap:
  9623                           	callstack 0
  9624   000562                     fputc@fp:
  9625                           	callstack 0
  9626   000562                     ??_DELAY_milliseconds:
  9627   000562                     
  9628                           ; 1 bytes @ 0x2
  9629   000562                     	ds	1
  9630   000563                     sendRGB@r:
  9631                           	callstack 0
  9632   000563                     Nrf24_configRegister@reg:
  9633                           	callstack 0
  9634   000563                     
  9635                           ; 1 bytes @ 0x3
  9636   000563                     	ds	1
  9637   000564                     sendCell@cell:
  9638                           	callstack 0
  9639   000564                     SPI_read_buff@bytes:
  9640                           	callstack 0
  9641   000564                     SPI_write_buff@bytes:
  9642                           	callstack 0
  9643   000564                     ___awdiv@counter:
  9644                           	callstack 0
  9645   000564                     ___awmod@counter:
  9646                           	callstack 0
  9647   000564                     Nrf24_powerUpRx@dev:
  9648                           	callstack 0
  9649   000564                     Nrf24_powerUpTx@dev:
  9650                           	callstack 0
  9651   000564                     ??_fputc:
  9652   000564                     ??_read_prec_or_width:
  9653                           
  9654                           ; 1 bytes @ 0x4
  9655   000564                     	ds	1
  9656   000565                     SPI_read_buff@i:
  9657                           	callstack 0
  9658   000565                     SPI_write_buff@i:
  9659                           	callstack 0
  9660   000565                     ___awdiv@sign:
  9661                           	callstack 0
  9662   000565                     ___awmod@sign:
  9663                           	callstack 0
  9664   000565                     sendGrid@grid:
  9665                           	callstack 0
  9666   000565                     
  9667                           ; 1 bytes @ 0x5
  9668   000565                     	ds	1
  9669   000566                     ?_abs:
  9670                           	callstack 0
  9671   000566                     read_prec_or_width@c:
  9672                           	callstack 0
  9673   000566                     Nrf24_getData@dev:
  9674                           	callstack 0
  9675   000566                     Nrf24_readRegister@value:
  9676                           	callstack 0
  9677   000566                     Nrf24_writeRegister@value:
  9678                           	callstack 0
  9679   000566                     ___awdiv@quotient:
  9680                           	callstack 0
  9681   000566                     abs@a:
  9682                           	callstack 0
  9683   000566                     
  9684                           ; 1 bytes @ 0x6
  9685   000566                     	ds	1
  9686   000567                     read_prec_or_width@n:
  9687                           	callstack 0
  9688   000567                     ??_sendGrid:
  9689                           
  9690                           ; 1 bytes @ 0x7
  9691   000567                     	ds	1
  9692   000568                     Nrf24_readRegister@len:
  9693                           	callstack 0
  9694   000568                     Nrf24_writeRegister@len:
  9695                           	callstack 0
  9696   000568                     Nrf24_getData@data:
  9697                           	callstack 0
  9698   000568                     ??_abs:
  9699                           
  9700                           ; 1 bytes @ 0x8
  9701   000568                     	ds	1
  9702   000569                     Nrf24_readRegister@reg:
  9703                           	callstack 0
  9704   000569                     Nrf24_writeRegister@reg:
  9705                           	callstack 0
  9706   000569                     stoa@fp:
  9707                           	callstack 0
  9708   000569                     fputs@s:
  9709                           	callstack 0
  9710   000569                     
  9711                           ; 1 bytes @ 0x9
  9712   000569                     	ds	1
  9713   00056A                     ?_Nrf24_setRADDR:
  9714                           	callstack 0
  9715   00056A                     ?_Nrf24_setTADDR:
  9716                           	callstack 0
  9717   00056A                     sendGrid@index:
  9718                           	callstack 0
  9719   00056A                     Nrf24_setRADDR@dev:
  9720                           	callstack 0
  9721   00056A                     Nrf24_setTADDR@dev:
  9722                           	callstack 0
  9723   00056A                     Nrf24_getStatus@dev:
  9724                           	callstack 0
  9725   00056A                     Nrf24_SetSpeedDataRates@dev:
  9726                           	callstack 0
  9727   00056A                     Nrf24_setRetransmitDelay@dev:
  9728                           	callstack 0
  9729   00056A                     Nrf24_getDataRate@dev:
  9730                           	callstack 0
  9731   00056A                     Nrf24_getCRCLength@dev:
  9732                           	callstack 0
  9733   00056A                     Nrf24_getPALevel@dev:
  9734                           	callstack 0
  9735   00056A                     Nrf24_getRetransmitDelay@dev:
  9736                           	callstack 0
  9737   00056A                     
  9738                           ; 1 bytes @ 0xA
  9739   00056A                     	ds	1
  9740   00056B                     stoa@s:
  9741                           	callstack 0
  9742   00056B                     fputs@fp:
  9743                           	callstack 0
  9744                           
  9745                           ; 2 bytes @ 0xB
  9746   00056B                     	ds	1
  9747   00056C                     Nrf24_getStatus@rv:
  9748                           	callstack 0
  9749   00056C                     Nrf24_SetSpeedDataRates@val:
  9750                           	callstack 0
  9751   00056C                     Nrf24_setRetransmitDelay@val:
  9752                           	callstack 0
  9753   00056C                     Nrf24_getDataRate@result:
  9754                           	callstack 0
  9755   00056C                     Nrf24_getCRCLength@result:
  9756                           	callstack 0
  9757   00056C                     Nrf24_getPALevel@level:
  9758                           	callstack 0
  9759   00056C                     Nrf24_getRetransmitDelay@value:
  9760                           	callstack 0
  9761   00056C                     sendGrid@col:
  9762                           	callstack 0
  9763   00056C                     Nrf24_setRADDR@adr:
  9764                           	callstack 0
  9765   00056C                     Nrf24_setTADDR@adr:
  9766                           	callstack 0
  9767   00056C                     
  9768                           ; 1 bytes @ 0xC
  9769   00056C                     	ds	1
  9770   00056D                     Nrf24_SetSpeedDataRates@value:
  9771                           	callstack 0
  9772   00056D                     Nrf24_setRetransmitDelay@value:
  9773                           	callstack 0
  9774   00056D                     Nrf24_getDataRate@dr:
  9775                           	callstack 0
  9776   00056D                     Nrf24_getCRCLength@AA:
  9777                           	callstack 0
  9778   00056D                     fputs@c:
  9779                           	callstack 0
  9780   00056D                     Nrf24_config@dev:
  9781                           	callstack 0
  9782   00056D                     Nrf24_dataReady@dev:
  9783                           	callstack 0
  9784   00056D                     Nrf24_send@dev:
  9785                           	callstack 0
  9786   00056D                     Nrf24_isSend@dev:
  9787                           	callstack 0
  9788   00056D                     ??_stoa:
  9789                           
  9790                           ; 1 bytes @ 0xD
  9791   00056D                     	ds	1
  9792   00056E                     Nrf24_getCRCLength@config:
  9793                           	callstack 0
  9794   00056E                     sendGrid@row:
  9795                           	callstack 0
  9796   00056E                     fputs@i:
  9797                           	callstack 0
  9798   00056E                     ??_Nrf24_setRADDR:
  9799   00056E                     ??_Nrf24_setTADDR:
  9800                           
  9801                           ; 1 bytes @ 0xE
  9802   00056E                     	ds	1
  9803   00056F                     Nrf24_config@channel:
  9804                           	callstack 0
  9805   00056F                     Nrf24_dataReady@status:
  9806                           	callstack 0
  9807   00056F                     Nrf24_send@value:
  9808                           	callstack 0
  9809   00056F                     Nrf24_isSend@timeout:
  9810                           	callstack 0
  9811   00056F                     stoa@p:
  9812                           	callstack 0
  9813   00056F                     
  9814                           ; 1 bytes @ 0xF
  9815   00056F                     	ds	1
  9816   000570                     Nrf24_config@payload:
  9817                           	callstack 0
  9818   000570                     sendGrid@gridSize:
  9819                           	callstack 0
  9820   000570                     pad@fp:
  9821                           	callstack 0
  9822                           
  9823                           ; 2 bytes @ 0x10
  9824   000570                     	ds	1
  9825   000571                     stoa@w:
  9826                           	callstack 0
  9827   000571                     Nrf24_setRADDR@buffer:
  9828                           	callstack 0
  9829   000571                     Nrf24_setTADDR@buffer:
  9830                           	callstack 0
  9831   000571                     ??_Nrf24_send:
  9832   000571                     ??_Nrf24_isSend:
  9833                           
  9834                           ; 1 bytes @ 0x11
  9835   000571                     	ds	1
  9836   000572                     Nrf24_send@status:
  9837                           	callstack 0
  9838   000572                     pad@buf:
  9839                           	callstack 0
  9840                           
  9841                           ; 2 bytes @ 0x12
  9842   000572                     	ds	1
  9843   000573                     stoa@cp:
  9844                           	callstack 0
  9845                           
  9846                           ; 2 bytes @ 0x13
  9847   000573                     	ds	1
  9848   000574                     pad@p:
  9849                           	callstack 0
  9850                           
  9851                           ; 2 bytes @ 0x14
  9852   000574                     	ds	1
  9853   000575                     stoa@l:
  9854                           	callstack 0
  9855   000575                     Nrf24_isSend@i:
  9856                           	callstack 0
  9857                           
  9858                           ; 4 bytes @ 0x15
  9859   000575                     	ds	1
  9860   000576                     Nrf24_setRADDR@ret:
  9861                           	callstack 0
  9862   000576                     Nrf24_setTADDR@ret:
  9863                           	callstack 0
  9864   000576                     ??_pad:
  9865                           
  9866                           ; 1 bytes @ 0x16
  9867   000576                     	ds	1
  9868   000577                     pad@i:
  9869                           	callstack 0
  9870                           
  9871                           ; 2 bytes @ 0x17
  9872   000577                     	ds	1
  9873   000578                     Nrf24_setRADDR@i:
  9874                           	callstack 0
  9875   000578                     Nrf24_setTADDR@i:
  9876                           	callstack 0
  9877                           
  9878                           ; 2 bytes @ 0x18
  9879   000578                     	ds	1
  9880   000579                     Nrf24_isSend@status:
  9881                           	callstack 0
  9882   000579                     dtoa@fp:
  9883                           	callstack 0
  9884   000579                     xtoa@fp:
  9885                           	callstack 0
  9886                           
  9887                           ; 2 bytes @ 0x19
  9888   000579                     	ds	2
  9889   00057B                     dtoa@d:
  9890                           	callstack 0
  9891   00057B                     xtoa@d:
  9892                           	callstack 0
  9893                           
  9894                           ; 2 bytes @ 0x1B
  9895   00057B                     	ds	2
  9896   00057D                     _dtoa$2119:
  9897                           	callstack 0
  9898   00057D                     ??_xtoa:
  9899                           
  9900                           ; 1 bytes @ 0x1D
  9901   00057D                     	ds	2
  9902   00057F                     dtoa@p:
  9903                           	callstack 0
  9904                           
  9905                           ; 1 bytes @ 0x1F
  9906   00057F                     	ds	1
  9907   000580                     xtoa@p:
  9908                           	callstack 0
  9909   000580                     dtoa@w:
  9910                           	callstack 0
  9911                           
  9912                           ; 2 bytes @ 0x20
  9913   000580                     	ds	1
  9914   000581                     xtoa@w:
  9915                           	callstack 0
  9916                           
  9917                           ; 2 bytes @ 0x21
  9918   000581                     	ds	1
  9919   000582                     dtoa@s:
  9920                           	callstack 0
  9921                           
  9922                           ; 1 bytes @ 0x22
  9923   000582                     	ds	1
  9924   000583                     xtoa@c:
  9925                           	callstack 0
  9926   000583                     dtoa@i:
  9927                           	callstack 0
  9928                           
  9929                           ; 2 bytes @ 0x23
  9930   000583                     	ds	1
  9931   000584                     xtoa@i:
  9932                           	callstack 0
  9933                           
  9934                           ; 2 bytes @ 0x24
  9935   000584                     	ds	2
  9936   000586                     vfpfcnvrt@fp:
  9937                           	callstack 0
  9938                           
  9939                           ; 2 bytes @ 0x26
  9940   000586                     	ds	2
  9941   000588                     vfpfcnvrt@fmt:
  9942                           	callstack 0
  9943                           
  9944                           ; 2 bytes @ 0x28
  9945   000588                     	ds	2
  9946   00058A                     vfpfcnvrt@ap:
  9947                           	callstack 0
  9948                           
  9949                           ; 2 bytes @ 0x2A
  9950   00058A                     	ds	2
  9951   00058C                     ??_vfpfcnvrt:
  9952                           
  9953                           ; 1 bytes @ 0x2C
  9954   00058C                     	ds	2
  9955   00058E                     vfpfcnvrt@convarg:
  9956                           	callstack 0
  9957                           
  9958                           ; 4 bytes @ 0x2E
  9959   00058E                     	ds	4
  9960   000592                     vfpfcnvrt@done:
  9961                           	callstack 0
  9962                           
  9963                           ; 1 bytes @ 0x32
  9964   000592                     	ds	1
  9965   000593                     vfpfcnvrt@cp:
  9966                           	callstack 0
  9967                           
  9968                           ; 2 bytes @ 0x33
  9969   000593                     	ds	2
  9970   000595                     ?_vfprintf:
  9971                           	callstack 0
  9972   000595                     vfprintf@fp:
  9973                           	callstack 0
  9974                           
  9975                           ; 2 bytes @ 0x35
  9976   000595                     	ds	2
  9977   000597                     vfprintf@fmt:
  9978                           	callstack 0
  9979                           
  9980                           ; 2 bytes @ 0x37
  9981   000597                     	ds	2
  9982   000599                     vfprintf@ap:
  9983                           	callstack 0
  9984                           
  9985                           ; 2 bytes @ 0x39
  9986   000599                     	ds	2
  9987   00059B                     vfprintf@cfmt:
  9988                           	callstack 0
  9989   00059B                     
  9990                           ; 1 bytes @ 0x3B
  9991   00059B                     	ds	2
  9992   00059D                     ?_printf:
  9993                           	callstack 0
  9994   00059D                     printf@fmt:
  9995                           	callstack 0
  9996                           
  9997                           ; 2 bytes @ 0x3D
  9998   00059D                     	ds	14
  9999   0005AB                     printf@ap:
 10000                           	callstack 0
 10001   0005AB                     
 10002                           ; 1 bytes @ 0x4B
 10003   0005AB                     	ds	2
 10004   0005AD                     Nrf24_print_address_register@dev:
 10005                           	callstack 0
 10006   0005AD                     Nrf24_print_byte_register@dev:
 10007                           	callstack 0
 10008   0005AD                     ??_Nrf24_print_status:
 10009                           
 10010                           ; 1 bytes @ 0x4D
 10011   0005AD                     	ds	1
 10012   0005AE                     Nrf24_print_status@status:
 10013                           	callstack 0
 10014                           
 10015                           ; 1 bytes @ 0x4E
 10016   0005AE                     	ds	1
 10017   0005AF                     Nrf24_print_address_register@name:
 10018                           	callstack 0
 10019   0005AF                     Nrf24_print_byte_register@name:
 10020                           	callstack 0
 10021                           
 10022                           ; 2 bytes @ 0x4F
 10023   0005AF                     	ds	2
 10024   0005B1                     Nrf24_print_address_register@reg:
 10025                           	callstack 0
 10026   0005B1                     Nrf24_print_byte_register@reg:
 10027                           	callstack 0
 10028                           
 10029                           ; 1 bytes @ 0x51
 10030   0005B1                     	ds	1
 10031   0005B2                     Nrf24_print_address_register@qty:
 10032                           	callstack 0
 10033   0005B2                     Nrf24_print_byte_register@qty:
 10034                           	callstack 0
 10035                           
 10036                           ; 1 bytes @ 0x52
 10037   0005B2                     	ds	1
 10038   0005B3                     Nrf24_print_byte_register@buffer:
 10039                           	callstack 0
 10040   0005B3                     ??_Nrf24_print_address_register:
 10041   0005B3                     
 10042                           ; 1 bytes @ 0x53
 10043   0005B3                     	ds	1
 10044   0005B4                     Nrf24_print_address_register@buffer:
 10045                           	callstack 0
 10046                           
 10047                           ; 5 bytes @ 0x54
 10048   0005B4                     	ds	5
 10049   0005B9                     Nrf24_print_address_register@i:
 10050                           	callstack 0
 10051                           
 10052                           ; 2 bytes @ 0x59
 10053   0005B9                     	ds	2
 10054   0005BB                     Nrf24_printDetails@dev:
 10055                           	callstack 0
 10056                           
 10057                           ; 2 bytes @ 0x5B
 10058   0005BB                     	ds	2
 10059   0005BD                     ??_Nrf24_printDetails:
 10060                           
 10061                           ; 1 bytes @ 0x5D
 10062   0005BD                     	ds	4
 10063   0005C1                     Nrf24_printDetails@delay:
 10064                           	callstack 0
 10065                           
 10066                           ; 2 bytes @ 0x61
 10067   0005C1                     	ds	2
 10068   0005C3                     Nrf24_printDetails@retransmit:
 10069                           	callstack 0
 10070                           
 10071                           ; 1 bytes @ 0x63
 10072   0005C3                     	ds	1
 10073   0005C4                     init_nrf@buf:
 10074                           	callstack 0
 10075   0005C4                     
 10076                           ; 1 bytes @ 0x64
 10077   0005C4                     	ds	32
 10078   0005E4                     init_nrf@ret:
 10079                           	callstack 0
 10080                           
 10081                           ; 2 bytes @ 0x84
 10082   0005E4                     	ds	2
 10083   0005E6                     
 10084                           ; 1 bytes @ 0x86
 10085                           
 10086                           	psect	cstackCOMRAM
 10087   000501                     __pcstackCOMRAM:
 10088                           	callstack 0
 10089   000501                     i2SPI1_ByteExchange@byteData:
 10090                           	callstack 0
 10091   000501                     i2sendByte@byte:
 10092                           	callstack 0
 10093   000501                     
 10094                           ; 1 bytes @ 0x0
 10095   000501                     	ds	1
 10096   000502                     i2SPI1_ByteExchange@returnValue:
 10097                           	callstack 0
 10098   000502                     i2sendRGB@g:
 10099                           	callstack 0
 10100                           
 10101                           ; 1 bytes @ 0x1
 10102   000502                     	ds	1
 10103   000503                     i2sendRGB@b:
 10104                           	callstack 0
 10105   000503                     i2Nrf24_configRegister@value:
 10106                           	callstack 0
 10107   000503                     i2SPI_read_buff@buffer:
 10108                           	callstack 0
 10109                           
 10110                           ; 2 bytes @ 0x2
 10111   000503                     	ds	1
 10112   000504                     i2sendRGB@r:
 10113                           	callstack 0
 10114   000504                     i2Nrf24_configRegister@reg:
 10115                           	callstack 0
 10116   000504                     
 10117                           ; 1 bytes @ 0x3
 10118   000504                     	ds	1
 10119   000505                     i2sendCell@cell:
 10120                           	callstack 0
 10121   000505                     i2SPI_read_buff@bytes:
 10122                           	callstack 0
 10123   000505                     
 10124                           ; 1 bytes @ 0x4
 10125   000505                     	ds	1
 10126   000506                     i2SPI_read_buff@i:
 10127                           	callstack 0
 10128   000506                     i2sendGrid@grid:
 10129                           	callstack 0
 10130   000506                     
 10131                           ; 1 bytes @ 0x5
 10132   000506                     	ds	1
 10133   000507                     i2Nrf24_getData@dev:
 10134                           	callstack 0
 10135   000507                     i2Nrf24_readRegister@value:
 10136                           	callstack 0
 10137                           
 10138                           ; 2 bytes @ 0x6
 10139   000507                     	ds	1
 10140   000508                     ??i2_sendGrid:
 10141                           
 10142                           ; 1 bytes @ 0x7
 10143   000508                     	ds	1
 10144   000509                     i2Nrf24_readRegister@len:
 10145                           	callstack 0
 10146   000509                     i2Nrf24_getData@data:
 10147                           	callstack 0
 10148                           
 10149                           ; 2 bytes @ 0x8
 10150   000509                     	ds	1
 10151   00050A                     i2Nrf24_readRegister@reg:
 10152                           	callstack 0
 10153   00050A                     
 10154                           ; 1 bytes @ 0x9
 10155   00050A                     	ds	1
 10156   00050B                     i2sendGrid@index:
 10157                           	callstack 0
 10158   00050B                     i2Nrf24_getStatus@dev:
 10159                           	callstack 0
 10160   00050B                     
 10161                           ; 1 bytes @ 0xA
 10162   00050B                     	ds	2
 10163   00050D                     i2Nrf24_getStatus@rv:
 10164                           	callstack 0
 10165   00050D                     i2sendGrid@col:
 10166                           	callstack 0
 10167   00050D                     
 10168                           ; 1 bytes @ 0xC
 10169   00050D                     	ds	1
 10170   00050E                     i2Nrf24_dataReady@dev:
 10171                           	callstack 0
 10172                           
 10173                           ; 2 bytes @ 0xD
 10174   00050E                     	ds	1
 10175   00050F                     i2sendGrid@row:
 10176                           	callstack 0
 10177                           
 10178                           ; 2 bytes @ 0xE
 10179   00050F                     	ds	1
 10180   000510                     i2Nrf24_dataReady@status:
 10181                           	callstack 0
 10182   000510                     
 10183                           ; 1 bytes @ 0xF
 10184   000510                     	ds	1
 10185   000511                     i2sendGrid@gridSize:
 10186                           	callstack 0
 10187                           
 10188                           ; 2 bytes @ 0x10
 10189   000511                     	ds	2
 10190   000513                     nrf_interrupt@buf:
 10191                           	callstack 0
 10192   000513                     
 10193                           ; 1 bytes @ 0x12
 10194   000513                     	ds	32
 10195   000533                     nrf_interrupt@i:
 10196                           	callstack 0
 10197                           
 10198                           ; 2 bytes @ 0x32
 10199   000533                     	ds	2
 10200   000535                     ??_INTERRUPT_InterruptManager:
 10201                           
 10202                           ; 1 bytes @ 0x34
 10203   000535                     	ds	2
 10204                           
 10205 ;;
 10206 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 10207 ;;
 10208 ;; *************** function _main *****************
 10209 ;; Defined at:
 10210 ;;		line 137 in file "main.c"
 10211 ;; Parameters:    Size  Location     Type
 10212 ;;		None
 10213 ;; Auto vars:     Size  Location     Type
 10214 ;;  gridB         200    0[BANK9 ] unsigned char [200]
 10215 ;;  gridG         200    0[BANK8 ] unsigned char [200]
 10216 ;;  gridR         200    0[BANK7 ] unsigned char [200]
 10217 ;;  gridE         200    0[BANK6 ] unsigned char [200]
 10218 ;;  buf            32  200[BANK6 ] unsigned char [32]
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  1    wreg      void 
 10221 ;; Registers used:
 10222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10223 ;; Tracked objects:
 10224 ;;		On entry : 0/0
 10225 ;;		On exit  : 0/0
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10229 ;;      Locals:         0       0     232     200     200     200       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10231 ;;      Totals:         0       0     232     200     200     200       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10232 ;;Total ram usage:      832 bytes
 10233 ;; Hardware stack levels required when called: 18
 10234 ;; This function calls:
 10235 ;;		_DELAY_milliseconds
 10236 ;;		_Nrf24_isSend
 10237 ;;		_Nrf24_send
 10238 ;;		_RC6_SetInterruptHandler
 10239 ;;		_SYSTEM_Initialize
 10240 ;;		_init_nrf
 10241 ;;		_sendGrid
 10242 ;; This function is called by:
 10243 ;;		Startup code after reset
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           
 10247                           	psect	text0
 10248   0112A2                     __ptext0:
 10249                           	callstack 0
 10250   0112A2                     _main:
 10251                           	callstack 109
 10252   0112A2                     
 10253                           ;main.c: 139:     SYSTEM_Initialize();
 10254   0112A2  ECDC  F094         	call	_SYSTEM_Initialize	;wreg free
 10255   0112A6                     
 10256                           ;main.c: 141:     uint8_t gridE[200] = { [0 ... (200 -1)] = 0 };
 10257   0112A6  EE21  F200         	lfsr	2,main@gridE
 10258   0112AA  0EC7               	movlw	199
 10259   0112AC                     u3091:
 10260   0112AC  6ADE               	clrf	postinc2,c
 10261   0112AE  06E8               	decf	wreg,f,c
 10262   0112B0  E2FD               	bc	u3091
 10263   0112B2                     
 10264                           ;main.c: 142:     uint8_t gridR[200] = { [0 ... (200 -1)] = 1 };
 10265   0112B2  EE22  F300         	lfsr	2,main@F17916
 10266   0112B6  EE11  F300         	lfsr	1,main@gridR
 10267   0112BA  0EC7               	movlw	199
 10268   0112BC                     u3101:
 10269   0112BC  C4DE F4E6          	movff	postinc2,postinc1
 10270   0112C0  06E8               	decf	wreg,f,c
 10271   0112C2  E2FC               	bc	u3101
 10272   0112C4  0EC8               	movlw	200
 10273   0112C6  5ED9               	subwf	fsr2l,f,c
 10274   0112C8  5EE1               	subwf	fsr1l,f,c
 10275   0112CA                     
 10276                           ;main.c: 143:     uint8_t gridG[200] = { [0 ... (200 -1)] = 2 };
 10277   0112CA  EE23  F000         	lfsr	2,main@F17918
 10278   0112CE  EE12  F000         	lfsr	1,main@gridG
 10279   0112D2  0EC7               	movlw	199
 10280   0112D4                     u3111:
 10281   0112D4  C4DE F4E6          	movff	postinc2,postinc1
 10282   0112D8  06E8               	decf	wreg,f,c
 10283   0112DA  E2FC               	bc	u3111
 10284   0112DC  0EC8               	movlw	200
 10285   0112DE  5ED9               	subwf	fsr2l,f,c
 10286   0112E0  5EE1               	subwf	fsr1l,f,c
 10287   0112E2                     
 10288                           ;main.c: 144:     uint8_t gridB[200] = { [0 ... (200 -1)] = 3 };
 10289   0112E2  EE23  F100         	lfsr	2,main@F17920
 10290   0112E6  EE12  F100         	lfsr	1,main@gridB
 10291   0112EA  0EC7               	movlw	199
 10292   0112EC                     u3121:
 10293   0112EC  C4DE F4E6          	movff	postinc2,postinc1
 10294   0112F0  06E8               	decf	wreg,f,c
 10295   0112F2  E2FC               	bc	u3121
 10296   0112F4  0EC8               	movlw	200
 10297   0112F6  5ED9               	subwf	fsr2l,f,c
 10298   0112F8  5EE1               	subwf	fsr1l,f,c
 10299   0112FA                     
 10300                           ;main.c: 146:     sendGrid(gridG);
 10301   0112FA  0E00               	movlw	low main@gridG
 10302   0112FC  0105               	movlb	5	; () banked
 10303   0112FE  6F65               	movwf	sendGrid@grid& (0+255),b
 10304   011300  0E08               	movlw	high main@gridG
 10305   011302  6F66               	movwf	(sendGrid@grid+1)& (0+255),b
 10306   011304  EC50  F088         	call	_sendGrid	;wreg free
 10307   011308                     
 10308                           ;main.c: 148:     (INTCON0bits.GIE = 1);
 10309   011308  8ED6               	bsf	214,7,c	;volatile
 10310   01130A                     
 10311                           ;main.c: 149:     (IOCCNbits.IOCCN6 = 1);
 10312   01130A  0104               	movlb	4	; () banked
 10313   01130C  8D16               	bsf	22,6,b	;volatile
 10314   01130E                     
 10315                           ; BSR set to: 4
 10316                           ;main.c: 150:     (PIE0bits.IOCIE = 1);
 10317   01130E  8E9E               	bsf	158,7,c	;volatile
 10318   011310                     
 10319                           ; BSR set to: 4
 10320                           ;main.c: 151:     RC6_SetInterruptHandler(nrf_interrupt);
 10321   011310  0E5C               	movlw	low _nrf_interrupt
 10322   011312  0105               	movlb	5	; () banked
 10323   011314  6F60               	movwf	RC6_SetInterruptHandler@InterruptHandler& (0+255),b
 10324   011316  0E18               	movlw	high _nrf_interrupt
 10325   011318  6F61               	movwf	(RC6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10326   01131A  0E01               	movlw	low (_nrf_interrupt shr (0+16))
 10327   01131C  6F62               	movwf	(RC6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 10328   01131E  ECF3  F094         	call	_RC6_SetInterruptHandler	;wreg free
 10329   011322                     
 10330                           ;main.c: 153:     init_nrf();
 10331   011322  ECB1  F086         	call	_init_nrf	;wreg free
 10332   011326                     
 10333                           ;main.c: 156:     DELAY_milliseconds(5000);
 10334   011326  0E13               	movlw	19
 10335   011328  0105               	movlb	5	; () banked
 10336   01132A  6F61               	movwf	(DELAY_milliseconds@milliseconds+1)& (0+255),b
 10337   01132C  0E88               	movlw	136
 10338   01132E  6F60               	movwf	DELAY_milliseconds@milliseconds& (0+255),b
 10339   011330  EC09  F093         	call	_DELAY_milliseconds	;wreg free
 10340   011334                     
 10341                           ;main.c: 157:     sendGrid(gridB);
 10342   011334  0E00               	movlw	low main@gridB
 10343   011336  0105               	movlb	5	; () banked
 10344   011338  6F65               	movwf	sendGrid@grid& (0+255),b
 10345   01133A  0E09               	movlw	high main@gridB
 10346   01133C  6F66               	movwf	(sendGrid@grid+1)& (0+255),b
 10347   01133E  EC50  F088         	call	_sendGrid	;wreg free
 10348   011342                     
 10349                           ;main.c: 159:     uint8_t buf[32] = "wassup";
 10350   011342  EE22  F0C8         	lfsr	2,main@F17924
 10351   011346  EE11  F2C8         	lfsr	1,main@buf
 10352   01134A  0E1F               	movlw	31
 10353   01134C                     u3131:
 10354   01134C  C4DB F4E3          	movff	plusw2,plusw1
 10355   011350  06E8               	decf	wreg,f,c
 10356   011352  E2FC               	bc	u3131
 10357   011354                     l4178:
 10358                           
 10359                           ;main.c: 161:   Nrf24_send(&dev, buf);
 10360   011354  0EEB               	movlw	low _dev
 10361   011356  0105               	movlb	5	; () banked
 10362   011358  6F6D               	movwf	Nrf24_send@dev& (0+255),b
 10363   01135A  0E05               	movlw	high _dev
 10364   01135C  6F6E               	movwf	(Nrf24_send@dev+1)& (0+255),b
 10365   01135E  0EC8               	movlw	low main@buf
 10366   011360  6F6F               	movwf	Nrf24_send@value& (0+255),b
 10367   011362  0E06               	movlw	high main@buf
 10368   011364  6F70               	movwf	(Nrf24_send@value+1)& (0+255),b
 10369   011366  EC4A  F08F         	call	_Nrf24_send	;wreg free
 10370   01136A                     
 10371                           ;main.c: 162:   Nrf24_isSend(&dev, 1000);
 10372   01136A  0EEB               	movlw	low _dev
 10373   01136C  0105               	movlb	5	; () banked
 10374   01136E  6F6D               	movwf	Nrf24_isSend@dev& (0+255),b
 10375   011370  0E05               	movlw	high _dev
 10376   011372  6F6E               	movwf	(Nrf24_isSend@dev+1)& (0+255),b
 10377   011374  0E03               	movlw	3
 10378   011376  6F70               	movwf	(Nrf24_isSend@timeout+1)& (0+255),b
 10379   011378  0EE8               	movlw	232
 10380   01137A  6F6F               	movwf	Nrf24_isSend@timeout& (0+255),b
 10381   01137C  ECF3  F08C         	call	_Nrf24_isSend	;wreg free
 10382   011380                     
 10383                           ;main.c: 163:   DELAY_milliseconds(500);
 10384   011380  0E01               	movlw	1
 10385   011382  0105               	movlb	5	; () banked
 10386   011384  6F61               	movwf	(DELAY_milliseconds@milliseconds+1)& (0+255),b
 10387   011386  0EF4               	movlw	244
 10388   011388  6F60               	movwf	DELAY_milliseconds@milliseconds& (0+255),b
 10389   01138A  EC09  F093         	call	_DELAY_milliseconds	;wreg free
 10390   01138E  EFAA  F089         	goto	l4178
 10391   011392  EF0D  F000         	goto	start
 10392   011396                     __end_of_main:
 10393                           	callstack 0
 10394                           
 10395 ;; *************** function _sendGrid *****************
 10396 ;; Defined at:
 10397 ;;		line 100 in file "main.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;  grid            2    5[BANK5 ] PTR unsigned char 
 10400 ;;		 -> main@gridB(200), main@gridG(200), received_data(200), 
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;  index           2   10[BANK5 ] int 
 10403 ;;  col             2   12[BANK5 ] int 
 10404 ;;  row             2   14[BANK5 ] int 
 10405 ;;  gridSize        2   16[BANK5 ] int 
 10406 ;; Return value:  Size  Location     Type
 10407 ;;                  1    wreg      void 
 10408 ;; Registers used:
 10409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10410 ;; Tracked objects:
 10411 ;;		On entry : 0/0
 10412 ;;		On exit  : 0/0
 10413 ;;		Unchanged: 0/0
 10414 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10416 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10417 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10418 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10419 ;;Total ram usage:       13 bytes
 10420 ;; Hardware stack levels used: 1
 10421 ;; Hardware stack levels required when called: 10
 10422 ;; This function calls:
 10423 ;;		_sendCell
 10424 ;; This function is called by:
 10425 ;;		_main
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           	psect	text1
 10430   0110A0                     __ptext1:
 10431                           	callstack 0
 10432   0110A0                     _sendGrid:
 10433                           	callstack 116
 10434   0110A0                     
 10435                           ;main.c: 101:     int gridSize = 10;
 10436   0110A0  0E00               	movlw	0
 10437   0110A2  0105               	movlb	5	; () banked
 10438   0110A4  6F71               	movwf	(sendGrid@gridSize+1)& (0+255),b
 10439   0110A6  0E0A               	movlw	10
 10440   0110A8  6F70               	movwf	sendGrid@gridSize& (0+255),b
 10441   0110AA                     
 10442                           ; BSR set to: 5
 10443                           ;main.c: 104:     sendCell(grid[0]);
 10444   0110AA  C565  F4D9         	movff	sendGrid@grid,fsr2l
 10445   0110AE  C566  F4DA         	movff	sendGrid@grid+1,fsr2h
 10446   0110B2  50DF               	movf	indf2,w,c
 10447   0110B4  EC64  F090         	call	_sendCell
 10448   0110B8                     
 10449                           ;main.c: 105:     for (int row = 0; row < gridSize*2; row++) {
 10450   0110B8  0E00               	movlw	0
 10451   0110BA  0105               	movlb	5	; () banked
 10452   0110BC  6F6F               	movwf	(sendGrid@row+1)& (0+255),b
 10453   0110BE  0E00               	movlw	0
 10454   0110C0  6F6E               	movwf	sendGrid@row& (0+255),b
 10455   0110C2  EFBB  F088         	goto	l4056
 10456   0110C6                     l4040:
 10457                           
 10458                           ; BSR set to: 5
 10459                           ;main.c: 106:         for (int col = 0; col < gridSize; col++) {
 10460   0110C6  0E00               	movlw	0
 10461   0110C8  6F6D               	movwf	(sendGrid@col+1)& (0+255),b
 10462   0110CA  0E00               	movlw	0
 10463   0110CC  6F6C               	movwf	sendGrid@col& (0+255),b
 10464   0110CE  EFAA  F088         	goto	l4052
 10465   0110D2                     l4042:
 10466                           
 10467                           ; BSR set to: 5
 10468                           ;main.c: 107:             int index = row * gridSize + col + 1;
 10469   0110D2  5170               	movf	sendGrid@gridSize& (0+255),w,b
 10470   0110D4  036E               	mulwf	sendGrid@row& (0+255),b
 10471   0110D6  C4F3 F567          	movff	prodl,??_sendGrid
 10472   0110DA  C4F4 F568          	movff	prodh,??_sendGrid+1
 10473   0110DE  036F               	mulwf	(sendGrid@row+1)& (0+255),b
 10474   0110E0  50F3               	movf	prodl,w,c
 10475   0110E2  2768               	addwf	(??_sendGrid+1)& (0+255),f,b
 10476   0110E4  5171               	movf	(sendGrid@gridSize+1)& (0+255),w,b
 10477   0110E6  036E               	mulwf	sendGrid@row& (0+255),b
 10478   0110E8  50F3               	movf	prodl,w,c
 10479   0110EA  2768               	addwf	(??_sendGrid+1)& (0+255),f,b
 10480   0110EC  516C               	movf	sendGrid@col& (0+255),w,b
 10481   0110EE  2767               	addwf	??_sendGrid& (0+255),f,b
 10482   0110F0  516D               	movf	(sendGrid@col+1)& (0+255),w,b
 10483   0110F2  2368               	addwfc	(??_sendGrid+1)& (0+255),f,b
 10484   0110F4  0E01               	movlw	1
 10485   0110F6  2567               	addwf	??_sendGrid& (0+255),w,b
 10486   0110F8  6F6A               	movwf	sendGrid@index& (0+255),b
 10487   0110FA  0E00               	movlw	0
 10488   0110FC  2168               	addwfc	(??_sendGrid+1)& (0+255),w,b
 10489   0110FE  6F6B               	movwf	(sendGrid@index+1)& (0+255),b
 10490   011100                     
 10491                           ; BSR set to: 5
 10492                           ;main.c: 108:             if (row % 2 == 1) {
 10493   011100  A16E               	btfss	sendGrid@row& (0+255),0,b
 10494   011102  EF85  F088         	goto	u2891
 10495   011106  EF87  F088         	goto	u2890
 10496   01110A                     u2891:
 10497   01110A  EF9E  F088         	goto	l4048
 10498   01110E                     u2890:
 10499   01110E                     
 10500                           ; BSR set to: 5
 10501                           ;main.c: 109:                 index = row * gridSize + (gridSize - 1 - col) + 1;
 10502   01110E  5170               	movf	sendGrid@gridSize& (0+255),w,b
 10503   011110  036E               	mulwf	sendGrid@row& (0+255),b
 10504   011112  C4F3 F567          	movff	prodl,??_sendGrid
 10505   011116  C4F4 F568          	movff	prodh,??_sendGrid+1
 10506   01111A  036F               	mulwf	(sendGrid@row+1)& (0+255),b
 10507   01111C  50F3               	movf	prodl,w,c
 10508   01111E  2768               	addwf	(??_sendGrid+1)& (0+255),f,b
 10509   011120  5171               	movf	(sendGrid@gridSize+1)& (0+255),w,b
 10510   011122  036E               	mulwf	sendGrid@row& (0+255),b
 10511   011124  50F3               	movf	prodl,w,c
 10512   011126  2768               	addwf	(??_sendGrid+1)& (0+255),f,b
 10513   011128  516C               	movf	sendGrid@col& (0+255),w,b
 10514   01112A  5F67               	subwf	??_sendGrid& (0+255),f,b
 10515   01112C  516D               	movf	(sendGrid@col+1)& (0+255),w,b
 10516   01112E  5B68               	subwfb	(??_sendGrid+1)& (0+255),f,b
 10517   011130  5170               	movf	sendGrid@gridSize& (0+255),w,b
 10518   011132  2567               	addwf	??_sendGrid& (0+255),w,b
 10519   011134  6F6A               	movwf	sendGrid@index& (0+255),b
 10520   011136  5171               	movf	(sendGrid@gridSize+1)& (0+255),w,b
 10521   011138  2168               	addwfc	(??_sendGrid+1)& (0+255),w,b
 10522   01113A  6F6B               	movwf	(sendGrid@index+1)& (0+255),b
 10523   01113C                     l4048:
 10524                           
 10525                           ; BSR set to: 5
 10526                           ;main.c: 111:             sendCell(grid[index]);
 10527   01113C  516A               	movf	sendGrid@index& (0+255),w,b
 10528   01113E  2565               	addwf	sendGrid@grid& (0+255),w,b
 10529   011140  6ED9               	movwf	fsr2l,c
 10530   011142  516B               	movf	(sendGrid@index+1)& (0+255),w,b
 10531   011144  2166               	addwfc	(sendGrid@grid+1)& (0+255),w,b
 10532   011146  6EDA               	movwf	fsr2h,c
 10533   011148  50DF               	movf	indf2,w,c
 10534   01114A  EC64  F090         	call	_sendCell
 10535   01114E                     
 10536                           ;main.c: 112:         }
 10537   01114E  0105               	movlb	5	; () banked
 10538   011150  4B6C               	infsnz	sendGrid@col& (0+255),f,b
 10539   011152  2B6D               	incf	(sendGrid@col+1)& (0+255),f,b
 10540   011154                     l4052:
 10541                           
 10542                           ; BSR set to: 5
 10543   011154  5170               	movf	sendGrid@gridSize& (0+255),w,b
 10544   011156  5D6C               	subwf	sendGrid@col& (0+255),w,b
 10545   011158  516D               	movf	(sendGrid@col+1)& (0+255),w,b
 10546   01115A  0A80               	xorlw	128
 10547   01115C  6F67               	movwf	??_sendGrid& (0+255),b
 10548   01115E  5171               	movf	(sendGrid@gridSize+1)& (0+255),w,b
 10549   011160  0A80               	xorlw	128
 10550   011162  5967               	subwfb	??_sendGrid& (0+255),w,b
 10551   011164  A0D8               	btfss	status,0,c
 10552   011166  EFB7  F088         	goto	u2901
 10553   01116A  EFB9  F088         	goto	u2900
 10554   01116E                     u2901:
 10555   01116E  EF69  F088         	goto	l4042
 10556   011172                     u2900:
 10557   011172                     
 10558                           ; BSR set to: 5
 10559                           ;main.c: 113:     }
 10560   011172  4B6E               	infsnz	sendGrid@row& (0+255),f,b
 10561   011174  2B6F               	incf	(sendGrid@row+1)& (0+255),f,b
 10562   011176                     l4056:
 10563                           
 10564                           ; BSR set to: 5
 10565   011176  C570  F567         	movff	sendGrid@gridSize,??_sendGrid
 10566   01117A  C571  F568         	movff	sendGrid@gridSize+1,??_sendGrid+1
 10567   01117E  90D8               	bcf	status,0,c
 10568   011180  3767               	rlcf	??_sendGrid& (0+255),f,b
 10569   011182  3768               	rlcf	(??_sendGrid+1)& (0+255),f,b
 10570   011184  5167               	movf	??_sendGrid& (0+255),w,b
 10571   011186  5D6E               	subwf	sendGrid@row& (0+255),w,b
 10572   011188  516F               	movf	(sendGrid@row+1)& (0+255),w,b
 10573   01118A  0A80               	xorlw	128
 10574   01118C  6F69               	movwf	(??_sendGrid+2)& (0+255),b
 10575   01118E  5168               	movf	(??_sendGrid+1)& (0+255),w,b
 10576   011190  0A80               	xorlw	128
 10577   011192  5969               	subwfb	(??_sendGrid+2)& (0+255),w,b
 10578   011194  A0D8               	btfss	status,0,c
 10579   011196  EFCF  F088         	goto	u2911
 10580   01119A  EFD1  F088         	goto	u2910
 10581   01119E                     u2911:
 10582   01119E  EF63  F088         	goto	l4040
 10583   0111A2                     u2910:
 10584   0111A2                     
 10585                           ; BSR set to: 5
 10586   0111A2  0012               	return		;funcret
 10587   0111A4                     __end_of_sendGrid:
 10588                           	callstack 0
 10589                           
 10590 ;; *************** function _sendCell *****************
 10591 ;; Defined at:
 10592 ;;		line 82 in file "main.c"
 10593 ;; Parameters:    Size  Location     Type
 10594 ;;  cell            1    wreg     unsigned char 
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;  cell            1    4[BANK5 ] unsigned char 
 10597 ;;  bright          1    0        unsigned char 
 10598 ;; Return value:  Size  Location     Type
 10599 ;;                  1    wreg      void 
 10600 ;; Registers used:
 10601 ;;		wreg, status,2, status,0, cstack
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10608 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10610 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10611 ;;Total ram usage:        1 bytes
 10612 ;; Hardware stack levels used: 1
 10613 ;; Hardware stack levels required when called: 9
 10614 ;; This function calls:
 10615 ;;		_sendRGB
 10616 ;; This function is called by:
 10617 ;;		_sendGrid
 10618 ;; This function uses a non-reentrant model
 10619 ;;
 10620                           
 10621                           	psect	text2
 10622   0120C8                     __ptext2:
 10623                           	callstack 0
 10624   0120C8                     _sendCell:
 10625                           	callstack 116
 10626                           
 10627                           ; BSR set to: 5
 10628                           ;incstack = 0
 10629                           ;sendCell@cell stored from wreg
 10630   0120C8  0105               	movlb	5	; () banked
 10631   0120CA  6F64               	movwf	sendCell@cell& (0+255),b
 10632   0120CC                     
 10633                           ;main.c: 84:     switch (cell) {
 10634   0120CC  EF8C  F090         	goto	l3948
 10635   0120D0                     l3938:
 10636                           
 10637                           ; BSR set to: 5
 10638                           ;main.c: 86:             sendRGB(0, 0, 0);
 10639   0120D0  0E00               	movlw	0
 10640   0120D2  6F61               	movwf	sendRGB@g& (0+255),b
 10641   0120D4  0E00               	movlw	0
 10642   0120D6  6F62               	movwf	sendRGB@b& (0+255),b
 10643   0120D8  0E00               	movlw	0
 10644   0120DA  EC5F  F094         	call	_sendRGB
 10645                           
 10646                           ;main.c: 87:             break;
 10647   0120DE  EF9C  F090         	goto	l547
 10648   0120E2                     l3940:
 10649                           
 10650                           ; BSR set to: 5
 10651                           ;main.c: 89:             sendRGB(bright, 0, 0);
 10652   0120E2  0E00               	movlw	0
 10653   0120E4  6F61               	movwf	sendRGB@g& (0+255),b
 10654   0120E6  0E00               	movlw	0
 10655   0120E8  6F62               	movwf	sendRGB@b& (0+255),b
 10656   0120EA  0E14               	movlw	20
 10657   0120EC  EC5F  F094         	call	_sendRGB
 10658                           
 10659                           ;main.c: 90:             break;
 10660   0120F0  EF9C  F090         	goto	l547
 10661   0120F4                     l3942:
 10662                           
 10663                           ; BSR set to: 5
 10664                           ;main.c: 92:             sendRGB(0, bright, 0);
 10665   0120F4  0E14               	movlw	20
 10666   0120F6  6F61               	movwf	sendRGB@g& (0+255),b
 10667   0120F8  0E00               	movlw	0
 10668   0120FA  6F62               	movwf	sendRGB@b& (0+255),b
 10669   0120FC  0E00               	movlw	0
 10670   0120FE  EC5F  F094         	call	_sendRGB
 10671                           
 10672                           ;main.c: 93:             break;
 10673   012102  EF9C  F090         	goto	l547
 10674   012106                     l3944:
 10675                           
 10676                           ; BSR set to: 5
 10677                           ;main.c: 95:             sendRGB(0, 0, bright);
 10678   012106  0E00               	movlw	0
 10679   012108  6F61               	movwf	sendRGB@g& (0+255),b
 10680   01210A  0E14               	movlw	20
 10681   01210C  6F62               	movwf	sendRGB@b& (0+255),b
 10682   01210E  0E00               	movlw	0
 10683   012110  EC5F  F094         	call	_sendRGB
 10684                           
 10685                           ;main.c: 96:             break;
 10686   012114  EF9C  F090         	goto	l547
 10687   012118                     l3948:
 10688   012118  0105               	movlb	5	; () banked
 10689   01211A  5164               	movf	sendCell@cell& (0+255),w,b
 10690                           
 10691                           ; Switch size 1, requested type "simple"
 10692                           ; Number of cases is 3, Range of values is 0 to 2
 10693                           ; switch strategies available:
 10694                           ; Name         Instructions Cycles
 10695                           ; simple_byte           10     6 (average)
 10696                           ;	Chosen strategy is simple_byte
 10697   01211C  0A00               	xorlw	0	; case 0
 10698   01211E  B4D8               	btfsc	status,2,c
 10699   012120  EF68  F090         	goto	l3938
 10700   012124  0A01               	xorlw	1	; case 1
 10701   012126  B4D8               	btfsc	status,2,c
 10702   012128  EF71  F090         	goto	l3940
 10703   01212C  0A03               	xorlw	3	; case 2
 10704   01212E  B4D8               	btfsc	status,2,c
 10705   012130  EF7A  F090         	goto	l3942
 10706   012134  EF83  F090         	goto	l3944
 10707   012138                     l547:
 10708   012138  0012               	return		;funcret
 10709   01213A                     __end_of_sendCell:
 10710                           	callstack 0
 10711                           
 10712 ;; *************** function _sendRGB *****************
 10713 ;; Defined at:
 10714 ;;		line 76 in file "main.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;  r               1    wreg     unsigned char 
 10717 ;;  g               1    1[BANK5 ] unsigned char 
 10718 ;;  b               1    2[BANK5 ] unsigned char 
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;  r               1    3[BANK5 ] unsigned char 
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  1    wreg      void 
 10723 ;; Registers used:
 10724 ;;		wreg, status,2, cstack
 10725 ;; Tracked objects:
 10726 ;;		On entry : 0/0
 10727 ;;		On exit  : 0/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10730 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10731 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10733 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10734 ;;Total ram usage:        3 bytes
 10735 ;; Hardware stack levels used: 1
 10736 ;; Hardware stack levels required when called: 8
 10737 ;; This function calls:
 10738 ;;		_sendByte
 10739 ;; This function is called by:
 10740 ;;		_sendCell
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           	psect	text3
 10745   0128BE                     __ptext3:
 10746                           	callstack 0
 10747   0128BE                     _sendRGB:
 10748                           	callstack 116
 10749                           
 10750                           ;incstack = 0
 10751                           ;sendRGB@r stored from wreg
 10752   0128BE  0105               	movlb	5	; () banked
 10753   0128C0  6F63               	movwf	sendRGB@r& (0+255),b
 10754   0128C2                     
 10755                           ;main.c: 77:     sendByte(g);
 10756   0128C2  0105               	movlb	5	; () banked
 10757   0128C4  5161               	movf	sendRGB@g& (0+255),w,b
 10758   0128C6  ECC9  F081         	call	_sendByte
 10759                           
 10760                           ;main.c: 78:     sendByte(r);
 10761   0128CA  0105               	movlb	5	; () banked
 10762   0128CC  5163               	movf	sendRGB@r& (0+255),w,b
 10763   0128CE  ECC9  F081         	call	_sendByte
 10764                           
 10765                           ;main.c: 79:     sendByte(b);
 10766   0128D2  0105               	movlb	5	; () banked
 10767   0128D4  5162               	movf	sendRGB@b& (0+255),w,b
 10768   0128D6  ECC9  F081         	call	_sendByte
 10769   0128DA  0012               	return		;funcret
 10770   0128DC                     __end_of_sendRGB:
 10771                           	callstack 0
 10772                           
 10773 ;; *************** function _sendByte *****************
 10774 ;; Defined at:
 10775 ;;		line 65 in file "main.c"
 10776 ;; Parameters:    Size  Location     Type
 10777 ;;  byte            1    wreg     unsigned char 
 10778 ;; Auto vars:     Size  Location     Type
 10779 ;;  byte            1    0[BANK5 ] unsigned char 
 10780 ;; Return value:  Size  Location     Type
 10781 ;;                  1    wreg      void 
 10782 ;; Registers used:
 10783 ;;		wreg
 10784 ;; Tracked objects:
 10785 ;;		On entry : 0/0
 10786 ;;		On exit  : 0/0
 10787 ;;		Unchanged: 0/0
 10788 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10790 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10792 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10793 ;;Total ram usage:        1 bytes
 10794 ;; Hardware stack levels used: 1
 10795 ;; Hardware stack levels required when called: 7
 10796 ;; This function calls:
 10797 ;;		Nothing
 10798 ;; This function is called by:
 10799 ;;		_sendRGB
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           	psect	text4
 10804   010392                     __ptext4:
 10805                           	callstack 0
 10806   010392                     _sendByte:
 10807                           	callstack 116
 10808                           
 10809                           ;incstack = 0
 10810                           ;sendByte@byte stored from wreg
 10811   010392  0105               	movlb	5	; () banked
 10812   010394  6F60               	movwf	sendByte@byte& (0+255),b
 10813   010396                     
 10814                           ;main.c: 66:     if (byte & 0b10000000) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 10815   010396  0105               	movlb	5	; () banked
 10816   010398  AF60               	btfss	sendByte@byte& (0+255),7,b
 10817   01039A  EFD1  F081         	goto	u2441
 10818   01039E  EFD3  F081         	goto	u2440
 10819   0103A2                     u2441:
 10820   0103A2  EFE3  F081         	goto	l519
 10821   0103A6                     u2440:
 10822   0103A6                     
 10823                           ; BSR set to: 5
 10824   0103A6  84C3               	bsf	195,2,c	;volatile
 10825   0103A8  0000               	nop	
 10826   0103AA  0000               	nop	
 10827   0103AC  0000               	nop	
 10828   0103AE  84C3               	bsf	195,2,c	;volatile
 10829   0103B0  0000               	nop	
 10830   0103B2  0000               	nop	
 10831   0103B4  0000               	nop	
 10832   0103B6  0000               	nop	
 10833   0103B8  94C3               	bcf	195,2,c	;volatile
 10834   0103BA  0000               	nop	
 10835   0103BC  0000               	nop	
 10836   0103BE  0000               	nop	
 10837   0103C0  0000               	nop	
 10838   0103C2  EFF1  F081         	goto	l3486
 10839   0103C6                     l519:
 10840                           
 10841                           ; BSR set to: 5
 10842   0103C6  84C3               	bsf	195,2,c	;volatile
 10843   0103C8  0000               	nop	
 10844   0103CA  0000               	nop	
 10845   0103CC  0000               	nop	
 10846   0103CE  94C3               	bcf	195,2,c	;volatile
 10847   0103D0  0000               	nop	
 10848   0103D2  0000               	nop	
 10849   0103D4  0000               	nop	
 10850   0103D6  0000               	nop	
 10851   0103D8  94C3               	bcf	195,2,c	;volatile
 10852   0103DA  0000               	nop	
 10853   0103DC  0000               	nop	
 10854   0103DE  0000               	nop	
 10855   0103E0  0000               	nop	
 10856   0103E2                     l3486:
 10857                           
 10858                           ;main.c: 67:     if (byte & 0b01000000) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 10859   0103E2  0105               	movlb	5	; () banked
 10860   0103E4  AD60               	btfss	sendByte@byte& (0+255),6,b
 10861   0103E6  EFF7  F081         	goto	u2451
 10862   0103EA  EFF9  F081         	goto	u2450
 10863   0103EE                     u2451:
 10864   0103EE  EF09  F082         	goto	l521
 10865   0103F2                     u2450:
 10866   0103F2                     
 10867                           ; BSR set to: 5
 10868   0103F2  84C3               	bsf	195,2,c	;volatile
 10869   0103F4  0000               	nop	
 10870   0103F6  0000               	nop	
 10871   0103F8  0000               	nop	
 10872   0103FA  84C3               	bsf	195,2,c	;volatile
 10873   0103FC  0000               	nop	
 10874   0103FE  0000               	nop	
 10875   010400  0000               	nop	
 10876   010402  0000               	nop	
 10877   010404  94C3               	bcf	195,2,c	;volatile
 10878   010406  0000               	nop	
 10879   010408  0000               	nop	
 10880   01040A  0000               	nop	
 10881   01040C  0000               	nop	
 10882   01040E  EF17  F082         	goto	l3490
 10883   010412                     l521:
 10884                           
 10885                           ; BSR set to: 5
 10886   010412  84C3               	bsf	195,2,c	;volatile
 10887   010414  0000               	nop	
 10888   010416  0000               	nop	
 10889   010418  0000               	nop	
 10890   01041A  94C3               	bcf	195,2,c	;volatile
 10891   01041C  0000               	nop	
 10892   01041E  0000               	nop	
 10893   010420  0000               	nop	
 10894   010422  0000               	nop	
 10895   010424  94C3               	bcf	195,2,c	;volatile
 10896   010426  0000               	nop	
 10897   010428  0000               	nop	
 10898   01042A  0000               	nop	
 10899   01042C  0000               	nop	
 10900   01042E                     l3490:
 10901                           
 10902                           ;main.c: 68:     if (byte & 0b00100000) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 10903   01042E  0105               	movlb	5	; () banked
 10904   010430  AB60               	btfss	sendByte@byte& (0+255),5,b
 10905   010432  EF1D  F082         	goto	u2461
 10906   010436  EF1F  F082         	goto	u2460
 10907   01043A                     u2461:
 10908   01043A  EF2F  F082         	goto	l523
 10909   01043E                     u2460:
 10910   01043E                     
 10911                           ; BSR set to: 5
 10912   01043E  84C3               	bsf	195,2,c	;volatile
 10913   010440  0000               	nop	
 10914   010442  0000               	nop	
 10915   010444  0000               	nop	
 10916   010446  84C3               	bsf	195,2,c	;volatile
 10917   010448  0000               	nop	
 10918   01044A  0000               	nop	
 10919   01044C  0000               	nop	
 10920   01044E  0000               	nop	
 10921   010450  94C3               	bcf	195,2,c	;volatile
 10922   010452  0000               	nop	
 10923   010454  0000               	nop	
 10924   010456  0000               	nop	
 10925   010458  0000               	nop	
 10926   01045A  EF3D  F082         	goto	l3494
 10927   01045E                     l523:
 10928                           
 10929                           ; BSR set to: 5
 10930   01045E  84C3               	bsf	195,2,c	;volatile
 10931   010460  0000               	nop	
 10932   010462  0000               	nop	
 10933   010464  0000               	nop	
 10934   010466  94C3               	bcf	195,2,c	;volatile
 10935   010468  0000               	nop	
 10936   01046A  0000               	nop	
 10937   01046C  0000               	nop	
 10938   01046E  0000               	nop	
 10939   010470  94C3               	bcf	195,2,c	;volatile
 10940   010472  0000               	nop	
 10941   010474  0000               	nop	
 10942   010476  0000               	nop	
 10943   010478  0000               	nop	
 10944   01047A                     l3494:
 10945                           
 10946                           ;main.c: 69:     if (byte & 0b00010000) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 10947   01047A  0105               	movlb	5	; () banked
 10948   01047C  A960               	btfss	sendByte@byte& (0+255),4,b
 10949   01047E  EF43  F082         	goto	u2471
 10950   010482  EF45  F082         	goto	u2470
 10951   010486                     u2471:
 10952   010486  EF55  F082         	goto	l525
 10953   01048A                     u2470:
 10954   01048A                     
 10955                           ; BSR set to: 5
 10956   01048A  84C3               	bsf	195,2,c	;volatile
 10957   01048C  0000               	nop	
 10958   01048E  0000               	nop	
 10959   010490  0000               	nop	
 10960   010492  84C3               	bsf	195,2,c	;volatile
 10961   010494  0000               	nop	
 10962   010496  0000               	nop	
 10963   010498  0000               	nop	
 10964   01049A  0000               	nop	
 10965   01049C  94C3               	bcf	195,2,c	;volatile
 10966   01049E  0000               	nop	
 10967   0104A0  0000               	nop	
 10968   0104A2  0000               	nop	
 10969   0104A4  0000               	nop	
 10970   0104A6  EF63  F082         	goto	l3498
 10971   0104AA                     l525:
 10972                           
 10973                           ; BSR set to: 5
 10974   0104AA  84C3               	bsf	195,2,c	;volatile
 10975   0104AC  0000               	nop	
 10976   0104AE  0000               	nop	
 10977   0104B0  0000               	nop	
 10978   0104B2  94C3               	bcf	195,2,c	;volatile
 10979   0104B4  0000               	nop	
 10980   0104B6  0000               	nop	
 10981   0104B8  0000               	nop	
 10982   0104BA  0000               	nop	
 10983   0104BC  94C3               	bcf	195,2,c	;volatile
 10984   0104BE  0000               	nop	
 10985   0104C0  0000               	nop	
 10986   0104C2  0000               	nop	
 10987   0104C4  0000               	nop	
 10988   0104C6                     l3498:
 10989                           
 10990                           ;main.c: 70:     if (byte & 0b00001000) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 10991   0104C6  0105               	movlb	5	; () banked
 10992   0104C8  A760               	btfss	sendByte@byte& (0+255),3,b
 10993   0104CA  EF69  F082         	goto	u2481
 10994   0104CE  EF6B  F082         	goto	u2480
 10995   0104D2                     u2481:
 10996   0104D2  EF7B  F082         	goto	l527
 10997   0104D6                     u2480:
 10998   0104D6                     
 10999                           ; BSR set to: 5
 11000   0104D6  84C3               	bsf	195,2,c	;volatile
 11001   0104D8  0000               	nop	
 11002   0104DA  0000               	nop	
 11003   0104DC  0000               	nop	
 11004   0104DE  84C3               	bsf	195,2,c	;volatile
 11005   0104E0  0000               	nop	
 11006   0104E2  0000               	nop	
 11007   0104E4  0000               	nop	
 11008   0104E6  0000               	nop	
 11009   0104E8  94C3               	bcf	195,2,c	;volatile
 11010   0104EA  0000               	nop	
 11011   0104EC  0000               	nop	
 11012   0104EE  0000               	nop	
 11013   0104F0  0000               	nop	
 11014   0104F2  EF89  F082         	goto	l3502
 11015   0104F6                     l527:
 11016                           
 11017                           ; BSR set to: 5
 11018   0104F6  84C3               	bsf	195,2,c	;volatile
 11019   0104F8  0000               	nop	
 11020   0104FA  0000               	nop	
 11021   0104FC  0000               	nop	
 11022   0104FE  94C3               	bcf	195,2,c	;volatile
 11023   010500  0000               	nop	
 11024   010502  0000               	nop	
 11025   010504  0000               	nop	
 11026   010506  0000               	nop	
 11027   010508  94C3               	bcf	195,2,c	;volatile
 11028   01050A  0000               	nop	
 11029   01050C  0000               	nop	
 11030   01050E  0000               	nop	
 11031   010510  0000               	nop	
 11032   010512                     l3502:
 11033                           
 11034                           ;main.c: 71:     if (byte & 0b00000100) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 11035   010512  0105               	movlb	5	; () banked
 11036   010514  A560               	btfss	sendByte@byte& (0+255),2,b
 11037   010516  EF8F  F082         	goto	u2491
 11038   01051A  EF91  F082         	goto	u2490
 11039   01051E                     u2491:
 11040   01051E  EFA1  F082         	goto	l529
 11041   010522                     u2490:
 11042   010522                     
 11043                           ; BSR set to: 5
 11044   010522  84C3               	bsf	195,2,c	;volatile
 11045   010524  0000               	nop	
 11046   010526  0000               	nop	
 11047   010528  0000               	nop	
 11048   01052A  84C3               	bsf	195,2,c	;volatile
 11049   01052C  0000               	nop	
 11050   01052E  0000               	nop	
 11051   010530  0000               	nop	
 11052   010532  0000               	nop	
 11053   010534  94C3               	bcf	195,2,c	;volatile
 11054   010536  0000               	nop	
 11055   010538  0000               	nop	
 11056   01053A  0000               	nop	
 11057   01053C  0000               	nop	
 11058   01053E  EFAF  F082         	goto	l3506
 11059   010542                     l529:
 11060                           
 11061                           ; BSR set to: 5
 11062   010542  84C3               	bsf	195,2,c	;volatile
 11063   010544  0000               	nop	
 11064   010546  0000               	nop	
 11065   010548  0000               	nop	
 11066   01054A  94C3               	bcf	195,2,c	;volatile
 11067   01054C  0000               	nop	
 11068   01054E  0000               	nop	
 11069   010550  0000               	nop	
 11070   010552  0000               	nop	
 11071   010554  94C3               	bcf	195,2,c	;volatile
 11072   010556  0000               	nop	
 11073   010558  0000               	nop	
 11074   01055A  0000               	nop	
 11075   01055C  0000               	nop	
 11076   01055E                     l3506:
 11077                           
 11078                           ;main.c: 72:     if (byte & 0b00000010) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 11079   01055E  0105               	movlb	5	; () banked
 11080   010560  A360               	btfss	sendByte@byte& (0+255),1,b
 11081   010562  EFB5  F082         	goto	u2501
 11082   010566  EFB7  F082         	goto	u2500
 11083   01056A                     u2501:
 11084   01056A  EFC7  F082         	goto	l531
 11085   01056E                     u2500:
 11086   01056E                     
 11087                           ; BSR set to: 5
 11088   01056E  84C3               	bsf	195,2,c	;volatile
 11089   010570  0000               	nop	
 11090   010572  0000               	nop	
 11091   010574  0000               	nop	
 11092   010576  84C3               	bsf	195,2,c	;volatile
 11093   010578  0000               	nop	
 11094   01057A  0000               	nop	
 11095   01057C  0000               	nop	
 11096   01057E  0000               	nop	
 11097   010580  94C3               	bcf	195,2,c	;volatile
 11098   010582  0000               	nop	
 11099   010584  0000               	nop	
 11100   010586  0000               	nop	
 11101   010588  0000               	nop	
 11102   01058A  EFD5  F082         	goto	l3510
 11103   01058E                     l531:
 11104                           
 11105                           ; BSR set to: 5
 11106   01058E  84C3               	bsf	195,2,c	;volatile
 11107   010590  0000               	nop	
 11108   010592  0000               	nop	
 11109   010594  0000               	nop	
 11110   010596  94C3               	bcf	195,2,c	;volatile
 11111   010598  0000               	nop	
 11112   01059A  0000               	nop	
 11113   01059C  0000               	nop	
 11114   01059E  0000               	nop	
 11115   0105A0  94C3               	bcf	195,2,c	;volatile
 11116   0105A2  0000               	nop	
 11117   0105A4  0000               	nop	
 11118   0105A6  0000               	nop	
 11119   0105A8  0000               	nop	
 11120   0105AA                     l3510:
 11121                           
 11122                           ;main.c: 73:     if (byte & 0b00000001) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 11123   0105AA  0105               	movlb	5	; () banked
 11124   0105AC  A160               	btfss	sendByte@byte& (0+255),0,b
 11125   0105AE  EFDB  F082         	goto	u2511
 11126   0105B2  EFDD  F082         	goto	u2510
 11127   0105B6                     u2511:
 11128   0105B6  EFED  F082         	goto	l533
 11129   0105BA                     u2510:
 11130   0105BA                     
 11131                           ; BSR set to: 5
 11132   0105BA  84C3               	bsf	195,2,c	;volatile
 11133   0105BC  0000               	nop	
 11134   0105BE  0000               	nop	
 11135   0105C0  0000               	nop	
 11136   0105C2  84C3               	bsf	195,2,c	;volatile
 11137   0105C4  0000               	nop	
 11138   0105C6  0000               	nop	
 11139   0105C8  0000               	nop	
 11140   0105CA  0000               	nop	
 11141   0105CC  94C3               	bcf	195,2,c	;volatile
 11142   0105CE  0000               	nop	
 11143   0105D0  0000               	nop	
 11144   0105D2  0000               	nop	
 11145   0105D4  0000               	nop	
 11146   0105D6  EFFB  F082         	goto	l535
 11147   0105DA                     l533:
 11148                           
 11149                           ; BSR set to: 5
 11150   0105DA  84C3               	bsf	195,2,c	;volatile
 11151   0105DC  0000               	nop	
 11152   0105DE  0000               	nop	
 11153   0105E0  0000               	nop	
 11154   0105E2  94C3               	bcf	195,2,c	;volatile
 11155   0105E4  0000               	nop	
 11156   0105E6  0000               	nop	
 11157   0105E8  0000               	nop	
 11158   0105EA  0000               	nop	
 11159   0105EC  94C3               	bcf	195,2,c	;volatile
 11160   0105EE  0000               	nop	
 11161   0105F0  0000               	nop	
 11162   0105F2  0000               	nop	
 11163   0105F4  0000               	nop	
 11164   0105F6                     l535:
 11165   0105F6  0012               	return		;funcret
 11166   0105F8                     __end_of_sendByte:
 11167                           	callstack 0
 11168                           
 11169 ;; *************** function _init_nrf *****************
 11170 ;; Defined at:
 11171 ;;		line 26 in file "main.c"
 11172 ;; Parameters:    Size  Location     Type
 11173 ;;		None
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;  buf            32  100[BANK5 ] unsigned char [32]
 11176 ;;  ret             2  132[BANK5 ] int 
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  1    wreg      void 
 11179 ;; Registers used:
 11180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11187 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11189 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11190 ;;Total ram usage:       34 bytes
 11191 ;; Hardware stack levels used: 1
 11192 ;; Hardware stack levels required when called: 17
 11193 ;; This function calls:
 11194 ;;		_DELAY_milliseconds
 11195 ;;		_Nrf24_SetSpeedDataRates
 11196 ;;		_Nrf24_config
 11197 ;;		_Nrf24_dataReady
 11198 ;;		_Nrf24_getData
 11199 ;;		_Nrf24_init
 11200 ;;		_Nrf24_printDetails
 11201 ;;		_Nrf24_setRADDR
 11202 ;;		_Nrf24_setRetransmitDelay
 11203 ;;		_Nrf24_setTADDR
 11204 ;; This function is called by:
 11205 ;;		_main
 11206 ;; This function uses a non-reentrant model
 11207 ;;
 11208                           
 11209                           	psect	text5
 11210   010D62                     __ptext5:
 11211                           	callstack 0
 11212   010D62                     _init_nrf:
 11213                           	callstack 109
 11214   010D62                     
 11215                           ;main.c: 27:     DELAY_milliseconds(100);
 11216   010D62  0E00               	movlw	0
 11217   010D64  0105               	movlb	5	; () banked
 11218   010D66  6F61               	movwf	(DELAY_milliseconds@milliseconds+1)& (0+255),b
 11219   010D68  0E64               	movlw	100
 11220   010D6A  6F60               	movwf	DELAY_milliseconds@milliseconds& (0+255),b
 11221   010D6C  EC09  F093         	call	_DELAY_milliseconds	;wreg free
 11222   010D70                     
 11223                           ;main.c: 29:     Nrf24_init(&dev);
 11224   010D70  0EEB               	movlw	low _dev
 11225   010D72  0105               	movlb	5	; () banked
 11226   010D74  6F61               	movwf	Nrf24_init@dev& (0+255),b
 11227   010D76  0E05               	movlw	high _dev
 11228   010D78  6F62               	movwf	(Nrf24_init@dev+1)& (0+255),b
 11229   010D7A  EC9F  F093         	call	_Nrf24_init	;wreg free
 11230   010D7E                     
 11231                           ;main.c: 30:  Nrf24_config(&dev, 99, 32);
 11232   010D7E  0EEB               	movlw	low _dev
 11233   010D80  0105               	movlb	5	; () banked
 11234   010D82  6F6D               	movwf	Nrf24_config@dev& (0+255),b
 11235   010D84  0E05               	movlw	high _dev
 11236   010D86  6F6E               	movwf	(Nrf24_config@dev+1)& (0+255),b
 11237   010D88  0E63               	movlw	99
 11238   010D8A  6F6F               	movwf	Nrf24_config@channel& (0+255),b
 11239   010D8C  0E20               	movlw	32
 11240   010D8E  6F70               	movwf	Nrf24_config@payload& (0+255),b
 11241   010D90  EC23  F090         	call	_Nrf24_config	;wreg free
 11242   010D94                     
 11243                           ;main.c: 33:  int ret = Nrf24_setRADDR(&dev, (uint8_t *) "GAME4");
 11244   010D94  0EEB               	movlw	low _dev
 11245   010D96  0105               	movlb	5	; () banked
 11246   010D98  6F6A               	movwf	Nrf24_setRADDR@dev& (0+255),b
 11247   010D9A  0E05               	movlw	high _dev
 11248   010D9C  6F6B               	movwf	(Nrf24_setRADDR@dev+1)& (0+255),b
 11249   010D9E  0EF4               	movlw	low STR_1
 11250   010DA0  6F6C               	movwf	Nrf24_setRADDR@adr& (0+255),b
 11251   010DA2  0EFF               	movlw	high STR_1
 11252   010DA4  6F6D               	movwf	(Nrf24_setRADDR@adr+1)& (0+255),b
 11253   010DA6  ECAA  F08E         	call	_Nrf24_setRADDR	;wreg free
 11254   010DAA  C56A  F5E4         	movff	?_Nrf24_setRADDR,init_nrf@ret
 11255   010DAE  C56B  F5E5         	movff	?_Nrf24_setRADDR+1,init_nrf@ret+1
 11256   010DB2                     
 11257                           ;main.c: 34:  if (ret != 0) {
 11258   010DB2  0105               	movlb	5	; () banked
 11259   010DB4  51E4               	movf	init_nrf@ret& (0+255),w,b
 11260   010DB6  11E5               	iorwf	(init_nrf@ret+1)& (0+255),w,b
 11261   010DB8  B4D8               	btfsc	status,2,c
 11262   010DBA  EFE1  F086         	goto	u2861
 11263   010DBE  EFE3  F086         	goto	u2860
 11264   010DC2                     u2861:
 11265   010DC2  EFEC  F086         	goto	l4018
 11266   010DC6                     u2860:
 11267   010DC6                     l4016:
 11268   010DC6  0E00               	movlw	0
 11269   010DC8  0105               	movlb	5	; () banked
 11270   010DCA  6F61               	movwf	(DELAY_milliseconds@milliseconds+1)& (0+255),b
 11271   010DCC  0E01               	movlw	1
 11272   010DCE  6F60               	movwf	DELAY_milliseconds@milliseconds& (0+255),b
 11273   010DD0  EC09  F093         	call	_DELAY_milliseconds	;wreg free
 11274   010DD4  EFE3  F086         	goto	l4016
 11275   010DD8                     l4018:
 11276                           
 11277                           ; BSR set to: 5
 11278                           ;main.c: 37:     ret = Nrf24_setTADDR(&dev, (uint8_t *) "GAME4");
 11279   010DD8  0EEB               	movlw	low _dev
 11280   010DDA  6F6A               	movwf	Nrf24_setTADDR@dev& (0+255),b
 11281   010DDC  0E05               	movlw	high _dev
 11282   010DDE  6F6B               	movwf	(Nrf24_setTADDR@dev+1)& (0+255),b
 11283   010DE0  0EF4               	movlw	low STR_1
 11284   010DE2  6F6C               	movwf	Nrf24_setTADDR@adr& (0+255),b
 11285   010DE4  0EFF               	movlw	high STR_1
 11286   010DE6  6F6D               	movwf	(Nrf24_setTADDR@adr+1)& (0+255),b
 11287   010DE8  EC50  F08D         	call	_Nrf24_setTADDR	;wreg free
 11288   010DEC  C56A  F5E4         	movff	?_Nrf24_setTADDR,init_nrf@ret
 11289   010DF0  C56B  F5E5         	movff	?_Nrf24_setTADDR+1,init_nrf@ret+1
 11290   010DF4                     
 11291                           ;main.c: 38:  if (ret != 0) {
 11292   010DF4  0105               	movlb	5	; () banked
 11293   010DF6  51E4               	movf	init_nrf@ret& (0+255),w,b
 11294   010DF8  11E5               	iorwf	(init_nrf@ret+1)& (0+255),w,b
 11295   010DFA  B4D8               	btfsc	status,2,c
 11296   010DFC  EF02  F087         	goto	u2871
 11297   010E00  EF04  F087         	goto	u2870
 11298   010E04                     u2871:
 11299   010E04  EF0D  F087         	goto	l4024
 11300   010E08                     u2870:
 11301   010E08                     l4022:
 11302   010E08  0E00               	movlw	0
 11303   010E0A  0105               	movlb	5	; () banked
 11304   010E0C  6F61               	movwf	(DELAY_milliseconds@milliseconds+1)& (0+255),b
 11305   010E0E  0E01               	movlw	1
 11306   010E10  6F60               	movwf	DELAY_milliseconds@milliseconds& (0+255),b
 11307   010E12  EC09  F093         	call	_DELAY_milliseconds	;wreg free
 11308   010E16  EF04  F087         	goto	l4022
 11309   010E1A                     l4024:
 11310                           
 11311                           ; BSR set to: 5
 11312                           ;main.c: 42:     Nrf24_SetSpeedDataRates(&dev, 0);
 11313   010E1A  0EEB               	movlw	low _dev
 11314   010E1C  6F6A               	movwf	Nrf24_SetSpeedDataRates@dev& (0+255),b
 11315   010E1E  0E05               	movlw	high _dev
 11316   010E20  6F6B               	movwf	(Nrf24_SetSpeedDataRates@dev+1)& (0+255),b
 11317   010E22  0E00               	movlw	0
 11318   010E24  6F6C               	movwf	Nrf24_SetSpeedDataRates@val& (0+255),b
 11319   010E26  EC9D  F090         	call	_Nrf24_SetSpeedDataRates	;wreg free
 11320                           
 11321                           ;main.c: 43:  Nrf24_setRetransmitDelay(&dev, 100);
 11322   010E2A  0EEB               	movlw	low _dev
 11323   010E2C  0105               	movlb	5	; () banked
 11324   010E2E  6F6A               	movwf	Nrf24_setRetransmitDelay@dev& (0+255),b
 11325   010E30  0E05               	movlw	high _dev
 11326   010E32  6F6B               	movwf	(Nrf24_setRetransmitDelay@dev+1)& (0+255),b
 11327   010E34  0E64               	movlw	100
 11328   010E36  6F6C               	movwf	Nrf24_setRetransmitDelay@val& (0+255),b
 11329   010E38  EC6F  F093         	call	_Nrf24_setRetransmitDelay	;wreg free
 11330   010E3C                     
 11331                           ;main.c: 46:  Nrf24_printDetails(&dev);
 11332   010E3C  0EEB               	movlw	low _dev
 11333   010E3E  0105               	movlb	5	; () banked
 11334   010E40  6FBB               	movwf	Nrf24_printDetails@dev& (0+255),b
 11335   010E42  0E05               	movlw	high _dev
 11336   010E44  6FBC               	movwf	(Nrf24_printDetails@dev+1)& (0+255),b
 11337   010E46  EC26  F084         	call	_Nrf24_printDetails	;wreg free
 11338   010E4A                     l4028:
 11339                           
 11340                           ;main.c: 49:   if (Nrf24_dataReady(&dev) == 0) break;
 11341   010E4A  0EEB               	movlw	low _dev
 11342   010E4C  0105               	movlb	5	; () banked
 11343   010E4E  6F6D               	movwf	Nrf24_dataReady@dev& (0+255),b
 11344   010E50  0E05               	movlw	high _dev
 11345   010E52  6F6E               	movwf	(Nrf24_dataReady@dev+1)& (0+255),b
 11346   010E54  ECE0  F093         	call	_Nrf24_dataReady	;wreg free
 11347   010E58  0900               	iorlw	0
 11348   010E5A  A4D8               	btfss	status,2,c
 11349   010E5C  EF32  F087         	goto	u2881
 11350   010E60  EF34  F087         	goto	u2880
 11351   010E64                     u2881:
 11352   010E64  EF36  F087         	goto	l4032
 11353   010E68                     u2880:
 11354   010E68  EF43  F087         	goto	l516
 11355   010E6C                     l4032:
 11356                           
 11357                           ;main.c: 50:   Nrf24_getData(&dev, buf);
 11358   010E6C  0EEB               	movlw	low _dev
 11359   010E6E  0105               	movlb	5	; () banked
 11360   010E70  6F66               	movwf	Nrf24_getData@dev& (0+255),b
 11361   010E72  0E05               	movlw	high _dev
 11362   010E74  6F67               	movwf	(Nrf24_getData@dev+1)& (0+255),b
 11363   010E76  0EC4               	movlw	low init_nrf@buf
 11364   010E78  6F68               	movwf	Nrf24_getData@data& (0+255),b
 11365   010E7A  0E05               	movlw	high init_nrf@buf
 11366   010E7C  6F69               	movwf	(Nrf24_getData@data+1)& (0+255),b
 11367   010E7E  ECB9  F092         	call	_Nrf24_getData	;wreg free
 11368   010E82  EF25  F087         	goto	l4028
 11369   010E86                     l516:
 11370   010E86  0012               	return		;funcret
 11371   010E88                     __end_of_init_nrf:
 11372                           	callstack 0
 11373                           
 11374 ;; *************** function _Nrf24_setTADDR *****************
 11375 ;; Defined at:
 11376 ;;		line 115 in file "mirf.c"
 11377 ;; Parameters:    Size  Location     Type
 11378 ;;  dev             2   10[BANK5 ] PTR struct .
 11379 ;;		 -> dev(3), 
 11380 ;;  adr             2   12[BANK5 ] PTR unsigned char 
 11381 ;;		 -> STR_2(6), 
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;  i               2   24[BANK5 ] int 
 11384 ;;  buffer          5   17[BANK5 ] unsigned char [5]
 11385 ;;  ret             2   22[BANK5 ] int 
 11386 ;; Return value:  Size  Location     Type
 11387 ;;                  2   10[BANK5 ] int 
 11388 ;; Registers used:
 11389 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11390 ;; Tracked objects:
 11391 ;;		On entry : 0/0
 11392 ;;		On exit  : 0/0
 11393 ;;		Unchanged: 0/0
 11394 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11395 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11396 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11397 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11398 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11399 ;;Total ram usage:       16 bytes
 11400 ;; Hardware stack levels used: 1
 11401 ;; Hardware stack levels required when called: 10
 11402 ;; This function calls:
 11403 ;;		_Nrf24_readRegister
 11404 ;;		_Nrf24_writeRegister
 11405 ;; This function is called by:
 11406 ;;		_init_nrf
 11407 ;; This function uses a non-reentrant model
 11408 ;;
 11409                           
 11410                           	psect	text6
 11411   011AA0                     __ptext6:
 11412                           	callstack 0
 11413   011AA0                     _Nrf24_setTADDR:
 11414                           	callstack 115
 11415   011AA0                     
 11416                           ;mirf.c: 115: int Nrf24_setTADDR(NRF24_t * dev, uint8_t * adr);mirf.c: 116: {;mirf.c: 11
      +                          7:  int ret = 0;
 11417   011AA0  0E00               	movlw	0
 11418   011AA2  0105               	movlb	5	; () banked
 11419   011AA4  6F77               	movwf	(Nrf24_setTADDR@ret+1)& (0+255),b
 11420   011AA6  0E00               	movlw	0
 11421   011AA8  6F76               	movwf	Nrf24_setTADDR@ret& (0+255),b
 11422   011AAA                     
 11423                           ; BSR set to: 5
 11424                           ;mirf.c: 118:  Nrf24_writeRegister(0x0A, adr, 5);
 11425   011AAA  C56C  F566         	movff	Nrf24_setTADDR@adr,Nrf24_writeRegister@value
 11426   011AAE  C56D  F567         	movff	Nrf24_setTADDR@adr+1,Nrf24_writeRegister@value+1
 11427   011AB2  0E05               	movlw	5
 11428   011AB4  6F68               	movwf	Nrf24_writeRegister@len& (0+255),b
 11429   011AB6  0E0A               	movlw	10
 11430   011AB8  EC83  F092         	call	_Nrf24_writeRegister
 11431   011ABC                     
 11432                           ;mirf.c: 119:  Nrf24_writeRegister(0x10, adr, 5);
 11433   011ABC  C56C  F566         	movff	Nrf24_setTADDR@adr,Nrf24_writeRegister@value
 11434   011AC0  C56D  F567         	movff	Nrf24_setTADDR@adr+1,Nrf24_writeRegister@value+1
 11435   011AC4  0E05               	movlw	5
 11436   011AC6  0105               	movlb	5	; () banked
 11437   011AC8  6F68               	movwf	Nrf24_writeRegister@len& (0+255),b
 11438   011ACA  0E10               	movlw	16
 11439   011ACC  EC83  F092         	call	_Nrf24_writeRegister
 11440   011AD0                     
 11441                           ;mirf.c: 120:  uint8_t buffer[5];;mirf.c: 121:  Nrf24_readRegister(0x0A, buffer, sizeof(
      +                          buffer));
 11442   011AD0  0E71               	movlw	low Nrf24_setTADDR@buffer
 11443   011AD2  0105               	movlb	5	; () banked
 11444   011AD4  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 11445   011AD6  0E05               	movlw	high Nrf24_setTADDR@buffer
 11446   011AD8  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 11447   011ADA  0E05               	movlw	5
 11448   011ADC  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 11449   011ADE  0E0A               	movlw	10
 11450   011AE0  ECEF  F092         	call	_Nrf24_readRegister
 11451   011AE4                     
 11452                           ;mirf.c: 122:  for (int i=0;i<5;i++) {
 11453   011AE4  0E00               	movlw	0
 11454   011AE6  0105               	movlb	5	; () banked
 11455   011AE8  6F79               	movwf	(Nrf24_setTADDR@i+1)& (0+255),b
 11456   011AEA  0E00               	movlw	0
 11457   011AEC  6F78               	movwf	Nrf24_setTADDR@i& (0+255),b
 11458   011AEE                     l3876:
 11459                           
 11460                           ; BSR set to: 5
 11461                           ;mirf.c: 123:   if (adr[i] != buffer[i]) ret = -1;
 11462   011AEE  0E71               	movlw	low Nrf24_setTADDR@buffer
 11463   011AF0  2578               	addwf	Nrf24_setTADDR@i& (0+255),w,b
 11464   011AF2  6ED9               	movwf	fsr2l,c
 11465   011AF4  0E05               	movlw	high Nrf24_setTADDR@buffer
 11466   011AF6  2179               	addwfc	(Nrf24_setTADDR@i+1)& (0+255),w,b
 11467   011AF8  6EDA               	movwf	fsr2h,c
 11468   011AFA  5178               	movf	Nrf24_setTADDR@i& (0+255),w,b
 11469   011AFC  256C               	addwf	Nrf24_setTADDR@adr& (0+255),w,b
 11470   011AFE  6F6F               	movwf	(??_Nrf24_setTADDR+1)& (0+255),b
 11471   011B00  5179               	movf	(Nrf24_setTADDR@i+1)& (0+255),w,b
 11472   011B02  216D               	addwfc	(Nrf24_setTADDR@adr+1)& (0+255),w,b
 11473   011B04  6F70               	movwf	(??_Nrf24_setTADDR+2)& (0+255),b
 11474   011B06  C56F  F4F6         	movff	??_Nrf24_setTADDR+1,tblptrl
 11475   011B0A  C570  F4F7         	movff	??_Nrf24_setTADDR+2,tblptrh
 11476   011B0E                     	if	0	;tblptru may be non-zero
 11477   011B0E                     	endif
 11478   011B0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11479   011B0E  0E00               	movlw	low (__mediumconst shr (0+16))
 11480   011B10  6EF8               	movwf	tblptru,c
 11481   011B12                     	endif
 11482   011B12  50DE               	movf	postinc2,w,c
 11483   011B14  0009               	tblrd		*+
 11484   011B16  18F5               	xorwf	tablat,w,c
 11485   011B18  B4D8               	btfsc	status,2,c
 11486   011B1A  EF91  F08D         	goto	u2771
 11487   011B1E  EF93  F08D         	goto	u2770
 11488   011B22                     u2771:
 11489   011B22  EF95  F08D         	goto	l3880
 11490   011B26                     u2770:
 11491   011B26                     
 11492                           ; BSR set to: 5
 11493   011B26  6976               	setf	Nrf24_setTADDR@ret& (0+255),b
 11494   011B28  6977               	setf	(Nrf24_setTADDR@ret+1)& (0+255),b
 11495   011B2A                     l3880:
 11496                           
 11497                           ; BSR set to: 5
 11498                           ;mirf.c: 124:  }
 11499   011B2A  4B78               	infsnz	Nrf24_setTADDR@i& (0+255),f,b
 11500   011B2C  2B79               	incf	(Nrf24_setTADDR@i+1)& (0+255),f,b
 11501   011B2E                     
 11502                           ; BSR set to: 5
 11503   011B2E  BF79               	btfsc	(Nrf24_setTADDR@i+1)& (0+255),7,b
 11504   011B30  EFA3  F08D         	goto	u2781
 11505   011B34  5179               	movf	(Nrf24_setTADDR@i+1)& (0+255),w,b
 11506   011B36  E109               	bnz	u2780
 11507   011B38  0E05               	movlw	5
 11508   011B3A  5D78               	subwf	Nrf24_setTADDR@i& (0+255),w,b
 11509   011B3C  A0D8               	btfss	status,0,c
 11510   011B3E  EFA3  F08D         	goto	u2781
 11511   011B42  EFA5  F08D         	goto	u2780
 11512   011B46                     u2781:
 11513   011B46  EF77  F08D         	goto	l3876
 11514   011B4A                     u2780:
 11515   011B4A                     
 11516                           ; BSR set to: 5
 11517                           ;mirf.c: 125:  return ret;
 11518   011B4A  C576  F56A         	movff	Nrf24_setTADDR@ret,?_Nrf24_setTADDR
 11519   011B4E  C577  F56B         	movff	Nrf24_setTADDR@ret+1,?_Nrf24_setTADDR+1
 11520   011B52                     
 11521                           ; BSR set to: 5
 11522   011B52  0012               	return		;funcret
 11523   011B54                     __end_of_Nrf24_setTADDR:
 11524                           	callstack 0
 11525                           
 11526 ;; *************** function _Nrf24_setRetransmitDelay *****************
 11527 ;; Defined at:
 11528 ;;		line 364 in file "mirf.c"
 11529 ;; Parameters:    Size  Location     Type
 11530 ;;  dev             2   10[BANK5 ] PTR struct .
 11531 ;;		 -> dev(3), 
 11532 ;;  val             1   12[BANK5 ] unsigned char 
 11533 ;; Auto vars:     Size  Location     Type
 11534 ;;  value           1   13[BANK5 ] unsigned char 
 11535 ;; Return value:  Size  Location     Type
 11536 ;;                  1    wreg      void 
 11537 ;; Registers used:
 11538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11539 ;; Tracked objects:
 11540 ;;		On entry : 0/0
 11541 ;;		On exit  : 0/0
 11542 ;;		Unchanged: 0/0
 11543 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11544 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11547 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11548 ;;Total ram usage:        4 bytes
 11549 ;; Hardware stack levels used: 1
 11550 ;; Hardware stack levels required when called: 10
 11551 ;; This function calls:
 11552 ;;		_Nrf24_configRegister
 11553 ;;		_Nrf24_readRegister
 11554 ;; This function is called by:
 11555 ;;		_init_nrf
 11556 ;; This function uses a non-reentrant model
 11557 ;;
 11558                           
 11559                           	psect	text7
 11560   0126DE                     __ptext7:
 11561                           	callstack 0
 11562   0126DE                     _Nrf24_setRetransmitDelay:
 11563                           	callstack 115
 11564   0126DE                     
 11565                           ;mirf.c: 364: void Nrf24_setRetransmitDelay(NRF24_t * dev, uint8_t val);mirf.c: 365: {;m
      +                          irf.c: 366:  uint8_t value;;mirf.c: 367:  Nrf24_readRegister(0x04, &value, 1);
 11566   0126DE  0E6D               	movlw	low Nrf24_setRetransmitDelay@value
 11567   0126E0  0105               	movlb	5	; () banked
 11568   0126E2  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 11569   0126E4  0E05               	movlw	high Nrf24_setRetransmitDelay@value
 11570   0126E6  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 11571   0126E8  0E01               	movlw	1
 11572   0126EA  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 11573   0126EC  0E04               	movlw	4
 11574   0126EE  ECEF  F092         	call	_Nrf24_readRegister
 11575   0126F2                     
 11576                           ;mirf.c: 368:  value = value & 0x0F;
 11577   0126F2  0105               	movlb	5	; () banked
 11578   0126F4  516D               	movf	Nrf24_setRetransmitDelay@value& (0+255),w,b
 11579   0126F6  0B0F               	andlw	15
 11580   0126F8  6F6D               	movwf	Nrf24_setRetransmitDelay@value& (0+255),b
 11581   0126FA                     
 11582                           ; BSR set to: 5
 11583                           ;mirf.c: 369:  value = value | (val << 4);
 11584   0126FA  396C               	swapf	Nrf24_setRetransmitDelay@val& (0+255),w,b
 11585   0126FC  0BF0               	andlw	240
 11586   0126FE  116D               	iorwf	Nrf24_setRetransmitDelay@value& (0+255),w,b
 11587   012700  6F6D               	movwf	Nrf24_setRetransmitDelay@value& (0+255),b
 11588   012702                     
 11589                           ; BSR set to: 5
 11590                           ;mirf.c: 370:  Nrf24_configRegister(0x04, value);
 11591   012702  C56D  F562         	movff	Nrf24_setRetransmitDelay@value,Nrf24_configRegister@value
 11592   012706  0E04               	movlw	4
 11593   012708  EC6E  F094         	call	_Nrf24_configRegister
 11594   01270C  0012               	return		;funcret
 11595   01270E                     __end_of_Nrf24_setRetransmitDelay:
 11596                           	callstack 0
 11597                           
 11598 ;; *************** function _Nrf24_setRADDR *****************
 11599 ;; Defined at:
 11600 ;;		line 102 in file "mirf.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;  dev             2   10[BANK5 ] PTR struct .
 11603 ;;		 -> dev(3), 
 11604 ;;  adr             2   12[BANK5 ] PTR unsigned char 
 11605 ;;		 -> STR_1(6), 
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;  i               2   24[BANK5 ] int 
 11608 ;;  buffer          5   17[BANK5 ] unsigned char [5]
 11609 ;;  ret             2   22[BANK5 ] int 
 11610 ;; Return value:  Size  Location     Type
 11611 ;;                  2   10[BANK5 ] int 
 11612 ;; Registers used:
 11613 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11614 ;; Tracked objects:
 11615 ;;		On entry : 0/0
 11616 ;;		On exit  : 0/0
 11617 ;;		Unchanged: 0/0
 11618 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11619 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11620 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11621 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11622 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11623 ;;Total ram usage:       16 bytes
 11624 ;; Hardware stack levels used: 1
 11625 ;; Hardware stack levels required when called: 10
 11626 ;; This function calls:
 11627 ;;		_Nrf24_readRegister
 11628 ;;		_Nrf24_writeRegister
 11629 ;; This function is called by:
 11630 ;;		_init_nrf
 11631 ;; This function uses a non-reentrant model
 11632 ;;
 11633                           
 11634                           	psect	text8
 11635   011D54                     __ptext8:
 11636                           	callstack 0
 11637   011D54                     _Nrf24_setRADDR:
 11638                           	callstack 115
 11639   011D54                     
 11640                           ;mirf.c: 102: int Nrf24_setRADDR(NRF24_t * dev, uint8_t * adr);mirf.c: 103: {;mirf.c: 10
      +                          4:  int ret = 0;
 11641   011D54  0E00               	movlw	0
 11642   011D56  0105               	movlb	5	; () banked
 11643   011D58  6F77               	movwf	(Nrf24_setRADDR@ret+1)& (0+255),b
 11644   011D5A  0E00               	movlw	0
 11645   011D5C  6F76               	movwf	Nrf24_setRADDR@ret& (0+255),b
 11646   011D5E                     
 11647                           ; BSR set to: 5
 11648                           ;mirf.c: 105:  Nrf24_writeRegister(0x0B, adr, 5);
 11649   011D5E  C56C  F566         	movff	Nrf24_setRADDR@adr,Nrf24_writeRegister@value
 11650   011D62  C56D  F567         	movff	Nrf24_setRADDR@adr+1,Nrf24_writeRegister@value+1
 11651   011D66  0E05               	movlw	5
 11652   011D68  6F68               	movwf	Nrf24_writeRegister@len& (0+255),b
 11653   011D6A  0E0B               	movlw	11
 11654   011D6C  EC83  F092         	call	_Nrf24_writeRegister
 11655   011D70                     
 11656                           ;mirf.c: 106:  uint8_t buffer[5];;mirf.c: 107:  Nrf24_readRegister(0x0B, buffer, sizeof(
      +                          buffer));
 11657   011D70  0E71               	movlw	low Nrf24_setRADDR@buffer
 11658   011D72  0105               	movlb	5	; () banked
 11659   011D74  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 11660   011D76  0E05               	movlw	high Nrf24_setRADDR@buffer
 11661   011D78  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 11662   011D7A  0E05               	movlw	5
 11663   011D7C  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 11664   011D7E  0E0B               	movlw	11
 11665   011D80  ECEF  F092         	call	_Nrf24_readRegister
 11666   011D84                     
 11667                           ;mirf.c: 108:  for (int i=0;i<5;i++) {
 11668   011D84  0E00               	movlw	0
 11669   011D86  0105               	movlb	5	; () banked
 11670   011D88  6F79               	movwf	(Nrf24_setRADDR@i+1)& (0+255),b
 11671   011D8A  0E00               	movlw	0
 11672   011D8C  6F78               	movwf	Nrf24_setRADDR@i& (0+255),b
 11673   011D8E                     l3854:
 11674                           
 11675                           ; BSR set to: 5
 11676                           ;mirf.c: 109:   if (adr[i] != buffer[i]) ret = -1;
 11677   011D8E  0E71               	movlw	low Nrf24_setRADDR@buffer
 11678   011D90  2578               	addwf	Nrf24_setRADDR@i& (0+255),w,b
 11679   011D92  6ED9               	movwf	fsr2l,c
 11680   011D94  0E05               	movlw	high Nrf24_setRADDR@buffer
 11681   011D96  2179               	addwfc	(Nrf24_setRADDR@i+1)& (0+255),w,b
 11682   011D98  6EDA               	movwf	fsr2h,c
 11683   011D9A  5178               	movf	Nrf24_setRADDR@i& (0+255),w,b
 11684   011D9C  256C               	addwf	Nrf24_setRADDR@adr& (0+255),w,b
 11685   011D9E  6F6F               	movwf	(??_Nrf24_setRADDR+1)& (0+255),b
 11686   011DA0  5179               	movf	(Nrf24_setRADDR@i+1)& (0+255),w,b
 11687   011DA2  216D               	addwfc	(Nrf24_setRADDR@adr+1)& (0+255),w,b
 11688   011DA4  6F70               	movwf	(??_Nrf24_setRADDR+2)& (0+255),b
 11689   011DA6  C56F  F4F6         	movff	??_Nrf24_setRADDR+1,tblptrl
 11690   011DAA  C570  F4F7         	movff	??_Nrf24_setRADDR+2,tblptrh
 11691   011DAE                     	if	0	;tblptru may be non-zero
 11692   011DAE                     	endif
 11693   011DAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11694   011DAE  0E00               	movlw	low (__mediumconst shr (0+16))
 11695   011DB0  6EF8               	movwf	tblptru,c
 11696   011DB2                     	endif
 11697   011DB2  50DE               	movf	postinc2,w,c
 11698   011DB4  0009               	tblrd		*+
 11699   011DB6  18F5               	xorwf	tablat,w,c
 11700   011DB8  B4D8               	btfsc	status,2,c
 11701   011DBA  EFE1  F08E         	goto	u2751
 11702   011DBE  EFE3  F08E         	goto	u2750
 11703   011DC2                     u2751:
 11704   011DC2  EFE5  F08E         	goto	l3858
 11705   011DC6                     u2750:
 11706   011DC6                     
 11707                           ; BSR set to: 5
 11708   011DC6  6976               	setf	Nrf24_setRADDR@ret& (0+255),b
 11709   011DC8  6977               	setf	(Nrf24_setRADDR@ret+1)& (0+255),b
 11710   011DCA                     l3858:
 11711                           
 11712                           ; BSR set to: 5
 11713                           ;mirf.c: 110:  }
 11714   011DCA  4B78               	infsnz	Nrf24_setRADDR@i& (0+255),f,b
 11715   011DCC  2B79               	incf	(Nrf24_setRADDR@i+1)& (0+255),f,b
 11716   011DCE                     
 11717                           ; BSR set to: 5
 11718   011DCE  BF79               	btfsc	(Nrf24_setRADDR@i+1)& (0+255),7,b
 11719   011DD0  EFF3  F08E         	goto	u2761
 11720   011DD4  5179               	movf	(Nrf24_setRADDR@i+1)& (0+255),w,b
 11721   011DD6  E109               	bnz	u2760
 11722   011DD8  0E05               	movlw	5
 11723   011DDA  5D78               	subwf	Nrf24_setRADDR@i& (0+255),w,b
 11724   011DDC  A0D8               	btfss	status,0,c
 11725   011DDE  EFF3  F08E         	goto	u2761
 11726   011DE2  EFF5  F08E         	goto	u2760
 11727   011DE6                     u2761:
 11728   011DE6  EFC7  F08E         	goto	l3854
 11729   011DEA                     u2760:
 11730   011DEA                     
 11731                           ; BSR set to: 5
 11732                           ;mirf.c: 111:  return ret;
 11733   011DEA  C576  F56A         	movff	Nrf24_setRADDR@ret,?_Nrf24_setRADDR
 11734   011DEE  C577  F56B         	movff	Nrf24_setRADDR@ret+1,?_Nrf24_setRADDR+1
 11735   011DF2                     
 11736                           ; BSR set to: 5
 11737   011DF2  0012               	return		;funcret
 11738   011DF4                     __end_of_Nrf24_setRADDR:
 11739                           	callstack 0
 11740                           
 11741 ;; *************** function _Nrf24_writeRegister *****************
 11742 ;; Defined at:
 11743 ;;		line 218 in file "mirf.c"
 11744 ;; Parameters:    Size  Location     Type
 11745 ;;  reg             1    wreg     unsigned char 
 11746 ;;  value           2    6[BANK5 ] PTR unsigned char 
 11747 ;;		 -> STR_2(6), STR_1(6), 
 11748 ;;  len             1    8[BANK5 ] unsigned char 
 11749 ;; Auto vars:     Size  Location     Type
 11750 ;;  reg             1    9[BANK5 ] unsigned char 
 11751 ;; Return value:  Size  Location     Type
 11752 ;;                  1    wreg      void 
 11753 ;; Registers used:
 11754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11755 ;; Tracked objects:
 11756 ;;		On entry : 0/0
 11757 ;;		On exit  : 0/0
 11758 ;;		Unchanged: 0/0
 11759 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11760 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11763 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11764 ;;Total ram usage:        4 bytes
 11765 ;; Hardware stack levels used: 1
 11766 ;; Hardware stack levels required when called: 9
 11767 ;; This function calls:
 11768 ;;		_SPI1_ByteExchange
 11769 ;;		_SPI_write_buff
 11770 ;; This function is called by:
 11771 ;;		_Nrf24_setRADDR
 11772 ;;		_Nrf24_setTADDR
 11773 ;; This function uses a non-reentrant model
 11774 ;;
 11775                           
 11776                           	psect	text9
 11777   012506                     __ptext9:
 11778                           	callstack 0
 11779   012506                     _Nrf24_writeRegister:
 11780                           	callstack 115
 11781                           
 11782                           ; BSR set to: 5
 11783                           ;incstack = 0
 11784                           ;Nrf24_writeRegister@reg stored from wreg
 11785   012506  0105               	movlb	5	; () banked
 11786   012508  6F69               	movwf	Nrf24_writeRegister@reg& (0+255),b
 11787   01250A                     
 11788                           ;mirf.c: 218: void Nrf24_writeRegister(uint8_t reg, uint8_t * value, uint8_t len);mirf.c
      +                          : 219: {;mirf.c: 220:     if(len) {
 11789   01250A  0105               	movlb	5	; () banked
 11790   01250C  5168               	movf	Nrf24_writeRegister@len& (0+255),w,b
 11791   01250E  B4D8               	btfsc	status,2,c
 11792   012510  EF8C  F092         	goto	u2571
 11793   012514  EF8E  F092         	goto	u2570
 11794   012518                     u2571:
 11795   012518  EF9D  F092         	goto	l732
 11796   01251C                     u2570:
 11797   01251C                     
 11798                           ; BSR set to: 5
 11799   01251C  9EC0               	bcf	192,7,c	;volatile
 11800   01251E                     
 11801                           ; BSR set to: 5
 11802                           ;mirf.c: 222:         SPI1_ByteExchange(0x20 | (0x1F & reg));
 11803   01251E  5169               	movf	Nrf24_writeRegister@reg& (0+255),w,b
 11804   012520  0B1F               	andlw	31
 11805   012522  0920               	iorlw	32
 11806   012524  EC4A  F092         	call	_SPI1_ByteExchange
 11807   012528                     
 11808                           ;mirf.c: 223:         SPI_write_buff(value, len);
 11809   012528  C566  F562         	movff	Nrf24_writeRegister@value,SPI_write_buff@buffer
 11810   01252C  C567  F563         	movff	Nrf24_writeRegister@value+1,SPI_write_buff@buffer+1
 11811   012530  C568  F564         	movff	Nrf24_writeRegister@len,SPI_write_buff@bytes
 11812   012534  EC76  F091         	call	_SPI_write_buff	;wreg free
 11813   012538  8EC0               	bsf	192,7,c	;volatile
 11814   01253A                     l732:
 11815   01253A  0012               	return		;funcret
 11816   01253C                     __end_of_Nrf24_writeRegister:
 11817                           	callstack 0
 11818                           
 11819 ;; *************** function _Nrf24_printDetails *****************
 11820 ;; Defined at:
 11821 ;;		line 374 in file "mirf.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;  dev             2   91[BANK5 ] PTR struct .
 11824 ;;		 -> dev(3), 
 11825 ;; Auto vars:     Size  Location     Type
 11826 ;;  delay           2   97[BANK5 ] short 
 11827 ;;  retransmit      1   99[BANK5 ] unsigned char 
 11828 ;; Return value:  Size  Location     Type
 11829 ;;                  1    wreg      void 
 11830 ;; Registers used:
 11831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11832 ;; Tracked objects:
 11833 ;;		On entry : 0/0
 11834 ;;		On exit  : 0/0
 11835 ;;		Unchanged: 0/0
 11836 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11837 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11838 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11839 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11840 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11841 ;;Total ram usage:        9 bytes
 11842 ;; Hardware stack levels used: 1
 11843 ;; Hardware stack levels required when called: 16
 11844 ;; This function calls:
 11845 ;;		_Nrf24_getCRCLength
 11846 ;;		_Nrf24_getDataRate
 11847 ;;		_Nrf24_getPALevel
 11848 ;;		_Nrf24_getRetransmitDelay
 11849 ;;		_Nrf24_getStatus
 11850 ;;		_Nrf24_print_address_register
 11851 ;;		_Nrf24_print_byte_register
 11852 ;;		_Nrf24_print_status
 11853 ;;		_printf
 11854 ;; This function is called by:
 11855 ;;		_init_nrf
 11856 ;; This function uses a non-reentrant model
 11857 ;;
 11858                           
 11859                           	psect	text10
 11860   01084C                     __ptext10:
 11861                           	callstack 0
 11862   01084C                     _Nrf24_printDetails:
 11863                           	callstack 109
 11864   01084C                     
 11865                           ;mirf.c: 374: void Nrf24_printDetails(NRF24_t * dev);mirf.c: 375: {;mirf.c: 376:  printf
      +                          ("================ NRF Configuration ================\n");
 11866   01084C  0EFD               	movlw	low STR_3
 11867   01084E  0105               	movlb	5	; () banked
 11868   010850  6F9D               	movwf	printf@fmt& (0+255),b
 11869   010852  0EFE               	movlw	high STR_3
 11870   010854  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 11871   010856  ECCC  F093         	call	_printf	;wreg free
 11872                           
 11873                           ;mirf.c: 378:  Nrf24_print_status(Nrf24_getStatus(dev));
 11874   01085A  C5BB  F56A         	movff	Nrf24_printDetails@dev,Nrf24_getStatus@dev
 11875   01085E  C5BC  F56B         	movff	Nrf24_printDetails@dev+1,Nrf24_getStatus@dev+1
 11876   010862  EC8B  F094         	call	_Nrf24_getStatus	;wreg free
 11877   010866  ECE1  F08F         	call	_Nrf24_print_status
 11878                           
 11879                           ;mirf.c: 380:  Nrf24_print_address_register(dev, "RX_ADDR_P0-1", 0x0A, 2);
 11880   01086A  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_address_register@dev
 11881   01086E  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_address_register@dev+1
 11882   010872  0E88               	movlw	low STR_4
 11883   010874  0105               	movlb	5	; () banked
 11884   010876  6FAF               	movwf	Nrf24_print_address_register@name& (0+255),b
 11885   010878  0EFF               	movlw	high STR_4
 11886   01087A  6FB0               	movwf	(Nrf24_print_address_register@name+1)& (0+255),b
 11887   01087C  0E0A               	movlw	10
 11888   01087E  6FB1               	movwf	Nrf24_print_address_register@reg& (0+255),b
 11889   010880  0E02               	movlw	2
 11890   010882  6FB2               	movwf	Nrf24_print_address_register@qty& (0+255),b
 11891   010884  EC02  F08E         	call	_Nrf24_print_address_register	;wreg free
 11892                           
 11893                           ;mirf.c: 381:  Nrf24_print_byte_register(dev, "RX_ADDR_P2-5", 0x0C, 4);
 11894   010888  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 11895   01088C  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 11896   010890  0E95               	movlw	low STR_5
 11897   010892  0105               	movlb	5	; () banked
 11898   010894  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 11899   010896  0EFF               	movlw	high STR_5
 11900   010898  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 11901   01089A  0E0C               	movlw	12
 11902   01089C  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 11903   01089E  0E04               	movlw	4
 11904   0108A0  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 11905   0108A2  EC44  F091         	call	_Nrf24_print_byte_register	;wreg free
 11906                           
 11907                           ;mirf.c: 382:  Nrf24_print_address_register(dev, "TX_ADDR\t", 0x10, 1);
 11908   0108A6  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_address_register@dev
 11909   0108AA  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_address_register@dev+1
 11910   0108AE  0EB7               	movlw	low STR_6
 11911   0108B0  0105               	movlb	5	; () banked
 11912   0108B2  6FAF               	movwf	Nrf24_print_address_register@name& (0+255),b
 11913   0108B4  0EFF               	movlw	high STR_6
 11914   0108B6  6FB0               	movwf	(Nrf24_print_address_register@name+1)& (0+255),b
 11915   0108B8  0E10               	movlw	16
 11916   0108BA  6FB1               	movwf	Nrf24_print_address_register@reg& (0+255),b
 11917   0108BC  0E01               	movlw	1
 11918   0108BE  6FB2               	movwf	Nrf24_print_address_register@qty& (0+255),b
 11919   0108C0  EC02  F08E         	call	_Nrf24_print_address_register	;wreg free
 11920                           
 11921                           ;mirf.c: 384:  Nrf24_print_byte_register(dev, "RX_PW_P0-6", 0x11, 6);
 11922   0108C4  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 11923   0108C8  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 11924   0108CC  0EA2               	movlw	low STR_7
 11925   0108CE  0105               	movlb	5	; () banked
 11926   0108D0  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 11927   0108D2  0EFF               	movlw	high STR_7
 11928   0108D4  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 11929   0108D6  0E11               	movlw	17
 11930   0108D8  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 11931   0108DA  0E06               	movlw	6
 11932   0108DC  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 11933   0108DE  EC44  F091         	call	_Nrf24_print_byte_register	;wreg free
 11934                           
 11935                           ;mirf.c: 385:  Nrf24_print_byte_register(dev, "EN_AA\t", 0x01, 1);
 11936   0108E2  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 11937   0108E6  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 11938   0108EA  0EE0               	movlw	low STR_8
 11939   0108EC  0105               	movlb	5	; () banked
 11940   0108EE  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 11941   0108F0  0EFF               	movlw	high STR_8
 11942   0108F2  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 11943   0108F4  0E01               	movlw	1
 11944   0108F6  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 11945   0108F8  0E01               	movlw	1
 11946   0108FA  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 11947   0108FC  EC44  F091         	call	_Nrf24_print_byte_register	;wreg free
 11948                           
 11949                           ;mirf.c: 386:  Nrf24_print_byte_register(dev, "EN_RXADDR", 0x02, 1);
 11950   010900  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 11951   010904  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 11952   010908  0EAD               	movlw	low STR_9
 11953   01090A  0105               	movlb	5	; () banked
 11954   01090C  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 11955   01090E  0EFF               	movlw	high STR_9
 11956   010910  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 11957   010912  0E02               	movlw	2
 11958   010914  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 11959   010916  0E01               	movlw	1
 11960   010918  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 11961   01091A  EC44  F091         	call	_Nrf24_print_byte_register	;wreg free
 11962                           
 11963                           ;mirf.c: 387:  Nrf24_print_byte_register(dev, "RF_CH\t", 0x05, 1);
 11964   01091E  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 11965   010922  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 11966   010926  0EE7               	movlw	low STR_10
 11967   010928  0105               	movlb	5	; () banked
 11968   01092A  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 11969   01092C  0EFF               	movlw	high STR_10
 11970   01092E  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 11971   010930  0E05               	movlw	5
 11972   010932  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 11973   010934  0E01               	movlw	1
 11974   010936  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 11975   010938  EC44  F091         	call	_Nrf24_print_byte_register	;wreg free
 11976                           
 11977                           ;mirf.c: 388:  Nrf24_print_byte_register(dev, "RF_SETUP", 0x06, 1);
 11978   01093C  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 11979   010940  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 11980   010944  0EC0               	movlw	low STR_11
 11981   010946  0105               	movlb	5	; () banked
 11982   010948  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 11983   01094A  0EFF               	movlw	high STR_11
 11984   01094C  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 11985   01094E  0E06               	movlw	6
 11986   010950  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 11987   010952  0E01               	movlw	1
 11988   010954  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 11989   010956  EC44  F091         	call	_Nrf24_print_byte_register	;wreg free
 11990                           
 11991                           ;mirf.c: 389:  Nrf24_print_byte_register(dev, "CONFIG\t", 0x00, 1);
 11992   01095A  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 11993   01095E  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 11994   010962  0EC9               	movlw	low STR_12
 11995   010964  0105               	movlb	5	; () banked
 11996   010966  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 11997   010968  0EFF               	movlw	high STR_12
 11998   01096A  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 11999   01096C  0E00               	movlw	0
 12000   01096E  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 12001   010970  0E01               	movlw	1
 12002   010972  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 12003   010974  EC44  F091         	call	_Nrf24_print_byte_register	;wreg free
 12004                           
 12005                           ;mirf.c: 390:  Nrf24_print_byte_register(dev, "DYNPD/FEATURE", 0x1C, 2);
 12006   010978  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 12007   01097C  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 12008   010980  0E7A               	movlw	low STR_13
 12009   010982  0105               	movlb	5	; () banked
 12010   010984  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 12011   010986  0EFF               	movlw	high STR_13
 12012   010988  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 12013   01098A  0E1C               	movlw	28
 12014   01098C  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 12015   01098E  0E02               	movlw	2
 12016   010990  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 12017   010992  EC44  F091         	call	_Nrf24_print_byte_register	;wreg free
 12018                           
 12019                           ;mirf.c: 391:  printf("Data Rate\t = %s\n",rf24_datarates[Nrf24_getDataRate(dev)]);
 12020   010996  0E59               	movlw	low STR_14
 12021   010998  0105               	movlb	5	; () banked
 12022   01099A  6F9D               	movwf	printf@fmt& (0+255),b
 12023   01099C  0EFF               	movlw	high STR_14
 12024   01099E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12025   0109A0  C5BB  F56A         	movff	Nrf24_printDetails@dev,Nrf24_getDataRate@dev
 12026   0109A4  C5BC  F56B         	movff	Nrf24_printDetails@dev+1,Nrf24_getDataRate@dev+1
 12027   0109A8  ECFB  F091         	call	_Nrf24_getDataRate	;wreg free
 12028   0109AC  0105               	movlb	5	; () banked
 12029   0109AE  6FBD               	movwf	??_Nrf24_printDetails& (0+255),b
 12030   0109B0  51BD               	movf	??_Nrf24_printDetails& (0+255),w,b
 12031   0109B2  0D08               	mullw	8
 12032   0109B4  0E37               	movlw	low _rf24_datarates
 12033   0109B6  24F3               	addwf	243,w,c
 12034   0109B8  6F9F               	movwf	(?_printf+2)& (0+255),b
 12035   0109BA  0E05               	movlw	high _rf24_datarates
 12036   0109BC  20F4               	addwfc	prodh,w,c
 12037   0109BE  6FA0               	movwf	(?_printf+3)& (0+255),b
 12038   0109C0  ECCC  F093         	call	_printf	;wreg free
 12039                           
 12040                           ;mirf.c: 392:  printf("CRC Length\t = %s\n", rf24_crclength[Nrf24_getCRCLength(dev)]);
 12041   0109C4  0E47               	movlw	low STR_15
 12042   0109C6  0105               	movlb	5	; () banked
 12043   0109C8  6F9D               	movwf	printf@fmt& (0+255),b
 12044   0109CA  0EFF               	movlw	high STR_15
 12045   0109CC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12046   0109CE  C5BB  F56A         	movff	Nrf24_printDetails@dev,Nrf24_getCRCLength@dev
 12047   0109D2  C5BC  F56B         	movff	Nrf24_printDetails@dev+1,Nrf24_getCRCLength@dev+1
 12048   0109D6  ECD6  F090         	call	_Nrf24_getCRCLength	;wreg free
 12049   0109DA  0105               	movlb	5	; () banked
 12050   0109DC  6FBD               	movwf	??_Nrf24_printDetails& (0+255),b
 12051   0109DE  51BD               	movf	??_Nrf24_printDetails& (0+255),w,b
 12052   0109E0  0D0A               	mullw	10
 12053   0109E2  0E99               	movlw	low _rf24_crclength
 12054   0109E4  24F3               	addwf	243,w,c
 12055   0109E6  6F9F               	movwf	(?_printf+2)& (0+255),b
 12056   0109E8  0EFE               	movlw	high _rf24_crclength
 12057   0109EA  20F4               	addwfc	prodh,w,c
 12058   0109EC  6FA0               	movwf	(?_printf+3)& (0+255),b
 12059   0109EE  ECCC  F093         	call	_printf	;wreg free
 12060                           
 12061                           ;mirf.c: 393:  printf("PA Power\t = %s\n", rf24_pa_dbm[Nrf24_getPALevel(dev)]);
 12062   0109F2  0E6A               	movlw	low STR_16
 12063   0109F4  0105               	movlb	5	; () banked
 12064   0109F6  6F9D               	movwf	printf@fmt& (0+255),b
 12065   0109F8  0EFF               	movlw	high STR_16
 12066   0109FA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12067   0109FC  C5BB  F56A         	movff	Nrf24_printDetails@dev,Nrf24_getPALevel@dev
 12068   010A00  C5BC  F56B         	movff	Nrf24_printDetails@dev+1,Nrf24_getPALevel@dev+1
 12069   010A04  EC2E  F094         	call	_Nrf24_getPALevel	;wreg free
 12070   010A08  0105               	movlb	5	; () banked
 12071   010A0A  6FBD               	movwf	??_Nrf24_printDetails& (0+255),b
 12072   010A0C  51BD               	movf	??_Nrf24_printDetails& (0+255),w,b
 12073   010A0E  0D08               	mullw	8
 12074   010A10  0EC8               	movlw	low _rf24_pa_dbm
 12075   010A12  24F3               	addwf	243,w,c
 12076   010A14  6F9F               	movwf	(?_printf+2)& (0+255),b
 12077   010A16  0E09               	movlw	high _rf24_pa_dbm
 12078   010A18  20F4               	addwfc	prodh,w,c
 12079   010A1A  6FA0               	movwf	(?_printf+3)& (0+255),b
 12080   010A1C  ECCC  F093         	call	_printf	;wreg free
 12081   010A20                     
 12082                           ;mirf.c: 394:  uint8_t retransmit = Nrf24_getRetransmitDelay(dev);
 12083   010A20  C5BB  F56A         	movff	Nrf24_printDetails@dev,Nrf24_getRetransmitDelay@dev
 12084   010A24  C5BC  F56B         	movff	Nrf24_printDetails@dev+1,Nrf24_getRetransmitDelay@dev+1
 12085   010A28  EC7D  F094         	call	_Nrf24_getRetransmitDelay	;wreg free
 12086   010A2C  0105               	movlb	5	; () banked
 12087   010A2E  6FC3               	movwf	Nrf24_printDetails@retransmit& (0+255),b
 12088   010A30                     
 12089                           ; BSR set to: 5
 12090                           ;mirf.c: 395:  int16_t delay = (retransmit+1)*250;
 12091   010A30  51C3               	movf	Nrf24_printDetails@retransmit& (0+255),w,b
 12092   010A32  6FBD               	movwf	??_Nrf24_printDetails& (0+255),b
 12093   010A34  6BBE               	clrf	(??_Nrf24_printDetails+1)& (0+255),b
 12094   010A36  0E01               	movlw	1
 12095   010A38  27BD               	addwf	??_Nrf24_printDetails& (0+255),f,b
 12096   010A3A  0E00               	movlw	0
 12097   010A3C  23BE               	addwfc	(??_Nrf24_printDetails+1)& (0+255),f,b
 12098   010A3E  0EFA               	movlw	250
 12099   010A40  03BD               	mulwf	??_Nrf24_printDetails& (0+255),b
 12100   010A42  C4F3 F5BF          	movff	prodl,??_Nrf24_printDetails+2
 12101   010A46  C4F4 F5C0          	movff	prodh,??_Nrf24_printDetails+3
 12102   010A4A  03BE               	mulwf	(??_Nrf24_printDetails+1)& (0+255),b
 12103   010A4C  50F3               	movf	prodl,w,c
 12104   010A4E  27C0               	addwf	(??_Nrf24_printDetails+3)& (0+255),f,b
 12105   010A50  C5BF  F5C1         	movff	??_Nrf24_printDetails+2,Nrf24_printDetails@delay
 12106   010A54  C5C0  F5C2         	movff	??_Nrf24_printDetails+3,Nrf24_printDetails@delay+1
 12107   010A58                     
 12108                           ; BSR set to: 5
 12109                           ;mirf.c: 396:  printf("Retransmit\t = %d us\n", delay);
 12110   010A58  0E32               	movlw	low STR_17
 12111   010A5A  6F9D               	movwf	printf@fmt& (0+255),b
 12112   010A5C  0EFF               	movlw	high STR_17
 12113   010A5E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12114   010A60  C5C1  F59F         	movff	Nrf24_printDetails@delay,?_printf+2
 12115   010A64  C5C2  F5A0         	movff	Nrf24_printDetails@delay+1,?_printf+3
 12116   010A68  ECCC  F093         	call	_printf	;wreg free
 12117   010A6C  0012               	return		;funcret
 12118   010A6E                     __end_of_Nrf24_printDetails:
 12119                           	callstack 0
 12120                           
 12121 ;; *************** function _Nrf24_print_status *****************
 12122 ;; Defined at:
 12123 ;;		line 401 in file "mirf.c"
 12124 ;; Parameters:    Size  Location     Type
 12125 ;;  status          1    wreg     unsigned char 
 12126 ;; Auto vars:     Size  Location     Type
 12127 ;;  status          1   78[BANK5 ] unsigned char 
 12128 ;; Return value:  Size  Location     Type
 12129 ;;                  1    wreg      void 
 12130 ;; Registers used:
 12131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12132 ;; Tracked objects:
 12133 ;;		On entry : 0/0
 12134 ;;		On exit  : 0/0
 12135 ;;		Unchanged: 0/0
 12136 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12140 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12141 ;;Total ram usage:        2 bytes
 12142 ;; Hardware stack levels used: 1
 12143 ;; Hardware stack levels required when called: 15
 12144 ;; This function calls:
 12145 ;;		_printf
 12146 ;; This function is called by:
 12147 ;;		_Nrf24_printDetails
 12148 ;; This function uses a non-reentrant model
 12149 ;;
 12150                           
 12151                           	psect	text11
 12152   011FC2                     __ptext11:
 12153                           	callstack 0
 12154   011FC2                     _Nrf24_print_status:
 12155                           	callstack 109
 12156                           
 12157                           ;incstack = 0
 12158                           ;Nrf24_print_status@status stored from wreg
 12159   011FC2  0105               	movlb	5	; () banked
 12160   011FC4  6FAE               	movwf	Nrf24_print_status@status& (0+255),b
 12161   011FC6                     
 12162                           ;mirf.c: 401: void Nrf24_print_status(uint8_t status);mirf.c: 402: {;mirf.c: 403:  print
      +                          f("STATUS\t\t = 0x%02x RX_DR=%x TX_DS=%x MAX_RT=%x RX_P_NO=%x TX_FULL=%x\r\n", status, (
      +                          status & (1<<(6))) ? 1 : 0,
 12163   011FC6  0EB7               	movlw	low STR_18
 12164   011FC8  0105               	movlb	5	; () banked
 12165   011FCA  6F9D               	movwf	printf@fmt& (0+255),b
 12166   011FCC  0EFE               	movlw	high STR_18
 12167   011FCE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12168   011FD0  C5AE  F59F         	movff	Nrf24_print_status@status,?_printf+2
 12169   011FD4  6BA0               	clrf	(?_printf+3)& (0+255),b
 12170   011FD6  BDAE               	btfsc	Nrf24_print_status@status& (0+255),6,b
 12171   011FD8  EFF0  F08F         	goto	u2581
 12172   011FDC  EFF3  F08F         	goto	u2580
 12173   011FE0                     u2581:
 12174   011FE0  0E01               	movlw	1
 12175   011FE2  EFF4  F08F         	goto	u2590
 12176   011FE6                     u2580:
 12177   011FE6  0E00               	movlw	0
 12178   011FE8                     u2590:
 12179   011FE8  6FA1               	movwf	(?_printf+4)& (0+255),b
 12180   011FEA  6BA2               	clrf	(?_printf+5)& (0+255),b
 12181   011FEC  BBAE               	btfsc	Nrf24_print_status@status& (0+255),5,b
 12182   011FEE  EFFB  F08F         	goto	u2601
 12183   011FF2  EFFE  F08F         	goto	u2600
 12184   011FF6                     u2601:
 12185   011FF6  0E01               	movlw	1
 12186   011FF8  EFFF  F08F         	goto	u2610
 12187   011FFC                     u2600:
 12188   011FFC  0E00               	movlw	0
 12189   011FFE                     u2610:
 12190   011FFE  6FA3               	movwf	(?_printf+6)& (0+255),b
 12191   012000  6BA4               	clrf	(?_printf+7)& (0+255),b
 12192   012002  B9AE               	btfsc	Nrf24_print_status@status& (0+255),4,b
 12193   012004  EF06  F090         	goto	u2621
 12194   012008  EF09  F090         	goto	u2620
 12195   01200C                     u2621:
 12196   01200C  0E01               	movlw	1
 12197   01200E  EF0A  F090         	goto	u2630
 12198   012012                     u2620:
 12199   012012  0E00               	movlw	0
 12200   012014                     u2630:
 12201   012014  6FA5               	movwf	(?_printf+8)& (0+255),b
 12202   012016  6BA6               	clrf	(?_printf+9)& (0+255),b
 12203   012018  C5AE  F5AD         	movff	Nrf24_print_status@status,??_Nrf24_print_status
 12204   01201C  90D8               	bcf	status,0,c
 12205   01201E  33AD               	rrcf	??_Nrf24_print_status& (0+255),f,b
 12206   012020  0E07               	movlw	7
 12207   012022  17AD               	andwf	??_Nrf24_print_status& (0+255),f,b
 12208   012024  51AD               	movf	??_Nrf24_print_status& (0+255),w,b
 12209   012026  6FA7               	movwf	(?_printf+10)& (0+255),b
 12210   012028  6BA8               	clrf	(?_printf+11)& (0+255),b
 12211   01202A  B1AE               	btfsc	Nrf24_print_status@status& (0+255),0,b
 12212   01202C  EF1A  F090         	goto	u2641
 12213   012030  EF1D  F090         	goto	u2640
 12214   012034                     u2641:
 12215   012034  0E01               	movlw	1
 12216   012036  EF1E  F090         	goto	u2650
 12217   01203A                     u2640:
 12218   01203A  0E00               	movlw	0
 12219   01203C                     u2650:
 12220   01203C  6FA9               	movwf	(?_printf+12)& (0+255),b
 12221   01203E  6BAA               	clrf	(?_printf+13)& (0+255),b
 12222   012040  ECCC  F093         	call	_printf	;wreg free
 12223   012044  0012               	return		;funcret
 12224   012046                     __end_of_Nrf24_print_status:
 12225                           	callstack 0
 12226                           
 12227 ;; *************** function _Nrf24_print_byte_register *****************
 12228 ;; Defined at:
 12229 ;;		line 423 in file "mirf.c"
 12230 ;; Parameters:    Size  Location     Type
 12231 ;;  dev             2   77[BANK5 ] PTR struct .
 12232 ;;		 -> dev(3), 
 12233 ;;  name            2   79[BANK5 ] PTR const unsigned char 
 12234 ;;		 -> STR_13(14), STR_12(8), STR_11(9), STR_10(7), 
 12235 ;;		 -> STR_9(10), STR_8(7), STR_7(11), STR_5(13), 
 12236 ;;  reg             1   81[BANK5 ] unsigned char 
 12237 ;;  qty             1   82[BANK5 ] unsigned char 
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;  buffer          1   83[BANK5 ] unsigned char [1]
 12240 ;; Return value:  Size  Location     Type
 12241 ;;                  1    wreg      void 
 12242 ;; Registers used:
 12243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12244 ;; Tracked objects:
 12245 ;;		On entry : 0/0
 12246 ;;		On exit  : 0/0
 12247 ;;		Unchanged: 0/0
 12248 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12249 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12250 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12252 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12253 ;;Total ram usage:        7 bytes
 12254 ;; Hardware stack levels used: 1
 12255 ;; Hardware stack levels required when called: 15
 12256 ;; This function calls:
 12257 ;;		_Nrf24_readRegister
 12258 ;;		_printf
 12259 ;; This function is called by:
 12260 ;;		_Nrf24_printDetails
 12261 ;; This function uses a non-reentrant model
 12262 ;;
 12263                           
 12264                           	psect	text12
 12265   012288                     __ptext12:
 12266                           	callstack 0
 12267   012288                     _Nrf24_print_byte_register:
 12268                           	callstack 109
 12269   012288                     
 12270                           ;mirf.c: 423: void Nrf24_print_byte_register(NRF24_t * dev, const char* name, uint8_t re
      +                          g, uint8_t qty);mirf.c: 424: {;mirf.c: 425:  printf("%s\t =", name);
 12271   012288  0EEE               	movlw	low STR_19
 12272   01228A  0105               	movlb	5	; () banked
 12273   01228C  6F9D               	movwf	printf@fmt& (0+255),b
 12274   01228E  0EFF               	movlw	high STR_19
 12275   012290  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12276   012292  C5AF  F59F         	movff	Nrf24_print_byte_register@name,?_printf+2
 12277   012296  C5B0  F5A0         	movff	Nrf24_print_byte_register@name+1,?_printf+3
 12278   01229A  ECCC  F093         	call	_printf	;wreg free
 12279                           
 12280                           ;mirf.c: 426:  while (qty--) {
 12281   01229E  EF65  F091         	goto	l3630
 12282   0122A2                     l3624:
 12283                           
 12284                           ; BSR set to: 5
 12285                           ;mirf.c: 427:   uint8_t buffer[1];;mirf.c: 428:   Nrf24_readRegister(reg++, buffer, 1);
 12286   0122A2  0EB3               	movlw	low Nrf24_print_byte_register@buffer
 12287   0122A4  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 12288   0122A6  0E05               	movlw	high Nrf24_print_byte_register@buffer
 12289   0122A8  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 12290   0122AA  0E01               	movlw	1
 12291   0122AC  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 12292   0122AE  51B1               	movf	Nrf24_print_byte_register@reg& (0+255),w,b
 12293   0122B0  ECEF  F092         	call	_Nrf24_readRegister
 12294   0122B4  0105               	movlb	5	; () banked
 12295   0122B6  2BB1               	incf	Nrf24_print_byte_register@reg& (0+255),f,b
 12296   0122B8                     
 12297                           ; BSR set to: 5
 12298                           ;mirf.c: 429:   printf(" 0x%02x", buffer[0]);
 12299   0122B8  0ED1               	movlw	low STR_24
 12300   0122BA  6F9D               	movwf	printf@fmt& (0+255),b
 12301   0122BC  0EFF               	movlw	high STR_24
 12302   0122BE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12303   0122C0  C5B3  F59F         	movff	Nrf24_print_byte_register@buffer,?_printf+2
 12304   0122C4  6BA0               	clrf	(?_printf+3)& (0+255),b
 12305   0122C6  ECCC  F093         	call	_printf	;wreg free
 12306   0122CA                     l3630:
 12307                           
 12308                           ;mirf.c: 426:  while (qty--) {
 12309   0122CA  0105               	movlb	5	; () banked
 12310   0122CC  07B2               	decf	Nrf24_print_byte_register@qty& (0+255),f,b
 12311   0122CE  29B2               	incf	Nrf24_print_byte_register@qty& (0+255),w,b
 12312   0122D0  A4D8               	btfss	status,2,c
 12313   0122D2  EF6D  F091         	goto	u2681
 12314   0122D6  EF6F  F091         	goto	u2680
 12315   0122DA                     u2681:
 12316   0122DA  EF51  F091         	goto	l3624
 12317   0122DE                     u2680:
 12318   0122DE                     
 12319                           ; BSR set to: 5
 12320                           ;mirf.c: 431:  printf("\r\n");
 12321   0122DE  0EFA               	movlw	low (STR_18+67)
 12322   0122E0  6F9D               	movwf	printf@fmt& (0+255),b
 12323   0122E2  0EFE               	movlw	high (STR_18+67)
 12324   0122E4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12325   0122E6  ECCC  F093         	call	_printf	;wreg free
 12326   0122EA  0012               	return		;funcret
 12327   0122EC                     __end_of_Nrf24_print_byte_register:
 12328                           	callstack 0
 12329                           
 12330 ;; *************** function _Nrf24_print_address_register *****************
 12331 ;; Defined at:
 12332 ;;		line 407 in file "mirf.c"
 12333 ;; Parameters:    Size  Location     Type
 12334 ;;  dev             2   77[BANK5 ] PTR struct .
 12335 ;;		 -> dev(3), 
 12336 ;;  name            2   79[BANK5 ] PTR const unsigned char 
 12337 ;;		 -> STR_6(9), STR_4(13), 
 12338 ;;  reg             1   81[BANK5 ] unsigned char 
 12339 ;;  qty             1   82[BANK5 ] unsigned char 
 12340 ;; Auto vars:     Size  Location     Type
 12341 ;;  i               2   89[BANK5 ] int 
 12342 ;;  buffer          5   84[BANK5 ] unsigned char [5]
 12343 ;; Return value:  Size  Location     Type
 12344 ;;                  1    wreg      void 
 12345 ;; Registers used:
 12346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12347 ;; Tracked objects:
 12348 ;;		On entry : 0/0
 12349 ;;		On exit  : 0/0
 12350 ;;		Unchanged: 0/0
 12351 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12352 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12353 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12354 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12355 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12356 ;;Total ram usage:       14 bytes
 12357 ;; Hardware stack levels used: 1
 12358 ;; Hardware stack levels required when called: 15
 12359 ;; This function calls:
 12360 ;;		_Nrf24_readRegister
 12361 ;;		_printf
 12362 ;; This function is called by:
 12363 ;;		_Nrf24_printDetails
 12364 ;; This function uses a non-reentrant model
 12365 ;;
 12366                           
 12367                           	psect	text13
 12368   011C04                     __ptext13:
 12369                           	callstack 0
 12370   011C04                     _Nrf24_print_address_register:
 12371                           	callstack 109
 12372   011C04                     
 12373                           ;mirf.c: 407: void Nrf24_print_address_register(NRF24_t * dev, const char* name, uint8_t
      +                           reg, uint8_t qty);mirf.c: 408: {;mirf.c: 409:  printf("%s\t =",name);
 12374   011C04  0EEE               	movlw	low STR_19
 12375   011C06  0105               	movlb	5	; () banked
 12376   011C08  6F9D               	movwf	printf@fmt& (0+255),b
 12377   011C0A  0EFF               	movlw	high STR_19
 12378   011C0C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12379   011C0E  C5AF  F59F         	movff	Nrf24_print_address_register@name,?_printf+2
 12380   011C12  C5B0  F5A0         	movff	Nrf24_print_address_register@name+1,?_printf+3
 12381   011C16  ECCC  F093         	call	_printf	;wreg free
 12382                           
 12383                           ;mirf.c: 410:  while (qty--) {
 12384   011C1A  EF47  F08E         	goto	l3618
 12385   011C1E                     l3600:
 12386                           
 12387                           ; BSR set to: 5
 12388                           ;mirf.c: 411:   uint8_t buffer[5];;mirf.c: 412:   Nrf24_readRegister(reg++, buffer, size
      +                          of(buffer));
 12389   011C1E  0EB4               	movlw	low Nrf24_print_address_register@buffer
 12390   011C20  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 12391   011C22  0E05               	movlw	high Nrf24_print_address_register@buffer
 12392   011C24  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 12393   011C26  0E05               	movlw	5
 12394   011C28  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 12395   011C2A  51B1               	movf	Nrf24_print_address_register@reg& (0+255),w,b
 12396   011C2C  ECEF  F092         	call	_Nrf24_readRegister
 12397   011C30  0105               	movlb	5	; () banked
 12398   011C32  2BB1               	incf	Nrf24_print_address_register@reg& (0+255),f,b
 12399   011C34                     
 12400                           ; BSR set to: 5
 12401                           ;mirf.c: 414:   printf(" 0x");
 12402   011C34  0EFA               	movlw	low STR_20
 12403   011C36  6F9D               	movwf	printf@fmt& (0+255),b
 12404   011C38  0EFF               	movlw	high STR_20
 12405   011C3A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12406   011C3C  ECCC  F093         	call	_printf	;wreg free
 12407   011C40                     
 12408                           ;mirf.c: 416:   for(int i=0;i<5;i++) {
 12409   011C40  0E00               	movlw	0
 12410   011C42  0105               	movlb	5	; () banked
 12411   011C44  6FBA               	movwf	(Nrf24_print_address_register@i+1)& (0+255),b
 12412   011C46  0E00               	movlw	0
 12413   011C48  6FB9               	movwf	Nrf24_print_address_register@i& (0+255),b
 12414   011C4A                     l3612:
 12415                           
 12416                           ; BSR set to: 5
 12417                           ;mirf.c: 417:    printf("%02x", buffer[i]);
 12418   011C4A  0ED4               	movlw	low (STR_24+3)
 12419   011C4C  6F9D               	movwf	printf@fmt& (0+255),b
 12420   011C4E  0EFF               	movlw	high (STR_24+3)
 12421   011C50  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12422   011C52  0EB4               	movlw	low Nrf24_print_address_register@buffer
 12423   011C54  25B9               	addwf	Nrf24_print_address_register@i& (0+255),w,b
 12424   011C56  6ED9               	movwf	fsr2l,c
 12425   011C58  0E05               	movlw	high Nrf24_print_address_register@buffer
 12426   011C5A  21BA               	addwfc	(Nrf24_print_address_register@i+1)& (0+255),w,b
 12427   011C5C  6EDA               	movwf	fsr2h,c
 12428   011C5E  50DF               	movf	indf2,w,c
 12429   011C60  6FB3               	movwf	??_Nrf24_print_address_register& (0+255),b
 12430   011C62  51B3               	movf	??_Nrf24_print_address_register& (0+255),w,b
 12431   011C64  6F9F               	movwf	(?_printf+2)& (0+255),b
 12432   011C66  6BA0               	clrf	(?_printf+3)& (0+255),b
 12433   011C68  ECCC  F093         	call	_printf	;wreg free
 12434   011C6C                     
 12435                           ;mirf.c: 418:   }
 12436   011C6C  0105               	movlb	5	; () banked
 12437   011C6E  4BB9               	infsnz	Nrf24_print_address_register@i& (0+255),f,b
 12438   011C70  2BBA               	incf	(Nrf24_print_address_register@i+1)& (0+255),f,b
 12439   011C72                     
 12440                           ; BSR set to: 5
 12441   011C72  BFBA               	btfsc	(Nrf24_print_address_register@i+1)& (0+255),7,b
 12442   011C74  EF45  F08E         	goto	u2661
 12443   011C78  51BA               	movf	(Nrf24_print_address_register@i+1)& (0+255),w,b
 12444   011C7A  E109               	bnz	u2660
 12445   011C7C  0E05               	movlw	5
 12446   011C7E  5DB9               	subwf	Nrf24_print_address_register@i& (0+255),w,b
 12447   011C80  A0D8               	btfss	status,0,c
 12448   011C82  EF45  F08E         	goto	u2661
 12449   011C86  EF47  F08E         	goto	u2660
 12450   011C8A                     u2661:
 12451   011C8A  EF25  F08E         	goto	l3612
 12452   011C8E                     u2660:
 12453   011C8E                     l3618:
 12454                           
 12455                           ;mirf.c: 410:  while (qty--) {
 12456   011C8E  0105               	movlb	5	; () banked
 12457   011C90  07B2               	decf	Nrf24_print_address_register@qty& (0+255),f,b
 12458   011C92  29B2               	incf	Nrf24_print_address_register@qty& (0+255),w,b
 12459   011C94  A4D8               	btfss	status,2,c
 12460   011C96  EF4F  F08E         	goto	u2671
 12461   011C9A  EF51  F08E         	goto	u2670
 12462   011C9E                     u2671:
 12463   011C9E  EF0F  F08E         	goto	l3600
 12464   011CA2                     u2670:
 12465   011CA2                     
 12466                           ; BSR set to: 5
 12467                           ;mirf.c: 420:  printf("\r\n");
 12468   011CA2  0EFA               	movlw	low (STR_18+67)
 12469   011CA4  6F9D               	movwf	printf@fmt& (0+255),b
 12470   011CA6  0EFE               	movlw	high (STR_18+67)
 12471   011CA8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12472   011CAA  ECCC  F093         	call	_printf	;wreg free
 12473   011CAE  0012               	return		;funcret
 12474   011CB0                     __end_of_Nrf24_print_address_register:
 12475                           	callstack 0
 12476                           
 12477 ;; *************** function _printf *****************
 12478 ;; Defined at:
 12479 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
 12480 ;; Parameters:    Size  Location     Type
 12481 ;;  fmt             2   61[BANK5 ] PTR const unsigned char 
 12482 ;;		 -> STR_25(3), STR_24(8), STR_23(6), STR_22(3), 
 12483 ;;		 -> STR_21(5), STR_20(4), STR_19(6), STR_18(70), 
 12484 ;;		 -> STR_17(21), STR_16(16), STR_15(18), STR_14(17), 
 12485 ;;		 -> STR_3(53), 
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;  ap              2   75[BANK5 ] PTR void [1]
 12488 ;;		 -> ?_printf(2), 
 12489 ;;  ret             2    0        int 
 12490 ;; Return value:  Size  Location     Type
 12491 ;;                  2   61[BANK5 ] int 
 12492 ;; Registers used:
 12493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12494 ;; Tracked objects:
 12495 ;;		On entry : 0/0
 12496 ;;		On exit  : 0/0
 12497 ;;		Unchanged: 0/0
 12498 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12499 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12500 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12502 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12503 ;;Total ram usage:       16 bytes
 12504 ;; Hardware stack levels used: 1
 12505 ;; Hardware stack levels required when called: 14
 12506 ;; This function calls:
 12507 ;;		_vfprintf
 12508 ;; This function is called by:
 12509 ;;		_Nrf24_printDetails
 12510 ;;		_Nrf24_print_status
 12511 ;;		_Nrf24_print_address_register
 12512 ;;		_Nrf24_print_byte_register
 12513 ;; This function uses a non-reentrant model
 12514 ;;
 12515                           
 12516                           	psect	text14
 12517   012798                     __ptext14:
 12518                           	callstack 0
 12519   012798                     _printf:
 12520                           	callstack 110
 12521   012798  0E9F               	movlw	low (?_printf+2)
 12522   01279A  0105               	movlb	5	; () banked
 12523   01279C  6FAB               	movwf	printf@ap& (0+255),b
 12524   01279E  0E05               	movlw	high (?_printf+2)
 12525   0127A0  6FAC               	movwf	(printf@ap+1)& (0+255),b
 12526   0127A2                     
 12527                           ; BSR set to: 5
 12528   0127A2  0E00               	movlw	0
 12529   0127A4  6F95               	movwf	vfprintf@fp& (0+255),b
 12530   0127A6  0E00               	movlw	0
 12531   0127A8  6F96               	movwf	(vfprintf@fp+1)& (0+255),b
 12532   0127AA  C59D  F597         	movff	printf@fmt,vfprintf@fmt
 12533   0127AE  C59E  F598         	movff	printf@fmt+1,vfprintf@fmt+1
 12534   0127B2  0EAB               	movlw	low printf@ap
 12535   0127B4  6F99               	movwf	vfprintf@ap& (0+255),b
 12536   0127B6  0E05               	movlw	high printf@ap
 12537   0127B8  6F9A               	movwf	(vfprintf@ap+1)& (0+255),b
 12538   0127BA  ECD0  F091         	call	_vfprintf	;wreg free
 12539   0127BE  0012               	return		;funcret
 12540   0127C0                     __end_of_printf:
 12541                           	callstack 0
 12542                           
 12543 ;; *************** function _vfprintf *****************
 12544 ;; Defined at:
 12545 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 12546 ;; Parameters:    Size  Location     Type
 12547 ;;  fp              2   53[BANK5 ] PTR struct _IO_FILE
 12548 ;;		 -> NULL(0), 
 12549 ;;  fmt             2   55[BANK5 ] PTR const unsigned char 
 12550 ;;		 -> STR_25(3), STR_24(8), STR_23(6), STR_22(3), 
 12551 ;;		 -> STR_21(5), STR_20(4), STR_19(6), STR_18(70), 
 12552 ;;		 -> STR_17(21), STR_16(16), STR_15(18), STR_14(17), 
 12553 ;;		 -> STR_3(53), 
 12554 ;;  ap              2   57[BANK5 ] PTR PTR void 
 12555 ;;		 -> printf@ap(2), 
 12556 ;; Auto vars:     Size  Location     Type
 12557 ;;  cfmt            2   59[BANK5 ] PTR unsigned char 
 12558 ;;		 -> STR_25(3), STR_24(8), STR_23(6), STR_22(3), 
 12559 ;;		 -> STR_21(5), STR_20(4), STR_19(6), STR_18(70), 
 12560 ;;		 -> STR_17(21), STR_16(16), STR_15(18), STR_14(17), 
 12561 ;;		 -> STR_3(53), 
 12562 ;; Return value:  Size  Location     Type
 12563 ;;                  2   53[BANK5 ] int 
 12564 ;; Registers used:
 12565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12566 ;; Tracked objects:
 12567 ;;		On entry : 0/0
 12568 ;;		On exit  : 0/0
 12569 ;;		Unchanged: 0/0
 12570 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12571 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12574 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12575 ;;Total ram usage:        8 bytes
 12576 ;; Hardware stack levels used: 1
 12577 ;; Hardware stack levels required when called: 13
 12578 ;; This function calls:
 12579 ;;		_vfpfcnvrt
 12580 ;; This function is called by:
 12581 ;;		_printf
 12582 ;; This function uses a non-reentrant model
 12583 ;;
 12584                           
 12585                           	psect	text15
 12586   0123A0                     __ptext15:
 12587                           	callstack 0
 12588   0123A0                     _vfprintf:
 12589                           	callstack 110
 12590   0123A0                     
 12591                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 12592   0123A0  C597  F59B         	movff	vfprintf@fmt,vfprintf@cfmt
 12593   0123A4  C598  F59C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 12594                           
 12595                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12596   0123A8  EFE5  F091         	goto	l3436
 12597   0123AC                     l3434:
 12598                           
 12599                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 12600   0123AC  C595  F586         	movff	vfprintf@fp,vfpfcnvrt@fp
 12601   0123B0  C596  F587         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 12602   0123B4  0E9B               	movlw	low vfprintf@cfmt
 12603   0123B6  0105               	movlb	5	; () banked
 12604   0123B8  6F88               	movwf	vfpfcnvrt@fmt& (0+255),b
 12605   0123BA  0E05               	movlw	high vfprintf@cfmt
 12606   0123BC  6F89               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
 12607   0123BE  C599  F58A         	movff	vfprintf@ap,vfpfcnvrt@ap
 12608   0123C2  C59A  F58B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 12609   0123C6  EC00  F080         	call	_vfpfcnvrt	;wreg free
 12610   0123CA                     l3436:
 12611                           
 12612                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12613   0123CA  C59B  F4F6         	movff	vfprintf@cfmt,tblptrl
 12614   0123CE  C59C  F4F7         	movff	vfprintf@cfmt+1,tblptrh
 12615   0123D2                     	if	0	;tblptru may be non-zero
 12616   0123D2                     	endif
 12617   0123D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12618   0123D2  0E00               	movlw	low (__mediumconst shr (0+16))
 12619   0123D4  6EF8               	movwf	tblptru,c
 12620   0123D6                     	endif
 12621   0123D6  0008               	tblrd		*
 12622   0123D8  50F5               	movf	tablat,w,c
 12623   0123DA  0900               	iorlw	0
 12624   0123DC  A4D8               	btfss	status,2,c
 12625   0123DE  EFF3  F091         	goto	u2341
 12626   0123E2  EFF5  F091         	goto	u2340
 12627   0123E6                     u2341:
 12628   0123E6  EFD6  F091         	goto	l3434
 12629   0123EA                     u2340:
 12630   0123EA                     
 12631                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 12632   0123EA  0E00               	movlw	0
 12633   0123EC  0105               	movlb	5	; () banked
 12634   0123EE  6F96               	movwf	(?_vfprintf+1)& (0+255),b
 12635   0123F0  0E00               	movlw	0
 12636   0123F2  6F95               	movwf	?_vfprintf& (0+255),b
 12637   0123F4                     
 12638                           ; BSR set to: 5
 12639   0123F4  0012               	return		;funcret
 12640   0123F6                     __end_of_vfprintf:
 12641                           	callstack 0
 12642                           
 12643 ;; *************** function _vfpfcnvrt *****************
 12644 ;; Defined at:
 12645 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;  fp              2   38[BANK5 ] PTR struct _IO_FILE
 12648 ;;		 -> NULL(0), 
 12649 ;;  fmt             2   40[BANK5 ] PTR PTR unsigned char 
 12650 ;;		 -> vfprintf@cfmt(2), 
 12651 ;;  ap              2   42[BANK5 ] PTR PTR void 
 12652 ;;		 -> printf@ap(2), 
 12653 ;; Auto vars:     Size  Location     Type
 12654 ;;  convarg         4   46[BANK5 ] struct .
 12655 ;;  cp              2   51[BANK5 ] PTR unsigned char 
 12656 ;;		 -> STR_25(3), STR_24(8), STR_23(6), STR_22(3), 
 12657 ;;		 -> STR_21(5), STR_20(4), STR_19(6), STR_18(70), 
 12658 ;;		 -> STR_17(21), STR_16(16), STR_15(18), STR_14(17), 
 12659 ;;		 -> STR_3(53), 
 12660 ;;  done            1   50[BANK5 ] _Bool 
 12661 ;;  c               1    0        unsigned char 
 12662 ;; Return value:  Size  Location     Type
 12663 ;;                  1    wreg      void 
 12664 ;; Registers used:
 12665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12666 ;; Tracked objects:
 12667 ;;		On entry : 0/0
 12668 ;;		On exit  : 0/0
 12669 ;;		Unchanged: 0/0
 12670 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12671 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12672 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12673 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12674 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12675 ;;Total ram usage:       15 bytes
 12676 ;; Hardware stack levels used: 1
 12677 ;; Hardware stack levels required when called: 12
 12678 ;; This function calls:
 12679 ;;		_dtoa
 12680 ;;		_fputc
 12681 ;;		_read_prec_or_width
 12682 ;;		_stoa
 12683 ;;		_xtoa
 12684 ;; This function is called by:
 12685 ;;		_vfprintf
 12686 ;; This function uses a non-reentrant model
 12687 ;;
 12688                           
 12689                           	psect	text16
 12690   010000                     __ptext16:
 12691                           	callstack 0
 12692   010000                     _vfpfcnvrt:
 12693                           	callstack 110
 12694   010000                     
 12695                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 12696   010000  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 12697   010004  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12698   010008  C4DE F4F6          	movff	postinc2,tblptrl
 12699   01000C  C4DD F4F7          	movff	postdec2,tblptrh
 12700   010010                     	if	0	;tblptru may be non-zero
 12701   010010                     	endif
 12702   010010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12703   010010  0E00               	movlw	low (__mediumconst shr (0+16))
 12704   010012  6EF8               	movwf	tblptru,c
 12705   010014                     	endif
 12706   010014  0008               	tblrd		*
 12707   010016  50F5               	movf	tablat,w,c
 12708   010018  0A25               	xorlw	37
 12709   01001A  A4D8               	btfss	status,2,c
 12710   01001C  EF12  F080         	goto	u2191
 12711   010020  EF14  F080         	goto	u2190
 12712   010024                     u2191:
 12713   010024  EFB1  F081         	goto	l3392
 12714   010028                     u2190:
 12715   010028                     
 12716                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 12717   010028  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 12718   01002C  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12719   010030  2ADE               	incf	postinc2,f,c
 12720   010032  0E00               	movlw	0
 12721   010034  22DD               	addwfc	postdec2,f,c
 12722   010036                     
 12723                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 12724   010036  0E00               	movlw	0
 12725   010038  0105               	movlb	5	; () banked
 12726   01003A  6FE7               	movwf	(_width+1)& (0+255),b
 12727   01003C  0E00               	movlw	0
 12728   01003E  6FE6               	movwf	_width& (0+255),b
 12729   010040  C5E6  F5EA         	movff	_width,_flags
 12730   010044                     
 12731                           ; BSR set to: 5
 12732                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 12733   010044  69E8               	setf	_prec& (0+255),b
 12734   010046  69E9               	setf	(_prec+1)& (0+255),b
 12735   010048                     
 12736                           ; BSR set to: 5
 12737                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 12738   010048  6B92               	clrf	vfpfcnvrt@done& (0+255),b
 12739                           
 12740                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 12741   01004A  EF47  F080         	goto	l3334
 12742   01004E                     l3324:
 12743                           
 12744                           ; BSR set to: 5
 12745                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 12746   01004E  83EA               	bsf	_flags& (0+255),1,b
 12747   010050                     
 12748                           ; BSR set to: 5
 12749                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 12750   010050  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 12751   010054  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12752   010058  2ADE               	incf	postinc2,f,c
 12753   01005A  0E00               	movlw	0
 12754   01005C  22DD               	addwfc	postdec2,f,c
 12755                           
 12756                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 12757   01005E  EF47  F080         	goto	l3334
 12758   010062                     l3328:
 12759                           
 12760                           ; BSR set to: 5
 12761                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 12762   010062  0E01               	movlw	1
 12763   010064  6F92               	movwf	vfpfcnvrt@done& (0+255),b
 12764                           
 12765                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 12766   010066  EF47  F080         	goto	l3334
 12767   01006A                     l3332:
 12768                           
 12769                           ; BSR set to: 5
 12770   01006A  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 12771   01006E  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12772   010072  C4DE F4F6          	movff	postinc2,tblptrl
 12773   010076  C4DD F4F7          	movff	postdec2,tblptrh
 12774   01007A                     	if	0	;tblptru may be non-zero
 12775   01007A                     	endif
 12776   01007A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12777   01007A  0E00               	movlw	low (__mediumconst shr (0+16))
 12778   01007C  6EF8               	movwf	tblptru,c
 12779   01007E                     	endif
 12780   01007E  0008               	tblrd		*
 12781   010080  50F5               	movf	tablat,w,c
 12782                           
 12783                           ; Switch size 1, requested type "simple"
 12784                           ; Number of cases is 1, Range of values is 48 to 48
 12785                           ; switch strategies available:
 12786                           ; Name         Instructions Cycles
 12787                           ; simple_byte            4     3 (average)
 12788                           ;	Chosen strategy is simple_byte
 12789   010082  0A30               	xorlw	48	; case 48
 12790   010084  B4D8               	btfsc	status,2,c
 12791   010086  EF27  F080         	goto	l3324
 12792   01008A  EF31  F080         	goto	l3328
 12793   01008E                     l3334:
 12794                           
 12795                           ; BSR set to: 5
 12796                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 12797   01008E  5192               	movf	vfpfcnvrt@done& (0+255),w,b
 12798   010090  B4D8               	btfsc	status,2,c
 12799   010092  EF4D  F080         	goto	u2201
 12800   010096  EF4F  F080         	goto	u2200
 12801   01009A                     u2201:
 12802   01009A  EF35  F080         	goto	l3332
 12803   01009E                     u2200:
 12804   01009E                     
 12805                           ; BSR set to: 5
 12806                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 12807   01009E  C588  F560         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 12808   0100A2  C589  F561         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 12809   0100A6  C58A  F562         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 12810   0100AA  C58B  F563         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 12811   0100AE  EC35  F08A         	call	_read_prec_or_width	;wreg free
 12812   0100B2  C560  F5E6         	movff	?_read_prec_or_width,_width
 12813   0100B6  C561  F5E7         	movff	?_read_prec_or_width+1,_width+1
 12814   0100BA                     
 12815                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 12816   0100BA  0105               	movlb	5	; () banked
 12817   0100BC  BFE7               	btfsc	(_width+1)& (0+255),7,b
 12818   0100BE  EF65  F080         	goto	u2210
 12819   0100C2  EF63  F080         	goto	u2211
 12820   0100C6                     u2211:
 12821   0100C6  EF6A  F080         	goto	l3342
 12822   0100CA                     u2210:
 12823   0100CA                     
 12824                           ; BSR set to: 5
 12825                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 12826   0100CA  81EA               	bsf	_flags& (0+255),0,b
 12827                           
 12828                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 12829   0100CC  6DE6               	negf	_width& (0+255),b
 12830   0100CE  1FE7               	comf	(_width+1)& (0+255),f,b
 12831   0100D0  B0D8               	btfsc	status,0,c
 12832   0100D2  2BE7               	incf	(_width+1)& (0+255),f,b
 12833   0100D4                     l3342:
 12834                           
 12835                           ; BSR set to: 5
 12836                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 12837   0100D4  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 12838   0100D8  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12839   0100DC  C4DE F593          	movff	postinc2,vfpfcnvrt@cp
 12840   0100E0  C4DD F594          	movff	postdec2,vfpfcnvrt@cp+1
 12841   0100E4                     
 12842                           ; BSR set to: 5
 12843                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 12844   0100E4  C593  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 12845   0100E8  C594  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 12846   0100EC                     	if	0	;tblptru may be non-zero
 12847   0100EC                     	endif
 12848   0100EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12849   0100EC  0E00               	movlw	low (__mediumconst shr (0+16))
 12850   0100EE  6EF8               	movwf	tblptru,c
 12851   0100F0                     	endif
 12852   0100F0  0008               	tblrd		*
 12853   0100F2  50F5               	movf	tablat,w,c
 12854   0100F4  0A64               	xorlw	100
 12855   0100F6  B4D8               	btfsc	status,2,c
 12856   0100F8  EF80  F080         	goto	u2221
 12857   0100FC  EF82  F080         	goto	u2220
 12858   010100                     u2221:
 12859   010100  EF92  F080         	goto	l3348
 12860   010104                     u2220:
 12861   010104                     
 12862                           ; BSR set to: 5
 12863   010104  C593  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 12864   010108  C594  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 12865   01010C                     	if	0	;tblptru may be non-zero
 12866   01010C                     	endif
 12867   01010C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12868   01010C  0E00               	movlw	low (__mediumconst shr (0+16))
 12869   01010E  6EF8               	movwf	tblptru,c
 12870   010110                     	endif
 12871   010110  0008               	tblrd		*
 12872   010112  50F5               	movf	tablat,w,c
 12873   010114  0A69               	xorlw	105
 12874   010116  A4D8               	btfss	status,2,c
 12875   010118  EF90  F080         	goto	u2231
 12876   01011C  EF92  F080         	goto	u2230
 12877   010120                     u2231:
 12878   010120  EFC0  F080         	goto	l3354
 12879   010124                     u2230:
 12880   010124                     l3348:
 12881                           
 12882                           ; BSR set to: 5
 12883                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 12884   010124  C58A  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 12885   010128  C58B  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 12886   01012C  C4DF F58C          	movff	indf2,??_vfpfcnvrt
 12887   010130  0E02               	movlw	2
 12888   010132  26DE               	addwf	postinc2,f,c
 12889   010134  C4DF F58D          	movff	indf2,??_vfpfcnvrt+1
 12890   010138  0E00               	movlw	0
 12891   01013A  22DD               	addwfc	postdec2,f,c
 12892   01013C  C58C  F4D9         	movff	??_vfpfcnvrt,fsr2l
 12893   010140  C58D  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 12894   010144  C4DE F58E          	movff	postinc2,vfpfcnvrt@convarg
 12895   010148  C4DD F58F          	movff	postdec2,vfpfcnvrt@convarg+1
 12896                           
 12897                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 12898   01014C  0E01               	movlw	1
 12899   01014E  2593               	addwf	vfpfcnvrt@cp& (0+255),w,b
 12900   010150  6F8C               	movwf	??_vfpfcnvrt& (0+255),b
 12901   010152  0E00               	movlw	0
 12902   010154  2194               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 12903   010156  6F8D               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 12904   010158  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 12905   01015C  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12906   010160  C58C  F4DE         	movff	??_vfpfcnvrt,postinc2
 12907   010164  C58D  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 12908   010168                     
 12909                           ; BSR set to: 5
 12910                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 12911   010168  C586  F579         	movff	vfpfcnvrt@fp,dtoa@fp
 12912   01016C  C587  F57A         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 12913   010170  C58E  F57B         	movff	vfpfcnvrt@convarg,dtoa@d
 12914   010174  C58F  F57C         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 12915   010178  EC37  F085         	call	_dtoa	;wreg free
 12916   01017C  EFC8  F081         	goto	l1638
 12917   010180                     l3354:
 12918                           
 12919                           ; BSR set to: 5
 12920   010180  C593  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 12921   010184  C594  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 12922   010188                     	if	0	;tblptru may be non-zero
 12923   010188                     	endif
 12924   010188                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12925   010188  0E00               	movlw	low (__mediumconst shr (0+16))
 12926   01018A  6EF8               	movwf	tblptru,c
 12927   01018C                     	endif
 12928   01018C  0008               	tblrd		*
 12929   01018E  50F5               	movf	tablat,w,c
 12930   010190  0A78               	xorlw	120
 12931   010192  A4D8               	btfss	status,2,c
 12932   010194  EFCE  F080         	goto	u2241
 12933   010198  EFD0  F080         	goto	u2240
 12934   01019C                     u2241:
 12935   01019C  EF0E  F081         	goto	l1639
 12936   0101A0                     u2240:
 12937   0101A0                     
 12938                           ; BSR set to: 5
 12939                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 12940   0101A0  C58A  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 12941   0101A4  C58B  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 12942   0101A8  C4DF F58C          	movff	indf2,??_vfpfcnvrt
 12943   0101AC  0E02               	movlw	2
 12944   0101AE  26DE               	addwf	postinc2,f,c
 12945   0101B0  C4DF F58D          	movff	indf2,??_vfpfcnvrt+1
 12946   0101B4  0E00               	movlw	0
 12947   0101B6  22DD               	addwfc	postdec2,f,c
 12948   0101B8  C58C  F4D9         	movff	??_vfpfcnvrt,fsr2l
 12949   0101BC  C58D  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 12950   0101C0  C4DE F58E          	movff	postinc2,vfpfcnvrt@convarg
 12951   0101C4  C4DD F58F          	movff	postdec2,vfpfcnvrt@convarg+1
 12952                           
 12953                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 12954   0101C8  0E01               	movlw	1
 12955   0101CA  2593               	addwf	vfpfcnvrt@cp& (0+255),w,b
 12956   0101CC  6F8C               	movwf	??_vfpfcnvrt& (0+255),b
 12957   0101CE  0E00               	movlw	0
 12958   0101D0  2194               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 12959   0101D2  6F8D               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 12960   0101D4  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 12961   0101D8  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12962   0101DC  C58C  F4DE         	movff	??_vfpfcnvrt,postinc2
 12963   0101E0  C58D  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 12964                           
 12965                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 12966   0101E4  EF00  F081         	goto	l3364
 12967   0101E8                     l3358:
 12968                           
 12969                           ; BSR set to: 5
 12970                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
 12971   0101E8  C586  F579         	movff	vfpfcnvrt@fp,xtoa@fp
 12972   0101EC  C587  F57A         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 12973   0101F0  C58E  F57B         	movff	vfpfcnvrt@convarg,xtoa@d
 12974   0101F4  C58F  F57C         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
 12975   0101F8  ECCC  F087         	call	_xtoa	;wreg free
 12976   0101FC  EFC8  F081         	goto	l1638
 12977   010200                     l3364:
 12978                           
 12979                           ; BSR set to: 5
 12980   010200  C593  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 12981   010204  C594  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 12982   010208                     	if	0	;tblptru may be non-zero
 12983   010208                     	endif
 12984   010208                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12985   010208  0E00               	movlw	low (__mediumconst shr (0+16))
 12986   01020A  6EF8               	movwf	tblptru,c
 12987   01020C                     	endif
 12988   01020C  0008               	tblrd		*
 12989   01020E  50F5               	movf	tablat,w,c
 12990                           
 12991                           ; Switch size 1, requested type "simple"
 12992                           ; Number of cases is 1, Range of values is 120 to 120
 12993                           ; switch strategies available:
 12994                           ; Name         Instructions Cycles
 12995                           ; simple_byte            4     3 (average)
 12996                           ;	Chosen strategy is simple_byte
 12997   010210  0A78               	xorlw	120	; case 120
 12998   010212  B4D8               	btfsc	status,2,c
 12999   010214  EFF4  F080         	goto	l3358
 13000   010218  EF0E  F081         	goto	l1639
 13001   01021C                     l1639:
 13002                           
 13003                           ; BSR set to: 5
 13004                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 13005   01021C  6B92               	clrf	vfpfcnvrt@done& (0+255),b
 13006   01021E                     
 13007                           ; BSR set to: 5
 13008                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 13009   01021E  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13010   010222  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13011   010226  C4DE F4F6          	movff	postinc2,tblptrl
 13012   01022A  C4DD F4F7          	movff	postdec2,tblptrh
 13013   01022E                     	if	0	;tblptru may be non-zero
 13014   01022E                     	endif
 13015   01022E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13016   01022E  0E00               	movlw	low (__mediumconst shr (0+16))
 13017   010230  6EF8               	movwf	tblptru,c
 13018   010232                     	endif
 13019   010232  0008               	tblrd		*
 13020   010234  50F5               	movf	tablat,w,c
 13021   010236  0A73               	xorlw	115
 13022   010238  A4D8               	btfss	status,2,c
 13023   01023A  EF21  F081         	goto	u2251
 13024   01023E  EF23  F081         	goto	u2250
 13025   010242                     u2251:
 13026   010242  EF2E  F081         	goto	l3372
 13027   010246                     u2250:
 13028   010246                     
 13029                           ; BSR set to: 5
 13030                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 13031   010246  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13032   01024A  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13033   01024E  2ADE               	incf	postinc2,f,c
 13034   010250  0E00               	movlw	0
 13035   010252  22DD               	addwfc	postdec2,f,c
 13036   010254                     l3370:
 13037                           
 13038                           ; BSR set to: 5
 13039                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 13040   010254  0E01               	movlw	1
 13041   010256  6F92               	movwf	vfpfcnvrt@done& (0+255),b
 13042                           
 13043                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
 13044   010258  EF84  F081         	goto	l3382
 13045   01025C                     l3372:
 13046                           
 13047                           ; BSR set to: 5
 13048   01025C  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13049   010260  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13050   010264  C4DE F4F6          	movff	postinc2,tblptrl
 13051   010268  C4DD F4F7          	movff	postdec2,tblptrh
 13052   01026C                     	if	0	;tblptru may be non-zero
 13053   01026C                     	endif
 13054   01026C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13055   01026C  0E00               	movlw	low (__mediumconst shr (0+16))
 13056   01026E  6EF8               	movwf	tblptru,c
 13057   010270                     	endif
 13058   010270  0008               	tblrd		*
 13059   010272  50F5               	movf	tablat,w,c
 13060   010274  0A6C               	xorlw	108
 13061   010276  A4D8               	btfss	status,2,c
 13062   010278  EF40  F081         	goto	u2261
 13063   01027C  EF42  F081         	goto	u2260
 13064   010280                     u2261:
 13065   010280  EF84  F081         	goto	l3382
 13066   010284                     u2260:
 13067   010284                     
 13068                           ; BSR set to: 5
 13069   010284  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13070   010288  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13071   01028C  C4DE F58C          	movff	postinc2,??_vfpfcnvrt
 13072   010290  C4DD F58D          	movff	postdec2,??_vfpfcnvrt+1
 13073   010294  0E01               	movlw	1
 13074   010296  278C               	addwf	??_vfpfcnvrt& (0+255),f,b
 13075   010298  0E00               	movlw	0
 13076   01029A  238D               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 13077   01029C  C58C  F4F6         	movff	??_vfpfcnvrt,tblptrl
 13078   0102A0  C58D  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 13079   0102A4                     	if	0	;tblptru may be non-zero
 13080   0102A4                     	endif
 13081   0102A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13082   0102A4  0E00               	movlw	low (__mediumconst shr (0+16))
 13083   0102A6  6EF8               	movwf	tblptru,c
 13084   0102A8                     	endif
 13085   0102A8  0008               	tblrd		*
 13086   0102AA  50F5               	movf	tablat,w,c
 13087   0102AC  0A6C               	xorlw	108
 13088   0102AE  A4D8               	btfss	status,2,c
 13089   0102B0  EF5C  F081         	goto	u2271
 13090   0102B4  EF5E  F081         	goto	u2270
 13091   0102B8                     u2271:
 13092   0102B8  EF84  F081         	goto	l3382
 13093   0102BC                     u2270:
 13094   0102BC                     
 13095                           ; BSR set to: 5
 13096   0102BC  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13097   0102C0  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13098   0102C4  C4DE F58C          	movff	postinc2,??_vfpfcnvrt
 13099   0102C8  C4DD F58D          	movff	postdec2,??_vfpfcnvrt+1
 13100   0102CC  0E02               	movlw	2
 13101   0102CE  278C               	addwf	??_vfpfcnvrt& (0+255),f,b
 13102   0102D0  0E00               	movlw	0
 13103   0102D2  238D               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 13104   0102D4  C58C  F4F6         	movff	??_vfpfcnvrt,tblptrl
 13105   0102D8  C58D  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 13106   0102DC                     	if	0	;tblptru may be non-zero
 13107   0102DC                     	endif
 13108   0102DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13109   0102DC  0E00               	movlw	low (__mediumconst shr (0+16))
 13110   0102DE  6EF8               	movwf	tblptru,c
 13111   0102E0                     	endif
 13112   0102E0  0008               	tblrd		*
 13113   0102E2  50F5               	movf	tablat,w,c
 13114   0102E4  0A73               	xorlw	115
 13115   0102E6  A4D8               	btfss	status,2,c
 13116   0102E8  EF78  F081         	goto	u2281
 13117   0102EC  EF7A  F081         	goto	u2280
 13118   0102F0                     u2281:
 13119   0102F0  EF84  F081         	goto	l3382
 13120   0102F4                     u2280:
 13121   0102F4                     
 13122                           ; BSR set to: 5
 13123                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 13124   0102F4  0E03               	movlw	3
 13125   0102F6  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13126   0102FA  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13127   0102FE  26DE               	addwf	postinc2,f,c
 13128   010300  0E00               	movlw	0
 13129   010302  22DD               	addwfc	postdec2,f,c
 13130   010304  EF2A  F081         	goto	l3370
 13131   010308                     l3382:
 13132                           
 13133                           ; BSR set to: 5
 13134                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 13135   010308  5192               	movf	vfpfcnvrt@done& (0+255),w,b
 13136   01030A  B4D8               	btfsc	status,2,c
 13137   01030C  EF8A  F081         	goto	u2291
 13138   010310  EF8C  F081         	goto	u2290
 13139   010314                     u2291:
 13140   010314  EFA8  F081         	goto	l3388
 13141   010318                     u2290:
 13142   010318                     
 13143                           ; BSR set to: 5
 13144                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 13145   010318  C586  F569         	movff	vfpfcnvrt@fp,stoa@fp
 13146   01031C  C587  F56A         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 13147   010320  C58A  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 13148   010324  C58B  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 13149   010328  C4DF F58C          	movff	indf2,??_vfpfcnvrt
 13150   01032C  0E02               	movlw	2
 13151   01032E  26DE               	addwf	postinc2,f,c
 13152   010330  C4DF F58D          	movff	indf2,??_vfpfcnvrt+1
 13153   010334  0E00               	movlw	0
 13154   010336  22DD               	addwfc	postdec2,f,c
 13155   010338  C58C  F4D9         	movff	??_vfpfcnvrt,fsr2l
 13156   01033C  C58D  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 13157   010340  C4DE F56B          	movff	postinc2,stoa@s
 13158   010344  C4DD F56C          	movff	postdec2,stoa@s+1
 13159   010348  ECF5  F085         	call	_stoa	;wreg free
 13160   01034C  EFC8  F081         	goto	l1638
 13161   010350                     l3388:
 13162                           
 13163                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 13164   010350  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13165   010354  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13166   010358  2ADE               	incf	postinc2,f,c
 13167   01035A  0E00               	movlw	0
 13168   01035C  22DD               	addwfc	postdec2,f,c
 13169   01035E  EFC8  F081         	goto	l1638
 13170   010362                     l3392:
 13171                           
 13172                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 13173   010362  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13174   010366  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13175   01036A  C4DE F4F6          	movff	postinc2,tblptrl
 13176   01036E  C4DD F4F7          	movff	postdec2,tblptrh
 13177   010372                     	if	0	;tblptru may be non-zero
 13178   010372                     	endif
 13179   010372                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13180   010372  0E00               	movlw	low (__mediumconst shr (0+16))
 13181   010374  6EF8               	movwf	tblptru,c
 13182   010376                     	endif
 13183   010376  0008               	tblrd		*
 13184   010378  50F5               	movf	tablat,w,c
 13185   01037A  0105               	movlb	5	; () banked
 13186   01037C  6F60               	movwf	fputc@c& (0+255),b
 13187   01037E  6B61               	clrf	(fputc@c+1)& (0+255),b
 13188   010380  C586  F562         	movff	vfpfcnvrt@fp,fputc@fp
 13189   010384  C587  F563         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 13190   010388  EC9C  F08A         	call	_fputc	;wreg free
 13191   01038C  EFA8  F081         	goto	l3388
 13192   010390                     l1638:
 13193   010390  0012               	return		;funcret
 13194   010392                     __end_of_vfpfcnvrt:
 13195                           	callstack 0
 13196                           
 13197 ;; *************** function _xtoa *****************
 13198 ;; Defined at:
 13199 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 13200 ;; Parameters:    Size  Location     Type
 13201 ;;  fp              2   25[BANK5 ] PTR struct _IO_FILE
 13202 ;;		 -> NULL(0), 
 13203 ;;  d               2   27[BANK5 ] unsigned int 
 13204 ;; Auto vars:     Size  Location     Type
 13205 ;;  i               2   36[BANK5 ] int 
 13206 ;;  w               2   33[BANK5 ] int 
 13207 ;;  c               1   35[BANK5 ] unsigned char 
 13208 ;;  p               1   32[BANK5 ] _Bool 
 13209 ;; Return value:  Size  Location     Type
 13210 ;;                  1    wreg      void 
 13211 ;; Registers used:
 13212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13213 ;; Tracked objects:
 13214 ;;		On entry : 0/0
 13215 ;;		On exit  : 0/0
 13216 ;;		Unchanged: 0/0
 13217 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13218 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13219 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13220 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13221 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13222 ;;Total ram usage:       13 bytes
 13223 ;; Hardware stack levels used: 1
 13224 ;; Hardware stack levels required when called: 11
 13225 ;; This function calls:
 13226 ;;		_pad
 13227 ;; This function is called by:
 13228 ;;		_vfpfcnvrt
 13229 ;; This function uses a non-reentrant model
 13230 ;;
 13231                           
 13232                           	psect	text17
 13233   010F98                     __ptext17:
 13234                           	callstack 0
 13235   010F98                     _xtoa:
 13236                           	callstack 110
 13237   010F98                     
 13238                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 1067:  _Bool p = 1;
 13239   010F98  0E01               	movlw	1
 13240   010F9A  0105               	movlb	5	; () banked
 13241   010F9C  6F80               	movwf	xtoa@p& (0+255),b
 13242   010F9E                     
 13243                           ; BSR set to: 5
 13244                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 13245   010F9E  C5E6  F581         	movff	_width,xtoa@w
 13246   010FA2  C5E7  F582         	movff	_width+1,xtoa@w+1
 13247                           
 13248                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 13249   010FA6  0E00               	movlw	0
 13250   010FA8  6F85               	movwf	(xtoa@i+1)& (0+255),b
 13251   010FAA  0E1F               	movlw	31
 13252   010FAC  6F84               	movwf	xtoa@i& (0+255),b
 13253   010FAE                     
 13254                           ; BSR set to: 5
 13255                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 13256   010FAE  0107               	movlb	7	; () banked
 13257   010FB0  6BE7               	clrf	(_dbuf+31)& (0+255),b
 13258                           
 13259                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 13260   010FB2  EF0B  F088         	goto	l3274
 13261   010FB6                     l3256:
 13262                           
 13263                           ; BSR set to: 5
 13264                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1107:         --i;
 13265   010FB6  0784               	decf	xtoa@i& (0+255),f,b
 13266   010FB8  A0D8               	btfss	status,0,c
 13267   010FBA  0785               	decf	(xtoa@i+1)& (0+255),f,b
 13268   010FBC                     
 13269                           ; BSR set to: 5
 13270                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 13271   010FBC  517B               	movf	xtoa@d& (0+255),w,b
 13272   010FBE  0B0F               	andlw	15
 13273   010FC0  6F83               	movwf	xtoa@c& (0+255),b
 13274   010FC2                     
 13275                           ; BSR set to: 5
 13276                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 13277   010FC2  0E0A               	movlw	10
 13278   010FC4  6183               	cpfslt	xtoa@c& (0+255),b
 13279   010FC6  EFE7  F087         	goto	u2091
 13280   010FCA  EFE9  F087         	goto	u2090
 13281   010FCE                     u2091:
 13282   010FCE  EFED  F087         	goto	l3264
 13283   010FD2                     u2090:
 13284   010FD2                     
 13285                           ; BSR set to: 5
 13286                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 13287   010FD2  0E30               	movlw	48
 13288   010FD4  2783               	addwf	xtoa@c& (0+255),f,b
 13289                           
 13290                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1111:   }
 13291   010FD6  EFEF  F087         	goto	l3266
 13292   010FDA                     l3264:
 13293                           
 13294                           ; BSR set to: 5
 13295                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1116:    c += 'a'
      +                           - 10;
 13296   010FDA  0E57               	movlw	87
 13297   010FDC  2783               	addwf	xtoa@c& (0+255),f,b
 13298   010FDE                     l3266:
 13299                           
 13300                           ; BSR set to: 5
 13301                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 13302   010FDE  0EC8               	movlw	low _dbuf
 13303   010FE0  2584               	addwf	xtoa@i& (0+255),w,b
 13304   010FE2  6ED9               	movwf	fsr2l,c
 13305   010FE4  0E07               	movlw	high _dbuf
 13306   010FE6  2185               	addwfc	(xtoa@i+1)& (0+255),w,b
 13307   010FE8  6EDA               	movwf	fsr2h,c
 13308   010FEA  C583  F4DF         	movff	xtoa@c,indf2
 13309   010FEE                     
 13310                           ; BSR set to: 5
 13311                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1125:   p = 0;
 13312   010FEE  6B80               	clrf	xtoa@p& (0+255),b
 13313   010FF0                     
 13314                           ; BSR set to: 5
 13315                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 13316   010FF0  0781               	decf	xtoa@w& (0+255),f,b
 13317   010FF2  A0D8               	btfss	status,0,c
 13318   010FF4  0782               	decf	(xtoa@w+1)& (0+255),f,b
 13319   010FF6                     
 13320                           ; BSR set to: 5
 13321                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 13322   010FF6  C57B  F57D         	movff	xtoa@d,??_xtoa
 13323   010FFA  C57C  F57E         	movff	xtoa@d+1,??_xtoa+1
 13324   010FFE  0E04               	movlw	4
 13325   011000  6F7F               	movwf	(??_xtoa+2)& (0+255),b
 13326   011002                     u2105:
 13327   011002  90D8               	bcf	status,0,c
 13328   011004  337E               	rrcf	(??_xtoa+1)& (0+255),f,b
 13329   011006  337D               	rrcf	??_xtoa& (0+255),f,b
 13330   011008  2F7F               	decfsz	(??_xtoa+2)& (0+255),f,b
 13331   01100A  EF01  F088         	goto	u2105
 13332   01100E  C57D  F57B         	movff	??_xtoa,xtoa@d
 13333   011012  C57E  F57C         	movff	??_xtoa+1,xtoa@d+1
 13334   011016                     l3274:
 13335                           
 13336                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 13337   011016  0105               	movlb	5	; () banked
 13338   011018  BF85               	btfsc	(xtoa@i+1)& (0+255),7,b
 13339   01101A  EF18  F088         	goto	u2111
 13340   01101E  5185               	movf	(xtoa@i+1)& (0+255),w,b
 13341   011020  E109               	bnz	u2110
 13342   011022  0E02               	movlw	2
 13343   011024  5D84               	subwf	xtoa@i& (0+255),w,b
 13344   011026  A0D8               	btfss	status,0,c
 13345   011028  EF18  F088         	goto	u2111
 13346   01102C  EF1A  F088         	goto	u2110
 13347   011030                     u2111:
 13348   011030  EF3F  F088         	goto	l3284
 13349   011034                     u2110:
 13350   011034                     
 13351                           ; BSR set to: 5
 13352   011034  517B               	movf	xtoa@d& (0+255),w,b
 13353   011036  117C               	iorwf	(xtoa@d+1)& (0+255),w,b
 13354   011038  A4D8               	btfss	status,2,c
 13355   01103A  EF21  F088         	goto	u2121
 13356   01103E  EF23  F088         	goto	u2120
 13357   011042                     u2121:
 13358   011042  EFDB  F087         	goto	l3256
 13359   011046                     u2120:
 13360   011046                     
 13361                           ; BSR set to: 5
 13362   011046  5180               	movf	xtoa@p& (0+255),w,b
 13363   011048  A4D8               	btfss	status,2,c
 13364   01104A  EF29  F088         	goto	u2131
 13365   01104E  EF2B  F088         	goto	u2130
 13366   011052                     u2131:
 13367   011052  EFDB  F087         	goto	l3256
 13368   011056                     u2130:
 13369   011056                     
 13370                           ; BSR set to: 5
 13371   011056  BF82               	btfsc	(xtoa@w+1)& (0+255),7,b
 13372   011058  EF36  F088         	goto	u2141
 13373   01105C  5182               	movf	(xtoa@w+1)& (0+255),w,b
 13374   01105E  E108               	bnz	u2140
 13375   011060  0581               	decf	xtoa@w& (0+255),w,b
 13376   011062  A0D8               	btfss	status,0,c
 13377   011064  EF36  F088         	goto	u2141
 13378   011068  EF38  F088         	goto	u2140
 13379   01106C                     u2141:
 13380   01106C  EF3F  F088         	goto	l3284
 13381   011070                     u2140:
 13382   011070                     
 13383                           ; BSR set to: 5
 13384   011070  B3EA               	btfsc	_flags& (0+255),1,b
 13385   011072  EF3D  F088         	goto	u2151
 13386   011076  EF3F  F088         	goto	u2150
 13387   01107A                     u2151:
 13388   01107A  EFDB  F087         	goto	l3256
 13389   01107E                     u2150:
 13390   01107E                     l3284:
 13391                           
 13392                           ; BSR set to: 5
 13393                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 13394   01107E  C579  F570         	movff	xtoa@fp,pad@fp
 13395   011082  C57A  F571         	movff	xtoa@fp+1,pad@fp+1
 13396   011086  0EC8               	movlw	low _dbuf
 13397   011088  2584               	addwf	xtoa@i& (0+255),w,b
 13398   01108A  6F72               	movwf	pad@buf& (0+255),b
 13399   01108C  0E07               	movlw	high _dbuf
 13400   01108E  2185               	addwfc	(xtoa@i+1)& (0+255),w,b
 13401   011090  6F73               	movwf	(pad@buf+1)& (0+255),b
 13402   011092  C581  F574         	movff	xtoa@w,pad@p
 13403   011096  C582  F575         	movff	xtoa@w+1,pad@p+1
 13404   01109A  EC58  F08E         	call	_pad	;wreg free
 13405   01109E  0012               	return		;funcret
 13406   0110A0                     __end_of_xtoa:
 13407                           	callstack 0
 13408                           
 13409 ;; *************** function _stoa *****************
 13410 ;; Defined at:
 13411 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;  fp              2    9[BANK5 ] PTR struct _IO_FILE
 13414 ;;		 -> NULL(0), 
 13415 ;;  s               2   11[BANK5 ] PTR unsigned char 
 13416 ;;		 -> ?_printf(2), rf24_pa_dbm(32), rf24_crclength(30), rf24_datarates(24), 
 13417 ;;		 -> STR_13(14), STR_12(8), STR_11(9), STR_10(7), 
 13418 ;;		 -> STR_9(10), STR_8(7), STR_7(11), STR_6(9), 
 13419 ;;		 -> STR_5(13), STR_4(13), 
 13420 ;; Auto vars:     Size  Location     Type
 13421 ;;  l               2   21[BANK5 ] int 
 13422 ;;  cp              2   19[BANK5 ] PTR unsigned char 
 13423 ;;		 -> STR_26(7), ?_printf(2), rf24_pa_dbm(32), rf24_crclength(30), 
 13424 ;;		 -> rf24_datarates(24), STR_13(14), STR_12(8), STR_11(9), 
 13425 ;;		 -> STR_10(7), STR_9(10), STR_8(7), STR_7(11), 
 13426 ;;		 -> STR_6(9), STR_5(13), STR_4(13), 
 13427 ;;  w               2   17[BANK5 ] int 
 13428 ;;  p               2   15[BANK5 ] int 
 13429 ;; Return value:  Size  Location     Type
 13430 ;;                  1    wreg      void 
 13431 ;; Registers used:
 13432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13433 ;; Tracked objects:
 13434 ;;		On entry : 0/0
 13435 ;;		On exit  : 0/0
 13436 ;;		Unchanged: 0/0
 13437 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13438 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13439 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13440 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13441 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13442 ;;Total ram usage:       14 bytes
 13443 ;; Hardware stack levels used: 1
 13444 ;; Hardware stack levels required when called: 9
 13445 ;; This function calls:
 13446 ;;		_fputc
 13447 ;; This function is called by:
 13448 ;;		_vfpfcnvrt
 13449 ;; This function uses a non-reentrant model
 13450 ;;
 13451                           
 13452                           	psect	text18
 13453   010BEA                     __ptext18:
 13454                           	callstack 0
 13455   010BEA                     _stoa:
 13456                           	callstack 112
 13457   010BEA                     
 13458                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
 13459   010BEA  C56B  F573         	movff	stoa@s,stoa@cp
 13460   010BEE  C56C  F574         	movff	stoa@s+1,stoa@cp+1
 13461                           
 13462                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 13463   010BF2  0105               	movlb	5	; () banked
 13464   010BF4  5173               	movf	stoa@cp& (0+255),w,b
 13465   010BF6  1174               	iorwf	(stoa@cp+1)& (0+255),w,b
 13466   010BF8  A4D8               	btfss	status,2,c
 13467   010BFA  EF01  F086         	goto	u2001
 13468   010BFE  EF03  F086         	goto	u2000
 13469   010C02                     u2001:
 13470   010C02  EF07  F086         	goto	l3222
 13471   010C06                     u2000:
 13472   010C06                     
 13473                           ; BSR set to: 5
 13474                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 13475   010C06  0ED9               	movlw	low STR_26
 13476   010C08  6F73               	movwf	stoa@cp& (0+255),b
 13477   010C0A  0EFF               	movlw	high STR_26
 13478   010C0C  6F74               	movwf	(stoa@cp+1)& (0+255),b
 13479   010C0E                     l3222:
 13480                           
 13481                           ; BSR set to: 5
 13482                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 13483   010C0E  0E00               	movlw	0
 13484   010C10  6F76               	movwf	(stoa@l+1)& (0+255),b
 13485   010C12  0E00               	movlw	0
 13486   010C14  6F75               	movwf	stoa@l& (0+255),b
 13487   010C16  EF10  F086         	goto	l3226
 13488   010C1A                     l3224:
 13489   010C1A  0105               	movlb	5	; () banked
 13490   010C1C  4B75               	infsnz	stoa@l& (0+255),f,b
 13491   010C1E  2B76               	incf	(stoa@l+1)& (0+255),f,b
 13492   010C20                     l3226:
 13493                           
 13494                           ; BSR set to: 5
 13495   010C20  5175               	movf	stoa@l& (0+255),w,b
 13496   010C22  2573               	addwf	stoa@cp& (0+255),w,b
 13497   010C24  6F6D               	movwf	??_stoa& (0+255),b
 13498   010C26  5176               	movf	(stoa@l+1)& (0+255),w,b
 13499   010C28  2174               	addwfc	(stoa@cp+1)& (0+255),w,b
 13500   010C2A  6F6E               	movwf	(??_stoa+1)& (0+255),b
 13501   010C2C  C56D  F4F6         	movff	??_stoa,tblptrl
 13502   010C30  C56E  F4F7         	movff	??_stoa+1,tblptrh
 13503   010C34  0E00               	movlw	low (__mediumconst shr (0+16))
 13504   010C36  6EF8               	movwf	tblptru,c
 13505   010C38  0E25               	movlw	(high __ramtop+-1)
 13506   010C3A  64F7               	cpfsgt	tblptrh,c
 13507   010C3C  D003               	bra	u2017
 13508   010C3E  0008               	tblrd		*
 13509   010C40  50F5               	movf	tablat,w,c
 13510   010C42  D005               	bra	u2010
 13511   010C44                     u2017:
 13512   010C44  C4F6 F4E9          	movff	tblptrl,fsr0l
 13513   010C48  C4F7 F4EA          	movff	tblptrh,fsr0h
 13514   010C4C  50EF               	movf	indf0,w,c
 13515   010C4E                     u2010:
 13516   010C4E  0900               	iorlw	0
 13517   010C50  A4D8               	btfss	status,2,c
 13518   010C52  EF2D  F086         	goto	u2021
 13519   010C56  EF2F  F086         	goto	u2020
 13520   010C5A                     u2021:
 13521   010C5A  EF0D  F086         	goto	l3224
 13522   010C5E                     u2020:
 13523   010C5E                     
 13524                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 965:     p = l;
 13525   010C5E  C575  F56F         	movff	stoa@l,stoa@p
 13526   010C62  C576  F570         	movff	stoa@l+1,stoa@p+1
 13527                           
 13528                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
 13529   010C66  C5E6  F571         	movff	_width,stoa@w
 13530   010C6A  C5E7  F572         	movff	_width+1,stoa@w+1
 13531                           
 13532                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
 13533   010C6E  0105               	movlb	5	; () banked
 13534   010C70  B1EA               	btfsc	_flags& (0+255),0,b
 13535   010C72  EF3D  F086         	goto	u2031
 13536   010C76  EF3F  F086         	goto	u2030
 13537   010C7A                     u2031:
 13538   010C7A  EF7E  F086         	goto	l3240
 13539   010C7E                     u2030:
 13540   010C7E  EF4E  F086         	goto	l3234
 13541   010C82                     l3230:
 13542                           
 13543                           ; BSR set to: 5
 13544                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
 13545   010C82  0E00               	movlw	0
 13546   010C84  6F61               	movwf	(fputc@c+1)& (0+255),b
 13547   010C86  0E20               	movlw	32
 13548   010C88  6F60               	movwf	fputc@c& (0+255),b
 13549   010C8A  C569  F562         	movff	stoa@fp,fputc@fp
 13550   010C8E  C56A  F563         	movff	stoa@fp+1,fputc@fp+1
 13551   010C92  EC9C  F08A         	call	_fputc	;wreg free
 13552   010C96                     
 13553                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
 13554   010C96  0105               	movlb	5	; () banked
 13555   010C98  4B75               	infsnz	stoa@l& (0+255),f,b
 13556   010C9A  2B76               	incf	(stoa@l+1)& (0+255),f,b
 13557   010C9C                     l3234:
 13558                           
 13559                           ; BSR set to: 5
 13560                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
 13561   010C9C  5171               	movf	stoa@w& (0+255),w,b
 13562   010C9E  5D75               	subwf	stoa@l& (0+255),w,b
 13563   010CA0  5176               	movf	(stoa@l+1)& (0+255),w,b
 13564   010CA2  0A80               	xorlw	128
 13565   010CA4  6F6D               	movwf	??_stoa& (0+255),b
 13566   010CA6  5172               	movf	(stoa@w+1)& (0+255),w,b
 13567   010CA8  0A80               	xorlw	128
 13568   010CAA  596D               	subwfb	??_stoa& (0+255),w,b
 13569   010CAC  A0D8               	btfss	status,0,c
 13570   010CAE  EF5B  F086         	goto	u2041
 13571   010CB2  EF5D  F086         	goto	u2040
 13572   010CB6                     u2041:
 13573   010CB6  EF41  F086         	goto	l3230
 13574   010CBA                     u2040:
 13575   010CBA  EF7E  F086         	goto	l3240
 13576   010CBE                     l3236:
 13577                           
 13578                           ; BSR set to: 5
 13579                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 13580   010CBE  C573  F4F6         	movff	stoa@cp,tblptrl
 13581   010CC2  C574  F4F7         	movff	stoa@cp+1,tblptrh
 13582   010CC6  0E00               	movlw	low (__mediumconst shr (0+16))
 13583   010CC8  6EF8               	movwf	tblptru,c
 13584   010CCA  0E25               	movlw	(high __ramtop+-1)
 13585   010CCC  64F7               	cpfsgt	tblptrh,c
 13586   010CCE  D003               	bra	u2057
 13587   010CD0  0008               	tblrd		*
 13588   010CD2  50F5               	movf	tablat,w,c
 13589   010CD4  D005               	bra	u2050
 13590   010CD6                     u2057:
 13591   010CD6  C4F6 F4E9          	movff	tblptrl,fsr0l
 13592   010CDA  C4F7 F4EA          	movff	tblptrh,fsr0h
 13593   010CDE  50EF               	movf	indf0,w,c
 13594   010CE0                     u2050:
 13595   010CE0  0105               	movlb	5	; () banked
 13596   010CE2  6F6D               	movwf	??_stoa& (0+255),b
 13597   010CE4  516D               	movf	??_stoa& (0+255),w,b
 13598   010CE6  6F60               	movwf	fputc@c& (0+255),b
 13599   010CE8  6B61               	clrf	(fputc@c+1)& (0+255),b
 13600   010CEA  C569  F562         	movff	stoa@fp,fputc@fp
 13601   010CEE  C56A  F563         	movff	stoa@fp+1,fputc@fp+1
 13602   010CF2  EC9C  F08A         	call	_fputc	;wreg free
 13603   010CF6                     
 13604                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 13605   010CF6  0105               	movlb	5	; () banked
 13606   010CF8  4B73               	infsnz	stoa@cp& (0+255),f,b
 13607   010CFA  2B74               	incf	(stoa@cp+1)& (0+255),f,b
 13608   010CFC                     l3240:
 13609                           
 13610                           ; BSR set to: 5
 13611                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 13612   010CFC  076F               	decf	stoa@p& (0+255),f,b
 13613   010CFE  A0D8               	btfss	status,0,c
 13614   010D00  0770               	decf	(stoa@p+1)& (0+255),f,b
 13615   010D02  296F               	incf	stoa@p& (0+255),w,b
 13616   010D04  E106               	bnz	u2061
 13617   010D06  2970               	incf	(stoa@p+1)& (0+255),w,b
 13618   010D08  A4D8               	btfss	status,2,c
 13619   010D0A  EF89  F086         	goto	u2061
 13620   010D0E  EF8B  F086         	goto	u2060
 13621   010D12                     u2061:
 13622   010D12  EF5F  F086         	goto	l3236
 13623   010D16                     u2060:
 13624   010D16                     
 13625                           ; BSR set to: 5
 13626                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
 13627   010D16  A1EA               	btfss	_flags& (0+255),0,b
 13628   010D18  EF90  F086         	goto	u2071
 13629   010D1C  EF92  F086         	goto	u2070
 13630   010D20                     u2071:
 13631   010D20  EFB0  F086         	goto	l1603
 13632   010D24                     u2070:
 13633   010D24  EFA1  F086         	goto	l3248
 13634   010D28                     l3244:
 13635                           
 13636                           ; BSR set to: 5
 13637                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
 13638   010D28  0E00               	movlw	0
 13639   010D2A  6F61               	movwf	(fputc@c+1)& (0+255),b
 13640   010D2C  0E20               	movlw	32
 13641   010D2E  6F60               	movwf	fputc@c& (0+255),b
 13642   010D30  C569  F562         	movff	stoa@fp,fputc@fp
 13643   010D34  C56A  F563         	movff	stoa@fp+1,fputc@fp+1
 13644   010D38  EC9C  F08A         	call	_fputc	;wreg free
 13645   010D3C                     
 13646                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
 13647   010D3C  0105               	movlb	5	; () banked
 13648   010D3E  4B75               	infsnz	stoa@l& (0+255),f,b
 13649   010D40  2B76               	incf	(stoa@l+1)& (0+255),f,b
 13650   010D42                     l3248:
 13651                           
 13652                           ; BSR set to: 5
 13653                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
 13654   010D42  5171               	movf	stoa@w& (0+255),w,b
 13655   010D44  5D75               	subwf	stoa@l& (0+255),w,b
 13656   010D46  5176               	movf	(stoa@l+1)& (0+255),w,b
 13657   010D48  0A80               	xorlw	128
 13658   010D4A  6F6D               	movwf	??_stoa& (0+255),b
 13659   010D4C  5172               	movf	(stoa@w+1)& (0+255),w,b
 13660   010D4E  0A80               	xorlw	128
 13661   010D50  596D               	subwfb	??_stoa& (0+255),w,b
 13662   010D52  A0D8               	btfss	status,0,c
 13663   010D54  EFAE  F086         	goto	u2081
 13664   010D58  EFB0  F086         	goto	u2080
 13665   010D5C                     u2081:
 13666   010D5C  EF94  F086         	goto	l3244
 13667   010D60                     u2080:
 13668   010D60                     l1603:
 13669                           
 13670                           ; BSR set to: 5
 13671   010D60  0012               	return		;funcret
 13672   010D62                     __end_of_stoa:
 13673                           	callstack 0
 13674                           
 13675 ;; *************** function _read_prec_or_width *****************
 13676 ;; Defined at:
 13677 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 13678 ;; Parameters:    Size  Location     Type
 13679 ;;  fmt             2    0[BANK5 ] PTR PTR const unsigned c
 13680 ;;		 -> vfprintf@cfmt(2), 
 13681 ;;  ap              2    2[BANK5 ] PTR PTR void [1]
 13682 ;;		 -> printf@ap(2), 
 13683 ;; Auto vars:     Size  Location     Type
 13684 ;;  c               1    6[BANK5 ] unsigned char 
 13685 ;;  n               2    7[BANK5 ] int 
 13686 ;; Return value:  Size  Location     Type
 13687 ;;                  2    0[BANK5 ] int 
 13688 ;; Registers used:
 13689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13690 ;; Tracked objects:
 13691 ;;		On entry : 0/0
 13692 ;;		On exit  : 0/0
 13693 ;;		Unchanged: 0/0
 13694 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13695 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13696 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13697 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13698 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13699 ;;Total ram usage:        9 bytes
 13700 ;; Hardware stack levels used: 1
 13701 ;; Hardware stack levels required when called: 7
 13702 ;; This function calls:
 13703 ;;		Nothing
 13704 ;; This function is called by:
 13705 ;;		_vfpfcnvrt
 13706 ;; This function uses a non-reentrant model
 13707 ;;
 13708                           
 13709                           	psect	text19
 13710   01146A                     __ptext19:
 13711                           	callstack 0
 13712   01146A                     _read_prec_or_width:
 13713                           	callstack 114
 13714   01146A                     
 13715                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 13716   01146A  0E00               	movlw	0
 13717   01146C  0105               	movlb	5	; () banked
 13718   01146E  6F68               	movwf	(read_prec_or_width@n+1)& (0+255),b
 13719   011470  0E00               	movlw	0
 13720   011472  6F67               	movwf	read_prec_or_width@n& (0+255),b
 13721   011474                     
 13722                           ; BSR set to: 5
 13723                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 13724   011474  C560  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 13725   011478  C561  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 13726   01147C  C4DE F4F6          	movff	postinc2,tblptrl
 13727   011480  C4DD F4F7          	movff	postdec2,tblptrh
 13728   011484                     	if	0	;tblptru may be non-zero
 13729   011484                     	endif
 13730   011484                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13731   011484  0E00               	movlw	low (__mediumconst shr (0+16))
 13732   011486  6EF8               	movwf	tblptru,c
 13733   011488                     	endif
 13734   011488  0008               	tblrd		*
 13735   01148A  50F5               	movf	tablat,w,c
 13736   01148C  0A2A               	xorlw	42
 13737   01148E  A4D8               	btfss	status,2,c
 13738   011490  EF4C  F08A         	goto	u2161
 13739   011494  EF4E  F08A         	goto	u2160
 13740   011498                     u2161:
 13741   011498  EF81  F08A         	goto	l3298
 13742   01149C                     u2160:
 13743   01149C                     
 13744                           ; BSR set to: 5
 13745                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 13746   01149C  C560  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 13747   0114A0  C561  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 13748   0114A4  2ADE               	incf	postinc2,f,c
 13749   0114A6  0E00               	movlw	0
 13750   0114A8  22DD               	addwfc	postdec2,f,c
 13751                           
 13752                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 13753   0114AA  C562  F4D9         	movff	read_prec_or_width@ap,fsr2l
 13754   0114AE  C563  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
 13755   0114B2  C4DF F564          	movff	indf2,??_read_prec_or_width
 13756   0114B6  0E02               	movlw	2
 13757   0114B8  26DE               	addwf	postinc2,f,c
 13758   0114BA  C4DF F565          	movff	indf2,??_read_prec_or_width+1
 13759   0114BE  0E00               	movlw	0
 13760   0114C0  22DD               	addwfc	postdec2,f,c
 13761   0114C2  C564  F4D9         	movff	??_read_prec_or_width,fsr2l
 13762   0114C6  C565  F4DA         	movff	??_read_prec_or_width+1,fsr2h
 13763   0114CA  C4DE F567          	movff	postinc2,read_prec_or_width@n
 13764   0114CE  C4DD F568          	movff	postdec2,read_prec_or_width@n+1
 13765                           
 13766                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 13767   0114D2  EF97  F08A         	goto	l1619
 13768   0114D6                     l3294:
 13769                           
 13770                           ; BSR set to: 5
 13771                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 13772   0114D6  0E0A               	movlw	10
 13773   0114D8  0367               	mulwf	read_prec_or_width@n& (0+255),b
 13774   0114DA  C4F3 F564          	movff	prodl,??_read_prec_or_width
 13775   0114DE  C4F4 F565          	movff	prodh,??_read_prec_or_width+1
 13776   0114E2  0368               	mulwf	(read_prec_or_width@n+1)& (0+255),b
 13777   0114E4  50F3               	movf	prodl,w,c
 13778   0114E6  2765               	addwf	(??_read_prec_or_width+1)& (0+255),f,b
 13779   0114E8  5166               	movf	read_prec_or_width@c& (0+255),w,b
 13780   0114EA  2564               	addwf	??_read_prec_or_width& (0+255),w,b
 13781   0114EC  6F67               	movwf	read_prec_or_width@n& (0+255),b
 13782   0114EE  0E00               	movlw	0
 13783   0114F0  2165               	addwfc	(??_read_prec_or_width+1)& (0+255),w,b
 13784   0114F2  6F68               	movwf	(read_prec_or_width@n+1)& (0+255),b
 13785   0114F4                     
 13786                           ; BSR set to: 5
 13787                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 13788   0114F4  C560  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 13789   0114F8  C561  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 13790   0114FC  2ADE               	incf	postinc2,f,c
 13791   0114FE  0E00               	movlw	0
 13792   011500  22DD               	addwfc	postdec2,f,c
 13793   011502                     l3298:
 13794                           
 13795                           ; BSR set to: 5
 13796                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 13797   011502  C560  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 13798   011506  C561  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 13799   01150A  C4DE F4F6          	movff	postinc2,tblptrl
 13800   01150E  C4DD F4F7          	movff	postdec2,tblptrh
 13801   011512                     	if	0	;tblptru may be non-zero
 13802   011512                     	endif
 13803   011512                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13804   011512  0E00               	movlw	low (__mediumconst shr (0+16))
 13805   011514  6EF8               	movwf	tblptru,c
 13806   011516                     	endif
 13807   011516  0008               	tblrd		*
 13808   011518  50F5               	movf	tablat,w,c
 13809   01151A  0FD0               	addlw	208
 13810   01151C  6F66               	movwf	read_prec_or_width@c& (0+255),b
 13811   01151E  0E09               	movlw	9
 13812   011520  6566               	cpfsgt	read_prec_or_width@c& (0+255),b
 13813   011522  EF95  F08A         	goto	u2171
 13814   011526  EF97  F08A         	goto	u2170
 13815   01152A                     u2171:
 13816   01152A  EF6B  F08A         	goto	l3294
 13817   01152E                     u2170:
 13818   01152E                     l1619:
 13819                           
 13820                           ; BSR set to: 5
 13821                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 13822   01152E  C567  F560         	movff	read_prec_or_width@n,?_read_prec_or_width
 13823   011532  C568  F561         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 13824   011536                     
 13825                           ; BSR set to: 5
 13826   011536  0012               	return		;funcret
 13827   011538                     __end_of_read_prec_or_width:
 13828                           	callstack 0
 13829                           
 13830 ;; *************** function _dtoa *****************
 13831 ;; Defined at:
 13832 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 13833 ;; Parameters:    Size  Location     Type
 13834 ;;  fp              2   25[BANK5 ] PTR struct _IO_FILE
 13835 ;;		 -> NULL(0), 
 13836 ;;  d               2   27[BANK5 ] int 
 13837 ;; Auto vars:     Size  Location     Type
 13838 ;;  i               2   35[BANK5 ] int 
 13839 ;;  w               2   32[BANK5 ] int 
 13840 ;;  s               1   34[BANK5 ] unsigned char 
 13841 ;;  p               1   31[BANK5 ] _Bool 
 13842 ;; Return value:  Size  Location     Type
 13843 ;;                  1    wreg      void 
 13844 ;; Registers used:
 13845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13846 ;; Tracked objects:
 13847 ;;		On entry : 0/0
 13848 ;;		On exit  : 0/0
 13849 ;;		Unchanged: 0/0
 13850 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13851 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13852 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13854 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13855 ;;Total ram usage:       12 bytes
 13856 ;; Hardware stack levels used: 1
 13857 ;; Hardware stack levels required when called: 11
 13858 ;; This function calls:
 13859 ;;		___awdiv
 13860 ;;		___awmod
 13861 ;;		_abs
 13862 ;;		_pad
 13863 ;; This function is called by:
 13864 ;;		_vfpfcnvrt
 13865 ;; This function uses a non-reentrant model
 13866 ;;
 13867                           
 13868                           	psect	text20
 13869   010A6E                     __ptext20:
 13870                           	callstack 0
 13871   010A6E                     _dtoa:
 13872                           	callstack 110
 13873   010A6E                     
 13874                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
 13875   010A6E  0E01               	movlw	1
 13876   010A70  0105               	movlb	5	; () banked
 13877   010A72  6F7F               	movwf	dtoa@p& (0+255),b
 13878   010A74                     
 13879                           ; BSR set to: 5
 13880                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 13881   010A74  BF7C               	btfsc	(dtoa@d+1)& (0+255),7,b
 13882   010A76  EF3F  F085         	goto	u1901
 13883   010A7A  EF42  F085         	goto	u1900
 13884   010A7E                     u1901:
 13885   010A7E  0E01               	movlw	1
 13886   010A80  EF43  F085         	goto	u1910
 13887   010A84                     u1900:
 13888   010A84  0E00               	movlw	0
 13889   010A86                     u1910:
 13890   010A86  6F82               	movwf	dtoa@s& (0+255),b
 13891   010A88                     
 13892                           ; BSR set to: 5
 13893                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 13894   010A88  C5E6  F580         	movff	_width,dtoa@w
 13895   010A8C  C5E7  F581         	movff	_width+1,dtoa@w+1
 13896   010A90                     
 13897                           ; BSR set to: 5
 13898                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
 13899   010A90  5182               	movf	dtoa@s& (0+255),w,b
 13900   010A92  B4D8               	btfsc	status,2,c
 13901   010A94  EF4E  F085         	goto	u1921
 13902   010A98  EF50  F085         	goto	u1920
 13903   010A9C                     u1921:
 13904   010A9C  EF67  F085         	goto	l1571
 13905   010AA0                     u1920:
 13906   010AA0                     
 13907                           ; BSR set to: 5
 13908                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
 13909   010AA0  0780               	decf	dtoa@w& (0+255),f,b
 13910   010AA2  A0D8               	btfss	status,0,c
 13911   010AA4  0781               	decf	(dtoa@w+1)& (0+255),f,b
 13912   010AA6                     
 13913                           ; BSR set to: 5
 13914                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 13915   010AA6  5182               	movf	dtoa@s& (0+255),w,b
 13916   010AA8  A4D8               	btfss	status,2,c
 13917   010AAA  EF59  F085         	goto	u1931
 13918   010AAE  EF5B  F085         	goto	u1930
 13919   010AB2                     u1931:
 13920   010AB2  EF61  F085         	goto	l3182
 13921   010AB6                     u1930:
 13922   010AB6                     
 13923                           ; BSR set to: 5
 13924   010AB6  0E00               	movlw	0
 13925   010AB8  6F7E               	movwf	(_dtoa$2119+1)& (0+255),b
 13926   010ABA  0E2B               	movlw	43
 13927   010ABC  6F7D               	movwf	_dtoa$2119& (0+255),b
 13928   010ABE  EF65  F085         	goto	l3184
 13929   010AC2                     l3182:
 13930                           
 13931                           ; BSR set to: 5
 13932   010AC2  0E00               	movlw	0
 13933   010AC4  6F7E               	movwf	(_dtoa$2119+1)& (0+255),b
 13934   010AC6  0E2D               	movlw	45
 13935   010AC8  6F7D               	movwf	_dtoa$2119& (0+255),b
 13936   010ACA                     l3184:
 13937                           
 13938                           ; BSR set to: 5
 13939   010ACA  C57D  F582         	movff	_dtoa$2119,dtoa@s
 13940   010ACE                     l1571:
 13941                           
 13942                           ; BSR set to: 5
 13943                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 13944   010ACE  0E00               	movlw	0
 13945   010AD0  6F84               	movwf	(dtoa@i+1)& (0+255),b
 13946   010AD2  0E1F               	movlw	31
 13947   010AD4  6F83               	movwf	dtoa@i& (0+255),b
 13948   010AD6                     
 13949                           ; BSR set to: 5
 13950                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 13951   010AD6  0107               	movlb	7	; () banked
 13952   010AD8  6BE7               	clrf	(_dbuf+31)& (0+255),b
 13953                           
 13954                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 13955   010ADA  EF9E  F085         	goto	l3198
 13956   010ADE                     l3188:
 13957                           
 13958                           ; BSR set to: 5
 13959                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
 13960   010ADE  0783               	decf	dtoa@i& (0+255),f,b
 13961   010AE0  A0D8               	btfss	status,0,c
 13962   010AE2  0784               	decf	(dtoa@i+1)& (0+255),f,b
 13963   010AE4                     
 13964                           ; BSR set to: 5
 13965                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 13966   010AE4  0EC8               	movlw	low _dbuf
 13967   010AE6  2583               	addwf	dtoa@i& (0+255),w,b
 13968   010AE8  6ED9               	movwf	fsr2l,c
 13969   010AEA  0E07               	movlw	high _dbuf
 13970   010AEC  2184               	addwfc	(dtoa@i+1)& (0+255),w,b
 13971   010AEE  6EDA               	movwf	fsr2h,c
 13972   010AF0  C57B  F560         	movff	dtoa@d,___awmod@dividend
 13973   010AF4  C57C  F561         	movff	dtoa@d+1,___awmod@dividend+1
 13974   010AF8  0E00               	movlw	0
 13975   010AFA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13976   010AFC  0E0A               	movlw	10
 13977   010AFE  6F62               	movwf	___awmod@divisor& (0+255),b
 13978   010B00  ECAA  F08D         	call	___awmod	;wreg free
 13979   010B04  C560  F566         	movff	?___awmod,abs@a
 13980   010B08  C561  F567         	movff	?___awmod+1,abs@a+1
 13981   010B0C  EC9E  F092         	call	_abs	;wreg free
 13982   010B10  0105               	movlb	5	; () banked
 13983   010B12  5166               	movf	?_abs& (0+255),w,b
 13984   010B14  0F30               	addlw	48
 13985   010B16  6EDF               	movwf	indf2,c
 13986   010B18                     
 13987                           ; BSR set to: 5
 13988                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 13989   010B18  6B7F               	clrf	dtoa@p& (0+255),b
 13990   010B1A                     
 13991                           ; BSR set to: 5
 13992                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
 13993   010B1A  0780               	decf	dtoa@w& (0+255),f,b
 13994   010B1C  A0D8               	btfss	status,0,c
 13995   010B1E  0781               	decf	(dtoa@w+1)& (0+255),f,b
 13996   010B20                     
 13997                           ; BSR set to: 5
 13998                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 13999   010B20  C57B  F560         	movff	dtoa@d,___awdiv@dividend
 14000   010B24  C57C  F561         	movff	dtoa@d+1,___awdiv@dividend+1
 14001   010B28  0E00               	movlw	0
 14002   010B2A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 14003   010B2C  0E0A               	movlw	10
 14004   010B2E  6F62               	movwf	___awdiv@divisor& (0+255),b
 14005   010B30  EC91  F08C         	call	___awdiv	;wreg free
 14006   010B34  C560  F57B         	movff	?___awdiv,dtoa@d
 14007   010B38  C561  F57C         	movff	?___awdiv+1,dtoa@d+1
 14008   010B3C                     l3198:
 14009                           
 14010                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 14011   010B3C  0105               	movlb	5	; () banked
 14012   010B3E  BF84               	btfsc	(dtoa@i+1)& (0+255),7,b
 14013   010B40  EFAA  F085         	goto	u1941
 14014   010B44  5184               	movf	(dtoa@i+1)& (0+255),w,b
 14015   010B46  E108               	bnz	u1940
 14016   010B48  0583               	decf	dtoa@i& (0+255),w,b
 14017   010B4A  A0D8               	btfss	status,0,c
 14018   010B4C  EFAA  F085         	goto	u1941
 14019   010B50  EFAC  F085         	goto	u1940
 14020   010B54                     u1941:
 14021   010B54  EFD1  F085         	goto	l3208
 14022   010B58                     u1940:
 14023   010B58                     
 14024                           ; BSR set to: 5
 14025   010B58  517B               	movf	dtoa@d& (0+255),w,b
 14026   010B5A  117C               	iorwf	(dtoa@d+1)& (0+255),w,b
 14027   010B5C  A4D8               	btfss	status,2,c
 14028   010B5E  EFB3  F085         	goto	u1951
 14029   010B62  EFB5  F085         	goto	u1950
 14030   010B66                     u1951:
 14031   010B66  EF6F  F085         	goto	l3188
 14032   010B6A                     u1950:
 14033   010B6A                     
 14034                           ; BSR set to: 5
 14035   010B6A  517F               	movf	dtoa@p& (0+255),w,b
 14036   010B6C  A4D8               	btfss	status,2,c
 14037   010B6E  EFBB  F085         	goto	u1961
 14038   010B72  EFBD  F085         	goto	u1960
 14039   010B76                     u1961:
 14040   010B76  EF6F  F085         	goto	l3188
 14041   010B7A                     u1960:
 14042   010B7A                     
 14043                           ; BSR set to: 5
 14044   010B7A  BF81               	btfsc	(dtoa@w+1)& (0+255),7,b
 14045   010B7C  EFC8  F085         	goto	u1971
 14046   010B80  5181               	movf	(dtoa@w+1)& (0+255),w,b
 14047   010B82  E108               	bnz	u1970
 14048   010B84  0580               	decf	dtoa@w& (0+255),w,b
 14049   010B86  A0D8               	btfss	status,0,c
 14050   010B88  EFC8  F085         	goto	u1971
 14051   010B8C  EFCA  F085         	goto	u1970
 14052   010B90                     u1971:
 14053   010B90  EFD1  F085         	goto	l3208
 14054   010B94                     u1970:
 14055   010B94                     
 14056                           ; BSR set to: 5
 14057   010B94  B3EA               	btfsc	_flags& (0+255),1,b
 14058   010B96  EFCF  F085         	goto	u1981
 14059   010B9A  EFD1  F085         	goto	u1980
 14060   010B9E                     u1981:
 14061   010B9E  EF6F  F085         	goto	l3188
 14062   010BA2                     u1980:
 14063   010BA2                     l3208:
 14064                           
 14065                           ; BSR set to: 5
 14066                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 14067   010BA2  5182               	movf	dtoa@s& (0+255),w,b
 14068   010BA4  B4D8               	btfsc	status,2,c
 14069   010BA6  EFD7  F085         	goto	u1991
 14070   010BAA  EFD9  F085         	goto	u1990
 14071   010BAE                     u1991:
 14072   010BAE  EFE4  F085         	goto	l3214
 14073   010BB2                     u1990:
 14074   010BB2                     
 14075                           ; BSR set to: 5
 14076                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
 14077   010BB2  0783               	decf	dtoa@i& (0+255),f,b
 14078   010BB4  A0D8               	btfss	status,0,c
 14079   010BB6  0784               	decf	(dtoa@i+1)& (0+255),f,b
 14080   010BB8                     
 14081                           ; BSR set to: 5
 14082                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 14083   010BB8  0EC8               	movlw	low _dbuf
 14084   010BBA  2583               	addwf	dtoa@i& (0+255),w,b
 14085   010BBC  6ED9               	movwf	fsr2l,c
 14086   010BBE  0E07               	movlw	high _dbuf
 14087   010BC0  2184               	addwfc	(dtoa@i+1)& (0+255),w,b
 14088   010BC2  6EDA               	movwf	fsr2h,c
 14089   010BC4  C582  F4DF         	movff	dtoa@s,indf2
 14090   010BC8                     l3214:
 14091                           
 14092                           ; BSR set to: 5
 14093                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 14094   010BC8  C579  F570         	movff	dtoa@fp,pad@fp
 14095   010BCC  C57A  F571         	movff	dtoa@fp+1,pad@fp+1
 14096   010BD0  0EC8               	movlw	low _dbuf
 14097   010BD2  2583               	addwf	dtoa@i& (0+255),w,b
 14098   010BD4  6F72               	movwf	pad@buf& (0+255),b
 14099   010BD6  0E07               	movlw	high _dbuf
 14100   010BD8  2184               	addwfc	(dtoa@i+1)& (0+255),w,b
 14101   010BDA  6F73               	movwf	(pad@buf+1)& (0+255),b
 14102   010BDC  C580  F574         	movff	dtoa@w,pad@p
 14103   010BE0  C581  F575         	movff	dtoa@w+1,pad@p+1
 14104   010BE4  EC58  F08E         	call	_pad	;wreg free
 14105   010BE8  0012               	return		;funcret
 14106   010BEA                     __end_of_dtoa:
 14107                           	callstack 0
 14108                           
 14109 ;; *************** function _pad *****************
 14110 ;; Defined at:
 14111 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 14112 ;; Parameters:    Size  Location     Type
 14113 ;;  fp              2   16[BANK5 ] PTR struct _IO_FILE
 14114 ;;		 -> NULL(0), 
 14115 ;;  buf             2   18[BANK5 ] PTR unsigned char 
 14116 ;;		 -> dbuf(32), 
 14117 ;;  p               2   20[BANK5 ] int 
 14118 ;; Auto vars:     Size  Location     Type
 14119 ;;  i               2   23[BANK5 ] int 
 14120 ;; Return value:  Size  Location     Type
 14121 ;;                  1    wreg      void 
 14122 ;; Registers used:
 14123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14124 ;; Tracked objects:
 14125 ;;		On entry : 0/0
 14126 ;;		On exit  : 0/0
 14127 ;;		Unchanged: 0/0
 14128 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14129 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14130 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14132 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14133 ;;Total ram usage:        9 bytes
 14134 ;; Hardware stack levels used: 1
 14135 ;; Hardware stack levels required when called: 10
 14136 ;; This function calls:
 14137 ;;		_fputc
 14138 ;;		_fputs
 14139 ;; This function is called by:
 14140 ;;		_dtoa
 14141 ;;		_xtoa
 14142 ;; This function uses a non-reentrant model
 14143 ;;
 14144                           
 14145                           	psect	text21
 14146   011CB0                     __ptext21:
 14147                           	callstack 0
 14148   011CB0                     _pad:
 14149                           	callstack 110
 14150   011CB0                     
 14151                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 14152   011CB0  0105               	movlb	5	; () banked
 14153   011CB2  A1EA               	btfss	_flags& (0+255),0,b
 14154   011CB4  EF5E  F08E         	goto	u1851
 14155   011CB8  EF60  F08E         	goto	u1850
 14156   011CBC                     u1851:
 14157   011CBC  EF6A  F08E         	goto	l3152
 14158   011CC0                     u1850:
 14159   011CC0                     
 14160                           ; BSR set to: 5
 14161                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 14162   011CC0  C572  F569         	movff	pad@buf,fputs@s
 14163   011CC4  C573  F56A         	movff	pad@buf+1,fputs@s+1
 14164   011CC8  C570  F56B         	movff	pad@fp,fputs@fp
 14165   011CCC  C571  F56C         	movff	pad@fp+1,fputs@fp+1
 14166   011CD0  EC26  F092         	call	_fputs	;wreg free
 14167   011CD4                     l3152:
 14168                           
 14169                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 14170   011CD4  0105               	movlb	5	; () banked
 14171   011CD6  BF75               	btfsc	(pad@p+1)& (0+255),7,b
 14172   011CD8  EF72  F08E         	goto	u1860
 14173   011CDC  EF70  F08E         	goto	u1861
 14174   011CE0                     u1861:
 14175   011CE0  EF76  F08E         	goto	l1563
 14176   011CE4                     u1860:
 14177   011CE4                     
 14178                           ; BSR set to: 5
 14179                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 14180   011CE4  0E00               	movlw	0
 14181   011CE6  6F75               	movwf	(pad@p+1)& (0+255),b
 14182   011CE8  0E00               	movlw	0
 14183   011CEA  6F74               	movwf	pad@p& (0+255),b
 14184   011CEC                     l1563:
 14185                           
 14186                           ; BSR set to: 5
 14187                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 14188   011CEC  0E00               	movlw	0
 14189   011CEE  6F78               	movwf	(pad@i+1)& (0+255),b
 14190   011CF0  0E00               	movlw	0
 14191   011CF2  6F77               	movwf	pad@i& (0+255),b
 14192                           
 14193                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 14194   011CF4  EF89  F08E         	goto	l3160
 14195   011CF8                     l3156:
 14196                           
 14197                           ; BSR set to: 5
 14198                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 14199   011CF8  0E00               	movlw	0
 14200   011CFA  6F61               	movwf	(fputc@c+1)& (0+255),b
 14201   011CFC  0E20               	movlw	32
 14202   011CFE  6F60               	movwf	fputc@c& (0+255),b
 14203   011D00  C570  F562         	movff	pad@fp,fputc@fp
 14204   011D04  C571  F563         	movff	pad@fp+1,fputc@fp+1
 14205   011D08  EC9C  F08A         	call	_fputc	;wreg free
 14206   011D0C                     
 14207                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
 14208   011D0C  0105               	movlb	5	; () banked
 14209   011D0E  4B77               	infsnz	pad@i& (0+255),f,b
 14210   011D10  2B78               	incf	(pad@i+1)& (0+255),f,b
 14211   011D12                     l3160:
 14212                           
 14213                           ; BSR set to: 5
 14214                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 14215   011D12  5174               	movf	pad@p& (0+255),w,b
 14216   011D14  5D77               	subwf	pad@i& (0+255),w,b
 14217   011D16  5178               	movf	(pad@i+1)& (0+255),w,b
 14218   011D18  0A80               	xorlw	128
 14219   011D1A  6F76               	movwf	??_pad& (0+255),b
 14220   011D1C  5175               	movf	(pad@p+1)& (0+255),w,b
 14221   011D1E  0A80               	xorlw	128
 14222   011D20  5976               	subwfb	??_pad& (0+255),w,b
 14223   011D22  A0D8               	btfss	status,0,c
 14224   011D24  EF96  F08E         	goto	u1871
 14225   011D28  EF98  F08E         	goto	u1870
 14226   011D2C                     u1871:
 14227   011D2C  EF7C  F08E         	goto	l3156
 14228   011D30                     u1870:
 14229   011D30                     
 14230                           ; BSR set to: 5
 14231                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 14232   011D30  B1EA               	btfsc	_flags& (0+255),0,b
 14233   011D32  EF9D  F08E         	goto	u1881
 14234   011D36  EF9F  F08E         	goto	u1880
 14235   011D3A                     u1881:
 14236   011D3A  EFA9  F08E         	goto	l1568
 14237   011D3E                     u1880:
 14238   011D3E                     
 14239                           ; BSR set to: 5
 14240                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 14241   011D3E  C572  F569         	movff	pad@buf,fputs@s
 14242   011D42  C573  F56A         	movff	pad@buf+1,fputs@s+1
 14243   011D46  C570  F56B         	movff	pad@fp,fputs@fp
 14244   011D4A  C571  F56C         	movff	pad@fp+1,fputs@fp+1
 14245   011D4E  EC26  F092         	call	_fputs	;wreg free
 14246   011D52                     l1568:
 14247   011D52  0012               	return		;funcret
 14248   011D54                     __end_of_pad:
 14249                           	callstack 0
 14250                           
 14251 ;; *************** function _fputs *****************
 14252 ;; Defined at:
 14253 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
 14254 ;; Parameters:    Size  Location     Type
 14255 ;;  s               2    9[BANK5 ] PTR const unsigned char 
 14256 ;;		 -> dbuf(32), 
 14257 ;;  fp              2   11[BANK5 ] PTR struct _IO_FILE
 14258 ;;		 -> NULL(0), 
 14259 ;; Auto vars:     Size  Location     Type
 14260 ;;  i               2   14[BANK5 ] int 
 14261 ;;  c               1   13[BANK5 ] unsigned char 
 14262 ;; Return value:  Size  Location     Type
 14263 ;;                  2    9[BANK5 ] int 
 14264 ;; Registers used:
 14265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14266 ;; Tracked objects:
 14267 ;;		On entry : 0/0
 14268 ;;		On exit  : 0/0
 14269 ;;		Unchanged: 0/0
 14270 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14271 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14272 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14274 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14275 ;;Total ram usage:        7 bytes
 14276 ;; Hardware stack levels used: 1
 14277 ;; Hardware stack levels required when called: 9
 14278 ;; This function calls:
 14279 ;;		_fputc
 14280 ;; This function is called by:
 14281 ;;		_pad
 14282 ;; This function uses a non-reentrant model
 14283 ;;
 14284                           
 14285                           	psect	text22
 14286   01244C                     __ptext22:
 14287                           	callstack 0
 14288   01244C                     _fputs:
 14289                           	callstack 110
 14290   01244C  0E00               	movlw	0
 14291   01244E  0105               	movlb	5	; () banked
 14292   012450  6F6F               	movwf	(fputs@i+1)& (0+255),b
 14293   012452  0E00               	movlw	0
 14294   012454  6F6E               	movwf	fputs@i& (0+255),b
 14295   012456  EF39  F092         	goto	l3066
 14296   01245A                     l3062:
 14297                           
 14298                           ; BSR set to: 5
 14299   01245A  C56D  F560         	movff	fputs@c,fputc@c
 14300   01245E  6B61               	clrf	(fputc@c+1)& (0+255),b
 14301   012460  C56B  F562         	movff	fputs@fp,fputc@fp
 14302   012464  C56C  F563         	movff	fputs@fp+1,fputc@fp+1
 14303   012468  EC9C  F08A         	call	_fputc	;wreg free
 14304   01246C  0105               	movlb	5	; () banked
 14305   01246E  4B6E               	infsnz	fputs@i& (0+255),f,b
 14306   012470  2B6F               	incf	(fputs@i+1)& (0+255),f,b
 14307   012472                     l3066:
 14308                           
 14309                           ; BSR set to: 5
 14310   012472  516E               	movf	fputs@i& (0+255),w,b
 14311   012474  2569               	addwf	fputs@s& (0+255),w,b
 14312   012476  6ED9               	movwf	fsr2l,c
 14313   012478  516F               	movf	(fputs@i+1)& (0+255),w,b
 14314   01247A  216A               	addwfc	(fputs@s+1)& (0+255),w,b
 14315   01247C  6EDA               	movwf	fsr2h,c
 14316   01247E  50DF               	movf	indf2,w,c
 14317   012480  6F6D               	movwf	fputs@c& (0+255),b
 14318   012482  516D               	movf	fputs@c& (0+255),w,b
 14319   012484  A4D8               	btfss	status,2,c
 14320   012486  EF47  F092         	goto	u1721
 14321   01248A  EF49  F092         	goto	u1720
 14322   01248E                     u1721:
 14323   01248E  EF2D  F092         	goto	l3062
 14324   012492                     u1720:
 14325   012492                     
 14326                           ; BSR set to: 5
 14327   012492  0012               	return		;funcret
 14328   012494                     __end_of_fputs:
 14329                           	callstack 0
 14330                           
 14331 ;; *************** function _fputc *****************
 14332 ;; Defined at:
 14333 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
 14334 ;; Parameters:    Size  Location     Type
 14335 ;;  c               2    0[BANK5 ] int 
 14336 ;;  fp              2    2[BANK5 ] PTR struct _IO_FILE
 14337 ;;		 -> NULL(0), 
 14338 ;; Auto vars:     Size  Location     Type
 14339 ;;		None
 14340 ;; Return value:  Size  Location     Type
 14341 ;;                  2    0[BANK5 ] int 
 14342 ;; Registers used:
 14343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14344 ;; Tracked objects:
 14345 ;;		On entry : 0/0
 14346 ;;		On exit  : 0/0
 14347 ;;		Unchanged: 0/0
 14348 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14349 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14351 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14352 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14353 ;;Total ram usage:        9 bytes
 14354 ;; Hardware stack levels used: 1
 14355 ;; Hardware stack levels required when called: 8
 14356 ;; This function calls:
 14357 ;;		_putch
 14358 ;; This function is called by:
 14359 ;;		_pad
 14360 ;;		_stoa
 14361 ;;		_vfpfcnvrt
 14362 ;;		_fputs
 14363 ;; This function uses a non-reentrant model
 14364 ;;
 14365                           
 14366                           	psect	text23
 14367   011538                     __ptext23:
 14368                           	callstack 0
 14369   011538                     _fputc:
 14370                           	callstack 110
 14371   011538  0105               	movlb	5	; () banked
 14372   01153A  5162               	movf	fputc@fp& (0+255),w,b
 14373   01153C  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
 14374   01153E  B4D8               	btfsc	status,2,c
 14375   011540  EFA4  F08A         	goto	u1681
 14376   011544  EFA6  F08A         	goto	u1680
 14377   011548                     u1681:
 14378   011548  EFAF  F08A         	goto	l3050
 14379   01154C                     u1680:
 14380   01154C                     
 14381                           ; BSR set to: 5
 14382   01154C  5162               	movf	fputc@fp& (0+255),w,b
 14383   01154E  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
 14384   011550  A4D8               	btfss	status,2,c
 14385   011552  EFAD  F08A         	goto	u1691
 14386   011556  EFAF  F08A         	goto	u1690
 14387   01155A                     u1691:
 14388   01155A  EFB4  F08A         	goto	l3052
 14389   01155E                     u1690:
 14390   01155E                     l3050:
 14391                           
 14392                           ; BSR set to: 5
 14393   01155E  5160               	movf	fputc@c& (0+255),w,b
 14394   011560  EC00  F095         	call	_putch
 14395   011564  EF01  F08B         	goto	l1673
 14396   011568                     l3052:
 14397                           
 14398                           ; BSR set to: 5
 14399   011568  EE20 F009          	lfsr	2,9
 14400   01156C  5162               	movf	fputc@fp& (0+255),w,b
 14401   01156E  26D9               	addwf	fsr2l,f,c
 14402   011570  5163               	movf	(fputc@fp+1)& (0+255),w,b
 14403   011572  22DA               	addwfc	fsr2h,f,c
 14404   011574  50DE               	movf	postinc2,w,c
 14405   011576  10DE               	iorwf	postinc2,w,c
 14406   011578  B4D8               	btfsc	status,2,c
 14407   01157A  EFC1  F08A         	goto	u1701
 14408   01157E  EFC3  F08A         	goto	u1700
 14409   011582                     u1701:
 14410   011582  EFDE  F08A         	goto	l3056
 14411   011586                     u1700:
 14412   011586                     
 14413                           ; BSR set to: 5
 14414   011586  EE20 F009          	lfsr	2,9
 14415   01158A  5162               	movf	fputc@fp& (0+255),w,b
 14416   01158C  26D9               	addwf	fsr2l,f,c
 14417   01158E  5163               	movf	(fputc@fp+1)& (0+255),w,b
 14418   011590  22DA               	addwfc	fsr2h,f,c
 14419   011592  EE10 F002          	lfsr	1,2
 14420   011596  5162               	movf	fputc@fp& (0+255),w,b
 14421   011598  26E1               	addwf	fsr1l,f,c
 14422   01159A  5163               	movf	(fputc@fp+1)& (0+255),w,b
 14423   01159C  22E2               	addwfc	fsr1h,f,c
 14424   01159E  50DE               	movf	postinc2,w,c
 14425   0115A0  5CE6               	subwf	postinc1,w,c
 14426   0115A2  50E6               	movf	postinc1,w,c
 14427   0115A4  0A80               	xorlw	128
 14428   0115A6  6F68               	movwf	(??_fputc+4)& (0+255),b
 14429   0115A8  50DE               	movf	postinc2,w,c
 14430   0115AA  0A80               	xorlw	128
 14431   0115AC  5968               	subwfb	(??_fputc+4)& (0+255),w,b
 14432   0115AE  B0D8               	btfsc	status,0,c
 14433   0115B0  EFDC  F08A         	goto	u1711
 14434   0115B4  EFDE  F08A         	goto	u1710
 14435   0115B8                     u1711:
 14436   0115B8  EF01  F08B         	goto	l1673
 14437   0115BC                     u1710:
 14438   0115BC                     l3056:
 14439                           
 14440                           ; BSR set to: 5
 14441   0115BC  EE20 F002          	lfsr	2,2
 14442   0115C0  5162               	movf	fputc@fp& (0+255),w,b
 14443   0115C2  26D9               	addwf	fsr2l,f,c
 14444   0115C4  5163               	movf	(fputc@fp+1)& (0+255),w,b
 14445   0115C6  22DA               	addwfc	fsr2h,f,c
 14446   0115C8  C4DE F564          	movff	postinc2,??_fputc
 14447   0115CC  C4DD F565          	movff	postdec2,??_fputc+1
 14448   0115D0  C562  F4D9         	movff	fputc@fp,fsr2l
 14449   0115D4  C563  F4DA         	movff	fputc@fp+1,fsr2h
 14450   0115D8  C4DE F566          	movff	postinc2,??_fputc+2
 14451   0115DC  C4DD F567          	movff	postdec2,??_fputc+3
 14452   0115E0  5164               	movf	??_fputc& (0+255),w,b
 14453   0115E2  2566               	addwf	(??_fputc+2)& (0+255),w,b
 14454   0115E4  6ED9               	movwf	fsr2l,c
 14455   0115E6  5165               	movf	(??_fputc+1)& (0+255),w,b
 14456   0115E8  2167               	addwfc	(??_fputc+3)& (0+255),w,b
 14457   0115EA  6EDA               	movwf	fsr2h,c
 14458   0115EC  C560  F4DF         	movff	fputc@c,indf2
 14459   0115F0  EE20 F002          	lfsr	2,2
 14460   0115F4  5162               	movf	fputc@fp& (0+255),w,b
 14461   0115F6  26D9               	addwf	fsr2l,f,c
 14462   0115F8  5163               	movf	(fputc@fp+1)& (0+255),w,b
 14463   0115FA  22DA               	addwfc	fsr2h,f,c
 14464   0115FC  2ADE               	incf	postinc2,f,c
 14465   0115FE  0E00               	movlw	0
 14466   011600  22DD               	addwfc	postdec2,f,c
 14467   011602                     l1673:
 14468   011602  0012               	return		;funcret
 14469   011604                     __end_of_fputc:
 14470                           	callstack 0
 14471                           
 14472 ;; *************** function _putch *****************
 14473 ;; Defined at:
 14474 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
 14475 ;; Parameters:    Size  Location     Type
 14476 ;;  c               1    wreg     unsigned char 
 14477 ;; Auto vars:     Size  Location     Type
 14478 ;;  c               1    0[COMRAM] unsigned char 
 14479 ;; Return value:  Size  Location     Type
 14480 ;;                  1    wreg      void 
 14481 ;; Registers used:
 14482 ;;		wreg
 14483 ;; Tracked objects:
 14484 ;;		On entry : 0/0
 14485 ;;		On exit  : 0/0
 14486 ;;		Unchanged: 0/0
 14487 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14492 ;;Total ram usage:        0 bytes
 14493 ;; Hardware stack levels used: 1
 14494 ;; Hardware stack levels required when called: 7
 14495 ;; This function calls:
 14496 ;;		Nothing
 14497 ;; This function is called by:
 14498 ;;		_fputc
 14499 ;; This function uses a non-reentrant model
 14500 ;;
 14501                           
 14502                           	psect	text24
 14503   012A00                     __ptext24:
 14504                           	callstack 0
 14505   012A00                     _putch:
 14506                           	callstack 110
 14507   012A00  0012               	return		;funcret
 14508   012A02                     __end_of_putch:
 14509                           	callstack 0
 14510                           
 14511 ;; *************** function _abs *****************
 14512 ;; Defined at:
 14513 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
 14514 ;; Parameters:    Size  Location     Type
 14515 ;;  a               2    6[BANK5 ] int 
 14516 ;; Auto vars:     Size  Location     Type
 14517 ;;		None
 14518 ;; Return value:  Size  Location     Type
 14519 ;;                  2    6[BANK5 ] int 
 14520 ;; Registers used:
 14521 ;;		wreg, status,2, status,0
 14522 ;; Tracked objects:
 14523 ;;		On entry : 0/0
 14524 ;;		On exit  : 0/0
 14525 ;;		Unchanged: 0/0
 14526 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14527 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14529 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14530 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14531 ;;Total ram usage:        4 bytes
 14532 ;; Hardware stack levels used: 1
 14533 ;; Hardware stack levels required when called: 7
 14534 ;; This function calls:
 14535 ;;		Nothing
 14536 ;; This function is called by:
 14537 ;;		_dtoa
 14538 ;; This function uses a non-reentrant model
 14539 ;;
 14540                           
 14541                           	psect	text25
 14542   01253C                     __ptext25:
 14543                           	callstack 0
 14544   01253C                     _abs:
 14545                           	callstack 113
 14546   01253C  0105               	movlb	5	; () banked
 14547   01253E  BF67               	btfsc	(abs@a+1)& (0+255),7,b
 14548   012540  EFA4  F092         	goto	u1891
 14549   012544  EFA6  F092         	goto	u1890
 14550   012548                     u1891:
 14551   012548  EFAC  F092         	goto	l1658
 14552   01254C                     u1890:
 14553   01254C                     
 14554                           ; BSR set to: 5
 14555   01254C  C566  F566         	movff	abs@a,?_abs
 14556   012550  C567  F567         	movff	abs@a+1,?_abs+1
 14557   012554  EFB8  F092         	goto	l1661
 14558   012558                     l1658:
 14559                           
 14560                           ; BSR set to: 5
 14561   012558  C566  F568         	movff	abs@a,??_abs
 14562   01255C  C567  F569         	movff	abs@a+1,??_abs+1
 14563   012560  1F68               	comf	??_abs& (0+255),f,b
 14564   012562  1F69               	comf	(??_abs+1)& (0+255),f,b
 14565   012564  4B68               	infsnz	??_abs& (0+255),f,b
 14566   012566  2B69               	incf	(??_abs+1)& (0+255),f,b
 14567   012568  C568  F566         	movff	??_abs,?_abs
 14568   01256C  C569  F567         	movff	??_abs+1,?_abs+1
 14569   012570                     l1661:
 14570                           
 14571                           ; BSR set to: 5
 14572   012570  0012               	return		;funcret
 14573   012572                     __end_of_abs:
 14574                           	callstack 0
 14575                           
 14576 ;; *************** function ___awmod *****************
 14577 ;; Defined at:
 14578 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
 14579 ;; Parameters:    Size  Location     Type
 14580 ;;  dividend        2    0[BANK5 ] int 
 14581 ;;  divisor         2    2[BANK5 ] int 
 14582 ;; Auto vars:     Size  Location     Type
 14583 ;;  sign            1    5[BANK5 ] unsigned char 
 14584 ;;  counter         1    4[BANK5 ] unsigned char 
 14585 ;; Return value:  Size  Location     Type
 14586 ;;                  2    0[BANK5 ] int 
 14587 ;; Registers used:
 14588 ;;		wreg, status,2, status,0
 14589 ;; Tracked objects:
 14590 ;;		On entry : 0/0
 14591 ;;		On exit  : 0/0
 14592 ;;		Unchanged: 0/0
 14593 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14594 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14595 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14597 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14598 ;;Total ram usage:        6 bytes
 14599 ;; Hardware stack levels used: 1
 14600 ;; Hardware stack levels required when called: 7
 14601 ;; This function calls:
 14602 ;;		Nothing
 14603 ;; This function is called by:
 14604 ;;		_dtoa
 14605 ;; This function uses a non-reentrant model
 14606 ;;
 14607                           
 14608                           	psect	text26
 14609   011B54                     __ptext26:
 14610                           	callstack 0
 14611   011B54                     ___awmod:
 14612                           	callstack 113
 14613   011B54  0105               	movlb	5	; () banked
 14614   011B56  6B65               	clrf	___awmod@sign& (0+255),b
 14615   011B58                     
 14616                           ; BSR set to: 5
 14617   011B58  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
 14618   011B5A  EFB3  F08D         	goto	u1790
 14619   011B5E  EFB1  F08D         	goto	u1791
 14620   011B62                     u1791:
 14621   011B62  EFB9  F08D         	goto	l3120
 14622   011B66                     u1790:
 14623   011B66                     
 14624                           ; BSR set to: 5
 14625   011B66  6D60               	negf	___awmod@dividend& (0+255),b
 14626   011B68  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 14627   011B6A  B0D8               	btfsc	status,0,c
 14628   011B6C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 14629   011B6E                     
 14630                           ; BSR set to: 5
 14631   011B6E  0E01               	movlw	1
 14632   011B70  6F65               	movwf	___awmod@sign& (0+255),b
 14633   011B72                     l3120:
 14634                           
 14635                           ; BSR set to: 5
 14636   011B72  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 14637   011B74  EFC0  F08D         	goto	u1800
 14638   011B78  EFBE  F08D         	goto	u1801
 14639   011B7C                     u1801:
 14640   011B7C  EFC4  F08D         	goto	l3124
 14641   011B80                     u1800:
 14642   011B80                     
 14643                           ; BSR set to: 5
 14644   011B80  6D62               	negf	___awmod@divisor& (0+255),b
 14645   011B82  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 14646   011B84  B0D8               	btfsc	status,0,c
 14647   011B86  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 14648   011B88                     l3124:
 14649                           
 14650                           ; BSR set to: 5
 14651   011B88  5162               	movf	___awmod@divisor& (0+255),w,b
 14652   011B8A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 14653   011B8C  B4D8               	btfsc	status,2,c
 14654   011B8E  EFCB  F08D         	goto	u1811
 14655   011B92  EFCD  F08D         	goto	u1810
 14656   011B96                     u1811:
 14657   011B96  EFF1  F08D         	goto	l3140
 14658   011B9A                     u1810:
 14659   011B9A                     
 14660                           ; BSR set to: 5
 14661   011B9A  0E01               	movlw	1
 14662   011B9C  6F64               	movwf	___awmod@counter& (0+255),b
 14663   011B9E  EFD5  F08D         	goto	l3130
 14664   011BA2                     l3128:
 14665                           
 14666                           ; BSR set to: 5
 14667   011BA2  90D8               	bcf	status,0,c
 14668   011BA4  3762               	rlcf	___awmod@divisor& (0+255),f,b
 14669   011BA6  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 14670   011BA8  2B64               	incf	___awmod@counter& (0+255),f,b
 14671   011BAA                     l3130:
 14672                           
 14673                           ; BSR set to: 5
 14674   011BAA  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 14675   011BAC  EFDA  F08D         	goto	u1821
 14676   011BB0  EFDC  F08D         	goto	u1820
 14677   011BB4                     u1821:
 14678   011BB4  EFD1  F08D         	goto	l3128
 14679   011BB8                     u1820:
 14680   011BB8                     l3132:
 14681                           
 14682                           ; BSR set to: 5
 14683   011BB8  5162               	movf	___awmod@divisor& (0+255),w,b
 14684   011BBA  5D60               	subwf	___awmod@dividend& (0+255),w,b
 14685   011BBC  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 14686   011BBE  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 14687   011BC0  A0D8               	btfss	status,0,c
 14688   011BC2  EFE5  F08D         	goto	u1831
 14689   011BC6  EFE7  F08D         	goto	u1830
 14690   011BCA                     u1831:
 14691   011BCA  EFEB  F08D         	goto	l3136
 14692   011BCE                     u1830:
 14693   011BCE                     
 14694                           ; BSR set to: 5
 14695   011BCE  5162               	movf	___awmod@divisor& (0+255),w,b
 14696   011BD0  5F60               	subwf	___awmod@dividend& (0+255),f,b
 14697   011BD2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 14698   011BD4  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 14699   011BD6                     l3136:
 14700                           
 14701                           ; BSR set to: 5
 14702   011BD6  90D8               	bcf	status,0,c
 14703   011BD8  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 14704   011BDA  3362               	rrcf	___awmod@divisor& (0+255),f,b
 14705   011BDC                     
 14706                           ; BSR set to: 5
 14707   011BDC  2F64               	decfsz	___awmod@counter& (0+255),f,b
 14708   011BDE  EFDC  F08D         	goto	l3132
 14709   011BE2                     l3140:
 14710                           
 14711                           ; BSR set to: 5
 14712   011BE2  5165               	movf	___awmod@sign& (0+255),w,b
 14713   011BE4  B4D8               	btfsc	status,2,c
 14714   011BE6  EFF7  F08D         	goto	u1841
 14715   011BEA  EFF9  F08D         	goto	u1840
 14716   011BEE                     u1841:
 14717   011BEE  EFFD  F08D         	goto	l3144
 14718   011BF2                     u1840:
 14719   011BF2                     
 14720                           ; BSR set to: 5
 14721   011BF2  6D60               	negf	___awmod@dividend& (0+255),b
 14722   011BF4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 14723   011BF6  B0D8               	btfsc	status,0,c
 14724   011BF8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 14725   011BFA                     l3144:
 14726                           
 14727                           ; BSR set to: 5
 14728   011BFA  C560  F560         	movff	___awmod@dividend,?___awmod
 14729   011BFE  C561  F561         	movff	___awmod@dividend+1,?___awmod+1
 14730   011C02                     
 14731                           ; BSR set to: 5
 14732   011C02  0012               	return		;funcret
 14733   011C04                     __end_of___awmod:
 14734                           	callstack 0
 14735                           
 14736 ;; *************** function ___awdiv *****************
 14737 ;; Defined at:
 14738 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
 14739 ;; Parameters:    Size  Location     Type
 14740 ;;  dividend        2    0[BANK5 ] int 
 14741 ;;  divisor         2    2[BANK5 ] int 
 14742 ;; Auto vars:     Size  Location     Type
 14743 ;;  quotient        2    6[BANK5 ] int 
 14744 ;;  sign            1    5[BANK5 ] unsigned char 
 14745 ;;  counter         1    4[BANK5 ] unsigned char 
 14746 ;; Return value:  Size  Location     Type
 14747 ;;                  2    0[BANK5 ] int 
 14748 ;; Registers used:
 14749 ;;		wreg, status,2, status,0
 14750 ;; Tracked objects:
 14751 ;;		On entry : 0/0
 14752 ;;		On exit  : 0/0
 14753 ;;		Unchanged: 0/0
 14754 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14756 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14758 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14759 ;;Total ram usage:        8 bytes
 14760 ;; Hardware stack levels used: 1
 14761 ;; Hardware stack levels required when called: 7
 14762 ;; This function calls:
 14763 ;;		Nothing
 14764 ;; This function is called by:
 14765 ;;		_dtoa
 14766 ;; This function uses a non-reentrant model
 14767 ;;
 14768                           
 14769                           	psect	text27
 14770   011922                     __ptext27:
 14771                           	callstack 0
 14772   011922                     ___awdiv:
 14773                           	callstack 113
 14774   011922  0105               	movlb	5	; () banked
 14775   011924  6B65               	clrf	___awdiv@sign& (0+255),b
 14776   011926                     
 14777                           ; BSR set to: 5
 14778   011926  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 14779   011928  EF9A  F08C         	goto	u1730
 14780   01192C  EF98  F08C         	goto	u1731
 14781   011930                     u1731:
 14782   011930  EFA0  F08C         	goto	l3076
 14783   011934                     u1730:
 14784   011934                     
 14785                           ; BSR set to: 5
 14786   011934  6D62               	negf	___awdiv@divisor& (0+255),b
 14787   011936  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 14788   011938  B0D8               	btfsc	status,0,c
 14789   01193A  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 14790   01193C                     
 14791                           ; BSR set to: 5
 14792   01193C  0E01               	movlw	1
 14793   01193E  6F65               	movwf	___awdiv@sign& (0+255),b
 14794   011940                     l3076:
 14795                           
 14796                           ; BSR set to: 5
 14797   011940  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
 14798   011942  EFA7  F08C         	goto	u1740
 14799   011946  EFA5  F08C         	goto	u1741
 14800   01194A                     u1741:
 14801   01194A  EFAD  F08C         	goto	l3082
 14802   01194E                     u1740:
 14803   01194E                     
 14804                           ; BSR set to: 5
 14805   01194E  6D60               	negf	___awdiv@dividend& (0+255),b
 14806   011950  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 14807   011952  B0D8               	btfsc	status,0,c
 14808   011954  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 14809   011956                     
 14810                           ; BSR set to: 5
 14811   011956  0E01               	movlw	1
 14812   011958  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 14813   01195A                     l3082:
 14814                           
 14815                           ; BSR set to: 5
 14816   01195A  0E00               	movlw	0
 14817   01195C  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 14818   01195E  0E00               	movlw	0
 14819   011960  6F66               	movwf	___awdiv@quotient& (0+255),b
 14820   011962                     
 14821                           ; BSR set to: 5
 14822   011962  5162               	movf	___awdiv@divisor& (0+255),w,b
 14823   011964  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 14824   011966  B4D8               	btfsc	status,2,c
 14825   011968  EFB8  F08C         	goto	u1751
 14826   01196C  EFBA  F08C         	goto	u1750
 14827   011970                     u1751:
 14828   011970  EFE2  F08C         	goto	l3104
 14829   011974                     u1750:
 14830   011974                     
 14831                           ; BSR set to: 5
 14832   011974  0E01               	movlw	1
 14833   011976  6F64               	movwf	___awdiv@counter& (0+255),b
 14834   011978  EFC2  F08C         	goto	l3090
 14835   01197C                     l3088:
 14836                           
 14837                           ; BSR set to: 5
 14838   01197C  90D8               	bcf	status,0,c
 14839   01197E  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 14840   011980  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 14841   011982  2B64               	incf	___awdiv@counter& (0+255),f,b
 14842   011984                     l3090:
 14843                           
 14844                           ; BSR set to: 5
 14845   011984  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 14846   011986  EFC7  F08C         	goto	u1761
 14847   01198A  EFC9  F08C         	goto	u1760
 14848   01198E                     u1761:
 14849   01198E  EFBE  F08C         	goto	l3088
 14850   011992                     u1760:
 14851   011992                     l3092:
 14852                           
 14853                           ; BSR set to: 5
 14854   011992  90D8               	bcf	status,0,c
 14855   011994  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 14856   011996  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 14857   011998                     
 14858                           ; BSR set to: 5
 14859   011998  5162               	movf	___awdiv@divisor& (0+255),w,b
 14860   01199A  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 14861   01199C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14862   01199E  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 14863   0119A0  A0D8               	btfss	status,0,c
 14864   0119A2  EFD5  F08C         	goto	u1771
 14865   0119A6  EFD7  F08C         	goto	u1770
 14866   0119AA                     u1771:
 14867   0119AA  EFDC  F08C         	goto	l3100
 14868   0119AE                     u1770:
 14869   0119AE                     
 14870                           ; BSR set to: 5
 14871   0119AE  5162               	movf	___awdiv@divisor& (0+255),w,b
 14872   0119B0  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 14873   0119B2  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14874   0119B4  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 14875   0119B6                     
 14876                           ; BSR set to: 5
 14877   0119B6  8166               	bsf	___awdiv@quotient& (0+255),0,b
 14878   0119B8                     l3100:
 14879                           
 14880                           ; BSR set to: 5
 14881   0119B8  90D8               	bcf	status,0,c
 14882   0119BA  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 14883   0119BC  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 14884   0119BE                     
 14885                           ; BSR set to: 5
 14886   0119BE  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 14887   0119C0  EFC9  F08C         	goto	l3092
 14888   0119C4                     l3104:
 14889                           
 14890                           ; BSR set to: 5
 14891   0119C4  5165               	movf	___awdiv@sign& (0+255),w,b
 14892   0119C6  B4D8               	btfsc	status,2,c
 14893   0119C8  EFE8  F08C         	goto	u1781
 14894   0119CC  EFEA  F08C         	goto	u1780
 14895   0119D0                     u1781:
 14896   0119D0  EFEE  F08C         	goto	l3108
 14897   0119D4                     u1780:
 14898   0119D4                     
 14899                           ; BSR set to: 5
 14900   0119D4  6D66               	negf	___awdiv@quotient& (0+255),b
 14901   0119D6  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 14902   0119D8  B0D8               	btfsc	status,0,c
 14903   0119DA  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 14904   0119DC                     l3108:
 14905                           
 14906                           ; BSR set to: 5
 14907   0119DC  C566  F560         	movff	___awdiv@quotient,?___awdiv
 14908   0119E0  C567  F561         	movff	___awdiv@quotient+1,?___awdiv+1
 14909   0119E4                     
 14910                           ; BSR set to: 5
 14911   0119E4  0012               	return		;funcret
 14912   0119E6                     __end_of___awdiv:
 14913                           	callstack 0
 14914                           
 14915 ;; *************** function _Nrf24_getRetransmitDelay *****************
 14916 ;; Defined at:
 14917 ;;		line 494 in file "mirf.c"
 14918 ;; Parameters:    Size  Location     Type
 14919 ;;  dev             2   10[BANK5 ] PTR struct .
 14920 ;;		 -> dev(3), 
 14921 ;; Auto vars:     Size  Location     Type
 14922 ;;  value           1   12[BANK5 ] unsigned char 
 14923 ;; Return value:  Size  Location     Type
 14924 ;;                  1    wreg      unsigned char 
 14925 ;; Registers used:
 14926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14927 ;; Tracked objects:
 14928 ;;		On entry : 0/0
 14929 ;;		On exit  : 0/0
 14930 ;;		Unchanged: 0/0
 14931 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14935 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14936 ;;Total ram usage:        3 bytes
 14937 ;; Hardware stack levels used: 1
 14938 ;; Hardware stack levels required when called: 10
 14939 ;; This function calls:
 14940 ;;		_Nrf24_readRegister
 14941 ;; This function is called by:
 14942 ;;		_Nrf24_printDetails
 14943 ;; This function uses a non-reentrant model
 14944 ;;
 14945                           
 14946                           	psect	text28
 14947   0128FA                     __ptext28:
 14948                           	callstack 0
 14949   0128FA                     _Nrf24_getRetransmitDelay:
 14950                           	callstack 114
 14951   0128FA                     
 14952                           ;mirf.c: 494: uint8_t Nrf24_getRetransmitDelay(NRF24_t * dev);mirf.c: 495: {;mirf.c: 496
      +                          :  uint8_t value;;mirf.c: 497:  Nrf24_readRegister(0x04, &value, 1);
 14953   0128FA  0E6C               	movlw	low Nrf24_getRetransmitDelay@value
 14954   0128FC  0105               	movlb	5	; () banked
 14955   0128FE  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 14956   012900  0E05               	movlw	high Nrf24_getRetransmitDelay@value
 14957   012902  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 14958   012904  0E01               	movlw	1
 14959   012906  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 14960   012908  0E04               	movlw	4
 14961   01290A  ECEF  F092         	call	_Nrf24_readRegister
 14962   01290E                     
 14963                           ;mirf.c: 498:  return (value >> 4);
 14964   01290E  0105               	movlb	5	; () banked
 14965   012910  396C               	swapf	Nrf24_getRetransmitDelay@value& (0+255),w,b
 14966   012912  0B0F               	andlw	15
 14967   012914                     
 14968                           ; BSR set to: 5
 14969   012914  0012               	return		;funcret
 14970   012916                     __end_of_Nrf24_getRetransmitDelay:
 14971                           	callstack 0
 14972                           
 14973 ;; *************** function _Nrf24_getPALevel *****************
 14974 ;; Defined at:
 14975 ;;		line 481 in file "mirf.c"
 14976 ;; Parameters:    Size  Location     Type
 14977 ;;  dev             2   10[BANK5 ] PTR struct .
 14978 ;;		 -> dev(3), 
 14979 ;; Auto vars:     Size  Location     Type
 14980 ;;  level           1   12[BANK5 ] unsigned char 
 14981 ;; Return value:  Size  Location     Type
 14982 ;;                  1    wreg      unsigned char 
 14983 ;; Registers used:
 14984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14985 ;; Tracked objects:
 14986 ;;		On entry : 0/0
 14987 ;;		On exit  : 0/0
 14988 ;;		Unchanged: 0/0
 14989 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14990 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14991 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14993 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14994 ;;Total ram usage:        3 bytes
 14995 ;; Hardware stack levels used: 1
 14996 ;; Hardware stack levels required when called: 10
 14997 ;; This function calls:
 14998 ;;		_Nrf24_readRegister
 14999 ;; This function is called by:
 15000 ;;		_Nrf24_printDetails
 15001 ;;		_Nrf24_getPALevelString
 15002 ;; This function uses a non-reentrant model
 15003 ;;
 15004                           
 15005                           	psect	text29
 15006   01285C                     __ptext29:
 15007                           	callstack 0
 15008   01285C                     _Nrf24_getPALevel:
 15009                           	callstack 114
 15010   01285C                     
 15011                           ;mirf.c: 481: uint8_t Nrf24_getPALevel(NRF24_t * dev);mirf.c: 482: {;mirf.c: 483:  uint8
      +                          _t level;;mirf.c: 484:  Nrf24_readRegister(0x06, &level, sizeof(level));
 15012   01285C  0E6C               	movlw	low Nrf24_getPALevel@level
 15013   01285E  0105               	movlb	5	; () banked
 15014   012860  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 15015   012862  0E05               	movlw	high Nrf24_getPALevel@level
 15016   012864  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 15017   012866  0E01               	movlw	1
 15018   012868  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 15019   01286A  0E06               	movlw	6
 15020   01286C  ECEF  F092         	call	_Nrf24_readRegister
 15021   012870                     
 15022                           ;mirf.c: 485:  level = (level & ((1<<(1)) | (1<<(2)))) >> 1;
 15023   012870  0105               	movlb	5	; () banked
 15024   012872  90D8               	bcf	status,0,c
 15025   012874  316C               	rrcf	Nrf24_getPALevel@level& (0+255),w,b
 15026   012876  0B03               	andlw	3
 15027   012878  6F6C               	movwf	Nrf24_getPALevel@level& (0+255),b
 15028   01287A                     
 15029                           ; BSR set to: 5
 15030                           ;mirf.c: 486:  return (level);
 15031   01287A  516C               	movf	Nrf24_getPALevel@level& (0+255),w,b
 15032   01287C                     
 15033                           ; BSR set to: 5
 15034   01287C  0012               	return		;funcret
 15035   01287E                     __end_of_Nrf24_getPALevel:
 15036                           	callstack 0
 15037                           
 15038 ;; *************** function _Nrf24_getDataRate *****************
 15039 ;; Defined at:
 15040 ;;		line 434 in file "mirf.c"
 15041 ;; Parameters:    Size  Location     Type
 15042 ;;  dev             2   10[BANK5 ] PTR struct .
 15043 ;;		 -> dev(3), 
 15044 ;; Auto vars:     Size  Location     Type
 15045 ;;  dr              1   13[BANK5 ] unsigned char 
 15046 ;;  result          1   12[BANK5 ] enum E17461
 15047 ;; Return value:  Size  Location     Type
 15048 ;;                  1    wreg      unsigned char 
 15049 ;; Registers used:
 15050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15051 ;; Tracked objects:
 15052 ;;		On entry : 0/0
 15053 ;;		On exit  : 0/0
 15054 ;;		Unchanged: 0/0
 15055 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15056 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15057 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15059 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15060 ;;Total ram usage:        4 bytes
 15061 ;; Hardware stack levels used: 1
 15062 ;; Hardware stack levels required when called: 10
 15063 ;; This function calls:
 15064 ;;		_Nrf24_readRegister
 15065 ;; This function is called by:
 15066 ;;		_Nrf24_printDetails
 15067 ;;		_Nrf24_getDataRateString
 15068 ;; This function uses a non-reentrant model
 15069 ;;
 15070                           
 15071                           	psect	text30
 15072   0123F6                     __ptext30:
 15073                           	callstack 0
 15074   0123F6                     _Nrf24_getDataRate:
 15075                           	callstack 114
 15076   0123F6                     
 15077                           ;mirf.c: 434: uint8_t Nrf24_getDataRate(NRF24_t * dev);mirf.c: 435: {;mirf.c: 436:  rf24
      +                          _datarate_e result;;mirf.c: 437:  uint8_t dr;;mirf.c: 438:  Nrf24_readRegister(0x06, &dr
      +                          , sizeof(dr));
 15078   0123F6  0E6D               	movlw	low Nrf24_getDataRate@dr
 15079   0123F8  0105               	movlb	5	; () banked
 15080   0123FA  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 15081   0123FC  0E05               	movlw	high Nrf24_getDataRate@dr
 15082   0123FE  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 15083   012400  0E01               	movlw	1
 15084   012402  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 15085   012404  0E06               	movlw	6
 15086   012406  ECEF  F092         	call	_Nrf24_readRegister
 15087   01240A                     
 15088                           ;mirf.c: 439:  dr = dr & ((1<<(5)) | (1<<(3)));
 15089   01240A  0105               	movlb	5	; () banked
 15090   01240C  516D               	movf	Nrf24_getDataRate@dr& (0+255),w,b
 15091   01240E  0B28               	andlw	40
 15092   012410  6F6D               	movwf	Nrf24_getDataRate@dr& (0+255),b
 15093   012412                     
 15094                           ; BSR set to: 5
 15095                           ;mirf.c: 442:  if (dr == (1<<(5))) {
 15096   012412  0E20               	movlw	32
 15097   012414  196D               	xorwf	Nrf24_getDataRate@dr& (0+255),w,b
 15098   012416  A4D8               	btfss	status,2,c
 15099   012418  EF10  F092         	goto	u2691
 15100   01241C  EF12  F092         	goto	u2690
 15101   012420                     u2691:
 15102   012420  EF16  F092         	goto	l3642
 15103   012424                     u2690:
 15104   012424                     
 15105                           ; BSR set to: 5
 15106                           ;mirf.c: 444:   result = RF24_250KBPS;
 15107   012424  0E02               	movlw	2
 15108   012426  6F6C               	movwf	Nrf24_getDataRate@result& (0+255),b
 15109                           
 15110                           ;mirf.c: 445:  } else if (dr == (1<<(3))) {
 15111   012428  EF24  F092         	goto	l3646
 15112   01242C                     l3642:
 15113                           
 15114                           ; BSR set to: 5
 15115   01242C  0E08               	movlw	8
 15116   01242E  196D               	xorwf	Nrf24_getDataRate@dr& (0+255),w,b
 15117   012430  A4D8               	btfss	status,2,c
 15118   012432  EF1D  F092         	goto	u2701
 15119   012436  EF1F  F092         	goto	u2700
 15120   01243A                     u2701:
 15121   01243A  EF23  F092         	goto	l828
 15122   01243E                     u2700:
 15123   01243E                     
 15124                           ; BSR set to: 5
 15125                           ;mirf.c: 447:   result = RF24_2MBPS;
 15126   01243E  0E01               	movlw	1
 15127   012440  6F6C               	movwf	Nrf24_getDataRate@result& (0+255),b
 15128                           
 15129                           ;mirf.c: 448:  } else {
 15130   012442  EF24  F092         	goto	l3646
 15131   012446                     l828:
 15132                           
 15133                           ; BSR set to: 5
 15134                           ;mirf.c: 450:   result = RF24_1MBPS;
 15135   012446  6B6C               	clrf	Nrf24_getDataRate@result& (0+255),b
 15136   012448                     l3646:
 15137                           
 15138                           ; BSR set to: 5
 15139                           ;mirf.c: 452:  return result;
 15140   012448  516C               	movf	Nrf24_getDataRate@result& (0+255),w,b
 15141   01244A                     
 15142                           ; BSR set to: 5
 15143   01244A  0012               	return		;funcret
 15144   01244C                     __end_of_Nrf24_getDataRate:
 15145                           	callstack 0
 15146                           
 15147 ;; *************** function _Nrf24_getCRCLength *****************
 15148 ;; Defined at:
 15149 ;;		line 460 in file "mirf.c"
 15150 ;; Parameters:    Size  Location     Type
 15151 ;;  dev             2   10[BANK5 ] PTR struct .
 15152 ;;		 -> dev(3), 
 15153 ;; Auto vars:     Size  Location     Type
 15154 ;;  config          1   14[BANK5 ] unsigned char 
 15155 ;;  AA              1   13[BANK5 ] unsigned char 
 15156 ;;  result          1   12[BANK5 ] enum E17466
 15157 ;; Return value:  Size  Location     Type
 15158 ;;                  1    wreg      unsigned char 
 15159 ;; Registers used:
 15160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15161 ;; Tracked objects:
 15162 ;;		On entry : 0/0
 15163 ;;		On exit  : 0/0
 15164 ;;		Unchanged: 0/0
 15165 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15167 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15169 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15170 ;;Total ram usage:        5 bytes
 15171 ;; Hardware stack levels used: 1
 15172 ;; Hardware stack levels required when called: 10
 15173 ;; This function calls:
 15174 ;;		_Nrf24_readRegister
 15175 ;; This function is called by:
 15176 ;;		_Nrf24_printDetails
 15177 ;; This function uses a non-reentrant model
 15178 ;;
 15179                           
 15180                           	psect	text31
 15181   0121AC                     __ptext31:
 15182                           	callstack 0
 15183   0121AC                     _Nrf24_getCRCLength:
 15184                           	callstack 114
 15185   0121AC                     
 15186                           ;mirf.c: 460: uint8_t Nrf24_getCRCLength(NRF24_t * dev);mirf.c: 461: {;mirf.c: 462:  rf2
      +                          4_crclength_e result = RF24_CRC_DISABLED;
 15187   0121AC  0105               	movlb	5	; () banked
 15188   0121AE  6B6C               	clrf	Nrf24_getCRCLength@result& (0+255),b
 15189   0121B0                     
 15190                           ; BSR set to: 5
 15191                           ;mirf.c: 464:  uint8_t config;;mirf.c: 465:  Nrf24_readRegister(0x00, &config, sizeof(co
      +                          nfig));
 15192   0121B0  0E6E               	movlw	low Nrf24_getCRCLength@config
 15193   0121B2  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 15194   0121B4  0E05               	movlw	high Nrf24_getCRCLength@config
 15195   0121B6  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 15196   0121B8  0E01               	movlw	1
 15197   0121BA  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 15198   0121BC  0E00               	movlw	0
 15199   0121BE  ECEF  F092         	call	_Nrf24_readRegister
 15200   0121C2                     
 15201                           ;mirf.c: 466:  config = config & ((1<<(2)) | (1<<(3)));
 15202   0121C2  0105               	movlb	5	; () banked
 15203   0121C4  516E               	movf	Nrf24_getCRCLength@config& (0+255),w,b
 15204   0121C6  0B0C               	andlw	12
 15205   0121C8  6F6E               	movwf	Nrf24_getCRCLength@config& (0+255),b
 15206   0121CA                     
 15207                           ; BSR set to: 5
 15208                           ;mirf.c: 467:  uint8_t AA;;mirf.c: 468:  Nrf24_readRegister(0x01, &AA, sizeof(AA));
 15209   0121CA  0E6D               	movlw	low Nrf24_getCRCLength@AA
 15210   0121CC  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 15211   0121CE  0E05               	movlw	high Nrf24_getCRCLength@AA
 15212   0121D0  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 15213   0121D2  0E01               	movlw	1
 15214   0121D4  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 15215   0121D6  0E01               	movlw	1
 15216   0121D8  ECEF  F092         	call	_Nrf24_readRegister
 15217   0121DC                     
 15218                           ;mirf.c: 470:  if (config & (1<<(3)) || AA) {
 15219   0121DC  0105               	movlb	5	; () banked
 15220   0121DE  B76E               	btfsc	Nrf24_getCRCLength@config& (0+255),3,b
 15221   0121E0  EFF4  F090         	goto	u2711
 15222   0121E4  EFF6  F090         	goto	u2710
 15223   0121E8                     u2711:
 15224   0121E8  EFFE  F090         	goto	l838
 15225   0121EC                     u2710:
 15226   0121EC                     
 15227                           ; BSR set to: 5
 15228   0121EC  516D               	movf	Nrf24_getCRCLength@AA& (0+255),w,b
 15229   0121EE  B4D8               	btfsc	status,2,c
 15230   0121F0  EFFC  F090         	goto	u2721
 15231   0121F4  EFFE  F090         	goto	u2720
 15232   0121F8                     u2721:
 15233   0121F8  EF0B  F091         	goto	l836
 15234   0121FC                     u2720:
 15235   0121FC                     l838:
 15236                           
 15237                           ; BSR set to: 5
 15238                           ;mirf.c: 471:   if (config & (1<<(2))) {
 15239   0121FC  A56E               	btfss	Nrf24_getCRCLength@config& (0+255),2,b
 15240   0121FE  EF03  F091         	goto	u2731
 15241   012202  EF05  F091         	goto	u2730
 15242   012206                     u2731:
 15243   012206  EF09  F091         	goto	l3664
 15244   01220A                     u2730:
 15245   01220A                     
 15246                           ; BSR set to: 5
 15247                           ;mirf.c: 472:    result = RF24_CRC_16;
 15248   01220A  0E02               	movlw	2
 15249   01220C  6F6C               	movwf	Nrf24_getCRCLength@result& (0+255),b
 15250                           
 15251                           ;mirf.c: 473:   } else {
 15252   01220E  EF0B  F091         	goto	l836
 15253   012212                     l3664:
 15254                           
 15255                           ; BSR set to: 5
 15256                           ;mirf.c: 474:    result = RF24_CRC_8;
 15257   012212  0E01               	movlw	1
 15258   012214  6F6C               	movwf	Nrf24_getCRCLength@result& (0+255),b
 15259   012216                     l836:
 15260                           
 15261                           ; BSR set to: 5
 15262                           ;mirf.c: 478:  return result;
 15263   012216  516C               	movf	Nrf24_getCRCLength@result& (0+255),w,b
 15264   012218                     
 15265                           ; BSR set to: 5
 15266   012218  0012               	return		;funcret
 15267   01221A                     __end_of_Nrf24_getCRCLength:
 15268                           	callstack 0
 15269                           
 15270 ;; *************** function _Nrf24_init *****************
 15271 ;; Defined at:
 15272 ;;		line 70 in file "mirf.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;  dev             2    1[BANK5 ] PTR struct .
 15275 ;;		 -> dev(3), 
 15276 ;; Auto vars:     Size  Location     Type
 15277 ;;		None
 15278 ;; Return value:  Size  Location     Type
 15279 ;;                  1    wreg      void 
 15280 ;; Registers used:
 15281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15282 ;; Tracked objects:
 15283 ;;		On entry : 0/0
 15284 ;;		On exit  : 0/0
 15285 ;;		Unchanged: 0/0
 15286 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15287 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15290 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15291 ;;Total ram usage:        2 bytes
 15292 ;; Hardware stack levels used: 1
 15293 ;; Hardware stack levels required when called: 8
 15294 ;; This function calls:
 15295 ;;		_SPI1_Open
 15296 ;; This function is called by:
 15297 ;;		_init_nrf
 15298 ;; This function uses a non-reentrant model
 15299 ;;
 15300                           
 15301                           	psect	text32
 15302   01273E                     __ptext32:
 15303                           	callstack 0
 15304   01273E                     _Nrf24_init:
 15305                           	callstack 117
 15306   01273E                     
 15307                           ;mirf.c: 70: void Nrf24_init(NRF24_t * dev);mirf.c: 71: {;mirf.c: 72:     SPI1_Open(0);
 15308   01273E  0E00               	movlw	0
 15309   012740  ECCB  F089         	call	_SPI1_Open
 15310   012744                     
 15311                           ;mirf.c: 74:     dev->channel = 99;
 15312   012744  0105               	movlb	5	; () banked
 15313   012746  EE20 F001          	lfsr	2,1
 15314   01274A  5161               	movf	Nrf24_init@dev& (0+255),w,b
 15315   01274C  26D9               	addwf	fsr2l,f,c
 15316   01274E  5162               	movf	(Nrf24_init@dev+1)& (0+255),w,b
 15317   012750  22DA               	addwfc	fsr2h,f,c
 15318   012752  0E63               	movlw	99
 15319   012754  6EDF               	movwf	indf2,c
 15320   012756                     
 15321                           ; BSR set to: 5
 15322                           ;mirf.c: 75:     dev->payload = 32;
 15323   012756  EE20 F002          	lfsr	2,2
 15324   01275A  5161               	movf	Nrf24_init@dev& (0+255),w,b
 15325   01275C  26D9               	addwf	fsr2l,f,c
 15326   01275E  5162               	movf	(Nrf24_init@dev+1)& (0+255),w,b
 15327   012760  22DA               	addwfc	fsr2h,f,c
 15328   012762  0E20               	movlw	32
 15329   012764  6EDF               	movwf	indf2,c
 15330   012766                     
 15331                           ; BSR set to: 5
 15332   012766  9EC8               	bcf	200,7,c	;volatile
 15333   012768                     
 15334                           ; BSR set to: 5
 15335   012768  94C8               	bcf	200,2,c	;volatile
 15336   01276A                     
 15337                           ; BSR set to: 5
 15338   01276A  0012               	return		;funcret
 15339   01276C                     __end_of_Nrf24_init:
 15340                           	callstack 0
 15341                           
 15342 ;; *************** function _SPI1_Open *****************
 15343 ;; Defined at:
 15344 ;;		line 90 in file "mcc_generated_files/spi/src/spi1.c"
 15345 ;; Parameters:    Size  Location     Type
 15346 ;;  spiConfigInd    1    wreg     unsigned char 
 15347 ;; Auto vars:     Size  Location     Type
 15348 ;;  spiConfigInd    1    0[BANK5 ] unsigned char 
 15349 ;;  returnValue     1    0        _Bool 
 15350 ;; Return value:  Size  Location     Type
 15351 ;;                  1    wreg      _Bool 
 15352 ;; Registers used:
 15353 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 15354 ;; Tracked objects:
 15355 ;;		On entry : 0/0
 15356 ;;		On exit  : 0/0
 15357 ;;		Unchanged: 0/0
 15358 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15362 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15363 ;;Total ram usage:        1 bytes
 15364 ;; Hardware stack levels used: 1
 15365 ;; Hardware stack levels required when called: 7
 15366 ;; This function calls:
 15367 ;;		Nothing
 15368 ;; This function is called by:
 15369 ;;		_Nrf24_init
 15370 ;; This function uses a non-reentrant model
 15371 ;;
 15372                           
 15373                           	psect	text33
 15374   011396                     __ptext33:
 15375                           	callstack 0
 15376   011396                     _SPI1_Open:
 15377                           	callstack 117
 15378                           
 15379                           ; BSR set to: 5
 15380                           ;incstack = 0
 15381                           ;SPI1_Open@spiConfigIndex stored from wreg
 15382   011396  0105               	movlb	5	; () banked
 15383   011398  6F60               	movwf	SPI1_Open@spiConfigIndex& (0+255),b
 15384   01139A                     
 15385                           ;mcc_generated_files/spi/src/spi1.c: 93:  if(0 == SPI1CON0bits.EN)
 15386   01139A  0100               	movlb	0	; () banked
 15387   01139C  BF84               	btfsc	132,7,b	;volatile
 15388   01139E  EFD3  F089         	goto	u2561
 15389   0113A2  EFD5  F089         	goto	u2560
 15390   0113A6                     u2561:
 15391   0113A6  EF34  F08A         	goto	l67
 15392   0113AA                     u2560:
 15393   0113AA                     
 15394                           ; BSR set to: 0
 15395                           ;mcc_generated_files/spi/src/spi1.c: 94:  {;mcc_generated_files/spi/src/spi1.c: 95:     
      +                              SPI1CON0 = spi1_configuration[spiConfigIndex].con0;
 15396   0113AA  0105               	movlb	5	; () banked
 15397   0113AC  5160               	movf	SPI1_Open@spiConfigIndex& (0+255),w,b
 15398   0113AE  0D05               	mullw	5
 15399   0113B0  0E8F               	movlw	low _spi1_configuration
 15400   0113B2  24F3               	addwf	243,w,c
 15401   0113B4  6EF6               	movwf	tblptrl,c
 15402   0113B6  0EFE               	movlw	high _spi1_configuration
 15403   0113B8  20F4               	addwfc	244,w,c
 15404   0113BA  6EF7               	movwf	tblptrh,c
 15405   0113BC                     	if	1	;There are 3 active tblptr bytes
 15406   0113BC  6AF8               	clrf	tblptru,c
 15407   0113BE  0E00               	movlw	low (__mediumconst shr (0+16))
 15408   0113C0  22F8               	addwfc	tblptru,f,c
 15409   0113C2                     	endif
 15410   0113C2  0008               	tblrd		*
 15411   0113C4  C4F5 F084          	movff	tablat,132	;volatile
 15412                           
 15413                           ;mcc_generated_files/spi/src/spi1.c: 96:         SPI1CON1 = spi1_configuration[spiConfig
      +                          Index].con1;
 15414   0113C8  5160               	movf	SPI1_Open@spiConfigIndex& (0+255),w,b
 15415   0113CA  0D05               	mullw	5
 15416   0113CC  0E01               	movlw	1
 15417   0113CE  26F3               	addwf	243,f,c
 15418   0113D0  0E00               	movlw	0
 15419   0113D2  22F4               	addwfc	244,f,c
 15420   0113D4  0E8F               	movlw	low _spi1_configuration
 15421   0113D6  24F3               	addwf	243,w,c
 15422   0113D8  6EF6               	movwf	tblptrl,c
 15423   0113DA  0EFE               	movlw	high _spi1_configuration
 15424   0113DC  20F4               	addwfc	244,w,c
 15425   0113DE  6EF7               	movwf	tblptrh,c
 15426   0113E0                     	if	1	;There are 3 active tblptr bytes
 15427   0113E0  6AF8               	clrf	tblptru,c
 15428   0113E2  0E00               	movlw	low (__mediumconst shr (0+16))
 15429   0113E4  22F8               	addwfc	tblptru,f,c
 15430   0113E6                     	endif
 15431   0113E6  0008               	tblrd		*
 15432   0113E8  C4F5 F085          	movff	tablat,133	;volatile
 15433                           
 15434                           ;mcc_generated_files/spi/src/spi1.c: 97:         SPI1CON2 = spi1_configuration[spiConfig
      +                          Index].con2 & ~(0x1) & ~(0x2);
 15435   0113EC  5160               	movf	SPI1_Open@spiConfigIndex& (0+255),w,b
 15436   0113EE  0D05               	mullw	5
 15437   0113F0  0E02               	movlw	2
 15438   0113F2  26F3               	addwf	243,f,c
 15439   0113F4  0E00               	movlw	0
 15440   0113F6  22F4               	addwfc	244,f,c
 15441   0113F8  0E8F               	movlw	low _spi1_configuration
 15442   0113FA  24F3               	addwf	243,w,c
 15443   0113FC  6EF6               	movwf	tblptrl,c
 15444   0113FE  0EFE               	movlw	high _spi1_configuration
 15445   011400  20F4               	addwfc	244,w,c
 15446   011402  6EF7               	movwf	tblptrh,c
 15447   011404                     	if	1	;There are 3 active tblptr bytes
 15448   011404  6AF8               	clrf	tblptru,c
 15449   011406  0E00               	movlw	low (__mediumconst shr (0+16))
 15450   011408  22F8               	addwfc	tblptru,f,c
 15451   01140A                     	endif
 15452   01140A  0008               	tblrd		*
 15453   01140C  50F5               	movf	tablat,w,c
 15454   01140E  0BFC               	andlw	252
 15455   011410  0100               	movlb	0	; () banked
 15456   011412  6F86               	movwf	134,b	;volatile
 15457                           
 15458                           ;mcc_generated_files/spi/src/spi1.c: 98:         SPI1BAUD = spi1_configuration[spiConfig
      +                          Index].baud;
 15459   011414  0105               	movlb	5	; () banked
 15460   011416  5160               	movf	SPI1_Open@spiConfigIndex& (0+255),w,b
 15461   011418  0D05               	mullw	5
 15462   01141A  0E03               	movlw	3
 15463   01141C  26F3               	addwf	243,f,c
 15464   01141E  0E00               	movlw	0
 15465   011420  22F4               	addwfc	244,f,c
 15466   011422  0E8F               	movlw	low _spi1_configuration
 15467   011424  24F3               	addwf	243,w,c
 15468   011426  6EF6               	movwf	tblptrl,c
 15469   011428  0EFE               	movlw	high _spi1_configuration
 15470   01142A  20F4               	addwfc	244,w,c
 15471   01142C  6EF7               	movwf	tblptrh,c
 15472   01142E                     	if	1	;There are 3 active tblptr bytes
 15473   01142E  6AF8               	clrf	tblptru,c
 15474   011430  0E00               	movlw	low (__mediumconst shr (0+16))
 15475   011432  22F8               	addwfc	tblptru,f,c
 15476   011434                     	endif
 15477   011434  0008               	tblrd		*
 15478   011436  C4F5 F089          	movff	tablat,137	;volatile
 15479                           
 15480                           ;mcc_generated_files/spi/src/spi1.c: 99:         SPI1CLK = spi1_configuration[spiConfigI
      +                          ndex].clksel;
 15481   01143A  5160               	movf	SPI1_Open@spiConfigIndex& (0+255),w,b
 15482   01143C  0D05               	mullw	5
 15483   01143E  0E04               	movlw	4
 15484   011440  26F3               	addwf	243,f,c
 15485   011442  0E00               	movlw	0
 15486   011444  22F4               	addwfc	244,f,c
 15487   011446  0E8F               	movlw	low _spi1_configuration
 15488   011448  24F3               	addwf	243,w,c
 15489   01144A  6EF6               	movwf	tblptrl,c
 15490   01144C  0EFE               	movlw	high _spi1_configuration
 15491   01144E  20F4               	addwfc	244,w,c
 15492   011450  6EF7               	movwf	tblptrh,c
 15493   011452                     	if	1	;There are 3 active tblptr bytes
 15494   011452  6AF8               	clrf	tblptru,c
 15495   011454  0E00               	movlw	low (__mediumconst shr (0+16))
 15496   011456  22F8               	addwfc	tblptru,f,c
 15497   011458                     	endif
 15498   011458  0008               	tblrd		*
 15499   01145A  C4F5 F08C          	movff	tablat,140	;volatile
 15500   01145E                     
 15501                           ; BSR set to: 5
 15502                           ;mcc_generated_files/spi/src/spi1.c: 100:   TRISCbits.TRISC3 = 0;
 15503   01145E  96C8               	bcf	200,3,c	;volatile
 15504   011460                     
 15505                           ; BSR set to: 5
 15506                           ;mcc_generated_files/spi/src/spi1.c: 101:         SPI1CON0bits.EN = 1U;
 15507   011460  0100               	movlb	0	; () banked
 15508   011462  8F84               	bsf	132,7,b	;volatile
 15509   011464                     
 15510                           ; BSR set to: 0
 15511                           ;mcc_generated_files/spi/src/spi1.c: 103:  }
 15512   011464  EF34  F08A         	goto	l69
 15513   011468                     l67:
 15514   011468                     l69:
 15515                           
 15516                           ; BSR set to: 0
 15517   011468  0012               	return		;funcret
 15518   01146A                     __end_of_SPI1_Open:
 15519                           	callstack 0
 15520                           
 15521 ;; *************** function _Nrf24_getData *****************
 15522 ;; Defined at:
 15523 ;;		line 180 in file "mirf.c"
 15524 ;; Parameters:    Size  Location     Type
 15525 ;;  dev             2    6[BANK5 ] PTR struct .
 15526 ;;		 -> dev(3), 
 15527 ;;  data            2    8[BANK5 ] PTR unsigned char 
 15528 ;;		 -> nrf_interrupt@buf(32), init_nrf@buf(32), 
 15529 ;; Auto vars:     Size  Location     Type
 15530 ;;		None
 15531 ;; Return value:  Size  Location     Type
 15532 ;;                  1    wreg      void 
 15533 ;; Registers used:
 15534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15535 ;; Tracked objects:
 15536 ;;		On entry : 0/0
 15537 ;;		On exit  : 0/0
 15538 ;;		Unchanged: 0/0
 15539 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15540 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15543 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15544 ;;Total ram usage:        4 bytes
 15545 ;; Hardware stack levels used: 1
 15546 ;; Hardware stack levels required when called: 9
 15547 ;; This function calls:
 15548 ;;		_Nrf24_configRegister
 15549 ;;		_SPI1_ByteExchange
 15550 ;;		_SPI_read_buff
 15551 ;; This function is called by:
 15552 ;;		_init_nrf
 15553 ;; This function uses a non-reentrant model
 15554 ;;
 15555                           
 15556                           	psect	text34
 15557   012572                     __ptext34:
 15558                           	callstack 0
 15559   012572                     _Nrf24_getData:
 15560                           	callstack 116
 15561   012572  9EC0               	bcf	192,7,c	;volatile
 15562   012574                     
 15563                           ;mirf.c: 183:  SPI1_ByteExchange(0x00 | 0x61);
 15564   012574  0E61               	movlw	97
 15565   012576  EC4A  F092         	call	_SPI1_ByteExchange
 15566   01257A                     
 15567                           ;mirf.c: 184:  SPI_read_buff( data, dev->payload );
 15568   01257A  C568  F562         	movff	Nrf24_getData@data,SPI_read_buff@buffer
 15569   01257E  C569  F563         	movff	Nrf24_getData@data+1,SPI_read_buff@buffer+1
 15570   012582  0105               	movlb	5	; () banked
 15571   012584  EE20 F002          	lfsr	2,2
 15572   012588  5166               	movf	Nrf24_getData@dev& (0+255),w,b
 15573   01258A  26D9               	addwf	fsr2l,f,c
 15574   01258C  5167               	movf	(Nrf24_getData@dev+1)& (0+255),w,b
 15575   01258E  22DA               	addwfc	fsr2h,f,c
 15576   012590  50DF               	movf	indf2,w,c
 15577   012592  6F64               	movwf	SPI_read_buff@bytes& (0+255),b
 15578   012594  EC67  F092         	call	_SPI_read_buff	;wreg free
 15579   012598  8EC0               	bsf	192,7,c	;volatile
 15580   01259A                     
 15581                           ;mirf.c: 194:  Nrf24_configRegister(0x07, (1 << 6));
 15582   01259A  0E40               	movlw	64
 15583   01259C  0105               	movlb	5	; () banked
 15584   01259E  6F62               	movwf	Nrf24_configRegister@value& (0+255),b
 15585   0125A0  0E07               	movlw	7
 15586   0125A2  EC6E  F094         	call	_Nrf24_configRegister
 15587   0125A6  0012               	return		;funcret
 15588   0125A8                     __end_of_Nrf24_getData:
 15589                           	callstack 0
 15590                           
 15591 ;; *************** function _Nrf24_dataReady *****************
 15592 ;; Defined at:
 15593 ;;		line 158 in file "mirf.c"
 15594 ;; Parameters:    Size  Location     Type
 15595 ;;  dev             2   13[BANK5 ] PTR struct .
 15596 ;;		 -> dev(3), 
 15597 ;; Auto vars:     Size  Location     Type
 15598 ;;  status          1   15[BANK5 ] unsigned char 
 15599 ;; Return value:  Size  Location     Type
 15600 ;;                  1    wreg      _Bool 
 15601 ;; Registers used:
 15602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15603 ;; Tracked objects:
 15604 ;;		On entry : 0/0
 15605 ;;		On exit  : 0/0
 15606 ;;		Unchanged: 0/0
 15607 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15608 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15609 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15611 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15612 ;;Total ram usage:        3 bytes
 15613 ;; Hardware stack levels used: 1
 15614 ;; Hardware stack levels required when called: 11
 15615 ;; This function calls:
 15616 ;;		_Nrf24_getStatus
 15617 ;; This function is called by:
 15618 ;;		_init_nrf
 15619 ;; This function uses a non-reentrant model
 15620 ;;
 15621                           
 15622                           	psect	text35
 15623   0127C0                     __ptext35:
 15624                           	callstack 0
 15625   0127C0                     _Nrf24_dataReady:
 15626                           	callstack 114
 15627   0127C0                     
 15628                           ;mirf.c: 158: extern _Bool Nrf24_dataReady(NRF24_t * dev);mirf.c: 159: {;mirf.c: 160:  u
      +                          int8_t status = Nrf24_getStatus(dev);
 15629   0127C0  C56D  F56A         	movff	Nrf24_dataReady@dev,Nrf24_getStatus@dev
 15630   0127C4  C56E  F56B         	movff	Nrf24_dataReady@dev+1,Nrf24_getStatus@dev+1
 15631   0127C8  EC8B  F094         	call	_Nrf24_getStatus	;wreg free
 15632   0127CC  0105               	movlb	5	; () banked
 15633   0127CE  6F6F               	movwf	Nrf24_dataReady@status& (0+255),b
 15634   0127D0                     
 15635                           ; BSR set to: 5
 15636                           ;mirf.c: 161:  if ( status & (1 << 6) ) {
 15637   0127D0  AD6F               	btfss	Nrf24_dataReady@status& (0+255),6,b
 15638   0127D2  EFED  F093         	goto	u2811
 15639   0127D6  EFEF  F093         	goto	u2810
 15640   0127DA                     u2811:
 15641   0127DA  EFF2  F093         	goto	l3924
 15642   0127DE                     u2810:
 15643   0127DE                     
 15644                           ; BSR set to: 5
 15645                           ;mirf.c: 162:   return 1;
 15646   0127DE  0E01               	movlw	1
 15647   0127E0  EFF3  F093         	goto	l696
 15648   0127E4                     l3924:
 15649                           
 15650                           ; BSR set to: 5
 15651                           ;mirf.c: 164:  return 0;
 15652   0127E4  0E00               	movlw	0
 15653   0127E6                     l696:
 15654                           
 15655                           ; BSR set to: 5
 15656   0127E6  0012               	return		;funcret
 15657   0127E8                     __end_of_Nrf24_dataReady:
 15658                           	callstack 0
 15659                           
 15660 ;; *************** function _Nrf24_config *****************
 15661 ;; Defined at:
 15662 ;;		line 89 in file "mirf.c"
 15663 ;; Parameters:    Size  Location     Type
 15664 ;;  dev             2   13[BANK5 ] PTR struct .
 15665 ;;		 -> dev(3), 
 15666 ;;  channel         1   15[BANK5 ] unsigned char 
 15667 ;;  payload         1   16[BANK5 ] unsigned char 
 15668 ;; Auto vars:     Size  Location     Type
 15669 ;;		None
 15670 ;; Return value:  Size  Location     Type
 15671 ;;                  1    wreg      void 
 15672 ;; Registers used:
 15673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15674 ;; Tracked objects:
 15675 ;;		On entry : 0/0
 15676 ;;		On exit  : 0/0
 15677 ;;		Unchanged: 0/0
 15678 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15679 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15682 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15683 ;;Total ram usage:        4 bytes
 15684 ;; Hardware stack levels used: 1
 15685 ;; Hardware stack levels required when called: 11
 15686 ;; This function calls:
 15687 ;;		_Nrf24_configRegister
 15688 ;;		_Nrf24_flushRx
 15689 ;;		_Nrf24_getStatus
 15690 ;;		_Nrf24_powerUpRx
 15691 ;; This function is called by:
 15692 ;;		_init_nrf
 15693 ;; This function uses a non-reentrant model
 15694 ;;
 15695                           
 15696                           	psect	text36
 15697   012046                     __ptext36:
 15698                           	callstack 0
 15699   012046                     _Nrf24_config:
 15700                           	callstack 114
 15701   012046                     
 15702                           ;mirf.c: 89: void Nrf24_config(NRF24_t * dev, uint8_t channel, uint8_t payload);mirf.c: 
      +                          90: {;mirf.c: 91:  dev->channel = channel;
 15703   012046  0105               	movlb	5	; () banked
 15704   012048  EE20 F001          	lfsr	2,1
 15705   01204C  516D               	movf	Nrf24_config@dev& (0+255),w,b
 15706   01204E  26D9               	addwf	fsr2l,f,c
 15707   012050  516E               	movf	(Nrf24_config@dev+1)& (0+255),w,b
 15708   012052  22DA               	addwfc	fsr2h,f,c
 15709   012054  C56F  F4DF         	movff	Nrf24_config@channel,indf2
 15710                           
 15711                           ;mirf.c: 92:  dev->payload = payload;
 15712   012058  EE20 F002          	lfsr	2,2
 15713   01205C  516D               	movf	Nrf24_config@dev& (0+255),w,b
 15714   01205E  26D9               	addwf	fsr2l,f,c
 15715   012060  516E               	movf	(Nrf24_config@dev+1)& (0+255),w,b
 15716   012062  22DA               	addwfc	fsr2h,f,c
 15717   012064  C570  F4DF         	movff	Nrf24_config@payload,indf2
 15718   012068                     
 15719                           ; BSR set to: 5
 15720                           ;mirf.c: 93:     Nrf24_getStatus(dev);
 15721   012068  C56D  F56A         	movff	Nrf24_config@dev,Nrf24_getStatus@dev
 15722   01206C  C56E  F56B         	movff	Nrf24_config@dev+1,Nrf24_getStatus@dev+1
 15723   012070  EC8B  F094         	call	_Nrf24_getStatus	;wreg free
 15724   012074                     
 15725                           ;mirf.c: 94:     Nrf24_configRegister(0x05, channel);
 15726   012074  C56F  F562         	movff	Nrf24_config@channel,Nrf24_configRegister@value
 15727   012078  0E05               	movlw	5
 15728   01207A  EC6E  F094         	call	_Nrf24_configRegister
 15729   01207E                     
 15730                           ;mirf.c: 95:  Nrf24_configRegister(0x11, dev->payload);
 15731   01207E  0105               	movlb	5	; () banked
 15732   012080  EE20 F002          	lfsr	2,2
 15733   012084  516D               	movf	Nrf24_config@dev& (0+255),w,b
 15734   012086  26D9               	addwf	fsr2l,f,c
 15735   012088  516E               	movf	(Nrf24_config@dev+1)& (0+255),w,b
 15736   01208A  22DA               	addwfc	fsr2h,f,c
 15737   01208C  50DF               	movf	indf2,w,c
 15738   01208E  6F62               	movwf	Nrf24_configRegister@value& (0+255),b
 15739   012090  0E11               	movlw	17
 15740   012092  EC6E  F094         	call	_Nrf24_configRegister
 15741   012096                     
 15742                           ;mirf.c: 96:  Nrf24_configRegister(0x12, dev->payload);
 15743   012096  0105               	movlb	5	; () banked
 15744   012098  EE20 F002          	lfsr	2,2
 15745   01209C  516D               	movf	Nrf24_config@dev& (0+255),w,b
 15746   01209E  26D9               	addwf	fsr2l,f,c
 15747   0120A0  516E               	movf	(Nrf24_config@dev+1)& (0+255),w,b
 15748   0120A2  22DA               	addwfc	fsr2h,f,c
 15749   0120A4  50DF               	movf	indf2,w,c
 15750   0120A6  6F62               	movwf	Nrf24_configRegister@value& (0+255),b
 15751   0120A8  0E12               	movlw	18
 15752   0120AA  EC6E  F094         	call	_Nrf24_configRegister
 15753   0120AE                     
 15754                           ;mirf.c: 97:  Nrf24_powerUpRx(dev);
 15755   0120AE  C56D  F564         	movff	Nrf24_config@dev,Nrf24_powerUpRx@dev
 15756   0120B2  C56E  F565         	movff	Nrf24_config@dev+1,Nrf24_powerUpRx@dev+1
 15757   0120B6  ECF4  F093         	call	_Nrf24_powerUpRx	;wreg free
 15758   0120BA                     
 15759                           ;mirf.c: 98:  Nrf24_flushRx(dev);
 15760   0120BA  C56D  F562         	movff	Nrf24_config@dev,Nrf24_flushRx@dev
 15761   0120BE  C56E  F563         	movff	Nrf24_config@dev+1,Nrf24_flushRx@dev+1
 15762   0120C2  ECFA  F094         	call	_Nrf24_flushRx	;wreg free
 15763   0120C6  0012               	return		;funcret
 15764   0120C8                     __end_of_Nrf24_config:
 15765                           	callstack 0
 15766                           
 15767 ;; *************** function _Nrf24_flushRx *****************
 15768 ;; Defined at:
 15769 ;;		line 311 in file "mirf.c"
 15770 ;; Parameters:    Size  Location     Type
 15771 ;;  dev             2    2[BANK5 ] PTR struct .
 15772 ;;		 -> dev(3), 
 15773 ;; Auto vars:     Size  Location     Type
 15774 ;;		None
 15775 ;; Return value:  Size  Location     Type
 15776 ;;                  1    wreg      void 
 15777 ;; Registers used:
 15778 ;;		wreg, status,2, status,0, cstack
 15779 ;; Tracked objects:
 15780 ;;		On entry : 0/0
 15781 ;;		On exit  : 0/0
 15782 ;;		Unchanged: 0/0
 15783 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15784 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15787 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15788 ;;Total ram usage:        2 bytes
 15789 ;; Hardware stack levels used: 1
 15790 ;; Hardware stack levels required when called: 8
 15791 ;; This function calls:
 15792 ;;		_SPI1_ByteExchange
 15793 ;; This function is called by:
 15794 ;;		_Nrf24_config
 15795 ;; This function uses a non-reentrant model
 15796 ;;
 15797                           
 15798                           	psect	text37
 15799   0129F4                     __ptext37:
 15800                           	callstack 0
 15801   0129F4                     _Nrf24_flushRx:
 15802                           	callstack 116
 15803   0129F4  9EC0               	bcf	192,7,c	;volatile
 15804   0129F6                     
 15805                           ;mirf.c: 314:  SPI1_ByteExchange(0xE2);
 15806   0129F6  0EE2               	movlw	226
 15807   0129F8  EC4A  F092         	call	_SPI1_ByteExchange
 15808   0129FC  8EC0               	bsf	192,7,c	;volatile
 15809   0129FE  0012               	return		;funcret
 15810   012A00                     __end_of_Nrf24_flushRx:
 15811                           	callstack 0
 15812                           
 15813 ;; *************** function _Nrf24_SetSpeedDataRates *****************
 15814 ;; Defined at:
 15815 ;;		line 343 in file "mirf.c"
 15816 ;; Parameters:    Size  Location     Type
 15817 ;;  dev             2   10[BANK5 ] PTR struct .
 15818 ;;		 -> dev(3), 
 15819 ;;  val             1   12[BANK5 ] unsigned char 
 15820 ;; Auto vars:     Size  Location     Type
 15821 ;;  value           1   13[BANK5 ] unsigned char 
 15822 ;; Return value:  Size  Location     Type
 15823 ;;                  1    wreg      void 
 15824 ;; Registers used:
 15825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15826 ;; Tracked objects:
 15827 ;;		On entry : 0/0
 15828 ;;		On exit  : 0/0
 15829 ;;		Unchanged: 0/0
 15830 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15831 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15832 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15834 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15835 ;;Total ram usage:        4 bytes
 15836 ;; Hardware stack levels used: 1
 15837 ;; Hardware stack levels required when called: 10
 15838 ;; This function calls:
 15839 ;;		_Nrf24_configRegister
 15840 ;;		_Nrf24_readRegister
 15841 ;; This function is called by:
 15842 ;;		_init_nrf
 15843 ;; This function uses a non-reentrant model
 15844 ;;
 15845                           
 15846                           	psect	text38
 15847   01213A                     __ptext38:
 15848                           	callstack 0
 15849   01213A                     _Nrf24_SetSpeedDataRates:
 15850                           	callstack 115
 15851   01213A                     
 15852                           ;mirf.c: 343: void Nrf24_SetSpeedDataRates(NRF24_t * dev, uint8_t val);mirf.c: 344: {;mi
      +                          rf.c: 345:  if (val > 2) return;
 15853   01213A  0E02               	movlw	2
 15854   01213C  0105               	movlb	5	; () banked
 15855   01213E  656C               	cpfsgt	Nrf24_SetSpeedDataRates@val& (0+255),b
 15856   012140  EFA4  F090         	goto	u2791
 15857   012144  EFA6  F090         	goto	u2790
 15858   012148                     u2791:
 15859   012148  EFA8  F090         	goto	l3888
 15860   01214C                     u2790:
 15861   01214C  EFD5  F090         	goto	l798
 15862   012150                     l3888:
 15863                           
 15864                           ; BSR set to: 5
 15865                           ;mirf.c: 347:  uint8_t value;;mirf.c: 348:  Nrf24_readRegister(0x06, &value, 1);
 15866   012150  0E6D               	movlw	low Nrf24_SetSpeedDataRates@value
 15867   012152  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 15868   012154  0E05               	movlw	high Nrf24_SetSpeedDataRates@value
 15869   012156  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 15870   012158  0E01               	movlw	1
 15871   01215A  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 15872   01215C  0E06               	movlw	6
 15873   01215E  ECEF  F092         	call	_Nrf24_readRegister
 15874   012162                     
 15875                           ;mirf.c: 349:  if(val == 2)
 15876   012162  0E02               	movlw	2
 15877   012164  0105               	movlb	5	; () banked
 15878   012166  196C               	xorwf	Nrf24_SetSpeedDataRates@val& (0+255),w,b
 15879   012168  A4D8               	btfss	status,2,c
 15880   01216A  EFB9  F090         	goto	u2801
 15881   01216E  EFBB  F090         	goto	u2800
 15882   012172                     u2801:
 15883   012172  EFC8  F090         	goto	l3896
 15884   012176                     u2800:
 15885   012176                     
 15886                           ; BSR set to: 5
 15887                           ;mirf.c: 350:  {;mirf.c: 351:   value = value | 0x20;
 15888   012176  516D               	movf	Nrf24_SetSpeedDataRates@value& (0+255),w,b
 15889   012178  0920               	iorlw	32
 15890   01217A  6F6D               	movwf	Nrf24_SetSpeedDataRates@value& (0+255),b
 15891                           
 15892                           ;mirf.c: 352:   value = value & 0xF7;
 15893   01217C  516D               	movf	Nrf24_SetSpeedDataRates@value& (0+255),w,b
 15894   01217E  0BF7               	andlw	247
 15895   012180  6F6D               	movwf	Nrf24_SetSpeedDataRates@value& (0+255),b
 15896   012182                     
 15897                           ; BSR set to: 5
 15898                           ;mirf.c: 353:      Nrf24_configRegister(0x06, value);
 15899   012182  C56D  F562         	movff	Nrf24_SetSpeedDataRates@value,Nrf24_configRegister@value
 15900   012186  0E06               	movlw	6
 15901   012188  EC6E  F094         	call	_Nrf24_configRegister
 15902                           
 15903                           ;mirf.c: 354:  }
 15904   01218C  EFD5  F090         	goto	l798
 15905   012190                     l3896:
 15906                           
 15907                           ; BSR set to: 5
 15908                           ;mirf.c: 356:  {;mirf.c: 357:   value = value & 0xD7;
 15909   012190  516D               	movf	Nrf24_SetSpeedDataRates@value& (0+255),w,b
 15910   012192  0BD7               	andlw	215
 15911   012194  6F6D               	movwf	Nrf24_SetSpeedDataRates@value& (0+255),b
 15912                           
 15913                           ;mirf.c: 358:   value = value | (val << 3);
 15914   012196  396C               	swapf	Nrf24_SetSpeedDataRates@val& (0+255),w,b
 15915   012198  42E8               	rrncf	wreg,f,c
 15916   01219A  0BF8               	andlw	248
 15917   01219C  116D               	iorwf	Nrf24_SetSpeedDataRates@value& (0+255),w,b
 15918   01219E  6F6D               	movwf	Nrf24_SetSpeedDataRates@value& (0+255),b
 15919   0121A0                     
 15920                           ; BSR set to: 5
 15921                           ;mirf.c: 359:   Nrf24_configRegister(0x06, value);
 15922   0121A0  C56D  F562         	movff	Nrf24_SetSpeedDataRates@value,Nrf24_configRegister@value
 15923   0121A4  0E06               	movlw	6
 15924   0121A6  EC6E  F094         	call	_Nrf24_configRegister
 15925   0121AA                     l798:
 15926   0121AA  0012               	return		;funcret
 15927   0121AC                     __end_of_Nrf24_SetSpeedDataRates:
 15928                           	callstack 0
 15929                           
 15930 ;; *************** function _SYSTEM_Initialize *****************
 15931 ;; Defined at:
 15932 ;;		line 38 in file "mcc_generated_files/system/src/system.c"
 15933 ;; Parameters:    Size  Location     Type
 15934 ;;		None
 15935 ;; Auto vars:     Size  Location     Type
 15936 ;;		None
 15937 ;; Return value:  Size  Location     Type
 15938 ;;                  1    wreg      void 
 15939 ;; Registers used:
 15940 ;;		wreg, status,2, status,0, cstack
 15941 ;; Tracked objects:
 15942 ;;		On entry : 0/0
 15943 ;;		On exit  : 0/0
 15944 ;;		Unchanged: 0/0
 15945 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15950 ;;Total ram usage:        0 bytes
 15951 ;; Hardware stack levels used: 1
 15952 ;; Hardware stack levels required when called: 9
 15953 ;; This function calls:
 15954 ;;		_CLOCK_Initialize
 15955 ;;		_INTERRUPT_Initialize
 15956 ;;		_PIN_MANAGER_Initialize
 15957 ;;		_SPI1_Initialize
 15958 ;; This function is called by:
 15959 ;;		_main
 15960 ;; This function uses a non-reentrant model
 15961 ;;
 15962                           
 15963                           	psect	text39
 15964   0129B8                     __ptext39:
 15965                           	callstack 0
 15966   0129B8                     _SYSTEM_Initialize:
 15967                           	callstack 117
 15968   0129B8                     
 15969                           ;mcc_generated_files/system/src/system.c: 40:     CLOCK_Initialize();
 15970   0129B8  ECD2  F094         	call	_CLOCK_Initialize	;wreg free
 15971                           
 15972                           ;mcc_generated_files/system/src/system.c: 41:     PIN_MANAGER_Initialize();
 15973   0129BC  ECFA  F08E         	call	_PIN_MANAGER_Initialize	;wreg free
 15974                           
 15975                           ;mcc_generated_files/system/src/system.c: 42:     SPI1_Initialize();
 15976   0129C0  ECA4  F094         	call	_SPI1_Initialize	;wreg free
 15977   0129C4                     
 15978                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
 15979   0129C4  ECD4  F092         	call	_INTERRUPT_Initialize	;wreg free
 15980   0129C8  0012               	return		;funcret
 15981   0129CA                     __end_of_SYSTEM_Initialize:
 15982                           	callstack 0
 15983                           
 15984 ;; *************** function _SPI1_Initialize *****************
 15985 ;; Defined at:
 15986 ;;		line 68 in file "mcc_generated_files/spi/src/spi1.c"
 15987 ;; Parameters:    Size  Location     Type
 15988 ;;		None
 15989 ;; Auto vars:     Size  Location     Type
 15990 ;;		None
 15991 ;; Return value:  Size  Location     Type
 15992 ;;                  1    wreg      void 
 15993 ;; Registers used:
 15994 ;;		wreg, status,2
 15995 ;; Tracked objects:
 15996 ;;		On entry : 0/0
 15997 ;;		On exit  : 0/0
 15998 ;;		Unchanged: 0/0
 15999 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16004 ;;Total ram usage:        0 bytes
 16005 ;; Hardware stack levels used: 1
 16006 ;; Hardware stack levels required when called: 7
 16007 ;; This function calls:
 16008 ;;		Nothing
 16009 ;; This function is called by:
 16010 ;;		_SYSTEM_Initialize
 16011 ;; This function uses a non-reentrant model
 16012 ;;
 16013                           
 16014                           	psect	text40
 16015   012948                     __ptext40:
 16016                           	callstack 0
 16017   012948                     _SPI1_Initialize:
 16018                           	callstack 118
 16019   012948                     
 16020                           ;mcc_generated_files/spi/src/spi1.c: 71:     PIE3bits.SPI1IE = 0U;
 16021   012948  94A1               	bcf	161,2,c	;volatile
 16022                           
 16023                           ;mcc_generated_files/spi/src/spi1.c: 72:     PIE3bits.SPI1TXIE = 0U;
 16024   01294A  92A1               	bcf	161,1,c	;volatile
 16025                           
 16026                           ;mcc_generated_files/spi/src/spi1.c: 73:     PIE3bits.SPI1RXIE = 0U;
 16027   01294C  90A1               	bcf	161,0,c	;volatile
 16028                           
 16029                           ;mcc_generated_files/spi/src/spi1.c: 76:     SPI1CON0 = 0x0;
 16030   01294E  0100               	movlb	0	; () banked
 16031   012950  6B84               	clrf	132,b	;volatile
 16032   012952                     
 16033                           ; BSR set to: 0
 16034                           ;mcc_generated_files/spi/src/spi1.c: 77:     SPI1CON1 = 0x4;
 16035   012952  0E04               	movlw	4
 16036   012954  6F85               	movwf	133,b	;volatile
 16037   012956                     
 16038                           ; BSR set to: 0
 16039                           ;mcc_generated_files/spi/src/spi1.c: 78:     SPI1CON2 = 0x0;
 16040   012956  6B86               	clrf	134,b	;volatile
 16041   012958                     
 16042                           ; BSR set to: 0
 16043                           ;mcc_generated_files/spi/src/spi1.c: 79:     SPI1BAUD = 0x0;
 16044   012958  6B89               	clrf	137,b	;volatile
 16045   01295A                     
 16046                           ; BSR set to: 0
 16047                           ;mcc_generated_files/spi/src/spi1.c: 80:     SPI1CLK = 0x0;
 16048   01295A  6B8C               	clrf	140,b	;volatile
 16049   01295C                     
 16050                           ; BSR set to: 0
 16051                           ;mcc_generated_files/spi/src/spi1.c: 81:  SPI1STATUSbits.CLRBF = 1U;
 16052   01295C  8587               	bsf	135,2,b	;volatile
 16053   01295E                     
 16054                           ; BSR set to: 0
 16055   01295E  0012               	return		;funcret
 16056   012960                     __end_of_SPI1_Initialize:
 16057                           	callstack 0
 16058                           
 16059 ;; *************** function _PIN_MANAGER_Initialize *****************
 16060 ;; Defined at:
 16061 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;		None
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;		None
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  1    wreg      void 
 16068 ;; Registers used:
 16069 ;;		wreg, status,2
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/0
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16079 ;;Total ram usage:        0 bytes
 16080 ;; Hardware stack levels used: 1
 16081 ;; Hardware stack levels required when called: 7
 16082 ;; This function calls:
 16083 ;;		Nothing
 16084 ;; This function is called by:
 16085 ;;		_SYSTEM_Initialize
 16086 ;; This function uses a non-reentrant model
 16087 ;;
 16088                           
 16089                           	psect	text41
 16090   011DF4                     __ptext41:
 16091                           	callstack 0
 16092   011DF4                     _PIN_MANAGER_Initialize:
 16093                           	callstack 118
 16094   011DF4                     
 16095                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 16096   011DF4  6ABE               	clrf	190,c	;volatile
 16097                           
 16098                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 16099   011DF6  6ABF               	clrf	191,c	;volatile
 16100                           
 16101                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 16102   011DF8  6AC0               	clrf	192,c	;volatile
 16103                           
 16104                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
 16105   011DFA  6AC1               	clrf	193,c	;volatile
 16106                           
 16107                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
 16108   011DFC  6AC2               	clrf	194,c	;volatile
 16109                           
 16110                           ;mcc_generated_files/system/src/pins.c: 48:     LATF = 0x0;
 16111   011DFE  6AC3               	clrf	195,c	;volatile
 16112                           
 16113                           ;mcc_generated_files/system/src/pins.c: 52:     ODCONA = 0x0;
 16114   011E00  0104               	movlb	4	; () banked
 16115   011E02  6B02               	clrf	2,b	;volatile
 16116                           
 16117                           ;mcc_generated_files/system/src/pins.c: 53:     ODCONB = 0x0;
 16118   011E04  6B0A               	clrf	10,b	;volatile
 16119                           
 16120                           ;mcc_generated_files/system/src/pins.c: 54:     ODCONC = 0x0;
 16121   011E06  6B12               	clrf	18,b	;volatile
 16122                           
 16123                           ;mcc_generated_files/system/src/pins.c: 55:     ODCOND = 0x0;
 16124   011E08  6B1A               	clrf	26,b	;volatile
 16125                           
 16126                           ;mcc_generated_files/system/src/pins.c: 56:     ODCONE = 0x0;
 16127   011E0A  6B22               	clrf	34,b	;volatile
 16128                           
 16129                           ;mcc_generated_files/system/src/pins.c: 57:     ODCONF = 0x0;
 16130   011E0C  6B2A               	clrf	42,b	;volatile
 16131   011E0E                     
 16132                           ; BSR set to: 4
 16133                           ;mcc_generated_files/system/src/pins.c: 62:     TRISA = 0xFE;
 16134   011E0E  0EFE               	movlw	254
 16135   011E10  6EC6               	movwf	198,c	;volatile
 16136   011E12                     
 16137                           ; BSR set to: 4
 16138                           ;mcc_generated_files/system/src/pins.c: 63:     TRISB = 0xFF;
 16139   011E12  68C7               	setf	199,c	;volatile
 16140                           
 16141                           ;mcc_generated_files/system/src/pins.c: 64:     TRISC = 0x5B;
 16142   011E14  0E5B               	movlw	91
 16143   011E16  6EC8               	movwf	200,c	;volatile
 16144   011E18                     
 16145                           ; BSR set to: 4
 16146                           ;mcc_generated_files/system/src/pins.c: 65:     TRISD = 0xFF;
 16147   011E18  68C9               	setf	201,c	;volatile
 16148                           
 16149                           ;mcc_generated_files/system/src/pins.c: 66:     TRISE = 0xF;
 16150   011E1A  0E0F               	movlw	15
 16151   011E1C  6ECA               	movwf	202,c	;volatile
 16152                           
 16153                           ;mcc_generated_files/system/src/pins.c: 67:     TRISF = 0xF3;
 16154   011E1E  0EF3               	movlw	243
 16155   011E20  6ECB               	movwf	203,c	;volatile
 16156                           
 16157                           ;mcc_generated_files/system/src/pins.c: 72:     ANSELA = 0xFE;
 16158   011E22  0EFE               	movlw	254
 16159   011E24  6F00               	movwf	0,b	;volatile
 16160   011E26                     
 16161                           ; BSR set to: 4
 16162                           ;mcc_generated_files/system/src/pins.c: 73:     ANSELB = 0xFF;
 16163   011E26  6908               	setf	8,b	;volatile
 16164                           
 16165                           ;mcc_generated_files/system/src/pins.c: 74:     ANSELC = 0x3;
 16166   011E28  0E03               	movlw	3
 16167   011E2A  6F10               	movwf	16,b	;volatile
 16168   011E2C                     
 16169                           ; BSR set to: 4
 16170                           ;mcc_generated_files/system/src/pins.c: 75:     ANSELD = 0xFF;
 16171   011E2C  6918               	setf	24,b	;volatile
 16172                           
 16173                           ;mcc_generated_files/system/src/pins.c: 76:     ANSELE = 0x7;
 16174   011E2E  0E07               	movlw	7
 16175   011E30  6F20               	movwf	32,b	;volatile
 16176                           
 16177                           ;mcc_generated_files/system/src/pins.c: 77:     ANSELF = 0xF3;
 16178   011E32  0EF3               	movlw	243
 16179   011E34  6F28               	movwf	40,b	;volatile
 16180   011E36                     
 16181                           ; BSR set to: 4
 16182                           ;mcc_generated_files/system/src/pins.c: 82:     WPUA = 0x0;
 16183   011E36  6B01               	clrf	1,b	;volatile
 16184   011E38                     
 16185                           ; BSR set to: 4
 16186                           ;mcc_generated_files/system/src/pins.c: 83:     WPUB = 0x0;
 16187   011E38  6B09               	clrf	9,b	;volatile
 16188   011E3A                     
 16189                           ; BSR set to: 4
 16190                           ;mcc_generated_files/system/src/pins.c: 84:     WPUC = 0x0;
 16191   011E3A  6B11               	clrf	17,b	;volatile
 16192   011E3C                     
 16193                           ; BSR set to: 4
 16194                           ;mcc_generated_files/system/src/pins.c: 85:     WPUD = 0x0;
 16195   011E3C  6B19               	clrf	25,b	;volatile
 16196   011E3E                     
 16197                           ; BSR set to: 4
 16198                           ;mcc_generated_files/system/src/pins.c: 86:     WPUE = 0x0;
 16199   011E3E  6B21               	clrf	33,b	;volatile
 16200   011E40                     
 16201                           ; BSR set to: 4
 16202                           ;mcc_generated_files/system/src/pins.c: 87:     WPUF = 0x0;
 16203   011E40  6B29               	clrf	41,b	;volatile
 16204   011E42                     
 16205                           ; BSR set to: 4
 16206                           ;mcc_generated_files/system/src/pins.c: 93:     SLRCONA = 0xFF;
 16207   011E42  6903               	setf	3,b	;volatile
 16208   011E44                     
 16209                           ; BSR set to: 4
 16210                           ;mcc_generated_files/system/src/pins.c: 94:     SLRCONB = 0xFF;
 16211   011E44  690B               	setf	11,b	;volatile
 16212   011E46                     
 16213                           ; BSR set to: 4
 16214                           ;mcc_generated_files/system/src/pins.c: 95:     SLRCONC = 0xFF;
 16215   011E46  6913               	setf	19,b	;volatile
 16216   011E48                     
 16217                           ; BSR set to: 4
 16218                           ;mcc_generated_files/system/src/pins.c: 96:     SLRCOND = 0xFF;
 16219   011E48  691B               	setf	27,b	;volatile
 16220                           
 16221                           ;mcc_generated_files/system/src/pins.c: 97:     SLRCONE = 0x7;
 16222   011E4A  0E07               	movlw	7
 16223   011E4C  6F23               	movwf	35,b	;volatile
 16224   011E4E                     
 16225                           ; BSR set to: 4
 16226                           ;mcc_generated_files/system/src/pins.c: 98:     SLRCONF = 0xFF;
 16227   011E4E  692B               	setf	43,b	;volatile
 16228   011E50                     
 16229                           ; BSR set to: 4
 16230                           ;mcc_generated_files/system/src/pins.c: 103:     INLVLA = 0xFF;
 16231   011E50  6904               	setf	4,b	;volatile
 16232   011E52                     
 16233                           ; BSR set to: 4
 16234                           ;mcc_generated_files/system/src/pins.c: 104:     INLVLB = 0xFF;
 16235   011E52  690C               	setf	12,b	;volatile
 16236   011E54                     
 16237                           ; BSR set to: 4
 16238                           ;mcc_generated_files/system/src/pins.c: 105:     INLVLC = 0xFF;
 16239   011E54  6914               	setf	20,b	;volatile
 16240   011E56                     
 16241                           ; BSR set to: 4
 16242                           ;mcc_generated_files/system/src/pins.c: 106:     INLVLD = 0xFF;
 16243   011E56  691C               	setf	28,b	;volatile
 16244                           
 16245                           ;mcc_generated_files/system/src/pins.c: 107:     INLVLE = 0xF;
 16246   011E58  0E0F               	movlw	15
 16247   011E5A  6F24               	movwf	36,b	;volatile
 16248   011E5C                     
 16249                           ; BSR set to: 4
 16250                           ;mcc_generated_files/system/src/pins.c: 108:     INLVLF = 0xFF;
 16251   011E5C  692C               	setf	44,b	;volatile
 16252   011E5E                     
 16253                           ; BSR set to: 4
 16254                           ;mcc_generated_files/system/src/pins.c: 113:     RB1I2C = 0x0;
 16255   011E5E  0102               	movlb	2	; () banked
 16256   011E60  6B89               	clrf	137,b	;volatile
 16257   011E62                     
 16258                           ; BSR set to: 2
 16259                           ;mcc_generated_files/system/src/pins.c: 114:     RB2I2C = 0x0;
 16260   011E62  6B88               	clrf	136,b	;volatile
 16261   011E64                     
 16262                           ; BSR set to: 2
 16263                           ;mcc_generated_files/system/src/pins.c: 115:     RC3I2C = 0x0;
 16264   011E64  6B87               	clrf	135,b	;volatile
 16265   011E66                     
 16266                           ; BSR set to: 2
 16267                           ;mcc_generated_files/system/src/pins.c: 116:     RC4I2C = 0x0;
 16268   011E66  6B86               	clrf	134,b	;volatile
 16269                           
 16270                           ;mcc_generated_files/system/src/pins.c: 120:     SPI1SDIPPS = 0x14;
 16271   011E68  0E14               	movlw	20
 16272   011E6A  6F6B               	movwf	107,b	;volatile
 16273                           
 16274                           ;mcc_generated_files/system/src/pins.c: 121:     RC5PPS = 0x32;
 16275   011E6C  0E32               	movlw	50
 16276   011E6E  6F16               	movwf	22,b	;volatile
 16277                           
 16278                           ;mcc_generated_files/system/src/pins.c: 122:     SPI1SCKPPS = 0x13;
 16279   011E70  0E13               	movlw	19
 16280   011E72  6F6A               	movwf	106,b	;volatile
 16281                           
 16282                           ;mcc_generated_files/system/src/pins.c: 123:     RC3PPS = 0x31;
 16283   011E74  0E31               	movlw	49
 16284   011E76  6F14               	movwf	20,b	;volatile
 16285   011E78                     
 16286                           ; BSR set to: 2
 16287                           ;mcc_generated_files/system/src/pins.c: 128:     IOCAP = 0x0;
 16288   011E78  0104               	movlb	4	; () banked
 16289   011E7A  6B05               	clrf	5,b	;volatile
 16290   011E7C                     
 16291                           ; BSR set to: 4
 16292                           ;mcc_generated_files/system/src/pins.c: 129:     IOCAN = 0x0;
 16293   011E7C  6B06               	clrf	6,b	;volatile
 16294   011E7E                     
 16295                           ; BSR set to: 4
 16296                           ;mcc_generated_files/system/src/pins.c: 130:     IOCAF = 0x0;
 16297   011E7E  6B07               	clrf	7,b	;volatile
 16298   011E80                     
 16299                           ; BSR set to: 4
 16300                           ;mcc_generated_files/system/src/pins.c: 131:     IOCBP = 0x0;
 16301   011E80  6B0D               	clrf	13,b	;volatile
 16302   011E82                     
 16303                           ; BSR set to: 4
 16304                           ;mcc_generated_files/system/src/pins.c: 132:     IOCBN = 0x0;
 16305   011E82  6B0E               	clrf	14,b	;volatile
 16306   011E84                     
 16307                           ; BSR set to: 4
 16308                           ;mcc_generated_files/system/src/pins.c: 133:     IOCBF = 0x0;
 16309   011E84  6B0F               	clrf	15,b	;volatile
 16310   011E86                     
 16311                           ; BSR set to: 4
 16312                           ;mcc_generated_files/system/src/pins.c: 134:     IOCCP = 0x0;
 16313   011E86  6B15               	clrf	21,b	;volatile
 16314   011E88                     
 16315                           ; BSR set to: 4
 16316                           ;mcc_generated_files/system/src/pins.c: 135:     IOCCN = 0x0;
 16317   011E88  6B16               	clrf	22,b	;volatile
 16318   011E8A                     
 16319                           ; BSR set to: 4
 16320                           ;mcc_generated_files/system/src/pins.c: 136:     IOCCF = 0x0;
 16321   011E8A  6B17               	clrf	23,b	;volatile
 16322   011E8C                     
 16323                           ; BSR set to: 4
 16324                           ;mcc_generated_files/system/src/pins.c: 137:     IOCEP = 0x0;
 16325   011E8C  6B25               	clrf	37,b	;volatile
 16326   011E8E                     
 16327                           ; BSR set to: 4
 16328                           ;mcc_generated_files/system/src/pins.c: 138:     IOCEN = 0x0;
 16329   011E8E  6B26               	clrf	38,b	;volatile
 16330   011E90                     
 16331                           ; BSR set to: 4
 16332                           ;mcc_generated_files/system/src/pins.c: 139:     IOCEF = 0x0;
 16333   011E90  6B27               	clrf	39,b	;volatile
 16334   011E92                     
 16335                           ; BSR set to: 4
 16336   011E92  0012               	return		;funcret
 16337   011E94                     __end_of_PIN_MANAGER_Initialize:
 16338                           	callstack 0
 16339                           
 16340 ;; *************** function _INTERRUPT_Initialize *****************
 16341 ;; Defined at:
 16342 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
 16343 ;; Parameters:    Size  Location     Type
 16344 ;;		None
 16345 ;; Auto vars:     Size  Location     Type
 16346 ;;		None
 16347 ;; Return value:  Size  Location     Type
 16348 ;;                  1    wreg      void 
 16349 ;; Registers used:
 16350 ;;		wreg, status,2, status,0, cstack
 16351 ;; Tracked objects:
 16352 ;;		On entry : 0/0
 16353 ;;		On exit  : 0/0
 16354 ;;		Unchanged: 0/0
 16355 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16360 ;;Total ram usage:        0 bytes
 16361 ;; Hardware stack levels used: 1
 16362 ;; Hardware stack levels required when called: 8
 16363 ;; This function calls:
 16364 ;;		_INT1_SetInterruptHandler
 16365 ;;		_INT2_SetInterruptHandler
 16366 ;; This function is called by:
 16367 ;;		_SYSTEM_Initialize
 16368 ;; This function uses a non-reentrant model
 16369 ;;
 16370                           
 16371                           	psect	text42
 16372   0125A8                     __ptext42:
 16373                           	callstack 0
 16374   0125A8                     _INTERRUPT_Initialize:
 16375                           	callstack 117
 16376   0125A8                     
 16377                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
 16378   0125A8  9AD6               	bcf	214,5,c	;volatile
 16379                           
 16380                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
 16381   0125AA  90AF               	bcf	175,0,c	;volatile
 16382                           
 16383                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 0);
 16384   0125AC  90D6               	bcf	214,0,c	;volatile
 16385                           
 16386                           ;mcc_generated_files/system/src/interrupt.c: 53:     (PIE1bits.INT0IE = 1);
 16387   0125AE  809F               	bsf	159,0,c	;volatile
 16388                           
 16389                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR6bits.INT1IF = 0);
 16390   0125B0  90B4               	bcf	180,0,c	;volatile
 16391                           
 16392                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
 16393   0125B2  82D6               	bsf	214,1,c	;volatile
 16394   0125B4                     
 16395                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
 16396   0125B4  0E00               	movlw	0
 16397   0125B6  0105               	movlb	5	; () banked
 16398   0125B8  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 16399   0125BA  0E00               	movlw	0
 16400   0125BC  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16401   0125BE  0E00               	movlw	0
 16402   0125C0  6F62               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16403   0125C2  ECEC  F094         	call	_INT1_SetInterruptHandler	;wreg free
 16404   0125C6                     
 16405                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR10bits.INT2IF = 0);
 16406   0125C6  90B8               	bcf	184,0,c	;volatile
 16407   0125C8                     
 16408                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
 16409   0125C8  84D6               	bsf	214,2,c	;volatile
 16410                           
 16411                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
 16412   0125CA  0E00               	movlw	0
 16413   0125CC  0105               	movlb	5	; () banked
 16414   0125CE  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 16415   0125D0  0E00               	movlw	0
 16416   0125D2  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16417   0125D4  0E00               	movlw	0
 16418   0125D6  6F62               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16419   0125D8  ECE5  F094         	call	_INT2_SetInterruptHandler	;wreg free
 16420   0125DC  0012               	return		;funcret
 16421   0125DE                     __end_of_INTERRUPT_Initialize:
 16422                           	callstack 0
 16423                           
 16424 ;; *************** function _INT2_SetInterruptHandler *****************
 16425 ;; Defined at:
 16426 ;;		line 181 in file "mcc_generated_files/system/src/interrupt.c"
 16427 ;; Parameters:    Size  Location     Type
 16428 ;;  InterruptHan    3    0[BANK5 ] PTR FTN()void 
 16429 ;;		 -> INT2_DefaultInterruptHandler(1), 
 16430 ;; Auto vars:     Size  Location     Type
 16431 ;;		None
 16432 ;; Return value:  Size  Location     Type
 16433 ;;                  1    wreg      void 
 16434 ;; Registers used:
 16435 ;;		wreg, status,2, status,0
 16436 ;; Tracked objects:
 16437 ;;		On entry : 0/0
 16438 ;;		On exit  : 0/0
 16439 ;;		Unchanged: 0/0
 16440 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16441 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16444 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16445 ;;Total ram usage:        3 bytes
 16446 ;; Hardware stack levels used: 1
 16447 ;; Hardware stack levels required when called: 7
 16448 ;; This function calls:
 16449 ;;		Nothing
 16450 ;; This function is called by:
 16451 ;;		_INTERRUPT_Initialize
 16452 ;; This function uses a non-reentrant model
 16453 ;;
 16454                           
 16455                           	psect	text43
 16456   0129CA                     __ptext43:
 16457                           	callstack 0
 16458   0129CA                     _INT2_SetInterruptHandler:
 16459                           	callstack 117
 16460   0129CA                     
 16461                           ;mcc_generated_files/system/src/interrupt.c: 182:     INT2_InterruptHandler = InterruptH
      +                          andler;
 16462   0129CA  C560  F55A         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 16463   0129CE  C561  F55B         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 16464   0129D2  C562  F55C         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
 16465   0129D6  0012               	return		;funcret
 16466   0129D8                     __end_of_INT2_SetInterruptHandler:
 16467                           	callstack 0
 16468                           
 16469 ;; *************** function _INT1_SetInterruptHandler *****************
 16470 ;; Defined at:
 16471 ;;		line 155 in file "mcc_generated_files/system/src/interrupt.c"
 16472 ;; Parameters:    Size  Location     Type
 16473 ;;  InterruptHan    3    0[BANK5 ] PTR FTN()void 
 16474 ;;		 -> INT1_DefaultInterruptHandler(1), 
 16475 ;; Auto vars:     Size  Location     Type
 16476 ;;		None
 16477 ;; Return value:  Size  Location     Type
 16478 ;;                  1    wreg      void 
 16479 ;; Registers used:
 16480 ;;		wreg, status,2, status,0
 16481 ;; Tracked objects:
 16482 ;;		On entry : 0/0
 16483 ;;		On exit  : 0/0
 16484 ;;		Unchanged: 0/0
 16485 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16486 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16489 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16490 ;;Total ram usage:        3 bytes
 16491 ;; Hardware stack levels used: 1
 16492 ;; Hardware stack levels required when called: 7
 16493 ;; This function calls:
 16494 ;;		Nothing
 16495 ;; This function is called by:
 16496 ;;		_INTERRUPT_Initialize
 16497 ;; This function uses a non-reentrant model
 16498 ;;
 16499                           
 16500                           	psect	text44
 16501   0129D8                     __ptext44:
 16502                           	callstack 0
 16503   0129D8                     _INT1_SetInterruptHandler:
 16504                           	callstack 117
 16505   0129D8                     
 16506                           ;mcc_generated_files/system/src/interrupt.c: 156:     INT1_InterruptHandler = InterruptH
      +                          andler;
 16507   0129D8  C560  F55D         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 16508   0129DC  C561  F55E         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 16509   0129E0  C562  F55F         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
 16510   0129E4  0012               	return		;funcret
 16511   0129E6                     __end_of_INT1_SetInterruptHandler:
 16512                           	callstack 0
 16513                           
 16514 ;; *************** function _CLOCK_Initialize *****************
 16515 ;; Defined at:
 16516 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 16517 ;; Parameters:    Size  Location     Type
 16518 ;;		None
 16519 ;; Auto vars:     Size  Location     Type
 16520 ;;		None
 16521 ;; Return value:  Size  Location     Type
 16522 ;;                  1    wreg      void 
 16523 ;; Registers used:
 16524 ;;		wreg, status,2
 16525 ;; Tracked objects:
 16526 ;;		On entry : 0/0
 16527 ;;		On exit  : 0/0
 16528 ;;		Unchanged: 0/0
 16529 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16534 ;;Total ram usage:        0 bytes
 16535 ;; Hardware stack levels used: 1
 16536 ;; Hardware stack levels required when called: 7
 16537 ;; This function calls:
 16538 ;;		Nothing
 16539 ;; This function is called by:
 16540 ;;		_SYSTEM_Initialize
 16541 ;; This function uses a non-reentrant model
 16542 ;;
 16543                           
 16544                           	psect	text45
 16545   0129A4                     __ptext45:
 16546                           	callstack 0
 16547   0129A4                     _CLOCK_Initialize:
 16548                           	callstack 118
 16549   0129A4                     
 16550                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 16551   0129A4  0E60               	movlw	96
 16552   0129A6  0100               	movlb	0	; () banked
 16553   0129A8  6FAD               	movwf	173,b	;volatile
 16554   0129AA                     
 16555                           ; BSR set to: 0
 16556                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 16557   0129AA  6BAF               	clrf	175,b	;volatile
 16558   0129AC                     
 16559                           ; BSR set to: 0
 16560                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 16561   0129AC  6BB3               	clrf	179,b	;volatile
 16562                           
 16563                           ;mcc_generated_files/system/src/clock.c: 53:     OSCFRQ = (8 << 0x0);
 16564   0129AE  0E08               	movlw	8
 16565   0129B0  6FB1               	movwf	177,b	;volatile
 16566   0129B2                     
 16567                           ; BSR set to: 0
 16568                           ;mcc_generated_files/system/src/clock.c: 54:     OSCTUNE = (0 << 0x0);
 16569   0129B2  6BB0               	clrf	176,b	;volatile
 16570   0129B4                     
 16571                           ; BSR set to: 0
 16572                           ;mcc_generated_files/system/src/clock.c: 55:     ACTCON = (0 << 0x7)
 16573   0129B4  6BAC               	clrf	172,b	;volatile
 16574   0129B6                     
 16575                           ; BSR set to: 0
 16576   0129B6  0012               	return		;funcret
 16577   0129B8                     __end_of_CLOCK_Initialize:
 16578                           	callstack 0
 16579                           
 16580 ;; *************** function _RC6_SetInterruptHandler *****************
 16581 ;; Defined at:
 16582 ;;		line 106 in file "mcc_generated_files/system/src/interrupt.c"
 16583 ;; Parameters:    Size  Location     Type
 16584 ;;  InterruptHan    3    0[BANK5 ] PTR FTN()void 
 16585 ;;		 -> nrf_interrupt(1), 
 16586 ;; Auto vars:     Size  Location     Type
 16587 ;;		None
 16588 ;; Return value:  Size  Location     Type
 16589 ;;                  1    wreg      void 
 16590 ;; Registers used:
 16591 ;;		wreg, status,2, status,0
 16592 ;; Tracked objects:
 16593 ;;		On entry : 0/0
 16594 ;;		On exit  : 0/0
 16595 ;;		Unchanged: 0/0
 16596 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16597 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16600 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16601 ;;Total ram usage:        3 bytes
 16602 ;; Hardware stack levels used: 1
 16603 ;; Hardware stack levels required when called: 7
 16604 ;; This function calls:
 16605 ;;		Nothing
 16606 ;; This function is called by:
 16607 ;;		_main
 16608 ;; This function uses a non-reentrant model
 16609 ;;
 16610                           
 16611                           	psect	text46
 16612   0129E6                     __ptext46:
 16613                           	callstack 0
 16614   0129E6                     _RC6_SetInterruptHandler:
 16615                           	callstack 119
 16616   0129E6                     
 16617                           ;mcc_generated_files/system/src/interrupt.c: 107:     RC6_InterruptHandler = InterruptHa
      +                          ndler;
 16618   0129E6  C560  F555         	movff	RC6_SetInterruptHandler@InterruptHandler,_RC6_InterruptHandler
 16619   0129EA  C561  F556         	movff	RC6_SetInterruptHandler@InterruptHandler+1,_RC6_InterruptHandler+1
 16620   0129EE  C562  F557         	movff	RC6_SetInterruptHandler@InterruptHandler+2,_RC6_InterruptHandler+2
 16621   0129F2  0012               	return		;funcret
 16622   0129F4                     __end_of_RC6_SetInterruptHandler:
 16623                           	callstack 0
 16624                           
 16625 ;; *************** function _Nrf24_send *****************
 16626 ;; Defined at:
 16627 ;;		line 230 in file "mirf.c"
 16628 ;; Parameters:    Size  Location     Type
 16629 ;;  dev             2   13[BANK5 ] PTR struct .
 16630 ;;		 -> dev(3), 
 16631 ;;  value           2   15[BANK5 ] PTR unsigned char 
 16632 ;;		 -> main@buf(32), 
 16633 ;; Auto vars:     Size  Location     Type
 16634 ;;  status          1   18[BANK5 ] unsigned char 
 16635 ;; Return value:  Size  Location     Type
 16636 ;;                  1    wreg      void 
 16637 ;; Registers used:
 16638 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16639 ;; Tracked objects:
 16640 ;;		On entry : 0/0
 16641 ;;		On exit  : 0/0
 16642 ;;		Unchanged: 0/0
 16643 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16644 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16645 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16646 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16647 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16648 ;;Total ram usage:        6 bytes
 16649 ;; Hardware stack levels used: 1
 16650 ;; Hardware stack levels required when called: 11
 16651 ;; This function calls:
 16652 ;;		_Nrf24_getStatus
 16653 ;;		_Nrf24_powerUpTx
 16654 ;;		_SPI1_ByteExchange
 16655 ;;		_SPI_write_buff
 16656 ;; This function is called by:
 16657 ;;		_main
 16658 ;; This function uses a non-reentrant model
 16659 ;;
 16660                           
 16661                           	psect	text47
 16662   011E94                     __ptext47:
 16663                           	callstack 0
 16664   011E94                     _Nrf24_send:
 16665                           	callstack 115
 16666   011E94  C56D  F56A         	movff	Nrf24_send@dev,Nrf24_getStatus@dev
 16667   011E98  C56E  F56B         	movff	Nrf24_send@dev+1,Nrf24_getStatus@dev+1
 16668   011E9C  EC8B  F094         	call	_Nrf24_getStatus	;wreg free
 16669                           
 16670                           ;mirf.c: 234:  while (dev->PTX)
 16671   011EA0  EF6C  F08F         	goto	l4092
 16672   011EA4                     l4086:
 16673                           
 16674                           ;mirf.c: 235:  {;mirf.c: 236:   status = Nrf24_getStatus(dev);
 16675   011EA4  C56D  F56A         	movff	Nrf24_send@dev,Nrf24_getStatus@dev
 16676   011EA8  C56E  F56B         	movff	Nrf24_send@dev+1,Nrf24_getStatus@dev+1
 16677   011EAC  EC8B  F094         	call	_Nrf24_getStatus	;wreg free
 16678   011EB0  0105               	movlb	5	; () banked
 16679   011EB2  6F72               	movwf	Nrf24_send@status& (0+255),b
 16680   011EB4                     
 16681                           ; BSR set to: 5
 16682                           ;mirf.c: 237:   if ((status & ((1 << 5) | (1 << 4))))
 16683   011EB4  C572  F571         	movff	Nrf24_send@status,??_Nrf24_send
 16684   011EB8  0E30               	movlw	48
 16685   011EBA  1771               	andwf	??_Nrf24_send& (0+255),f,b
 16686   011EBC  B4D8               	btfsc	status,2,c
 16687   011EBE  EF63  F08F         	goto	u2961
 16688   011EC2  EF65  F08F         	goto	u2960
 16689   011EC6                     u2961:
 16690   011EC6  EF6C  F08F         	goto	l4092
 16691   011ECA                     u2960:
 16692   011ECA                     
 16693                           ; BSR set to: 5
 16694                           ;mirf.c: 238:   {;mirf.c: 239:    dev->PTX = 0;
 16695   011ECA  C56D  F4D9         	movff	Nrf24_send@dev,fsr2l
 16696   011ECE  C56E  F4DA         	movff	Nrf24_send@dev+1,fsr2h
 16697   011ED2  6ADF               	clrf	indf2,c
 16698                           
 16699                           ;mirf.c: 240:    break;
 16700   011ED4  EF78  F08F         	goto	l739
 16701   011ED8                     l4092:
 16702                           
 16703                           ;mirf.c: 234:  while (dev->PTX)
 16704   011ED8  C56D  F4D9         	movff	Nrf24_send@dev,fsr2l
 16705   011EDC  C56E  F4DA         	movff	Nrf24_send@dev+1,fsr2h
 16706   011EE0  50DF               	movf	indf2,w,c
 16707   011EE2  A4D8               	btfss	status,2,c
 16708   011EE4  EF76  F08F         	goto	u2971
 16709   011EE8  EF78  F08F         	goto	u2970
 16710   011EEC                     u2971:
 16711   011EEC  EF52  F08F         	goto	l4086
 16712   011EF0                     u2970:
 16713   011EF0                     l739:
 16714   011EF0  94C0               	bcf	192,2,c	;volatile
 16715   011EF2                     
 16716                           ;mirf.c: 244:  Nrf24_powerUpTx(dev);
 16717   011EF2  C56D  F564         	movff	Nrf24_send@dev,Nrf24_powerUpTx@dev
 16718   011EF6  C56E  F565         	movff	Nrf24_send@dev+1,Nrf24_powerUpTx@dev+1
 16719   011EFA  EC08  F094         	call	_Nrf24_powerUpTx	;wreg free
 16720   011EFE  9EC0               	bcf	192,7,c	;volatile
 16721   011F00                     
 16722                           ;mirf.c: 246:  SPI1_ByteExchange(0xE1);
 16723   011F00  0EE1               	movlw	225
 16724   011F02  EC4A  F092         	call	_SPI1_ByteExchange
 16725   011F06  8EC0               	bsf	192,7,c	;volatile
 16726   011F08  9EC0               	bcf	192,7,c	;volatile
 16727   011F0A                     
 16728                           ;mirf.c: 249:  SPI1_ByteExchange(0xA0);
 16729   011F0A  0EA0               	movlw	160
 16730   011F0C  EC4A  F092         	call	_SPI1_ByteExchange
 16731   011F10                     
 16732                           ;mirf.c: 250:  SPI_write_buff(value, dev->payload);
 16733   011F10  C56F  F562         	movff	Nrf24_send@value,SPI_write_buff@buffer
 16734   011F14  C570  F563         	movff	Nrf24_send@value+1,SPI_write_buff@buffer+1
 16735   011F18  0105               	movlb	5	; () banked
 16736   011F1A  EE20 F002          	lfsr	2,2
 16737   011F1E  516D               	movf	Nrf24_send@dev& (0+255),w,b
 16738   011F20  26D9               	addwf	fsr2l,f,c
 16739   011F22  516E               	movf	(Nrf24_send@dev+1)& (0+255),w,b
 16740   011F24  22DA               	addwfc	fsr2h,f,c
 16741   011F26  50DF               	movf	indf2,w,c
 16742   011F28  6F64               	movwf	SPI_write_buff@bytes& (0+255),b
 16743   011F2A  EC76  F091         	call	_SPI_write_buff	;wreg free
 16744   011F2E  8EC0               	bsf	192,7,c	;volatile
 16745   011F30  84C0               	bsf	192,2,c	;volatile
 16746   011F32  0012               	return		;funcret
 16747   011F34                     __end_of_Nrf24_send:
 16748                           	callstack 0
 16749                           
 16750 ;; *************** function _SPI_write_buff *****************
 16751 ;; Defined at:
 16752 ;;		line 54 in file "mirf.c"
 16753 ;; Parameters:    Size  Location     Type
 16754 ;;  buffer          2    2[BANK5 ] PTR unsigned char 
 16755 ;;		 -> main@buf(32), STR_2(6), STR_1(6), 
 16756 ;;  bytes           1    4[BANK5 ] unsigned char 
 16757 ;; Auto vars:     Size  Location     Type
 16758 ;;  i               1    5[BANK5 ] unsigned char 
 16759 ;; Return value:  Size  Location     Type
 16760 ;;                  1    wreg      void 
 16761 ;; Registers used:
 16762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16763 ;; Tracked objects:
 16764 ;;		On entry : 0/0
 16765 ;;		On exit  : 0/0
 16766 ;;		Unchanged: 0/0
 16767 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16768 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16771 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16772 ;;Total ram usage:        4 bytes
 16773 ;; Hardware stack levels used: 1
 16774 ;; Hardware stack levels required when called: 8
 16775 ;; This function calls:
 16776 ;;		_DELAY_microseconds
 16777 ;;		_SPI1_ByteExchange
 16778 ;; This function is called by:
 16779 ;;		_Nrf24_writeRegister
 16780 ;;		_Nrf24_send
 16781 ;; This function uses a non-reentrant model
 16782 ;;
 16783                           
 16784                           	psect	text48
 16785   0122EC                     __ptext48:
 16786                           	callstack 0
 16787   0122EC                     _SPI_write_buff:
 16788                           	callstack 115
 16789   0122EC  9EC0               	bcf	192,7,c	;volatile
 16790   0122EE                     
 16791                           ;mirf.c: 56:     unsigned char i;;mirf.c: 57:     for (i = 0; i < bytes; i++) {
 16792   0122EE  0105               	movlb	5	; () banked
 16793   0122F0  6B65               	clrf	SPI_write_buff@i& (0+255),b
 16794   0122F2  EF99  F091         	goto	l3522
 16795   0122F6                     l3514:
 16796                           
 16797                           ; BSR set to: 5
 16798                           ;mirf.c: 58:         SPI1_ByteExchange(*buffer);
 16799   0122F6  C562  F4F6         	movff	SPI_write_buff@buffer,tblptrl
 16800   0122FA  C563  F4F7         	movff	SPI_write_buff@buffer+1,tblptrh
 16801   0122FE  0E00               	movlw	low (__mediumconst shr (0+16))
 16802   012300  6EF8               	movwf	tblptru,c
 16803   012302  0E25               	movlw	(high __ramtop+-1)
 16804   012304  64F7               	cpfsgt	tblptrh,c
 16805   012306  D003               	bra	u2527
 16806   012308  0008               	tblrd		*
 16807   01230A  50F5               	movf	tablat,w,c
 16808   01230C  D005               	bra	u2520
 16809   01230E                     u2527:
 16810   01230E  C4F6 F4E9          	movff	tblptrl,fsr0l
 16811   012312  C4F7 F4EA          	movff	tblptrh,fsr0h
 16812   012316  50EF               	movf	indf0,w,c
 16813   012318                     u2520:
 16814   012318  EC4A  F092         	call	_SPI1_ByteExchange
 16815   01231C                     
 16816                           ;mirf.c: 59:         buffer++;
 16817   01231C  0105               	movlb	5	; () banked
 16818   01231E  4B62               	infsnz	SPI_write_buff@buffer& (0+255),f,b
 16819   012320  2B63               	incf	(SPI_write_buff@buffer+1)& (0+255),f,b
 16820   012322                     
 16821                           ; BSR set to: 5
 16822                           ;mirf.c: 60:         DELAY_microseconds(10);
 16823   012322  0E00               	movlw	0
 16824   012324  6F61               	movwf	(DELAY_microseconds@microseconds+1)& (0+255),b
 16825   012326  0E0A               	movlw	10
 16826   012328  6F60               	movwf	DELAY_microseconds@microseconds& (0+255),b
 16827   01232A  ECA4  F091         	call	_DELAY_microseconds	;wreg free
 16828   01232E                     
 16829                           ;mirf.c: 61:     }
 16830   01232E  0105               	movlb	5	; () banked
 16831   012330  2B65               	incf	SPI_write_buff@i& (0+255),f,b
 16832   012332                     l3522:
 16833                           
 16834                           ; BSR set to: 5
 16835   012332  5164               	movf	SPI_write_buff@bytes& (0+255),w,b
 16836   012334  5D65               	subwf	SPI_write_buff@i& (0+255),w,b
 16837   012336  A0D8               	btfss	status,0,c
 16838   012338  EFA0  F091         	goto	u2531
 16839   01233C  EFA2  F091         	goto	u2530
 16840   012340                     u2531:
 16841   012340  EF7B  F091         	goto	l3514
 16842   012344                     u2530:
 16843   012344                     
 16844                           ; BSR set to: 5
 16845   012344  8EC0               	bsf	192,7,c	;volatile
 16846   012346                     
 16847                           ; BSR set to: 5
 16848   012346  0012               	return		;funcret
 16849   012348                     __end_of_SPI_write_buff:
 16850                           	callstack 0
 16851                           
 16852 ;; *************** function _DELAY_microseconds *****************
 16853 ;; Defined at:
 16854 ;;		line 43 in file "mcc_generated_files/timer/src/delay.c"
 16855 ;; Parameters:    Size  Location     Type
 16856 ;;  microseconds    2    0[BANK5 ] unsigned short 
 16857 ;; Auto vars:     Size  Location     Type
 16858 ;;		None
 16859 ;; Return value:  Size  Location     Type
 16860 ;;                  1    wreg      void 
 16861 ;; Registers used:
 16862 ;;		wreg, status,2, status,0
 16863 ;; Tracked objects:
 16864 ;;		On entry : 0/0
 16865 ;;		On exit  : 0/0
 16866 ;;		Unchanged: 0/0
 16867 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16868 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16871 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16872 ;;Total ram usage:        2 bytes
 16873 ;; Hardware stack levels used: 1
 16874 ;; Hardware stack levels required when called: 7
 16875 ;; This function calls:
 16876 ;;		Nothing
 16877 ;; This function is called by:
 16878 ;;		_SPI_write_buff
 16879 ;; This function uses a non-reentrant model
 16880 ;;
 16881                           
 16882                           	psect	text49
 16883   012348                     __ptext49:
 16884                           	callstack 0
 16885   012348                     _DELAY_microseconds:
 16886                           	callstack 115
 16887   012348                     
 16888                           ;mcc_generated_files/timer/src/delay.c: 44:     while( microseconds >= 32)
 16889   012348  EFAF  F091         	goto	l3418
 16890   01234C                     l3414:
 16891                           
 16892                           ; BSR set to: 5
 16893                           ;mcc_generated_files/timer/src/delay.c: 45:     {;mcc_generated_files/timer/src/delay.c:
      +                           46:         _delay((unsigned long)((32)*(64000000U/4000000.0)));
 16894   01234C  0EAA               	movlw	170
 16895   01234E                     u3217:
 16896   01234E  2EE8               	decfsz	wreg,f,c
 16897   012350  D7FE               	bra	u3217
 16898   012352  D000               	nop2	
 16899   012354                     
 16900                           ;mcc_generated_files/timer/src/delay.c: 47:         microseconds -= 32;
 16901   012354  0E20               	movlw	32
 16902   012356  0105               	movlb	5	; () banked
 16903   012358  5F60               	subwf	DELAY_microseconds@microseconds& (0+255),f,b
 16904   01235A  0E00               	movlw	0
 16905   01235C  5B61               	subwfb	(DELAY_microseconds@microseconds+1)& (0+255),f,b
 16906   01235E                     l3418:
 16907                           
 16908                           ;mcc_generated_files/timer/src/delay.c: 44:     while( microseconds >= 32)
 16909   01235E  0105               	movlb	5	; () banked
 16910   012360  5161               	movf	(DELAY_microseconds@microseconds+1)& (0+255),w,b
 16911   012362  E107               	bnz	u2311
 16912   012364  0E20               	movlw	32
 16913   012366  5D60               	subwf	DELAY_microseconds@microseconds& (0+255),w,b
 16914   012368  B0D8               	btfsc	status,0,c
 16915   01236A  EFB9  F091         	goto	u2311
 16916   01236E  EFBB  F091         	goto	u2310
 16917   012372                     u2311:
 16918   012372  EFA6  F091         	goto	l3414
 16919   012376                     u2310:
 16920   012376  EFC1  F091         	goto	l3422
 16921   01237A                     l3420:
 16922                           
 16923                           ; BSR set to: 5
 16924                           ;mcc_generated_files/timer/src/delay.c: 51:     {;mcc_generated_files/timer/src/delay.c:
      +                           52:         _delay((unsigned long)((1)*(64000000U/4000000.0)));
 16925   01237A  0E05               	movlw	5
 16926   01237C                     u3227:
 16927   01237C  2EE8               	decfsz	wreg,f,c
 16928   01237E  D7FE               	bra	u3227
 16929   012380  0000               	nop	
 16930   012382                     l3422:
 16931                           
 16932                           ;mcc_generated_files/timer/src/delay.c: 50:     while(microseconds--)
 16933   012382  0105               	movlb	5	; () banked
 16934   012384  0760               	decf	DELAY_microseconds@microseconds& (0+255),f,b
 16935   012386  A0D8               	btfss	status,0,c
 16936   012388  0761               	decf	(DELAY_microseconds@microseconds+1)& (0+255),f,b
 16937   01238A  2960               	incf	DELAY_microseconds@microseconds& (0+255),w,b
 16938   01238C  E106               	bnz	u2321
 16939   01238E  2961               	incf	(DELAY_microseconds@microseconds+1)& (0+255),w,b
 16940   012390  A4D8               	btfss	status,2,c
 16941   012392  EFCD  F091         	goto	u2321
 16942   012396  EFCF  F091         	goto	u2320
 16943   01239A                     u2321:
 16944   01239A  EFBD  F091         	goto	l3420
 16945   01239E                     u2320:
 16946   01239E                     
 16947                           ; BSR set to: 5
 16948   01239E  0012               	return		;funcret
 16949   0123A0                     __end_of_DELAY_microseconds:
 16950                           	callstack 0
 16951                           
 16952 ;; *************** function _Nrf24_powerUpTx *****************
 16953 ;; Defined at:
 16954 ;;		line 318 in file "mirf.c"
 16955 ;; Parameters:    Size  Location     Type
 16956 ;;  dev             2    4[BANK5 ] PTR struct .
 16957 ;;		 -> dev(3), 
 16958 ;; Auto vars:     Size  Location     Type
 16959 ;;		None
 16960 ;; Return value:  Size  Location     Type
 16961 ;;                  1    wreg      void 
 16962 ;; Registers used:
 16963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16964 ;; Tracked objects:
 16965 ;;		On entry : 0/0
 16966 ;;		On exit  : 0/0
 16967 ;;		Unchanged: 0/0
 16968 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16969 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16972 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16973 ;;Total ram usage:        2 bytes
 16974 ;; Hardware stack levels used: 1
 16975 ;; Hardware stack levels required when called: 9
 16976 ;; This function calls:
 16977 ;;		_Nrf24_configRegister
 16978 ;; This function is called by:
 16979 ;;		_Nrf24_send
 16980 ;; This function uses a non-reentrant model
 16981 ;;
 16982                           
 16983                           	psect	text50
 16984   012810                     __ptext50:
 16985                           	callstack 0
 16986   012810                     _Nrf24_powerUpTx:
 16987                           	callstack 116
 16988   012810                     
 16989                           ;mirf.c: 319:  dev->PTX = 1;
 16990   012810  C564  F4D9         	movff	Nrf24_powerUpTx@dev,fsr2l
 16991   012814  C565  F4DA         	movff	Nrf24_powerUpTx@dev+1,fsr2h
 16992   012818  0E01               	movlw	1
 16993   01281A  6EDF               	movwf	indf2,c
 16994   01281C                     
 16995                           ;mirf.c: 320:  Nrf24_configRegister(0x00, ((1<<5) | (1<<3) | (0<<2) ) | ( (1 << 1) | (0 
      +                          << 0) ) );
 16996   01281C  0E2A               	movlw	42
 16997   01281E  0105               	movlb	5	; () banked
 16998   012820  6F62               	movwf	Nrf24_configRegister@value& (0+255),b
 16999   012822  0E00               	movlw	0
 17000   012824  EC6E  F094         	call	_Nrf24_configRegister
 17001   012828                     
 17002                           ;mirf.c: 321:  Nrf24_configRegister(0x07, (1 << 5) | (1 << 4));
 17003   012828  0E30               	movlw	48
 17004   01282A  0105               	movlb	5	; () banked
 17005   01282C  6F62               	movwf	Nrf24_configRegister@value& (0+255),b
 17006   01282E  0E07               	movlw	7
 17007   012830  EC6E  F094         	call	_Nrf24_configRegister
 17008   012834  0012               	return		;funcret
 17009   012836                     __end_of_Nrf24_powerUpTx:
 17010                           	callstack 0
 17011                           
 17012 ;; *************** function _Nrf24_isSend *****************
 17013 ;; Defined at:
 17014 ;;		line 274 in file "mirf.c"
 17015 ;; Parameters:    Size  Location     Type
 17016 ;;  dev             2   13[BANK5 ] PTR struct .
 17017 ;;		 -> dev(3), 
 17018 ;;  timeout         2   15[BANK5 ] int 
 17019 ;; Auto vars:     Size  Location     Type
 17020 ;;  i               4   21[BANK5 ] unsigned long 
 17021 ;;  status          1   25[BANK5 ] unsigned char 
 17022 ;; Return value:  Size  Location     Type
 17023 ;;                  1    wreg      _Bool 
 17024 ;; Registers used:
 17025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17026 ;; Tracked objects:
 17027 ;;		On entry : 0/0
 17028 ;;		On exit  : 0/0
 17029 ;;		Unchanged: 0/0
 17030 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17031 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17032 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17033 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17034 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17035 ;;Total ram usage:       13 bytes
 17036 ;; Hardware stack levels used: 1
 17037 ;; Hardware stack levels required when called: 11
 17038 ;; This function calls:
 17039 ;;		_DELAY_milliseconds
 17040 ;;		_Nrf24_getStatus
 17041 ;;		_Nrf24_powerUpRx
 17042 ;; This function is called by:
 17043 ;;		_main
 17044 ;; This function uses a non-reentrant model
 17045 ;;
 17046                           
 17047                           	psect	text51
 17048   0119E6                     __ptext51:
 17049                           	callstack 0
 17050   0119E6                     _Nrf24_isSend:
 17051                           	callstack 115
 17052   0119E6                     
 17053                           ;mirf.c: 275:  uint8_t status;;mirf.c: 276:  if (dev->PTX) {
 17054   0119E6  C56D  F4D9         	movff	Nrf24_isSend@dev,fsr2l
 17055   0119EA  C56E  F4DA         	movff	Nrf24_isSend@dev+1,fsr2h
 17056   0119EE  50DF               	movf	indf2,w,c
 17057   0119F0  B4D8               	btfsc	status,2,c
 17058   0119F2  EFFD  F08C         	goto	u2981
 17059   0119F6  EFFF  F08C         	goto	u2980
 17060   0119FA                     u2981:
 17061   0119FA  EF4F  F08D         	goto	l763
 17062   0119FE                     u2980:
 17063   0119FE                     
 17064                           ;mirf.c: 277:   for(unsigned long int i = 0; i < timeout; i++) {
 17065   0119FE  0E00               	movlw	0
 17066   011A00  0105               	movlb	5	; () banked
 17067   011A02  6F75               	movwf	Nrf24_isSend@i& (0+255),b
 17068   011A04  0E00               	movlw	0
 17069   011A06  6F76               	movwf	(Nrf24_isSend@i+1)& (0+255),b
 17070   011A08  0E00               	movlw	0
 17071   011A0A  6F77               	movwf	(Nrf24_isSend@i+2)& (0+255),b
 17072   011A0C  0E00               	movlw	0
 17073   011A0E  6F78               	movwf	(Nrf24_isSend@i+3)& (0+255),b
 17074   011A10  EF37  F08D         	goto	l4132
 17075   011A14                     l4116:
 17076                           
 17077                           ; BSR set to: 5
 17078                           ;mirf.c: 278:    status = Nrf24_getStatus(dev);
 17079   011A14  C56D  F56A         	movff	Nrf24_isSend@dev,Nrf24_getStatus@dev
 17080   011A18  C56E  F56B         	movff	Nrf24_isSend@dev+1,Nrf24_getStatus@dev+1
 17081   011A1C  EC8B  F094         	call	_Nrf24_getStatus	;wreg free
 17082   011A20  0105               	movlb	5	; () banked
 17083   011A22  6F79               	movwf	Nrf24_isSend@status& (0+255),b
 17084   011A24                     
 17085                           ; BSR set to: 5
 17086                           ;mirf.c: 280:    if (status & (1 << 5)) {
 17087   011A24  AB79               	btfss	Nrf24_isSend@status& (0+255),5,b
 17088   011A26  EF17  F08D         	goto	u2991
 17089   011A2A  EF19  F08D         	goto	u2990
 17090   011A2E                     u2991:
 17091   011A2E  EF21  F08D         	goto	l762
 17092   011A32                     u2990:
 17093   011A32                     l4120:
 17094                           
 17095                           ; BSR set to: 5
 17096                           ;mirf.c: 281:     Nrf24_powerUpRx(dev);
 17097   011A32  C56D  F564         	movff	Nrf24_isSend@dev,Nrf24_powerUpRx@dev
 17098   011A36  C56E  F565         	movff	Nrf24_isSend@dev+1,Nrf24_powerUpRx@dev+1
 17099   011A3A  ECF4  F093         	call	_Nrf24_powerUpRx	;wreg free
 17100   011A3E  EF4F  F08D         	goto	l763
 17101   011A42                     l762:
 17102                           
 17103                           ; BSR set to: 5
 17104                           ;mirf.c: 285:    if (status & (1 << 4)) {
 17105   011A42  A979               	btfss	Nrf24_isSend@status& (0+255),4,b
 17106   011A44  EF26  F08D         	goto	u3001
 17107   011A48  EF28  F08D         	goto	u3000
 17108   011A4C                     u3001:
 17109   011A4C  EF2A  F08D         	goto	l4128
 17110   011A50                     u3000:
 17111   011A50  EF19  F08D         	goto	l4120
 17112   011A54                     l4128:
 17113                           
 17114                           ; BSR set to: 5
 17115                           ;mirf.c: 290:    DELAY_milliseconds(1);
 17116   011A54  0E00               	movlw	0
 17117   011A56  6F61               	movwf	(DELAY_milliseconds@milliseconds+1)& (0+255),b
 17118   011A58  0E01               	movlw	1
 17119   011A5A  6F60               	movwf	DELAY_milliseconds@milliseconds& (0+255),b
 17120   011A5C  EC09  F093         	call	_DELAY_milliseconds	;wreg free
 17121   011A60                     
 17122                           ;mirf.c: 291:   }
 17123   011A60  0E01               	movlw	1
 17124   011A62  0105               	movlb	5	; () banked
 17125   011A64  2775               	addwf	Nrf24_isSend@i& (0+255),f,b
 17126   011A66  0E00               	movlw	0
 17127   011A68  2376               	addwfc	(Nrf24_isSend@i+1)& (0+255),f,b
 17128   011A6A  2377               	addwfc	(Nrf24_isSend@i+2)& (0+255),f,b
 17129   011A6C  2378               	addwfc	(Nrf24_isSend@i+3)& (0+255),f,b
 17130   011A6E                     l4132:
 17131                           
 17132                           ; BSR set to: 5
 17133   011A6E  C56F  F571         	movff	Nrf24_isSend@timeout,??_Nrf24_isSend
 17134   011A72  C570  F572         	movff	Nrf24_isSend@timeout+1,??_Nrf24_isSend+1
 17135   011A76  0E00               	movlw	0
 17136   011A78  BF72               	btfsc	(??_Nrf24_isSend+1)& (0+255),7,b
 17137   011A7A  0EFF               	movlw	255
 17138   011A7C  6F73               	movwf	(??_Nrf24_isSend+2)& (0+255),b
 17139   011A7E  6F74               	movwf	(??_Nrf24_isSend+3)& (0+255),b
 17140   011A80  5171               	movf	??_Nrf24_isSend& (0+255),w,b
 17141   011A82  5D75               	subwf	Nrf24_isSend@i& (0+255),w,b
 17142   011A84  5172               	movf	(??_Nrf24_isSend+1)& (0+255),w,b
 17143   011A86  5976               	subwfb	(Nrf24_isSend@i+1)& (0+255),w,b
 17144   011A88  5173               	movf	(??_Nrf24_isSend+2)& (0+255),w,b
 17145   011A8A  5977               	subwfb	(Nrf24_isSend@i+2)& (0+255),w,b
 17146   011A8C  5174               	movf	(??_Nrf24_isSend+3)& (0+255),w,b
 17147   011A8E  5978               	subwfb	(Nrf24_isSend@i+3)& (0+255),w,b
 17148   011A90  A0D8               	btfss	status,0,c
 17149   011A92  EF4D  F08D         	goto	u3011
 17150   011A96  EF4F  F08D         	goto	u3010
 17151   011A9A                     u3011:
 17152   011A9A  EF0A  F08D         	goto	l4116
 17153   011A9E                     u3010:
 17154   011A9E                     l763:
 17155   011A9E  0012               	return		;funcret
 17156   011AA0                     __end_of_Nrf24_isSend:
 17157                           	callstack 0
 17158                           
 17159 ;; *************** function _Nrf24_powerUpRx *****************
 17160 ;; Defined at:
 17161 ;;		line 303 in file "mirf.c"
 17162 ;; Parameters:    Size  Location     Type
 17163 ;;  dev             2    4[BANK5 ] PTR struct .
 17164 ;;		 -> dev(3), 
 17165 ;; Auto vars:     Size  Location     Type
 17166 ;;		None
 17167 ;; Return value:  Size  Location     Type
 17168 ;;                  1    wreg      void 
 17169 ;; Registers used:
 17170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17171 ;; Tracked objects:
 17172 ;;		On entry : 0/0
 17173 ;;		On exit  : 0/0
 17174 ;;		Unchanged: 0/0
 17175 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17176 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17179 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17180 ;;Total ram usage:        2 bytes
 17181 ;; Hardware stack levels used: 1
 17182 ;; Hardware stack levels required when called: 9
 17183 ;; This function calls:
 17184 ;;		_Nrf24_configRegister
 17185 ;; This function is called by:
 17186 ;;		_Nrf24_config
 17187 ;;		_Nrf24_isSend
 17188 ;;		_Nrf24_isSending
 17189 ;; This function uses a non-reentrant model
 17190 ;;
 17191                           
 17192                           	psect	text52
 17193   0127E8                     __ptext52:
 17194                           	callstack 0
 17195   0127E8                     _Nrf24_powerUpRx:
 17196                           	callstack 115
 17197   0127E8                     
 17198                           ;mirf.c: 304:  dev->PTX = 0;
 17199   0127E8  C564  F4D9         	movff	Nrf24_powerUpRx@dev,fsr2l
 17200   0127EC  C565  F4DA         	movff	Nrf24_powerUpRx@dev+1,fsr2h
 17201   0127F0  6ADF               	clrf	indf2,c
 17202   0127F2  94C0               	bcf	192,2,c	;volatile
 17203   0127F4                     
 17204                           ;mirf.c: 306:  Nrf24_configRegister(0x00, ((1<<5) | (1<<3) | (0<<2) ) | ( (1 << 1) | (1 
      +                          << 0) ) );
 17205   0127F4  0E2B               	movlw	43
 17206   0127F6  0105               	movlb	5	; () banked
 17207   0127F8  6F62               	movwf	Nrf24_configRegister@value& (0+255),b
 17208   0127FA  0E00               	movlw	0
 17209   0127FC  EC6E  F094         	call	_Nrf24_configRegister
 17210   012800  84C0               	bsf	192,2,c	;volatile
 17211   012802                     
 17212                           ;mirf.c: 308:  Nrf24_configRegister(0x07, (1 << 5) | (1 << 4));
 17213   012802  0E30               	movlw	48
 17214   012804  0105               	movlb	5	; () banked
 17215   012806  6F62               	movwf	Nrf24_configRegister@value& (0+255),b
 17216   012808  0E07               	movlw	7
 17217   01280A  EC6E  F094         	call	_Nrf24_configRegister
 17218   01280E  0012               	return		;funcret
 17219   012810                     __end_of_Nrf24_powerUpRx:
 17220                           	callstack 0
 17221                           
 17222 ;; *************** function _Nrf24_configRegister *****************
 17223 ;; Defined at:
 17224 ;;		line 198 in file "mirf.c"
 17225 ;; Parameters:    Size  Location     Type
 17226 ;;  reg             1    wreg     unsigned char 
 17227 ;;  value           1    2[BANK5 ] unsigned char 
 17228 ;; Auto vars:     Size  Location     Type
 17229 ;;  reg             1    3[BANK5 ] unsigned char 
 17230 ;; Return value:  Size  Location     Type
 17231 ;;                  1    wreg      void 
 17232 ;; Registers used:
 17233 ;;		wreg, status,2, status,0, cstack
 17234 ;; Tracked objects:
 17235 ;;		On entry : 0/0
 17236 ;;		On exit  : 0/0
 17237 ;;		Unchanged: 0/0
 17238 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17239 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17240 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17242 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17243 ;;Total ram usage:        2 bytes
 17244 ;; Hardware stack levels used: 1
 17245 ;; Hardware stack levels required when called: 8
 17246 ;; This function calls:
 17247 ;;		_SPI1_ByteExchange
 17248 ;; This function is called by:
 17249 ;;		_Nrf24_config
 17250 ;;		_Nrf24_getData
 17251 ;;		_Nrf24_powerUpRx
 17252 ;;		_Nrf24_powerUpTx
 17253 ;;		_Nrf24_SetSpeedDataRates
 17254 ;;		_Nrf24_setRetransmitDelay
 17255 ;;		_Nrf24_addRADDR
 17256 ;;		_Nrf24_powerDown
 17257 ;;		_Nrf24_SetOutputRF_PWR
 17258 ;; This function uses a non-reentrant model
 17259 ;;
 17260                           
 17261                           	psect	text53
 17262   0128DC                     __ptext53:
 17263                           	callstack 0
 17264   0128DC                     _Nrf24_configRegister:
 17265                           	callstack 116
 17266                           
 17267                           ;incstack = 0
 17268                           ;Nrf24_configRegister@reg stored from wreg
 17269   0128DC  0105               	movlb	5	; () banked
 17270   0128DE  6F63               	movwf	Nrf24_configRegister@reg& (0+255),b
 17271   0128E0  9EC0               	bcf	192,7,c	;volatile
 17272   0128E2                     
 17273                           ;mirf.c: 201:  SPI1_ByteExchange(0x20 | (0x1F & reg));
 17274   0128E2  0105               	movlb	5	; () banked
 17275   0128E4  5163               	movf	Nrf24_configRegister@reg& (0+255),w,b
 17276   0128E6  0B1F               	andlw	31
 17277   0128E8  0920               	iorlw	32
 17278   0128EA  EC4A  F092         	call	_SPI1_ByteExchange
 17279                           
 17280                           ;mirf.c: 202:  SPI1_ByteExchange(value);
 17281   0128EE  0105               	movlb	5	; () banked
 17282   0128F0  5162               	movf	Nrf24_configRegister@value& (0+255),w,b
 17283   0128F2  EC4A  F092         	call	_SPI1_ByteExchange
 17284   0128F6  8EC0               	bsf	192,7,c	;volatile
 17285   0128F8  0012               	return		;funcret
 17286   0128FA                     __end_of_Nrf24_configRegister:
 17287                           	callstack 0
 17288                           
 17289 ;; *************** function _Nrf24_getStatus *****************
 17290 ;; Defined at:
 17291 ;;		line 297 in file "mirf.c"
 17292 ;; Parameters:    Size  Location     Type
 17293 ;;  dev             2   10[BANK5 ] PTR struct .
 17294 ;;		 -> dev(3), 
 17295 ;; Auto vars:     Size  Location     Type
 17296 ;;  rv              1   12[BANK5 ] unsigned char 
 17297 ;; Return value:  Size  Location     Type
 17298 ;;                  1    wreg      unsigned char 
 17299 ;; Registers used:
 17300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17301 ;; Tracked objects:
 17302 ;;		On entry : 0/0
 17303 ;;		On exit  : 0/0
 17304 ;;		Unchanged: 0/0
 17305 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17306 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17307 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17309 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17310 ;;Total ram usage:        3 bytes
 17311 ;; Hardware stack levels used: 1
 17312 ;; Hardware stack levels required when called: 10
 17313 ;; This function calls:
 17314 ;;		_Nrf24_readRegister
 17315 ;; This function is called by:
 17316 ;;		_Nrf24_config
 17317 ;;		_Nrf24_dataReady
 17318 ;;		_Nrf24_send
 17319 ;;		_Nrf24_isSend
 17320 ;;		_Nrf24_printDetails
 17321 ;;		_Nrf24_getDataPipe
 17322 ;;		_Nrf24_isSending
 17323 ;; This function uses a non-reentrant model
 17324 ;;
 17325                           
 17326                           	psect	text54
 17327   012916                     __ptext54:
 17328                           	callstack 0
 17329   012916                     _Nrf24_getStatus:
 17330                           	callstack 114
 17331   012916                     
 17332                           ;mirf.c: 298:  uint8_t rv;;mirf.c: 299:  Nrf24_readRegister(0x07, &rv, 1);
 17333   012916  0E6C               	movlw	low Nrf24_getStatus@rv
 17334   012918  0105               	movlb	5	; () banked
 17335   01291A  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 17336   01291C  0E05               	movlw	high Nrf24_getStatus@rv
 17337   01291E  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 17338   012920  0E01               	movlw	1
 17339   012922  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 17340   012924  0E07               	movlw	7
 17341   012926  ECEF  F092         	call	_Nrf24_readRegister
 17342   01292A                     
 17343                           ;mirf.c: 300:  return rv;
 17344   01292A  0105               	movlb	5	; () banked
 17345   01292C  516C               	movf	Nrf24_getStatus@rv& (0+255),w,b
 17346   01292E                     
 17347                           ; BSR set to: 5
 17348   01292E  0012               	return		;funcret
 17349   012930                     __end_of_Nrf24_getStatus:
 17350                           	callstack 0
 17351                           
 17352 ;; *************** function _Nrf24_readRegister *****************
 17353 ;; Defined at:
 17354 ;;		line 207 in file "mirf.c"
 17355 ;; Parameters:    Size  Location     Type
 17356 ;;  reg             1    wreg     unsigned char 
 17357 ;;  value           2    6[BANK5 ] PTR unsigned char 
 17358 ;;		 -> Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1), Nrf24_getCRCLength@confi
      +g(1), 
 17359 ;;		 -> Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_register@buffer(5), Nrf24_setR
      +etransmitDelay@value(1), 
 17360 ;;		 -> Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getStatus@rv(1), Nrf24_rxFifoEmpty@fifoS
      +tatus(1), 
 17361 ;;		 -> Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), 
 17362 ;;  len             1    8[BANK5 ] unsigned char 
 17363 ;; Auto vars:     Size  Location     Type
 17364 ;;  reg             1    9[BANK5 ] unsigned char 
 17365 ;; Return value:  Size  Location     Type
 17366 ;;                  1    wreg      void 
 17367 ;; Registers used:
 17368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17369 ;; Tracked objects:
 17370 ;;		On entry : 0/0
 17371 ;;		On exit  : 0/0
 17372 ;;		Unchanged: 0/0
 17373 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17374 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17377 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17378 ;;Total ram usage:        4 bytes
 17379 ;; Hardware stack levels used: 1
 17380 ;; Hardware stack levels required when called: 9
 17381 ;; This function calls:
 17382 ;;		_SPI1_ByteExchange
 17383 ;;		_SPI_read_buff
 17384 ;; This function is called by:
 17385 ;;		_Nrf24_setRADDR
 17386 ;;		_Nrf24_setTADDR
 17387 ;;		_Nrf24_getStatus
 17388 ;;		_Nrf24_SetSpeedDataRates
 17389 ;;		_Nrf24_setRetransmitDelay
 17390 ;;		_Nrf24_print_address_register
 17391 ;;		_Nrf24_print_byte_register
 17392 ;;		_Nrf24_getDataRate
 17393 ;;		_Nrf24_getCRCLength
 17394 ;;		_Nrf24_getPALevel
 17395 ;;		_Nrf24_getRetransmitDelay
 17396 ;;		_Nrf24_addRADDR
 17397 ;;		_Nrf24_rxFifoEmpty
 17398 ;;		_Nrf24_SetOutputRF_PWR
 17399 ;; This function uses a non-reentrant model
 17400 ;;
 17401                           
 17402                           	psect	text55
 17403   0125DE                     __ptext55:
 17404                           	callstack 0
 17405   0125DE                     _Nrf24_readRegister:
 17406                           	callstack 115
 17407                           
 17408                           ; BSR set to: 5
 17409                           ;incstack = 0
 17410                           ;Nrf24_readRegister@reg stored from wreg
 17411   0125DE  0105               	movlb	5	; () banked
 17412   0125E0  6F69               	movwf	Nrf24_readRegister@reg& (0+255),b
 17413   0125E2                     
 17414                           ;mirf.c: 207: void Nrf24_readRegister(uint8_t reg, uint8_t * value, uint8_t len);mirf.c:
      +                           208: {;mirf.c: 209:     if(len) {
 17415   0125E2  0105               	movlb	5	; () banked
 17416   0125E4  5168               	movf	Nrf24_readRegister@len& (0+255),w,b
 17417   0125E6  B4D8               	btfsc	status,2,c
 17418   0125E8  EFF8  F092         	goto	u2541
 17419   0125EC  EFFA  F092         	goto	u2540
 17420   0125F0                     u2541:
 17421   0125F0  EF08  F093         	goto	l724
 17422   0125F4                     u2540:
 17423   0125F4                     
 17424                           ; BSR set to: 5
 17425   0125F4  9EC0               	bcf	192,7,c	;volatile
 17426   0125F6                     
 17427                           ; BSR set to: 5
 17428                           ;mirf.c: 211:         SPI1_ByteExchange(0x00 | (0x1F & reg));
 17429   0125F6  5169               	movf	Nrf24_readRegister@reg& (0+255),w,b
 17430   0125F8  0B1F               	andlw	31
 17431   0125FA  EC4A  F092         	call	_SPI1_ByteExchange
 17432   0125FE                     
 17433                           ;mirf.c: 212:         SPI_read_buff(value, len);
 17434   0125FE  C566  F562         	movff	Nrf24_readRegister@value,SPI_read_buff@buffer
 17435   012602  C567  F563         	movff	Nrf24_readRegister@value+1,SPI_read_buff@buffer+1
 17436   012606  C568  F564         	movff	Nrf24_readRegister@len,SPI_read_buff@bytes
 17437   01260A  EC67  F092         	call	_SPI_read_buff	;wreg free
 17438   01260E  8EC0               	bsf	192,7,c	;volatile
 17439   012610                     l724:
 17440   012610  0012               	return		;funcret
 17441   012612                     __end_of_Nrf24_readRegister:
 17442                           	callstack 0
 17443                           
 17444 ;; *************** function _SPI_read_buff *****************
 17445 ;; Defined at:
 17446 ;;		line 44 in file "mirf.c"
 17447 ;; Parameters:    Size  Location     Type
 17448 ;;  buffer          2    2[BANK5 ] PTR unsigned char 
 17449 ;;		 -> Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1), Nrf24_getCRCLength@confi
      +g(1), 
 17450 ;;		 -> Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_register@buffer(5), Nrf24_setR
      +etransmitDelay@value(1), 
 17451 ;;		 -> Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getStatus@rv(1), Nrf24_rxFifoEmpty@fifoS
      +tatus(1), 
 17452 ;;		 -> Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), nrf_interrupt@buf(32), 
 17453 ;;		 -> init_nrf@buf(32), 
 17454 ;;  bytes           1    4[BANK5 ] unsigned char 
 17455 ;; Auto vars:     Size  Location     Type
 17456 ;;  i               1    5[BANK5 ] unsigned char 
 17457 ;; Return value:  Size  Location     Type
 17458 ;;                  1    wreg      void 
 17459 ;; Registers used:
 17460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17461 ;; Tracked objects:
 17462 ;;		On entry : 0/0
 17463 ;;		On exit  : 0/0
 17464 ;;		Unchanged: 0/0
 17465 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17466 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17469 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17470 ;;Total ram usage:        4 bytes
 17471 ;; Hardware stack levels used: 1
 17472 ;; Hardware stack levels required when called: 8
 17473 ;; This function calls:
 17474 ;;		_SPI1_ByteExchange
 17475 ;; This function is called by:
 17476 ;;		_Nrf24_getData
 17477 ;;		_Nrf24_readRegister
 17478 ;; This function uses a non-reentrant model
 17479 ;;
 17480                           
 17481                           	psect	text56
 17482   0124CE                     __ptext56:
 17483                           	callstack 0
 17484   0124CE                     _SPI_read_buff:
 17485                           	callstack 115
 17486   0124CE  9EC0               	bcf	192,7,c	;volatile
 17487   0124D0                     
 17488                           ;mirf.c: 46:     unsigned char i;;mirf.c: 47:     for (i = 0; i < bytes; i++) {
 17489   0124D0  0105               	movlb	5	; () banked
 17490   0124D2  6B65               	clrf	SPI_read_buff@i& (0+255),b
 17491   0124D4  EF78  F092         	goto	l3430
 17492   0124D8                     l3424:
 17493                           
 17494                           ; BSR set to: 5
 17495                           ;mirf.c: 48:         *buffer = SPI1_ByteExchange(0xFF);
 17496   0124D8  0EFF               	movlw	255
 17497   0124DA  EC4A  F092         	call	_SPI1_ByteExchange
 17498   0124DE  C562  F4D9         	movff	SPI_read_buff@buffer,fsr2l
 17499   0124E2  C563  F4DA         	movff	SPI_read_buff@buffer+1,fsr2h
 17500   0124E6  6EDF               	movwf	indf2,c
 17501   0124E8                     
 17502                           ;mirf.c: 49:         buffer++;
 17503   0124E8  0105               	movlb	5	; () banked
 17504   0124EA  4B62               	infsnz	SPI_read_buff@buffer& (0+255),f,b
 17505   0124EC  2B63               	incf	(SPI_read_buff@buffer+1)& (0+255),f,b
 17506   0124EE                     
 17507                           ; BSR set to: 5
 17508                           ;mirf.c: 50:     }
 17509   0124EE  2B65               	incf	SPI_read_buff@i& (0+255),f,b
 17510   0124F0                     l3430:
 17511                           
 17512                           ; BSR set to: 5
 17513   0124F0  5164               	movf	SPI_read_buff@bytes& (0+255),w,b
 17514   0124F2  5D65               	subwf	SPI_read_buff@i& (0+255),w,b
 17515   0124F4  A0D8               	btfss	status,0,c
 17516   0124F6  EF7F  F092         	goto	u2331
 17517   0124FA  EF81  F092         	goto	u2330
 17518   0124FE                     u2331:
 17519   0124FE  EF6C  F092         	goto	l3424
 17520   012502                     u2330:
 17521   012502                     
 17522                           ; BSR set to: 5
 17523   012502  8EC0               	bsf	192,7,c	;volatile
 17524   012504                     
 17525                           ; BSR set to: 5
 17526   012504  0012               	return		;funcret
 17527   012506                     __end_of_SPI_read_buff:
 17528                           	callstack 0
 17529                           
 17530 ;; *************** function _SPI1_ByteExchange *****************
 17531 ;; Defined at:
 17532 ;;		line 208 in file "mcc_generated_files/spi/src/spi1.c"
 17533 ;; Parameters:    Size  Location     Type
 17534 ;;  byteData        1    wreg     unsigned char 
 17535 ;; Auto vars:     Size  Location     Type
 17536 ;;  byteData        1    0[BANK5 ] unsigned char 
 17537 ;;  returnValue     1    1[BANK5 ] unsigned char 
 17538 ;; Return value:  Size  Location     Type
 17539 ;;                  1    wreg      unsigned char 
 17540 ;; Registers used:
 17541 ;;		wreg, status,2, status,0
 17542 ;; Tracked objects:
 17543 ;;		On entry : 0/0
 17544 ;;		On exit  : 0/0
 17545 ;;		Unchanged: 0/0
 17546 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17548 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17550 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17551 ;;Total ram usage:        2 bytes
 17552 ;; Hardware stack levels used: 1
 17553 ;; Hardware stack levels required when called: 7
 17554 ;; This function calls:
 17555 ;;		Nothing
 17556 ;; This function is called by:
 17557 ;;		_SPI_read_buff
 17558 ;;		_SPI_write_buff
 17559 ;;		_Nrf24_getData
 17560 ;;		_Nrf24_configRegister
 17561 ;;		_Nrf24_readRegister
 17562 ;;		_Nrf24_writeRegister
 17563 ;;		_Nrf24_send
 17564 ;;		_Nrf24_flushRx
 17565 ;; This function uses a non-reentrant model
 17566 ;;
 17567                           
 17568                           	psect	text57
 17569   012494                     __ptext57:
 17570                           	callstack 0
 17571   012494                     _SPI1_ByteExchange:
 17572                           	callstack 0
 17573                           
 17574                           ; BSR set to: 5
 17575   0000D7                     INTSTAT_ADDR    equ	215
 17576                           
 17577                           ;Skip over the trampoline to the duplicate function for level 2
 17578   012494  AED7               	btfss	215,7,c
 17579   012496  EF4F  F092         	goto	_SPI1_ByteExchange$intlevel0
 17580   01249A  EFB6  F093         	goto	i2_SPI1_ByteExchange
 17581   01249E                     _SPI1_ByteExchange$intlevel0:
 17582                           	callstack 115
 17583                           
 17584                           ;incstack = 0
 17585                           ;SPI1_ByteExchange@byteData stored from wreg
 17586   01249E  0105               	movlb	5	; () banked
 17587   0124A0  6F60               	movwf	SPI1_ByteExchange@byteData& (0+255),b
 17588   0124A2                     
 17589                           ;mcc_generated_files/spi/src/spi1.c: 212:  SPI1STATUSbits.CLRBF = 1U;
 17590   0124A2  0100               	movlb	0	; () banked
 17591   0124A4  8587               	bsf	135,2,b	;volatile
 17592   0124A6                     
 17593                           ; BSR set to: 0
 17594                           ;mcc_generated_files/spi/src/spi1.c: 215:  SPI1CON2 = SPI1CON2 | 0x1 | 0x2;
 17595   0124A6  5186               	movf	134,w,b	;volatile
 17596   0124A8  0903               	iorlw	3
 17597   0124AA  6F86               	movwf	134,b	;volatile
 17598   0124AC                     
 17599                           ; BSR set to: 0
 17600                           ;mcc_generated_files/spi/src/spi1.c: 218:  SPI1TCNTH = 0U;
 17601   0124AC  6B83               	clrf	131,b	;volatile
 17602   0124AE                     
 17603                           ; BSR set to: 0
 17604                           ;mcc_generated_files/spi/src/spi1.c: 219:  SPI1TCNTL = 1U;
 17605   0124AE  0E01               	movlw	1
 17606   0124B0  6F82               	movwf	130,b	;volatile
 17607   0124B2                     
 17608                           ; BSR set to: 0
 17609                           ;mcc_generated_files/spi/src/spi1.c: 221:  SPI1TXB = byteData;
 17610   0124B2  C560  F081         	movff	SPI1_ByteExchange@byteData,129	;volatile
 17611   0124B6                     l102:
 17612                           
 17613                           ;mcc_generated_files/spi/src/spi1.c: 223:  while(!PIR3bits.SPI1RXIF)
 17614   0124B6  A0B1               	btfss	177,0,c	;volatile
 17615   0124B8  EF60  F092         	goto	u2181
 17616   0124BC  EF62  F092         	goto	u2180
 17617   0124C0                     u2181:
 17618   0124C0  EF5B  F092         	goto	l102
 17619   0124C4                     u2180:
 17620   0124C4                     
 17621                           ;mcc_generated_files/spi/src/spi1.c: 227:  returnValue = SPI1RXB;
 17622   0124C4  C080 F561          	movff	128,SPI1_ByteExchange@returnValue	;volatile
 17623   0124C8                     
 17624                           ;mcc_generated_files/spi/src/spi1.c: 228:  return returnValue;
 17625   0124C8  0105               	movlb	5	; () banked
 17626   0124CA  5161               	movf	SPI1_ByteExchange@returnValue& (0+255),w,b
 17627   0124CC                     
 17628                           ; BSR set to: 5
 17629   0124CC  0012               	return		;funcret
 17630   0124CE                     __end_of_SPI1_ByteExchange:
 17631                           	callstack 0
 17632                           
 17633 ;; *************** function _DELAY_milliseconds *****************
 17634 ;; Defined at:
 17635 ;;		line 37 in file "mcc_generated_files/timer/src/delay.c"
 17636 ;; Parameters:    Size  Location     Type
 17637 ;;  milliseconds    2    0[BANK5 ] unsigned short 
 17638 ;; Auto vars:     Size  Location     Type
 17639 ;;		None
 17640 ;; Return value:  Size  Location     Type
 17641 ;;                  1    wreg      void 
 17642 ;; Registers used:
 17643 ;;		wreg, status,2, status,0
 17644 ;; Tracked objects:
 17645 ;;		On entry : 0/0
 17646 ;;		On exit  : 0/0
 17647 ;;		Unchanged: 0/0
 17648 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17651 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17652 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17653 ;;Total ram usage:        3 bytes
 17654 ;; Hardware stack levels used: 1
 17655 ;; Hardware stack levels required when called: 7
 17656 ;; This function calls:
 17657 ;;		Nothing
 17658 ;; This function is called by:
 17659 ;;		_init_nrf
 17660 ;;		_main
 17661 ;;		_Nrf24_isSend
 17662 ;; This function uses a non-reentrant model
 17663 ;;
 17664                           
 17665                           	psect	text58
 17666   012612                     __ptext58:
 17667                           	callstack 0
 17668   012612                     _DELAY_milliseconds:
 17669                           	callstack 118
 17670   012612                     
 17671                           ;mcc_generated_files/timer/src/delay.c: 38:     while(milliseconds--){
 17672   012612  EF14  F093         	goto	l3816
 17673   012616                     l3814:
 17674                           
 17675                           ; BSR set to: 5
 17676                           ;mcc_generated_files/timer/src/delay.c: 39:         _delay((unsigned long)((1)*(64000000
      +                          U/4000.0)));
 17677   012616  0E15               	movlw	21
 17678   012618  0105               	movlb	5	; () banked
 17679   01261A  6F62               	movwf	??_DELAY_milliseconds& (0+255),b
 17680   01261C  0EC6               	movlw	198
 17681   01261E                     u3237:
 17682   01261E  2EE8               	decfsz	wreg,f,c
 17683   012620  D7FE               	bra	u3237
 17684   012622  2F62               	decfsz	??_DELAY_milliseconds& (0+255),f,b
 17685   012624  D7FC               	bra	u3237
 17686   012626  0000               	nop	
 17687   012628                     l3816:
 17688                           
 17689                           ;mcc_generated_files/timer/src/delay.c: 38:     while(milliseconds--){
 17690   012628  0105               	movlb	5	; () banked
 17691   01262A  0760               	decf	DELAY_milliseconds@milliseconds& (0+255),f,b
 17692   01262C  A0D8               	btfss	status,0,c
 17693   01262E  0761               	decf	(DELAY_milliseconds@milliseconds+1)& (0+255),f,b
 17694   012630  2960               	incf	DELAY_milliseconds@milliseconds& (0+255),w,b
 17695   012632  E106               	bnz	u2741
 17696   012634  2961               	incf	(DELAY_milliseconds@milliseconds+1)& (0+255),w,b
 17697   012636  A4D8               	btfss	status,2,c
 17698   012638  EF20  F093         	goto	u2741
 17699   01263C  EF22  F093         	goto	u2740
 17700   012640                     u2741:
 17701   012640  EF0B  F093         	goto	l3814
 17702   012644                     u2740:
 17703   012644                     
 17704                           ; BSR set to: 5
 17705   012644  0012               	return		;funcret
 17706   012646                     __end_of_DELAY_milliseconds:
 17707                           	callstack 0
 17708                           
 17709 ;; *************** function _INTERRUPT_InterruptManager *****************
 17710 ;; Defined at:
 17711 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
 17712 ;; Parameters:    Size  Location     Type
 17713 ;;		None
 17714 ;; Auto vars:     Size  Location     Type
 17715 ;;		None
 17716 ;; Return value:  Size  Location     Type
 17717 ;;                  1    wreg      void 
 17718 ;; Registers used:
 17719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 17720 ;; Tracked objects:
 17721 ;;		On entry : 0/0
 17722 ;;		On exit  : 0/0
 17723 ;;		Unchanged: 0/0
 17724 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17729 ;;Total ram usage:        2 bytes
 17730 ;; Hardware stack levels used: 1
 17731 ;; Hardware stack levels required when called: 6
 17732 ;; This function calls:
 17733 ;;		NULL
 17734 ;;		_TMR0_OverflowISR
 17735 ;;		_nrf_interrupt
 17736 ;; This function is called by:
 17737 ;;		Interrupt level 2
 17738 ;; This function uses a non-reentrant model
 17739 ;;
 17740                           
 17741                           	psect	text59
 17742   011F34                     __ptext59:
 17743                           	callstack 0
 17744   011F34                     _INTERRUPT_InterruptManager:
 17745                           	callstack 109
 17746                           
 17747                           ; BSR set to: 5
 17748                           ;incstack = 0
 17749   011F34  C4FA F535          	movff	pclath,??_INTERRUPT_InterruptManager
 17750   011F38  C4FB F536          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 17751   011F3C                     
 17752                           ;mcc_generated_files/system/src/interrupt.c: 83:     if (PIE3bits.TMR0IE == 1 && PIR3bit
      +                          s.TMR0IF == 1)
 17753   011F3C  AEA1               	btfss	161,7,c	;volatile
 17754   011F3E  EFA3  F08F         	goto	i2u302_41
 17755   011F42  EFA5  F08F         	goto	i2u302_40
 17756   011F46                     i2u302_41:
 17757   011F46  EFAE  F08F         	goto	i2l319
 17758   011F4A                     i2u302_40:
 17759   011F4A  AEB1               	btfss	177,7,c	;volatile
 17760   011F4C  EFAA  F08F         	goto	i2u303_41
 17761   011F50  EFAC  F08F         	goto	i2u303_40
 17762   011F54                     i2u303_41:
 17763   011F54  EFAE  F08F         	goto	i2l319
 17764   011F58                     i2u303_40:
 17765   011F58                     
 17766                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         TMR0_OverflowISR();
 17767   011F58  EC56  F093         	call	_TMR0_OverflowISR	;wreg free
 17768   011F5C                     i2l319:
 17769                           
 17770                           ;mcc_generated_files/system/src/interrupt.c: 92:     if (PIE0bits.IOCIE == 1 && PIR0bits
      +                          .IOCIF == 1)
 17771   011F5C  AE9E               	btfss	158,7,c	;volatile
 17772   011F5E  EFB3  F08F         	goto	i2u304_41
 17773   011F62  EFB5  F08F         	goto	i2u304_40
 17774   011F66                     i2u304_41:
 17775   011F66  EFDC  F08F         	goto	i2l323
 17776   011F6A                     i2u304_40:
 17777   011F6A  AEAE               	btfss	174,7,c	;volatile
 17778   011F6C  EFBA  F08F         	goto	i2u305_41
 17779   011F70  EFBC  F08F         	goto	i2u305_40
 17780   011F74                     i2u305_41:
 17781   011F74  EFDC  F08F         	goto	i2l323
 17782   011F78                     i2u305_40:
 17783   011F78                     
 17784                           ;mcc_generated_files/system/src/interrupt.c: 93:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 94:         if (IOCCFbits.IOCCF6 == 1)
 17785   011F78  0104               	movlb	4	; () banked
 17786   011F7A  AD17               	btfss	23,6,b	;volatile
 17787   011F7C  EFC2  F08F         	goto	i2u306_41
 17788   011F80  EFC4  F08F         	goto	i2u306_40
 17789   011F84                     i2u306_41:
 17790   011F84  EFDC  F08F         	goto	i2l323
 17791   011F88                     i2u306_40:
 17792   011F88                     
 17793                           ; BSR set to: 4
 17794                           ;mcc_generated_files/system/src/interrupt.c: 95:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 96:             IOCCFbits.IOCCF6 = 0;
 17795   011F88  9D17               	bcf	23,6,b	;volatile
 17796   011F8A                     
 17797                           ; BSR set to: 4
 17798                           ;mcc_generated_files/system/src/interrupt.c: 99:             if (RC6_InterruptHandler)
 17799   011F8A  5055               	movf	_RC6_InterruptHandler^(0+1280),w,c
 17800   011F8C  1056               	iorwf	(_RC6_InterruptHandler+1)^(0+1280),w,c
 17801   011F8E  1057               	iorwf	(_RC6_InterruptHandler+2)^(0+1280),w,c
 17802   011F90  B4D8               	btfsc	status,2,c
 17803   011F92  EFCD  F08F         	goto	i2u307_41
 17804   011F96  EFCF  F08F         	goto	i2u307_40
 17805   011F9A                     i2u307_41:
 17806   011F9A  EFDC  F08F         	goto	i2l323
 17807   011F9E                     i2u307_40:
 17808   011F9E                     
 17809                           ; BSR set to: 4
 17810                           ;mcc_generated_files/system/src/interrupt.c: 100:                 RC6_InterruptHandler()
      +                          ;
 17811   011F9E  D802               	call	i2u308_48
 17812   011FA0  EFDC  F08F         	goto	i2u308_49
 17813   011FA4                     i2u308_48:
 17814   011FA4  0005               	push	
 17815   011FA6  6EFA               	movwf	pclath,c
 17816   011FA8  5055               	movf	_RC6_InterruptHandler^(0+1280),w,c
 17817   011FAA  6EFD               	movwf	tosl,c
 17818   011FAC  5056               	movf	(_RC6_InterruptHandler+1)^(0+1280),w,c
 17819   011FAE  6EFE               	movwf	tosh,c
 17820   011FB0  5057               	movf	(_RC6_InterruptHandler+2)^(0+1280),w,c
 17821   011FB2  6EFF               	movwf	tosu,c
 17822   011FB4  50FA               	movf	pclath,w,c
 17823   011FB6  0012               	return		;indir
 17824   011FB8                     i2u308_49:
 17825   011FB8                     i2l323:
 17826   011FB8  C536  F4FB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17827   011FBC  C535  F4FA         	movff	??_INTERRUPT_InterruptManager,pclath
 17828   011FC0  0011               	retfie		f
 17829   011FC2                     __end_of_INTERRUPT_InterruptManager:
 17830                           	callstack 0
 17831                           
 17832 ;; *************** function _nrf_interrupt *****************
 17833 ;; Defined at:
 17834 ;;		line 116 in file "main.c"
 17835 ;; Parameters:    Size  Location     Type
 17836 ;;		None
 17837 ;; Auto vars:     Size  Location     Type
 17838 ;;  i               2   50[COMRAM] int 
 17839 ;;  buf            32   18[COMRAM] unsigned char [32]
 17840 ;; Return value:  Size  Location     Type
 17841 ;;                  1    wreg      void 
 17842 ;; Registers used:
 17843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17844 ;; Tracked objects:
 17845 ;;		On entry : 0/0
 17846 ;;		On exit  : 0/0
 17847 ;;		Unchanged: 0/0
 17848 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17850 ;;      Locals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17852 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17853 ;;Total ram usage:       34 bytes
 17854 ;; Hardware stack levels used: 1
 17855 ;; Hardware stack levels required when called: 5
 17856 ;; This function calls:
 17857 ;;		i2_Nrf24_dataReady
 17858 ;;		i2_Nrf24_getData
 17859 ;;		i2_sendGrid
 17860 ;; This function is called by:
 17861 ;;		_main
 17862 ;;		_INTERRUPT_InterruptManager
 17863 ;; This function uses a non-reentrant model
 17864 ;;
 17865                           
 17866                           	psect	text60
 17867   01185C                     __ptext60:
 17868                           	callstack 0
 17869   01185C                     _nrf_interrupt:
 17870                           	callstack 109
 17871   01185C                     
 17872                           ;main.c: 117:     uint8_t buf[32];;main.c: 118:     if (Nrf24_dataReady(&dev)) {
 17873   01185C  0EEB               	movlw	low _dev
 17874   01185E  6E0E               	movwf	i2Nrf24_dataReady@dev^(0+1280),c
 17875   011860  0E05               	movlw	high _dev
 17876   011862  6E0F               	movwf	(i2Nrf24_dataReady@dev+1)^(0+1280),c
 17877   011864  EC1B  F094         	call	i2_Nrf24_dataReady	;wreg free
 17878   011868  0900               	iorlw	0
 17879   01186A  B4D8               	btfsc	status,2,c
 17880   01186C  EF3A  F08C         	goto	i2u292_41
 17881   011870  EF3C  F08C         	goto	i2u292_40
 17882   011874                     i2u292_41:
 17883   011874  EF90  F08C         	goto	i2l565
 17884   011878                     i2u292_40:
 17885   011878                     
 17886                           ;main.c: 119:         Nrf24_getData(&dev, buf);
 17887   011878  0EEB               	movlw	low _dev
 17888   01187A  6E07               	movwf	i2Nrf24_getData@dev^(0+1280),c
 17889   01187C  0E05               	movlw	high _dev
 17890   01187E  6E08               	movwf	(i2Nrf24_getData@dev+1)^(0+1280),c
 17891   011880  0E13               	movlw	low nrf_interrupt@buf
 17892   011882  6E09               	movwf	i2Nrf24_getData@data^(0+1280),c
 17893   011884  0E05               	movlw	high nrf_interrupt@buf
 17894   011886  6E0A               	movwf	(i2Nrf24_getData@data+1)^(0+1280),c
 17895   011888  EC3D  F093         	call	i2_Nrf24_getData	;wreg free
 17896   01188C                     
 17897                           ;main.c: 122:         for (int i = 0; i < 32; i++) {
 17898   01188C  0E00               	movlw	0
 17899   01188E  6E34               	movwf	(nrf_interrupt@i+1)^(0+1280),c
 17900   011890  0E00               	movlw	0
 17901   011892  6E33               	movwf	nrf_interrupt@i^(0+1280),c
 17902   011894                     i2l4068:
 17903                           
 17904                           ;main.c: 123:             if (received_index < 200) {
 17905   011894  BE59               	btfsc	(_received_index+1)^(0+1280),7,c
 17906   011896  EF58  F08C         	goto	i2u293_40
 17907   01189A  5059               	movf	(_received_index+1)^(0+1280),w,c
 17908   01189C  E107               	bnz	i2u293_41
 17909   01189E  0EC8               	movlw	200
 17910   0118A0  5C58               	subwf	_received_index^(0+1280),w,c
 17911   0118A2  B0D8               	btfsc	status,0,c
 17912   0118A4  EF56  F08C         	goto	i2u293_41
 17913   0118A8  EF58  F08C         	goto	i2u293_40
 17914   0118AC                     i2u293_41:
 17915   0118AC  EF68  F08C         	goto	i2l4074
 17916   0118B0                     i2u293_40:
 17917   0118B0                     
 17918                           ;main.c: 124:                 received_data[received_index++] = buf[i];
 17919   0118B0  0E13               	movlw	low nrf_interrupt@buf
 17920   0118B2  2433               	addwf	nrf_interrupt@i^(0+1280),w,c
 17921   0118B4  6ED9               	movwf	fsr2l,c
 17922   0118B6  0E05               	movlw	high nrf_interrupt@buf
 17923   0118B8  2034               	addwfc	(nrf_interrupt@i+1)^(0+1280),w,c
 17924   0118BA  6EDA               	movwf	fsr2h,c
 17925   0118BC  0E00               	movlw	low _received_data
 17926   0118BE  2458               	addwf	_received_index^(0+1280),w,c
 17927   0118C0  6EE1               	movwf	fsr1l,c
 17928   0118C2  0E0A               	movlw	high _received_data
 17929   0118C4  2059               	addwfc	(_received_index+1)^(0+1280),w,c
 17930   0118C6  6EE2               	movwf	fsr1h,c
 17931   0118C8  C4DF F4E7          	movff	indf2,indf1
 17932   0118CC  4A58               	infsnz	_received_index^(0+1280),f,c
 17933   0118CE  2A59               	incf	(_received_index+1)^(0+1280),f,c
 17934   0118D0                     i2l4074:
 17935                           
 17936                           ;main.c: 126:         }
 17937   0118D0  4A33               	infsnz	nrf_interrupt@i^(0+1280),f,c
 17938   0118D2  2A34               	incf	(nrf_interrupt@i+1)^(0+1280),f,c
 17939   0118D4  BE34               	btfsc	(nrf_interrupt@i+1)^(0+1280),7,c
 17940   0118D6  EF76  F08C         	goto	i2u294_41
 17941   0118DA  5034               	movf	(nrf_interrupt@i+1)^(0+1280),w,c
 17942   0118DC  E109               	bnz	i2u294_40
 17943   0118DE  0E20               	movlw	32
 17944   0118E0  5C33               	subwf	nrf_interrupt@i^(0+1280),w,c
 17945   0118E2  A0D8               	btfss	status,0,c
 17946   0118E4  EF76  F08C         	goto	i2u294_41
 17947   0118E8  EF78  F08C         	goto	i2u294_40
 17948   0118EC                     i2u294_41:
 17949   0118EC  EF4A  F08C         	goto	i2l4068
 17950   0118F0                     i2u294_40:
 17951   0118F0                     
 17952                           ;main.c: 129:         if (received_index >= 200) {
 17953   0118F0  BE59               	btfsc	(_received_index+1)^(0+1280),7,c
 17954   0118F2  EF84  F08C         	goto	i2u295_41
 17955   0118F6  5059               	movf	(_received_index+1)^(0+1280),w,c
 17956   0118F8  E109               	bnz	i2u295_40
 17957   0118FA  0EC8               	movlw	200
 17958   0118FC  5C58               	subwf	_received_index^(0+1280),w,c
 17959   0118FE  A0D8               	btfss	status,0,c
 17960   011900  EF84  F08C         	goto	i2u295_41
 17961   011904  EF86  F08C         	goto	i2u295_40
 17962   011908                     i2u295_41:
 17963   011908  EF90  F08C         	goto	i2l565
 17964   01190C                     i2u295_40:
 17965   01190C                     
 17966                           ;main.c: 130:             received_index = 0;
 17967   01190C  0E00               	movlw	0
 17968   01190E  6E59               	movwf	(_received_index+1)^(0+1280),c
 17969   011910  0E00               	movlw	0
 17970   011912  6E58               	movwf	_received_index^(0+1280),c
 17971   011914                     
 17972                           ;main.c: 131:             sendGrid(received_data);
 17973   011914  0E00               	movlw	low _received_data
 17974   011916  6E06               	movwf	i2sendGrid@grid^(0+1280),c
 17975   011918  0E0A               	movlw	high _received_data
 17976   01191A  6E07               	movwf	(i2sendGrid@grid+1)^(0+1280),c
 17977   01191C  ECD2  F088         	call	i2_sendGrid	;wreg free
 17978   011920                     i2l565:
 17979   011920  0012               	return		;funcret
 17980   011922                     __end_of_nrf_interrupt:
 17981                           	callstack 0
 17982                           
 17983 ;; *************** function i2_sendGrid *****************
 17984 ;; Defined at:
 17985 ;;		line 100 in file "main.c"
 17986 ;; Parameters:    Size  Location     Type
 17987 ;;  grid            2    5[COMRAM] PTR unsigned char 
 17988 ;;		 -> main@gridB(200), main@gridG(200), received_data(200), 
 17989 ;; Auto vars:     Size  Location     Type
 17990 ;;  gridSize        2   16[COMRAM] int 
 17991 ;;  row             2   14[COMRAM] int 
 17992 ;;  col             2   12[COMRAM] int 
 17993 ;;  index           2   10[COMRAM] int 
 17994 ;; Return value:  Size  Location     Type
 17995 ;;                  1    wreg      void 
 17996 ;; Registers used:
 17997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17998 ;; Tracked objects:
 17999 ;;		On entry : 0/0
 18000 ;;		On exit  : 0/0
 18001 ;;		Unchanged: 0/0
 18002 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18004 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18005 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18006 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18007 ;;Total ram usage:       13 bytes
 18008 ;; Hardware stack levels used: 1
 18009 ;; Hardware stack levels required when called: 3
 18010 ;; This function calls:
 18011 ;;		i2_sendCell
 18012 ;; This function is called by:
 18013 ;;		_nrf_interrupt
 18014 ;; This function uses a non-reentrant model
 18015 ;;
 18016                           
 18017                           	psect	text61
 18018   0111A4                     __ptext61:
 18019                           	callstack 0
 18020   0111A4                     i2_sendGrid:
 18021                           	callstack 110
 18022   0111A4                     
 18023                           ;main.c: 101:     int gridSize = 10;
 18024   0111A4  0E00               	movlw	0
 18025   0111A6  6E12               	movwf	(i2sendGrid@gridSize+1)^(0+1280),c
 18026   0111A8  0E0A               	movlw	10
 18027   0111AA  6E11               	movwf	i2sendGrid@gridSize^(0+1280),c
 18028   0111AC                     
 18029                           ;main.c: 104:     sendCell(grid[0]);
 18030   0111AC  C506  F4D9         	movff	i2sendGrid@grid,fsr2l
 18031   0111B0  C507  F4DA         	movff	i2sendGrid@grid+1,fsr2h
 18032   0111B4  50DF               	movf	indf2,w,c
 18033   0111B6  EC0D  F091         	call	i2_sendCell
 18034   0111BA                     
 18035                           ;main.c: 105:     for (int row = 0; row < gridSize*2; row++) {
 18036   0111BA  0E00               	movlw	0
 18037   0111BC  6E10               	movwf	(i2sendGrid@row+1)^(0+1280),c
 18038   0111BE  0E00               	movlw	0
 18039   0111C0  6E0F               	movwf	i2sendGrid@row^(0+1280),c
 18040   0111C2  EF3A  F089         	goto	i2l3978
 18041   0111C6                     i2l3962:
 18042                           
 18043                           ;main.c: 106:         for (int col = 0; col < gridSize; col++) {
 18044   0111C6  0E00               	movlw	0
 18045   0111C8  6E0E               	movwf	(i2sendGrid@col+1)^(0+1280),c
 18046   0111CA  0E00               	movlw	0
 18047   0111CC  6E0D               	movwf	i2sendGrid@col^(0+1280),c
 18048   0111CE  EF29  F089         	goto	i2l3974
 18049   0111D2                     i2l3964:
 18050                           
 18051                           ;main.c: 107:             int index = row * gridSize + col + 1;
 18052   0111D2  5011               	movf	i2sendGrid@gridSize^(0+1280),w,c
 18053   0111D4  020F               	mulwf	i2sendGrid@row^(0+1280),c
 18054   0111D6  C4F3 F508          	movff	prodl,??i2_sendGrid
 18055   0111DA  C4F4 F509          	movff	prodh,??i2_sendGrid+1
 18056   0111DE  0210               	mulwf	(i2sendGrid@row+1)^(0+1280),c
 18057   0111E0  50F3               	movf	prodl,w,c
 18058   0111E2  2609               	addwf	(??i2_sendGrid+1)^(0+1280),f,c
 18059   0111E4  5012               	movf	(i2sendGrid@gridSize+1)^(0+1280),w,c
 18060   0111E6  020F               	mulwf	i2sendGrid@row^(0+1280),c
 18061   0111E8  50F3               	movf	prodl,w,c
 18062   0111EA  2609               	addwf	(??i2_sendGrid+1)^(0+1280),f,c
 18063   0111EC  500D               	movf	i2sendGrid@col^(0+1280),w,c
 18064   0111EE  2608               	addwf	??i2_sendGrid^(0+1280),f,c
 18065   0111F0  500E               	movf	(i2sendGrid@col+1)^(0+1280),w,c
 18066   0111F2  2209               	addwfc	(??i2_sendGrid+1)^(0+1280),f,c
 18067   0111F4  0E01               	movlw	1
 18068   0111F6  2408               	addwf	??i2_sendGrid^(0+1280),w,c
 18069   0111F8  6E0B               	movwf	i2sendGrid@index^(0+1280),c
 18070   0111FA  0E00               	movlw	0
 18071   0111FC  2009               	addwfc	(??i2_sendGrid+1)^(0+1280),w,c
 18072   0111FE  6E0C               	movwf	(i2sendGrid@index+1)^(0+1280),c
 18073   011200                     
 18074                           ;main.c: 108:             if (row % 2 == 1) {
 18075   011200  A00F               	btfss	i2sendGrid@row^(0+1280),0,c
 18076   011202  EF05  F089         	goto	i2u282_41
 18077   011206  EF07  F089         	goto	i2u282_40
 18078   01120A                     i2u282_41:
 18079   01120A  EF1E  F089         	goto	i2l3970
 18080   01120E                     i2u282_40:
 18081   01120E                     
 18082                           ;main.c: 109:                 index = row * gridSize + (gridSize - 1 - col) + 1;
 18083   01120E  5011               	movf	i2sendGrid@gridSize^(0+1280),w,c
 18084   011210  020F               	mulwf	i2sendGrid@row^(0+1280),c
 18085   011212  C4F3 F508          	movff	prodl,??i2_sendGrid
 18086   011216  C4F4 F509          	movff	prodh,??i2_sendGrid+1
 18087   01121A  0210               	mulwf	(i2sendGrid@row+1)^(0+1280),c
 18088   01121C  50F3               	movf	prodl,w,c
 18089   01121E  2609               	addwf	(??i2_sendGrid+1)^(0+1280),f,c
 18090   011220  5012               	movf	(i2sendGrid@gridSize+1)^(0+1280),w,c
 18091   011222  020F               	mulwf	i2sendGrid@row^(0+1280),c
 18092   011224  50F3               	movf	prodl,w,c
 18093   011226  2609               	addwf	(??i2_sendGrid+1)^(0+1280),f,c
 18094   011228  500D               	movf	i2sendGrid@col^(0+1280),w,c
 18095   01122A  5E08               	subwf	??i2_sendGrid^(0+1280),f,c
 18096   01122C  500E               	movf	(i2sendGrid@col+1)^(0+1280),w,c
 18097   01122E  5A09               	subwfb	(??i2_sendGrid+1)^(0+1280),f,c
 18098   011230  5011               	movf	i2sendGrid@gridSize^(0+1280),w,c
 18099   011232  2408               	addwf	??i2_sendGrid^(0+1280),w,c
 18100   011234  6E0B               	movwf	i2sendGrid@index^(0+1280),c
 18101   011236  5012               	movf	(i2sendGrid@gridSize+1)^(0+1280),w,c
 18102   011238  2009               	addwfc	(??i2_sendGrid+1)^(0+1280),w,c
 18103   01123A  6E0C               	movwf	(i2sendGrid@index+1)^(0+1280),c
 18104   01123C                     i2l3970:
 18105                           
 18106                           ;main.c: 111:             sendCell(grid[index]);
 18107   01123C  500B               	movf	i2sendGrid@index^(0+1280),w,c
 18108   01123E  2406               	addwf	i2sendGrid@grid^(0+1280),w,c
 18109   011240  6ED9               	movwf	fsr2l,c
 18110   011242  500C               	movf	(i2sendGrid@index+1)^(0+1280),w,c
 18111   011244  2007               	addwfc	(i2sendGrid@grid+1)^(0+1280),w,c
 18112   011246  6EDA               	movwf	fsr2h,c
 18113   011248  50DF               	movf	indf2,w,c
 18114   01124A  EC0D  F091         	call	i2_sendCell
 18115   01124E                     
 18116                           ;main.c: 112:         }
 18117   01124E  4A0D               	infsnz	i2sendGrid@col^(0+1280),f,c
 18118   011250  2A0E               	incf	(i2sendGrid@col+1)^(0+1280),f,c
 18119   011252                     i2l3974:
 18120   011252  5011               	movf	i2sendGrid@gridSize^(0+1280),w,c
 18121   011254  5C0D               	subwf	i2sendGrid@col^(0+1280),w,c
 18122   011256  500E               	movf	(i2sendGrid@col+1)^(0+1280),w,c
 18123   011258  0A80               	xorlw	128
 18124   01125A  6E08               	movwf	??i2_sendGrid^(0+1280),c
 18125   01125C  5012               	movf	(i2sendGrid@gridSize+1)^(0+1280),w,c
 18126   01125E  0A80               	xorlw	128
 18127   011260  5808               	subwfb	??i2_sendGrid^(0+1280),w,c
 18128   011262  A0D8               	btfss	status,0,c
 18129   011264  EF36  F089         	goto	i2u283_41
 18130   011268  EF38  F089         	goto	i2u283_40
 18131   01126C                     i2u283_41:
 18132   01126C  EFE9  F088         	goto	i2l3964
 18133   011270                     i2u283_40:
 18134   011270                     
 18135                           ;main.c: 113:     }
 18136   011270  4A0F               	infsnz	i2sendGrid@row^(0+1280),f,c
 18137   011272  2A10               	incf	(i2sendGrid@row+1)^(0+1280),f,c
 18138   011274                     i2l3978:
 18139   011274  C511  F508         	movff	i2sendGrid@gridSize,??i2_sendGrid
 18140   011278  C512  F509         	movff	i2sendGrid@gridSize+1,??i2_sendGrid+1
 18141   01127C  90D8               	bcf	status,0,c
 18142   01127E  3608               	rlcf	??i2_sendGrid^(0+1280),f,c
 18143   011280  3609               	rlcf	(??i2_sendGrid+1)^(0+1280),f,c
 18144   011282  5008               	movf	??i2_sendGrid^(0+1280),w,c
 18145   011284  5C0F               	subwf	i2sendGrid@row^(0+1280),w,c
 18146   011286  5010               	movf	(i2sendGrid@row+1)^(0+1280),w,c
 18147   011288  0A80               	xorlw	128
 18148   01128A  6E0A               	movwf	(??i2_sendGrid+2)^(0+1280),c
 18149   01128C  5009               	movf	(??i2_sendGrid+1)^(0+1280),w,c
 18150   01128E  0A80               	xorlw	128
 18151   011290  580A               	subwfb	(??i2_sendGrid+2)^(0+1280),w,c
 18152   011292  A0D8               	btfss	status,0,c
 18153   011294  EF4E  F089         	goto	i2u284_41
 18154   011298  EF50  F089         	goto	i2u284_40
 18155   01129C                     i2u284_41:
 18156   01129C  EFE3  F088         	goto	i2l3962
 18157   0112A0                     i2u284_40:
 18158   0112A0  0012               	return		;funcret
 18159   0112A2                     __end_ofi2_sendGrid:
 18160                           	callstack 0
 18161                           
 18162 ;; *************** function i2_sendCell *****************
 18163 ;; Defined at:
 18164 ;;		line 82 in file "main.c"
 18165 ;; Parameters:    Size  Location     Type
 18166 ;;  cell            1    wreg     unsigned char 
 18167 ;; Auto vars:     Size  Location     Type
 18168 ;;  cell            1    4[COMRAM] unsigned char 
 18169 ;;  bright          1    0        unsigned char 
 18170 ;; Return value:  Size  Location     Type
 18171 ;;                  1    wreg      void 
 18172 ;; Registers used:
 18173 ;;		wreg, status,2, status,0, cstack
 18174 ;; Tracked objects:
 18175 ;;		On entry : 0/0
 18176 ;;		On exit  : 0/0
 18177 ;;		Unchanged: 0/0
 18178 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18182 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18183 ;;Total ram usage:        1 bytes
 18184 ;; Hardware stack levels used: 1
 18185 ;; Hardware stack levels required when called: 2
 18186 ;; This function calls:
 18187 ;;		i2_sendRGB
 18188 ;; This function is called by:
 18189 ;;		i2_sendGrid
 18190 ;; This function uses a non-reentrant model
 18191 ;;
 18192                           
 18193                           	psect	text62
 18194   01221A                     __ptext62:
 18195                           	callstack 0
 18196   01221A                     i2_sendCell:
 18197                           	callstack 110
 18198                           
 18199                           ;incstack = 0
 18200                           ;i2sendCell@cell stored from wreg
 18201   01221A  6E05               	movwf	i2sendCell@cell^(0+1280),c
 18202   01221C                     
 18203                           ;main.c: 84:     switch (cell) {
 18204   01221C  EF34  F091         	goto	i2l3694
 18205   012220                     i2l3684:
 18206                           
 18207                           ;main.c: 86:             sendRGB(0, 0, 0);
 18208   012220  0E00               	movlw	0
 18209   012222  6E02               	movwf	i2sendRGB@g^(0+1280),c
 18210   012224  0E00               	movlw	0
 18211   012226  6E03               	movwf	i2sendRGB@b^(0+1280),c
 18212   012228  0E00               	movlw	0
 18213   01222A  ECBC  F094         	call	i2_sendRGB
 18214                           
 18215                           ;main.c: 87:             break;
 18216   01222E  EF43  F091         	goto	i2l547
 18217   012232                     i2l3686:
 18218                           
 18219                           ;main.c: 89:             sendRGB(bright, 0, 0);
 18220   012232  0E00               	movlw	0
 18221   012234  6E02               	movwf	i2sendRGB@g^(0+1280),c
 18222   012236  0E00               	movlw	0
 18223   012238  6E03               	movwf	i2sendRGB@b^(0+1280),c
 18224   01223A  0E14               	movlw	20
 18225   01223C  ECBC  F094         	call	i2_sendRGB
 18226                           
 18227                           ;main.c: 90:             break;
 18228   012240  EF43  F091         	goto	i2l547
 18229   012244                     i2l3688:
 18230                           
 18231                           ;main.c: 92:             sendRGB(0, bright, 0);
 18232   012244  0E14               	movlw	20
 18233   012246  6E02               	movwf	i2sendRGB@g^(0+1280),c
 18234   012248  0E00               	movlw	0
 18235   01224A  6E03               	movwf	i2sendRGB@b^(0+1280),c
 18236   01224C  0E00               	movlw	0
 18237   01224E  ECBC  F094         	call	i2_sendRGB
 18238                           
 18239                           ;main.c: 93:             break;
 18240   012252  EF43  F091         	goto	i2l547
 18241   012256                     i2l3690:
 18242                           
 18243                           ;main.c: 95:             sendRGB(0, 0, bright);
 18244   012256  0E00               	movlw	0
 18245   012258  6E02               	movwf	i2sendRGB@g^(0+1280),c
 18246   01225A  0E14               	movlw	20
 18247   01225C  6E03               	movwf	i2sendRGB@b^(0+1280),c
 18248   01225E  0E00               	movlw	0
 18249   012260  ECBC  F094         	call	i2_sendRGB
 18250                           
 18251                           ;main.c: 96:             break;
 18252   012264  EF43  F091         	goto	i2l547
 18253   012268                     i2l3694:
 18254   012268  5005               	movf	i2sendCell@cell^(0+1280),w,c
 18255                           
 18256                           ; Switch size 1, requested type "simple"
 18257                           ; Number of cases is 3, Range of values is 0 to 2
 18258                           ; switch strategies available:
 18259                           ; Name         Instructions Cycles
 18260                           ; simple_byte           10     6 (average)
 18261                           ;	Chosen strategy is simple_byte
 18262   01226A  0A00               	xorlw	0	; case 0
 18263   01226C  B4D8               	btfsc	status,2,c
 18264   01226E  EF10  F091         	goto	i2l3684
 18265   012272  0A01               	xorlw	1	; case 1
 18266   012274  B4D8               	btfsc	status,2,c
 18267   012276  EF19  F091         	goto	i2l3686
 18268   01227A  0A03               	xorlw	3	; case 2
 18269   01227C  B4D8               	btfsc	status,2,c
 18270   01227E  EF22  F091         	goto	i2l3688
 18271   012282  EF2B  F091         	goto	i2l3690
 18272   012286                     i2l547:
 18273   012286  0012               	return		;funcret
 18274   012288                     __end_ofi2_sendCell:
 18275                           	callstack 0
 18276                           
 18277 ;; *************** function i2_sendRGB *****************
 18278 ;; Defined at:
 18279 ;;		line 76 in file "main.c"
 18280 ;; Parameters:    Size  Location     Type
 18281 ;;  r               1    wreg     unsigned char 
 18282 ;;  g               1    1[COMRAM] unsigned char 
 18283 ;;  b               1    2[COMRAM] unsigned char 
 18284 ;; Auto vars:     Size  Location     Type
 18285 ;;  r               1    3[COMRAM] unsigned char 
 18286 ;; Return value:  Size  Location     Type
 18287 ;;                  1    wreg      void 
 18288 ;; Registers used:
 18289 ;;		wreg, status,2, cstack
 18290 ;; Tracked objects:
 18291 ;;		On entry : 0/0
 18292 ;;		On exit  : 0/0
 18293 ;;		Unchanged: 0/0
 18294 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18298 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18299 ;;Total ram usage:        3 bytes
 18300 ;; Hardware stack levels used: 1
 18301 ;; Hardware stack levels required when called: 1
 18302 ;; This function calls:
 18303 ;;		i2_sendByte
 18304 ;; This function is called by:
 18305 ;;		i2_sendCell
 18306 ;; This function uses a non-reentrant model
 18307 ;;
 18308                           
 18309                           	psect	text63
 18310   012978                     __ptext63:
 18311                           	callstack 0
 18312   012978                     i2_sendRGB:
 18313                           	callstack 110
 18314                           
 18315                           ;incstack = 0
 18316                           ;i2sendRGB@r stored from wreg
 18317   012978  6E04               	movwf	i2sendRGB@r^(0+1280),c
 18318   01297A                     
 18319                           ;main.c: 77:     sendByte(g);
 18320   01297A  5002               	movf	i2sendRGB@g^(0+1280),w,c
 18321   01297C  ECFC  F082         	call	i2_sendByte
 18322                           
 18323                           ;main.c: 78:     sendByte(r);
 18324   012980  5004               	movf	i2sendRGB@r^(0+1280),w,c
 18325   012982  ECFC  F082         	call	i2_sendByte
 18326                           
 18327                           ;main.c: 79:     sendByte(b);
 18328   012986  5003               	movf	i2sendRGB@b^(0+1280),w,c
 18329   012988  ECFC  F082         	call	i2_sendByte
 18330   01298C  0012               	return		;funcret
 18331   01298E                     __end_ofi2_sendRGB:
 18332                           	callstack 0
 18333                           
 18334 ;; *************** function i2_sendByte *****************
 18335 ;; Defined at:
 18336 ;;		line 65 in file "main.c"
 18337 ;; Parameters:    Size  Location     Type
 18338 ;;  byte            1    wreg     unsigned char 
 18339 ;; Auto vars:     Size  Location     Type
 18340 ;;  byte            1    0[COMRAM] unsigned char 
 18341 ;; Return value:  Size  Location     Type
 18342 ;;                  1    wreg      void 
 18343 ;; Registers used:
 18344 ;;		wreg
 18345 ;; Tracked objects:
 18346 ;;		On entry : 0/0
 18347 ;;		On exit  : 0/0
 18348 ;;		Unchanged: 0/0
 18349 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18354 ;;Total ram usage:        1 bytes
 18355 ;; Hardware stack levels used: 1
 18356 ;; This function calls:
 18357 ;;		Nothing
 18358 ;; This function is called by:
 18359 ;;		i2_sendRGB
 18360 ;; This function uses a non-reentrant model
 18361 ;;
 18362                           
 18363                           	psect	text64
 18364   0105F8                     __ptext64:
 18365                           	callstack 0
 18366   0105F8                     i2_sendByte:
 18367                           	callstack 110
 18368                           
 18369                           ;incstack = 0
 18370                           ;i2sendByte@byte stored from wreg
 18371   0105F8  6E01               	movwf	i2sendByte@byte^(0+1280),c
 18372   0105FA                     
 18373                           ;main.c: 66:     if (byte & 0b10000000) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 18374   0105FA  AE01               	btfss	i2sendByte@byte^(0+1280),7,c
 18375   0105FC  EF02  F083         	goto	i2u235_41
 18376   010600  EF04  F083         	goto	i2u235_40
 18377   010604                     i2u235_41:
 18378   010604  EF14  F083         	goto	i2l519
 18379   010608                     i2u235_40:
 18380   010608  84C3               	bsf	195,2,c	;volatile
 18381   01060A  0000               	nop	
 18382   01060C  0000               	nop	
 18383   01060E  0000               	nop	
 18384   010610  84C3               	bsf	195,2,c	;volatile
 18385   010612  0000               	nop	
 18386   010614  0000               	nop	
 18387   010616  0000               	nop	
 18388   010618  0000               	nop	
 18389   01061A  94C3               	bcf	195,2,c	;volatile
 18390   01061C  0000               	nop	
 18391   01061E  0000               	nop	
 18392   010620  0000               	nop	
 18393   010622  0000               	nop	
 18394   010624  EF22  F083         	goto	i2l3446
 18395   010628                     i2l519:
 18396   010628  84C3               	bsf	195,2,c	;volatile
 18397   01062A  0000               	nop	
 18398   01062C  0000               	nop	
 18399   01062E  0000               	nop	
 18400   010630  94C3               	bcf	195,2,c	;volatile
 18401   010632  0000               	nop	
 18402   010634  0000               	nop	
 18403   010636  0000               	nop	
 18404   010638  0000               	nop	
 18405   01063A  94C3               	bcf	195,2,c	;volatile
 18406   01063C  0000               	nop	
 18407   01063E  0000               	nop	
 18408   010640  0000               	nop	
 18409   010642  0000               	nop	
 18410   010644                     i2l3446:
 18411                           
 18412                           ;main.c: 67:     if (byte & 0b01000000) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 18413   010644  AC01               	btfss	i2sendByte@byte^(0+1280),6,c
 18414   010646  EF27  F083         	goto	i2u236_41
 18415   01064A  EF29  F083         	goto	i2u236_40
 18416   01064E                     i2u236_41:
 18417   01064E  EF39  F083         	goto	i2l521
 18418   010652                     i2u236_40:
 18419   010652  84C3               	bsf	195,2,c	;volatile
 18420   010654  0000               	nop	
 18421   010656  0000               	nop	
 18422   010658  0000               	nop	
 18423   01065A  84C3               	bsf	195,2,c	;volatile
 18424   01065C  0000               	nop	
 18425   01065E  0000               	nop	
 18426   010660  0000               	nop	
 18427   010662  0000               	nop	
 18428   010664  94C3               	bcf	195,2,c	;volatile
 18429   010666  0000               	nop	
 18430   010668  0000               	nop	
 18431   01066A  0000               	nop	
 18432   01066C  0000               	nop	
 18433   01066E  EF47  F083         	goto	i2l3450
 18434   010672                     i2l521:
 18435   010672  84C3               	bsf	195,2,c	;volatile
 18436   010674  0000               	nop	
 18437   010676  0000               	nop	
 18438   010678  0000               	nop	
 18439   01067A  94C3               	bcf	195,2,c	;volatile
 18440   01067C  0000               	nop	
 18441   01067E  0000               	nop	
 18442   010680  0000               	nop	
 18443   010682  0000               	nop	
 18444   010684  94C3               	bcf	195,2,c	;volatile
 18445   010686  0000               	nop	
 18446   010688  0000               	nop	
 18447   01068A  0000               	nop	
 18448   01068C  0000               	nop	
 18449   01068E                     i2l3450:
 18450                           
 18451                           ;main.c: 68:     if (byte & 0b00100000) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 18452   01068E  AA01               	btfss	i2sendByte@byte^(0+1280),5,c
 18453   010690  EF4C  F083         	goto	i2u237_41
 18454   010694  EF4E  F083         	goto	i2u237_40
 18455   010698                     i2u237_41:
 18456   010698  EF5E  F083         	goto	i2l523
 18457   01069C                     i2u237_40:
 18458   01069C  84C3               	bsf	195,2,c	;volatile
 18459   01069E  0000               	nop	
 18460   0106A0  0000               	nop	
 18461   0106A2  0000               	nop	
 18462   0106A4  84C3               	bsf	195,2,c	;volatile
 18463   0106A6  0000               	nop	
 18464   0106A8  0000               	nop	
 18465   0106AA  0000               	nop	
 18466   0106AC  0000               	nop	
 18467   0106AE  94C3               	bcf	195,2,c	;volatile
 18468   0106B0  0000               	nop	
 18469   0106B2  0000               	nop	
 18470   0106B4  0000               	nop	
 18471   0106B6  0000               	nop	
 18472   0106B8  EF6C  F083         	goto	i2l3454
 18473   0106BC                     i2l523:
 18474   0106BC  84C3               	bsf	195,2,c	;volatile
 18475   0106BE  0000               	nop	
 18476   0106C0  0000               	nop	
 18477   0106C2  0000               	nop	
 18478   0106C4  94C3               	bcf	195,2,c	;volatile
 18479   0106C6  0000               	nop	
 18480   0106C8  0000               	nop	
 18481   0106CA  0000               	nop	
 18482   0106CC  0000               	nop	
 18483   0106CE  94C3               	bcf	195,2,c	;volatile
 18484   0106D0  0000               	nop	
 18485   0106D2  0000               	nop	
 18486   0106D4  0000               	nop	
 18487   0106D6  0000               	nop	
 18488   0106D8                     i2l3454:
 18489                           
 18490                           ;main.c: 69:     if (byte & 0b00010000) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 18491   0106D8  A801               	btfss	i2sendByte@byte^(0+1280),4,c
 18492   0106DA  EF71  F083         	goto	i2u238_41
 18493   0106DE  EF73  F083         	goto	i2u238_40
 18494   0106E2                     i2u238_41:
 18495   0106E2  EF83  F083         	goto	i2l525
 18496   0106E6                     i2u238_40:
 18497   0106E6  84C3               	bsf	195,2,c	;volatile
 18498   0106E8  0000               	nop	
 18499   0106EA  0000               	nop	
 18500   0106EC  0000               	nop	
 18501   0106EE  84C3               	bsf	195,2,c	;volatile
 18502   0106F0  0000               	nop	
 18503   0106F2  0000               	nop	
 18504   0106F4  0000               	nop	
 18505   0106F6  0000               	nop	
 18506   0106F8  94C3               	bcf	195,2,c	;volatile
 18507   0106FA  0000               	nop	
 18508   0106FC  0000               	nop	
 18509   0106FE  0000               	nop	
 18510   010700  0000               	nop	
 18511   010702  EF91  F083         	goto	i2l3458
 18512   010706                     i2l525:
 18513   010706  84C3               	bsf	195,2,c	;volatile
 18514   010708  0000               	nop	
 18515   01070A  0000               	nop	
 18516   01070C  0000               	nop	
 18517   01070E  94C3               	bcf	195,2,c	;volatile
 18518   010710  0000               	nop	
 18519   010712  0000               	nop	
 18520   010714  0000               	nop	
 18521   010716  0000               	nop	
 18522   010718  94C3               	bcf	195,2,c	;volatile
 18523   01071A  0000               	nop	
 18524   01071C  0000               	nop	
 18525   01071E  0000               	nop	
 18526   010720  0000               	nop	
 18527   010722                     i2l3458:
 18528                           
 18529                           ;main.c: 70:     if (byte & 0b00001000) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 18530   010722  A601               	btfss	i2sendByte@byte^(0+1280),3,c
 18531   010724  EF96  F083         	goto	i2u239_41
 18532   010728  EF98  F083         	goto	i2u239_40
 18533   01072C                     i2u239_41:
 18534   01072C  EFA8  F083         	goto	i2l527
 18535   010730                     i2u239_40:
 18536   010730  84C3               	bsf	195,2,c	;volatile
 18537   010732  0000               	nop	
 18538   010734  0000               	nop	
 18539   010736  0000               	nop	
 18540   010738  84C3               	bsf	195,2,c	;volatile
 18541   01073A  0000               	nop	
 18542   01073C  0000               	nop	
 18543   01073E  0000               	nop	
 18544   010740  0000               	nop	
 18545   010742  94C3               	bcf	195,2,c	;volatile
 18546   010744  0000               	nop	
 18547   010746  0000               	nop	
 18548   010748  0000               	nop	
 18549   01074A  0000               	nop	
 18550   01074C  EFB6  F083         	goto	i2l3462
 18551   010750                     i2l527:
 18552   010750  84C3               	bsf	195,2,c	;volatile
 18553   010752  0000               	nop	
 18554   010754  0000               	nop	
 18555   010756  0000               	nop	
 18556   010758  94C3               	bcf	195,2,c	;volatile
 18557   01075A  0000               	nop	
 18558   01075C  0000               	nop	
 18559   01075E  0000               	nop	
 18560   010760  0000               	nop	
 18561   010762  94C3               	bcf	195,2,c	;volatile
 18562   010764  0000               	nop	
 18563   010766  0000               	nop	
 18564   010768  0000               	nop	
 18565   01076A  0000               	nop	
 18566   01076C                     i2l3462:
 18567                           
 18568                           ;main.c: 71:     if (byte & 0b00000100) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 18569   01076C  A401               	btfss	i2sendByte@byte^(0+1280),2,c
 18570   01076E  EFBB  F083         	goto	i2u240_41
 18571   010772  EFBD  F083         	goto	i2u240_40
 18572   010776                     i2u240_41:
 18573   010776  EFCD  F083         	goto	i2l529
 18574   01077A                     i2u240_40:
 18575   01077A  84C3               	bsf	195,2,c	;volatile
 18576   01077C  0000               	nop	
 18577   01077E  0000               	nop	
 18578   010780  0000               	nop	
 18579   010782  84C3               	bsf	195,2,c	;volatile
 18580   010784  0000               	nop	
 18581   010786  0000               	nop	
 18582   010788  0000               	nop	
 18583   01078A  0000               	nop	
 18584   01078C  94C3               	bcf	195,2,c	;volatile
 18585   01078E  0000               	nop	
 18586   010790  0000               	nop	
 18587   010792  0000               	nop	
 18588   010794  0000               	nop	
 18589   010796  EFDB  F083         	goto	i2l3466
 18590   01079A                     i2l529:
 18591   01079A  84C3               	bsf	195,2,c	;volatile
 18592   01079C  0000               	nop	
 18593   01079E  0000               	nop	
 18594   0107A0  0000               	nop	
 18595   0107A2  94C3               	bcf	195,2,c	;volatile
 18596   0107A4  0000               	nop	
 18597   0107A6  0000               	nop	
 18598   0107A8  0000               	nop	
 18599   0107AA  0000               	nop	
 18600   0107AC  94C3               	bcf	195,2,c	;volatile
 18601   0107AE  0000               	nop	
 18602   0107B0  0000               	nop	
 18603   0107B2  0000               	nop	
 18604   0107B4  0000               	nop	
 18605   0107B6                     i2l3466:
 18606                           
 18607                           ;main.c: 72:     if (byte & 0b00000010) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 18608   0107B6  A201               	btfss	i2sendByte@byte^(0+1280),1,c
 18609   0107B8  EFE0  F083         	goto	i2u241_41
 18610   0107BC  EFE2  F083         	goto	i2u241_40
 18611   0107C0                     i2u241_41:
 18612   0107C0  EFF2  F083         	goto	i2l531
 18613   0107C4                     i2u241_40:
 18614   0107C4  84C3               	bsf	195,2,c	;volatile
 18615   0107C6  0000               	nop	
 18616   0107C8  0000               	nop	
 18617   0107CA  0000               	nop	
 18618   0107CC  84C3               	bsf	195,2,c	;volatile
 18619   0107CE  0000               	nop	
 18620   0107D0  0000               	nop	
 18621   0107D2  0000               	nop	
 18622   0107D4  0000               	nop	
 18623   0107D6  94C3               	bcf	195,2,c	;volatile
 18624   0107D8  0000               	nop	
 18625   0107DA  0000               	nop	
 18626   0107DC  0000               	nop	
 18627   0107DE  0000               	nop	
 18628   0107E0  EF00  F084         	goto	i2l3470
 18629   0107E4                     i2l531:
 18630   0107E4  84C3               	bsf	195,2,c	;volatile
 18631   0107E6  0000               	nop	
 18632   0107E8  0000               	nop	
 18633   0107EA  0000               	nop	
 18634   0107EC  94C3               	bcf	195,2,c	;volatile
 18635   0107EE  0000               	nop	
 18636   0107F0  0000               	nop	
 18637   0107F2  0000               	nop	
 18638   0107F4  0000               	nop	
 18639   0107F6  94C3               	bcf	195,2,c	;volatile
 18640   0107F8  0000               	nop	
 18641   0107FA  0000               	nop	
 18642   0107FC  0000               	nop	
 18643   0107FE  0000               	nop	
 18644   010800                     i2l3470:
 18645                           
 18646                           ;main.c: 73:     if (byte & 0b00000001) { LATFbits.LATF2 = 1; __nop(); __nop(); __nop();
      +                           LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __
      +                          nop(); __nop(); __nop();; } else { LATFbits.LATF2 = 1; __nop(); __nop(); __nop(); LATFbi
      +                          ts.LATF2 = 0; __nop(); __nop(); __nop(); __nop(); LATFbits.LATF2 = 0; __nop(); __nop(); 
      +                          __nop(); __nop();; }
 18647   010800  A001               	btfss	i2sendByte@byte^(0+1280),0,c
 18648   010802  EF05  F084         	goto	i2u242_41
 18649   010806  EF07  F084         	goto	i2u242_40
 18650   01080A                     i2u242_41:
 18651   01080A  EF17  F084         	goto	i2l533
 18652   01080E                     i2u242_40:
 18653   01080E  84C3               	bsf	195,2,c	;volatile
 18654   010810  0000               	nop	
 18655   010812  0000               	nop	
 18656   010814  0000               	nop	
 18657   010816  84C3               	bsf	195,2,c	;volatile
 18658   010818  0000               	nop	
 18659   01081A  0000               	nop	
 18660   01081C  0000               	nop	
 18661   01081E  0000               	nop	
 18662   010820  94C3               	bcf	195,2,c	;volatile
 18663   010822  0000               	nop	
 18664   010824  0000               	nop	
 18665   010826  0000               	nop	
 18666   010828  0000               	nop	
 18667   01082A  EF25  F084         	goto	i2l535
 18668   01082E                     i2l533:
 18669   01082E  84C3               	bsf	195,2,c	;volatile
 18670   010830  0000               	nop	
 18671   010832  0000               	nop	
 18672   010834  0000               	nop	
 18673   010836  94C3               	bcf	195,2,c	;volatile
 18674   010838  0000               	nop	
 18675   01083A  0000               	nop	
 18676   01083C  0000               	nop	
 18677   01083E  0000               	nop	
 18678   010840  94C3               	bcf	195,2,c	;volatile
 18679   010842  0000               	nop	
 18680   010844  0000               	nop	
 18681   010846  0000               	nop	
 18682   010848  0000               	nop	
 18683   01084A                     i2l535:
 18684   01084A  0012               	return		;funcret
 18685   01084C                     __end_ofi2_sendByte:
 18686                           	callstack 0
 18687                           
 18688 ;; *************** function i2_Nrf24_getData *****************
 18689 ;; Defined at:
 18690 ;;		line 180 in file "mirf.c"
 18691 ;; Parameters:    Size  Location     Type
 18692 ;;  dev             2    6[COMRAM] PTR struct .
 18693 ;;		 -> dev(3), 
 18694 ;;  data            2    8[COMRAM] PTR unsigned char 
 18695 ;;		 -> nrf_interrupt@buf(32), init_nrf@buf(32), 
 18696 ;; Auto vars:     Size  Location     Type
 18697 ;;		None
 18698 ;; Return value:  Size  Location     Type
 18699 ;;                  1    wreg      void 
 18700 ;; Registers used:
 18701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18702 ;; Tracked objects:
 18703 ;;		On entry : 0/0
 18704 ;;		On exit  : 0/0
 18705 ;;		Unchanged: 0/0
 18706 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18707 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18710 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18711 ;;Total ram usage:        4 bytes
 18712 ;; Hardware stack levels used: 1
 18713 ;; Hardware stack levels required when called: 2
 18714 ;; This function calls:
 18715 ;;		i2_Nrf24_configRegister
 18716 ;;		i2_SPI1_ByteExchange
 18717 ;;		i2_SPI_read_buff
 18718 ;; This function is called by:
 18719 ;;		_nrf_interrupt
 18720 ;; This function uses a non-reentrant model
 18721 ;;
 18722                           
 18723                           	psect	text65
 18724   01267A                     __ptext65:
 18725                           	callstack 0
 18726   01267A                     i2_Nrf24_getData:
 18727                           	callstack 111
 18728   01267A  9EC0               	bcf	192,7,c	;volatile
 18729   01267C                     
 18730                           ;mirf.c: 183:  SPI1_ByteExchange(0x00 | 0x61);
 18731   01267C  0E61               	movlw	97
 18732   01267E  ECB6  F093         	call	i2_SPI1_ByteExchange
 18733   012682                     
 18734                           ;mirf.c: 184:  SPI_read_buff( data, dev->payload );
 18735   012682  C509  F503         	movff	i2Nrf24_getData@data,i2SPI_read_buff@buffer
 18736   012686  C50A  F504         	movff	i2Nrf24_getData@data+1,i2SPI_read_buff@buffer+1
 18737   01268A  EE20 F002          	lfsr	2,2
 18738   01268E  5007               	movf	i2Nrf24_getData@dev^(0+1280),w,c
 18739   012690  26D9               	addwf	fsr2l,f,c
 18740   012692  5008               	movf	(i2Nrf24_getData@dev+1)^(0+1280),w,c
 18741   012694  22DA               	addwfc	fsr2h,f,c
 18742   012696  50DF               	movf	indf2,w,c
 18743   012698  6E05               	movwf	i2SPI_read_buff@bytes^(0+1280),c
 18744   01269A  EC23  F093         	call	i2_SPI_read_buff	;wreg free
 18745   01269E  8EC0               	bsf	192,7,c	;volatile
 18746   0126A0                     
 18747                           ;mirf.c: 194:  Nrf24_configRegister(0x07, (1 << 6));
 18748   0126A0  0E40               	movlw	64
 18749   0126A2  6E03               	movwf	i2Nrf24_configRegister@value^(0+1280),c
 18750   0126A4  0E07               	movlw	7
 18751   0126A6  ECB0  F094         	call	i2_Nrf24_configRegister
 18752   0126AA  0012               	return		;funcret
 18753   0126AC                     __end_ofi2_Nrf24_getData:
 18754                           	callstack 0
 18755                           
 18756 ;; *************** function i2_Nrf24_configRegister *****************
 18757 ;; Defined at:
 18758 ;;		line 198 in file "mirf.c"
 18759 ;; Parameters:    Size  Location     Type
 18760 ;;  reg             1    wreg     unsigned char 
 18761 ;;  value           1    2[COMRAM] unsigned char 
 18762 ;; Auto vars:     Size  Location     Type
 18763 ;;  reg             1    3[COMRAM] unsigned char 
 18764 ;; Return value:  Size  Location     Type
 18765 ;;                  1    wreg      void 
 18766 ;; Registers used:
 18767 ;;		wreg, status,2, status,0, cstack
 18768 ;; Tracked objects:
 18769 ;;		On entry : 0/0
 18770 ;;		On exit  : 0/0
 18771 ;;		Unchanged: 0/0
 18772 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18773 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18777 ;;Total ram usage:        2 bytes
 18778 ;; Hardware stack levels used: 1
 18779 ;; Hardware stack levels required when called: 1
 18780 ;; This function calls:
 18781 ;;		i2_SPI1_ByteExchange
 18782 ;; This function is called by:
 18783 ;;		i2_Nrf24_getData
 18784 ;; This function uses a non-reentrant model
 18785 ;;
 18786                           
 18787                           	psect	text66
 18788   012960                     __ptext66:
 18789                           	callstack 0
 18790   012960                     i2_Nrf24_configRegister:
 18791                           	callstack 111
 18792                           
 18793                           ;incstack = 0
 18794                           ;i2Nrf24_configRegister@reg stored from wreg
 18795   012960  6E04               	movwf	i2Nrf24_configRegister@reg^(0+1280),c
 18796   012962  9EC0               	bcf	192,7,c	;volatile
 18797   012964                     
 18798                           ;mirf.c: 201:  SPI1_ByteExchange(0x20 | (0x1F & reg));
 18799   012964  5004               	movf	i2Nrf24_configRegister@reg^(0+1280),w,c
 18800   012966  0B1F               	andlw	31
 18801   012968  0920               	iorlw	32
 18802   01296A  ECB6  F093         	call	i2_SPI1_ByteExchange
 18803                           
 18804                           ;mirf.c: 202:  SPI1_ByteExchange(value);
 18805   01296E  5003               	movf	i2Nrf24_configRegister@value^(0+1280),w,c
 18806   012970  ECB6  F093         	call	i2_SPI1_ByteExchange
 18807   012974  8EC0               	bsf	192,7,c	;volatile
 18808   012976  0012               	return		;funcret
 18809   012978                     __end_ofi2_Nrf24_configRegister:
 18810                           	callstack 0
 18811                           
 18812 ;; *************** function i2_Nrf24_dataReady *****************
 18813 ;; Defined at:
 18814 ;;		line 158 in file "mirf.c"
 18815 ;; Parameters:    Size  Location     Type
 18816 ;;  dev             2   13[COMRAM] PTR struct .
 18817 ;;		 -> dev(3), 
 18818 ;; Auto vars:     Size  Location     Type
 18819 ;;  status          1   15[COMRAM] unsigned char 
 18820 ;; Return value:  Size  Location     Type
 18821 ;;                  1    wreg      _Bool 
 18822 ;; Registers used:
 18823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18824 ;; Tracked objects:
 18825 ;;		On entry : 0/0
 18826 ;;		On exit  : 0/0
 18827 ;;		Unchanged: 0/0
 18828 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18832 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18833 ;;Total ram usage:        3 bytes
 18834 ;; Hardware stack levels used: 1
 18835 ;; Hardware stack levels required when called: 4
 18836 ;; This function calls:
 18837 ;;		i2_Nrf24_getStatus
 18838 ;; This function is called by:
 18839 ;;		_nrf_interrupt
 18840 ;; This function uses a non-reentrant model
 18841 ;;
 18842                           
 18843                           	psect	text67
 18844   012836                     __ptext67:
 18845                           	callstack 0
 18846   012836                     i2_Nrf24_dataReady:
 18847                           	callstack 109
 18848   012836                     
 18849                           ;mirf.c: 158: extern _Bool Nrf24_dataReady(NRF24_t * dev);mirf.c: 159: {;mirf.c: 160:  u
      +                          int8_t status = Nrf24_getStatus(dev);
 18850   012836  C50E  F50B         	movff	i2Nrf24_dataReady@dev,i2Nrf24_getStatus@dev
 18851   01283A  C50F  F50C         	movff	i2Nrf24_dataReady@dev+1,i2Nrf24_getStatus@dev+1
 18852   01283E  ECC7  F094         	call	i2_Nrf24_getStatus	;wreg free
 18853   012842  6E10               	movwf	i2Nrf24_dataReady@status^(0+1280),c
 18854   012844                     
 18855                           ;mirf.c: 161:  if ( status & (1 << 6) ) {
 18856   012844  AC10               	btfss	i2Nrf24_dataReady@status^(0+1280),6,c
 18857   012846  EF27  F094         	goto	i2u285_41
 18858   01284A  EF29  F094         	goto	i2u285_40
 18859   01284E                     i2u285_41:
 18860   01284E  EF2C  F094         	goto	i2l3988
 18861   012852                     i2u285_40:
 18862   012852                     
 18863                           ;mirf.c: 162:   return 1;
 18864   012852  0E01               	movlw	1
 18865   012854  EF2D  F094         	goto	i2l696
 18866   012858                     i2l3988:
 18867                           
 18868                           ;mirf.c: 164:  return 0;
 18869   012858  0E00               	movlw	0
 18870   01285A                     i2l696:
 18871   01285A  0012               	return		;funcret
 18872   01285C                     __end_ofi2_Nrf24_dataReady:
 18873                           	callstack 0
 18874                           
 18875 ;; *************** function i2_Nrf24_getStatus *****************
 18876 ;; Defined at:
 18877 ;;		line 297 in file "mirf.c"
 18878 ;; Parameters:    Size  Location     Type
 18879 ;;  dev             2   10[COMRAM] PTR struct .
 18880 ;;		 -> dev(3), 
 18881 ;; Auto vars:     Size  Location     Type
 18882 ;;  rv              1   12[COMRAM] unsigned char 
 18883 ;; Return value:  Size  Location     Type
 18884 ;;                  1    wreg      unsigned char 
 18885 ;; Registers used:
 18886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18887 ;; Tracked objects:
 18888 ;;		On entry : 0/0
 18889 ;;		On exit  : 0/0
 18890 ;;		Unchanged: 0/0
 18891 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18895 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18896 ;;Total ram usage:        3 bytes
 18897 ;; Hardware stack levels used: 1
 18898 ;; Hardware stack levels required when called: 3
 18899 ;; This function calls:
 18900 ;;		i2_Nrf24_readRegister
 18901 ;; This function is called by:
 18902 ;;		i2_Nrf24_dataReady
 18903 ;; This function uses a non-reentrant model
 18904 ;;
 18905                           
 18906                           	psect	text68
 18907   01298E                     __ptext68:
 18908                           	callstack 0
 18909   01298E                     i2_Nrf24_getStatus:
 18910                           	callstack 109
 18911   01298E                     
 18912                           ;mirf.c: 298:  uint8_t rv;;mirf.c: 299:  Nrf24_readRegister(0x07, &rv, 1);
 18913   01298E  0E0D               	movlw	low i2Nrf24_getStatus@rv
 18914   012990  6E07               	movwf	i2Nrf24_readRegister@value^(0+1280),c
 18915   012992  0E05               	movlw	high i2Nrf24_getStatus@rv
 18916   012994  6E08               	movwf	(i2Nrf24_readRegister@value+1)^(0+1280),c
 18917   012996  0E01               	movlw	1
 18918   012998  6E09               	movwf	i2Nrf24_readRegister@len^(0+1280),c
 18919   01299A  0E07               	movlw	7
 18920   01299C  EC87  F093         	call	i2_Nrf24_readRegister
 18921   0129A0                     
 18922                           ;mirf.c: 300:  return rv;
 18923   0129A0  500D               	movf	i2Nrf24_getStatus@rv^(0+1280),w,c
 18924   0129A2  0012               	return		;funcret
 18925   0129A4                     __end_ofi2_Nrf24_getStatus:
 18926                           	callstack 0
 18927                           
 18928 ;; *************** function i2_Nrf24_readRegister *****************
 18929 ;; Defined at:
 18930 ;;		line 207 in file "mirf.c"
 18931 ;; Parameters:    Size  Location     Type
 18932 ;;  reg             1    wreg     unsigned char 
 18933 ;;  value           2    6[COMRAM] PTR unsigned char 
 18934 ;;		 -> i2Nrf24_getStatus@rv(1), Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1),
      + 
 18935 ;;		 -> Nrf24_getCRCLength@config(1), Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_
      +register@buffer(5), 
 18936 ;;		 -> Nrf24_setRetransmitDelay@value(1), Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getSt
      +atus@rv(1), 
 18937 ;;		 -> Nrf24_rxFifoEmpty@fifoStatus(1), Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), 
 18938 ;;  len             1    8[COMRAM] unsigned char 
 18939 ;; Auto vars:     Size  Location     Type
 18940 ;;  reg             1    9[COMRAM] unsigned char 
 18941 ;; Return value:  Size  Location     Type
 18942 ;;                  1    wreg      void 
 18943 ;; Registers used:
 18944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18945 ;; Tracked objects:
 18946 ;;		On entry : 0/0
 18947 ;;		On exit  : 0/0
 18948 ;;		Unchanged: 0/0
 18949 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18950 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18953 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18954 ;;Total ram usage:        4 bytes
 18955 ;; Hardware stack levels used: 1
 18956 ;; Hardware stack levels required when called: 2
 18957 ;; This function calls:
 18958 ;;		i2_SPI1_ByteExchange
 18959 ;;		i2_SPI_read_buff
 18960 ;; This function is called by:
 18961 ;;		i2_Nrf24_getStatus
 18962 ;; This function uses a non-reentrant model
 18963 ;;
 18964                           
 18965                           	psect	text69
 18966   01270E                     __ptext69:
 18967                           	callstack 0
 18968   01270E                     i2_Nrf24_readRegister:
 18969                           	callstack 109
 18970                           
 18971                           ;incstack = 0
 18972                           ;i2Nrf24_readRegister@reg stored from wreg
 18973   01270E  6E0A               	movwf	i2Nrf24_readRegister@reg^(0+1280),c
 18974   012710                     
 18975                           ;mirf.c: 207: void Nrf24_readRegister(uint8_t reg, uint8_t * value, uint8_t len);mirf.c:
      +                           208: {;mirf.c: 209:     if(len) {
 18976   012710  5009               	movf	i2Nrf24_readRegister@len^(0+1280),w,c
 18977   012712  B4D8               	btfsc	status,2,c
 18978   012714  EF8E  F093         	goto	i2u255_41
 18979   012718  EF90  F093         	goto	i2u255_40
 18980   01271C                     i2u255_41:
 18981   01271C  EF9E  F093         	goto	i2l724
 18982   012720                     i2u255_40:
 18983   012720  9EC0               	bcf	192,7,c	;volatile
 18984   012722                     
 18985                           ;mirf.c: 211:         SPI1_ByteExchange(0x00 | (0x1F & reg));
 18986   012722  500A               	movf	i2Nrf24_readRegister@reg^(0+1280),w,c
 18987   012724  0B1F               	andlw	31
 18988   012726  ECB6  F093         	call	i2_SPI1_ByteExchange
 18989   01272A                     
 18990                           ;mirf.c: 212:         SPI_read_buff(value, len);
 18991   01272A  C507  F503         	movff	i2Nrf24_readRegister@value,i2SPI_read_buff@buffer
 18992   01272E  C508  F504         	movff	i2Nrf24_readRegister@value+1,i2SPI_read_buff@buffer+1
 18993   012732  C509  F505         	movff	i2Nrf24_readRegister@len,i2SPI_read_buff@bytes
 18994   012736  EC23  F093         	call	i2_SPI_read_buff	;wreg free
 18995   01273A  8EC0               	bsf	192,7,c	;volatile
 18996   01273C                     i2l724:
 18997   01273C  0012               	return		;funcret
 18998   01273E                     __end_ofi2_Nrf24_readRegister:
 18999                           	callstack 0
 19000                           
 19001 ;; *************** function i2_SPI_read_buff *****************
 19002 ;; Defined at:
 19003 ;;		line 44 in file "mirf.c"
 19004 ;; Parameters:    Size  Location     Type
 19005 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 19006 ;;		 -> i2Nrf24_getStatus@rv(1), Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1),
      + 
 19007 ;;		 -> Nrf24_getCRCLength@config(1), Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_
      +register@buffer(5), 
 19008 ;;		 -> Nrf24_setRetransmitDelay@value(1), Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getSt
      +atus@rv(1), 
 19009 ;;		 -> Nrf24_rxFifoEmpty@fifoStatus(1), Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), 
 19010 ;;		 -> nrf_interrupt@buf(32), init_nrf@buf(32), 
 19011 ;;  bytes           1    4[COMRAM] unsigned char 
 19012 ;; Auto vars:     Size  Location     Type
 19013 ;;  i               1    5[COMRAM] unsigned char 
 19014 ;; Return value:  Size  Location     Type
 19015 ;;                  1    wreg      void 
 19016 ;; Registers used:
 19017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19018 ;; Tracked objects:
 19019 ;;		On entry : 0/0
 19020 ;;		On exit  : 0/0
 19021 ;;		Unchanged: 0/0
 19022 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19023 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19026 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19027 ;;Total ram usage:        4 bytes
 19028 ;; Hardware stack levels used: 1
 19029 ;; Hardware stack levels required when called: 1
 19030 ;; This function calls:
 19031 ;;		i2_SPI1_ByteExchange
 19032 ;; This function is called by:
 19033 ;;		i2_Nrf24_getData
 19034 ;;		i2_Nrf24_readRegister
 19035 ;; This function uses a non-reentrant model
 19036 ;;
 19037                           
 19038                           	psect	text70
 19039   012646                     __ptext70:
 19040                           	callstack 0
 19041   012646                     i2_SPI_read_buff:
 19042                           	callstack 111
 19043   012646  9EC0               	bcf	192,7,c	;volatile
 19044   012648                     
 19045                           ;mirf.c: 46:     unsigned char i;;mirf.c: 47:     for (i = 0; i < bytes; i++) {
 19046   012648  6A06               	clrf	i2SPI_read_buff@i^(0+1280),c
 19047   01264A  EF32  F093         	goto	i2l3480
 19048   01264E                     i2l3474:
 19049                           
 19050                           ;mirf.c: 48:         *buffer = SPI1_ByteExchange(0xFF);
 19051   01264E  0EFF               	movlw	255
 19052   012650  ECB6  F093         	call	i2_SPI1_ByteExchange
 19053   012654  C503  F4D9         	movff	i2SPI_read_buff@buffer,fsr2l
 19054   012658  C504  F4DA         	movff	i2SPI_read_buff@buffer+1,fsr2h
 19055   01265C  6EDF               	movwf	indf2,c
 19056   01265E                     
 19057                           ;mirf.c: 49:         buffer++;
 19058   01265E  4A03               	infsnz	i2SPI_read_buff@buffer^(0+1280),f,c
 19059   012660  2A04               	incf	(i2SPI_read_buff@buffer+1)^(0+1280),f,c
 19060   012662                     
 19061                           ;mirf.c: 50:     }
 19062   012662  2A06               	incf	i2SPI_read_buff@i^(0+1280),f,c
 19063   012664                     i2l3480:
 19064   012664  5005               	movf	i2SPI_read_buff@bytes^(0+1280),w,c
 19065   012666  5C06               	subwf	i2SPI_read_buff@i^(0+1280),w,c
 19066   012668  A0D8               	btfss	status,0,c
 19067   01266A  EF39  F093         	goto	i2u243_41
 19068   01266E  EF3B  F093         	goto	i2u243_40
 19069   012672                     i2u243_41:
 19070   012672  EF27  F093         	goto	i2l3474
 19071   012676                     i2u243_40:
 19072   012676  8EC0               	bsf	192,7,c	;volatile
 19073   012678  0012               	return		;funcret
 19074   01267A                     __end_ofi2_SPI_read_buff:
 19075                           	callstack 0
 19076                           
 19077 ;; *************** function i2_SPI1_ByteExchange *****************
 19078 ;; Defined at:
 19079 ;;		line 208 in file "mcc_generated_files/spi/src/spi1.c"
 19080 ;; Parameters:    Size  Location     Type
 19081 ;;  byteData        1    wreg     unsigned char 
 19082 ;; Auto vars:     Size  Location     Type
 19083 ;;  byteData        1    0[COMRAM] unsigned char 
 19084 ;;  returnValue     1    1[COMRAM] unsigned char 
 19085 ;; Return value:  Size  Location     Type
 19086 ;;                  1    wreg      unsigned char 
 19087 ;; Registers used:
 19088 ;;		wreg, status,2, status,0
 19089 ;; Tracked objects:
 19090 ;;		On entry : 0/0
 19091 ;;		On exit  : 0/0
 19092 ;;		Unchanged: 0/0
 19093 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19095 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19097 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19098 ;;Total ram usage:        2 bytes
 19099 ;; Hardware stack levels used: 1
 19100 ;; This function calls:
 19101 ;;		Nothing
 19102 ;; This function is called by:
 19103 ;;		i2_SPI_read_buff
 19104 ;;		i2_Nrf24_getData
 19105 ;;		i2_Nrf24_configRegister
 19106 ;;		i2_Nrf24_readRegister
 19107 ;; This function uses a non-reentrant model
 19108 ;;
 19109                           
 19110                           	psect	text71
 19111   01276C                     __ptext71:
 19112                           	callstack 0
 19113   01276C                     i2_SPI1_ByteExchange:
 19114                           	callstack 111
 19115                           
 19116                           ;incstack = 0
 19117                           ;i2SPI1_ByteExchange@byteData stored from wreg
 19118   01276C  6E01               	movwf	i2SPI1_ByteExchange@byteData^(0+1280),c
 19119   01276E                     
 19120                           ;mcc_generated_files/spi/src/spi1.c: 212:  SPI1STATUSbits.CLRBF = 1U;
 19121   01276E  0100               	movlb	0	; () banked
 19122   012770  8587               	bsf	135,2,b	;volatile
 19123   012772                     
 19124                           ; BSR set to: 0
 19125                           ;mcc_generated_files/spi/src/spi1.c: 215:  SPI1CON2 = SPI1CON2 | 0x1 | 0x2;
 19126   012772  5186               	movf	134,w,b	;volatile
 19127   012774  0903               	iorlw	3
 19128   012776  6F86               	movwf	134,b	;volatile
 19129   012778                     
 19130                           ; BSR set to: 0
 19131                           ;mcc_generated_files/spi/src/spi1.c: 218:  SPI1TCNTH = 0U;
 19132   012778  6B83               	clrf	131,b	;volatile
 19133   01277A                     
 19134                           ; BSR set to: 0
 19135                           ;mcc_generated_files/spi/src/spi1.c: 219:  SPI1TCNTL = 1U;
 19136   01277A  0E01               	movlw	1
 19137   01277C  6F82               	movwf	130,b	;volatile
 19138   01277E                     
 19139                           ; BSR set to: 0
 19140                           ;mcc_generated_files/spi/src/spi1.c: 221:  SPI1TXB = byteData;
 19141   01277E  C501  F081         	movff	i2SPI1_ByteExchange@byteData,129	;volatile
 19142   012782                     i2l102:
 19143                           
 19144                           ;mcc_generated_files/spi/src/spi1.c: 223:  while(!PIR3bits.SPI1RXIF)
 19145   012782  A0B1               	btfss	177,0,c	;volatile
 19146   012784  EFC6  F093         	goto	i2u230_41
 19147   012788  EFC8  F093         	goto	i2u230_40
 19148   01278C                     i2u230_41:
 19149   01278C  EFC1  F093         	goto	i2l102
 19150   012790                     i2u230_40:
 19151   012790                     
 19152                           ;mcc_generated_files/spi/src/spi1.c: 227:  returnValue = SPI1RXB;
 19153   012790  C080 F502          	movff	128,i2SPI1_ByteExchange@returnValue	;volatile
 19154   012794                     
 19155                           ;mcc_generated_files/spi/src/spi1.c: 228:  return returnValue;
 19156   012794  5002               	movf	i2SPI1_ByteExchange@returnValue^(0+1280),w,c
 19157   012796  0012               	return		;funcret
 19158   012798                     __end_ofi2_SPI1_ByteExchange:
 19159                           	callstack 0
 19160                           
 19161 ;; *************** function _TMR0_OverflowISR *****************
 19162 ;; Defined at:
 19163 ;;		line 110 in file "mcc_generated_files/timer/src/tmr0.c"
 19164 ;; Parameters:    Size  Location     Type
 19165 ;;		None
 19166 ;; Auto vars:     Size  Location     Type
 19167 ;;		None
 19168 ;; Return value:  Size  Location     Type
 19169 ;;                  1    wreg      void 
 19170 ;; Registers used:
 19171 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 19172 ;; Tracked objects:
 19173 ;;		On entry : 0/0
 19174 ;;		On exit  : 0/0
 19175 ;;		Unchanged: 0/0
 19176 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19181 ;;Total ram usage:        0 bytes
 19182 ;; Hardware stack levels used: 1
 19183 ;; Hardware stack levels required when called: 1
 19184 ;; This function calls:
 19185 ;;		NULL
 19186 ;;		_TMR0_DefaultOverflowCallback
 19187 ;; This function is called by:
 19188 ;;		_INTERRUPT_InterruptManager
 19189 ;; This function uses a non-reentrant model
 19190 ;;
 19191                           
 19192                           	psect	text72
 19193   0126AC                     __ptext72:
 19194                           	callstack 0
 19195   0126AC                     _TMR0_OverflowISR:
 19196                           	callstack 113
 19197   0126AC                     
 19198                           ;mcc_generated_files/timer/src/tmr0.c: 113:     PIR3bits.TMR0IF = 0;
 19199   0126AC  9EB1               	bcf	177,7,c	;volatile
 19200   0126AE                     
 19201                           ;mcc_generated_files/timer/src/tmr0.c: 116:     if(TMR0_OverflowCallback)
 19202   0126AE  504F               	movf	_TMR0_OverflowCallback^(0+1280),w,c
 19203   0126B0  1050               	iorwf	(_TMR0_OverflowCallback+1)^(0+1280),w,c
 19204   0126B2  1051               	iorwf	(_TMR0_OverflowCallback+2)^(0+1280),w,c
 19205   0126B4  B4D8               	btfsc	status,2,c
 19206   0126B6  EF5F  F093         	goto	i2u119_41
 19207   0126BA  EF61  F093         	goto	i2u119_40
 19208   0126BE                     i2u119_41:
 19209   0126BE  EF6E  F093         	goto	i2l449
 19210   0126C2                     i2u119_40:
 19211   0126C2                     
 19212                           ;mcc_generated_files/timer/src/tmr0.c: 117:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          118:         TMR0_OverflowCallback();
 19213   0126C2  D802               	call	i2u120_48
 19214   0126C4  EF6E  F093         	goto	i2u120_49
 19215   0126C8                     i2u120_48:
 19216   0126C8  0005               	push	
 19217   0126CA  6EFA               	movwf	pclath,c
 19218   0126CC  504F               	movf	_TMR0_OverflowCallback^(0+1280),w,c
 19219   0126CE  6EFD               	movwf	tosl,c
 19220   0126D0  5050               	movf	(_TMR0_OverflowCallback+1)^(0+1280),w,c
 19221   0126D2  6EFE               	movwf	tosh,c
 19222   0126D4  5051               	movf	(_TMR0_OverflowCallback+2)^(0+1280),w,c
 19223   0126D6  6EFF               	movwf	tosu,c
 19224   0126D8  50FA               	movf	pclath,w,c
 19225   0126DA  0012               	return		;indir
 19226   0126DC                     i2u120_49:
 19227   0126DC                     i2l449:
 19228   0126DC  0012               	return		;funcret
 19229   0126DE                     __end_of_TMR0_OverflowISR:
 19230                           	callstack 0
 19231                           
 19232 ;; *************** function _TMR0_DefaultOverflowCallback *****************
 19233 ;; Defined at:
 19234 ;;		line 127 in file "mcc_generated_files/timer/src/tmr0.c"
 19235 ;; Parameters:    Size  Location     Type
 19236 ;;		None
 19237 ;; Auto vars:     Size  Location     Type
 19238 ;;		None
 19239 ;; Return value:  Size  Location     Type
 19240 ;;                  1    wreg      void 
 19241 ;; Registers used:
 19242 ;;		None
 19243 ;; Tracked objects:
 19244 ;;		On entry : 0/0
 19245 ;;		On exit  : 0/0
 19246 ;;		Unchanged: 0/0
 19247 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19252 ;;Total ram usage:        0 bytes
 19253 ;; Hardware stack levels used: 1
 19254 ;; This function calls:
 19255 ;;		Nothing
 19256 ;; This function is called by:
 19257 ;;		_TMR0_Initialize
 19258 ;;		_TMR0_OverflowISR
 19259 ;; This function uses a non-reentrant model
 19260 ;;
 19261                           
 19262                           	psect	text73
 19263   012A02                     __ptext73:
 19264                           	callstack 0
 19265   012A02                     _TMR0_DefaultOverflowCallback:
 19266                           	callstack 113
 19267   012A02  0012               	return		;funcret
 19268   012A04                     __end_of_TMR0_DefaultOverflowCallback:
 19269                           	callstack 0
 19270                           
 19271                           ;
 19272                           ; H/W Interrupt Vector Table @ 0x8
 19273                           ;
 19274                           
 19275                           	psect	ivt0x8
 19276   000008                     __pivt0x8:
 19277                           	callstack 0
 19278   000008                     ivt0x8_base:
 19279                           	callstack 0
 19280                           
 19281                           ; high-priority vector
 19282   000008  EF9A  F08F         	goto	_INTERRUPT_InterruptManager
 19283   000018                     	org	16
 19284                           
 19285                           ; low-priority vector
 19286   000018  00FF               	reset	
 19287                           
 19288                           	psect	rparam
 19289   000001                     ___rparam_used  equ	1
 19290   000000                     ___param_bank   equ	0
 19291   000000                     __Lparam        equ	__Lrparam
 19292   000000                     __Hparam        equ	__Hrparam
 19293                           
 19294                           	psect	idloc
 19295                           
 19296                           ;Config register IDLOC0 @ 0x200000
 19297                           ;	unspecified, using default values
 19298   200000                     	org	2097152
 19299   200000  FFFF               	dw	65535
 19300                           
 19301                           ;Config register IDLOC1 @ 0x200002
 19302                           ;	unspecified, using default values
 19303   200002                     	org	2097154
 19304   200002  FFFF               	dw	65535
 19305                           
 19306                           ;Config register IDLOC2 @ 0x200004
 19307                           ;	unspecified, using default values
 19308   200004                     	org	2097156
 19309   200004  FFFF               	dw	65535
 19310                           
 19311                           ;Config register IDLOC3 @ 0x200006
 19312                           ;	unspecified, using default values
 19313   200006                     	org	2097158
 19314   200006  FFFF               	dw	65535
 19315                           
 19316                           ;Config register IDLOC4 @ 0x200008
 19317                           ;	unspecified, using default values
 19318   200008                     	org	2097160
 19319   200008  FFFF               	dw	65535
 19320                           
 19321                           ;Config register IDLOC5 @ 0x20000A
 19322                           ;	unspecified, using default values
 19323   20000A                     	org	2097162
 19324   20000A  FFFF               	dw	65535
 19325                           
 19326                           ;Config register IDLOC6 @ 0x20000C
 19327                           ;	unspecified, using default values
 19328   20000C                     	org	2097164
 19329   20000C  FFFF               	dw	65535
 19330                           
 19331                           ;Config register IDLOC7 @ 0x20000E
 19332                           ;	unspecified, using default values
 19333   20000E                     	org	2097166
 19334   20000E  FFFF               	dw	65535
 19335                           
 19336                           ;Config register IDLOC8 @ 0x200010
 19337                           ;	unspecified, using default values
 19338   200010                     	org	2097168
 19339   200010  FFFF               	dw	65535
 19340                           
 19341                           ;Config register IDLOC9 @ 0x200012
 19342                           ;	unspecified, using default values
 19343   200012                     	org	2097170
 19344   200012  FFFF               	dw	65535
 19345                           
 19346                           ;Config register IDLOC10 @ 0x200014
 19347                           ;	unspecified, using default values
 19348   200014                     	org	2097172
 19349   200014  FFFF               	dw	65535
 19350                           
 19351                           ;Config register IDLOC11 @ 0x200016
 19352                           ;	unspecified, using default values
 19353   200016                     	org	2097174
 19354   200016  FFFF               	dw	65535
 19355                           
 19356                           ;Config register IDLOC12 @ 0x200018
 19357                           ;	unspecified, using default values
 19358   200018                     	org	2097176
 19359   200018  FFFF               	dw	65535
 19360                           
 19361                           ;Config register IDLOC13 @ 0x20001A
 19362                           ;	unspecified, using default values
 19363   20001A                     	org	2097178
 19364   20001A  FFFF               	dw	65535
 19365                           
 19366                           ;Config register IDLOC14 @ 0x20001C
 19367                           ;	unspecified, using default values
 19368   20001C                     	org	2097180
 19369   20001C  FFFF               	dw	65535
 19370                           
 19371                           ;Config register IDLOC15 @ 0x20001E
 19372                           ;	unspecified, using default values
 19373   20001E                     	org	2097182
 19374   20001E  FFFF               	dw	65535
 19375                           
 19376                           ;Config register IDLOC16 @ 0x200020
 19377                           ;	unspecified, using default values
 19378   200020                     	org	2097184
 19379   200020  FFFF               	dw	65535
 19380                           
 19381                           ;Config register IDLOC17 @ 0x200022
 19382                           ;	unspecified, using default values
 19383   200022                     	org	2097186
 19384   200022  FFFF               	dw	65535
 19385                           
 19386                           ;Config register IDLOC18 @ 0x200024
 19387                           ;	unspecified, using default values
 19388   200024                     	org	2097188
 19389   200024  FFFF               	dw	65535
 19390                           
 19391                           ;Config register IDLOC19 @ 0x200026
 19392                           ;	unspecified, using default values
 19393   200026                     	org	2097190
 19394   200026  FFFF               	dw	65535
 19395                           
 19396                           ;Config register IDLOC20 @ 0x200028
 19397                           ;	unspecified, using default values
 19398   200028                     	org	2097192
 19399   200028  FFFF               	dw	65535
 19400                           
 19401                           ;Config register IDLOC21 @ 0x20002A
 19402                           ;	unspecified, using default values
 19403   20002A                     	org	2097194
 19404   20002A  FFFF               	dw	65535
 19405                           
 19406                           ;Config register IDLOC22 @ 0x20002C
 19407                           ;	unspecified, using default values
 19408   20002C                     	org	2097196
 19409   20002C  FFFF               	dw	65535
 19410                           
 19411                           ;Config register IDLOC23 @ 0x20002E
 19412                           ;	unspecified, using default values
 19413   20002E                     	org	2097198
 19414   20002E  FFFF               	dw	65535
 19415                           
 19416                           ;Config register IDLOC24 @ 0x200030
 19417                           ;	unspecified, using default values
 19418   200030                     	org	2097200
 19419   200030  FFFF               	dw	65535
 19420                           
 19421                           ;Config register IDLOC25 @ 0x200032
 19422                           ;	unspecified, using default values
 19423   200032                     	org	2097202
 19424   200032  FFFF               	dw	65535
 19425                           
 19426                           ;Config register IDLOC26 @ 0x200034
 19427                           ;	unspecified, using default values
 19428   200034                     	org	2097204
 19429   200034  FFFF               	dw	65535
 19430                           
 19431                           ;Config register IDLOC27 @ 0x200036
 19432                           ;	unspecified, using default values
 19433   200036                     	org	2097206
 19434   200036  FFFF               	dw	65535
 19435                           
 19436                           ;Config register IDLOC28 @ 0x200038
 19437                           ;	unspecified, using default values
 19438   200038                     	org	2097208
 19439   200038  FFFF               	dw	65535
 19440                           
 19441                           ;Config register IDLOC29 @ 0x20003A
 19442                           ;	unspecified, using default values
 19443   20003A                     	org	2097210
 19444   20003A  FFFF               	dw	65535
 19445                           
 19446                           ;Config register IDLOC30 @ 0x20003C
 19447                           ;	unspecified, using default values
 19448   20003C                     	org	2097212
 19449   20003C  FFFF               	dw	65535
 19450                           
 19451                           ;Config register IDLOC31 @ 0x20003E
 19452                           ;	unspecified, using default values
 19453   20003E                     	org	2097214
 19454   20003E  FFFF               	dw	65535
 19455                           
 19456                           	psect	config
 19457                           
 19458                           ;Config register CONFIG1 @ 0x300000
 19459                           ;	External Oscillator Selection
 19460                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
 19461                           ;	Reset Oscillator Selection
 19462                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 19463   300000                     	org	3145728
 19464   300000  8F                 	db	143
 19465                           
 19466                           ;Config register CONFIG2 @ 0x300001
 19467                           ;	Clock out Enable bit
 19468                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 19469                           ;	PRLOCKED One-Way Set Enable bit
 19470                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 19471                           ;	Clock Switch Enable bit
 19472                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 19473                           ;	Fail-Safe Clock Monitor Enable bit
 19474                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 19475   300001                     	org	3145729
 19476   300001  FF                 	db	255
 19477                           
 19478                           ;Config register CONFIG3 @ 0x300002
 19479                           ;	MCLR Enable bit
 19480                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 19481                           ;	Power-up timer selection bits
 19482                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 19483                           ;	Multi-vector enable bit
 19484                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 19485                           ;	IVTLOCK bit One-way set enable bit
 19486                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 19487                           ;	Low Power BOR Enable bit
 19488                           ;	LPBOREN = OFF, Low-Power BOR disabled
 19489                           ;	Brown-out Reset Enable bits
 19490                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 19491   300002                     	org	3145730
 19492   300002  F7                 	db	247
 19493                           
 19494                           ;Config register CONFIG4 @ 0x300003
 19495                           ;	Brown-out Reset Voltage Selection bits
 19496                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 19497                           ;	ZCD Disable bit
 19498                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 19499                           ;	PPSLOCK bit One-Way Set Enable bit
 19500                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 19501                           ;	Stack Full/Underflow Reset Enable bit
 19502                           ;	STVREN = ON, Stack full/underflow will cause Reset
 19503                           ;	Low Voltage Programming Enable bit
 19504                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 19505                           ;	Extended Instruction Set Enable bit
 19506                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 19507   300003                     	org	3145731
 19508   300003  FF                 	db	255
 19509                           
 19510                           ;Config register CONFIG5 @ 0x300004
 19511                           ;	WDT Period selection bits
 19512                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 19513                           ;	WDT operating mode
 19514                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 19515   300004                     	org	3145732
 19516   300004  9F                 	db	159
 19517                           
 19518                           ;Config register CONFIG6 @ 0x300005
 19519                           ;	WDT Window Select bits
 19520                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 19521                           ;	WDT input clock selector
 19522                           ;	WDTCCS = SC, Software Control
 19523   300005                     	org	3145733
 19524   300005  FF                 	db	255
 19525                           
 19526                           ;Config register CONFIG7 @ 0x300006
 19527                           ;	Boot Block Size selection bits
 19528                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 19529                           ;	Boot Block enable bit
 19530                           ;	BBEN = OFF, Boot block disabled
 19531                           ;	Storage Area Flash enable bit
 19532                           ;	SAFEN = OFF, SAF disabled
 19533                           ;	Background Debugger
 19534                           ;	DEBUG = 0x1, unprogrammed default
 19535   300006                     	org	3145734
 19536   300006  FF                 	db	255
 19537                           
 19538                           ;Config register CONFIG8 @ 0x300007
 19539                           ;	Boot Block Write Protection bit
 19540                           ;	WRTB = OFF, Boot Block not Write protected
 19541                           ;	Configuration Register Write Protection bit
 19542                           ;	WRTC = OFF, Configuration registers not Write protected
 19543                           ;	Data EEPROM Write Protection bit
 19544                           ;	WRTD = OFF, Data EEPROM not Write protected
 19545                           ;	SAF Write protection bit
 19546                           ;	WRTSAF = OFF, SAF not Write Protected
 19547                           ;	Application Block write protection bit
 19548                           ;	WRTAPP = OFF, Application Block not write protected
 19549   300007                     	org	3145735
 19550   300007  FF                 	db	255
 19551                           
 19552                           ;Config register CONFIG10 @ 0x300009
 19553                           ;	PFM and Data EEPROM Code Protection bit
 19554                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 19555   300009                     	org	3145737
 19556   300009  FF                 	db	255
 19557                           tosu	equ	0x4FF
 19558                           tosh	equ	0x4FE
 19559                           tosl	equ	0x4FD
 19560                           stkptr	equ	0x4FC
 19561                           pclatu	equ	0x4FB
 19562                           pclath	equ	0x4FA
 19563                           pcl	equ	0x4F9
 19564                           tblptru	equ	0x4F8
 19565                           tblptrh	equ	0x4F7
 19566                           tblptrl	equ	0x4F6
 19567                           tablat	equ	0x4F5
 19568                           prodh	equ	0x4F4
 19569                           prodl	equ	0x4F3
 19570                           indf0	equ	0x4EF
 19571                           postinc0	equ	0x4EE
 19572                           postdec0	equ	0x4ED
 19573                           preinc0	equ	0x4EC
 19574                           plusw0	equ	0x4EB
 19575                           fsr0h	equ	0x4EA
 19576                           fsr0l	equ	0x4E9
 19577                           wreg	equ	0x4E8
 19578                           indf1	equ	0x4E7
 19579                           postinc1	equ	0x4E6
 19580                           postdec1	equ	0x4E5
 19581                           preinc1	equ	0x4E4
 19582                           plusw1	equ	0x4E3
 19583                           fsr1h	equ	0x4E2
 19584                           fsr1l	equ	0x4E1
 19585                           bsr	equ	0x4E0
 19586                           indf2	equ	0x4DF
 19587                           postinc2	equ	0x4DE
 19588                           postdec2	equ	0x4DD
 19589                           preinc2	equ	0x4DC
 19590                           plusw2	equ	0x4DB
 19591                           fsr2h	equ	0x4DA
 19592                           fsr2l	equ	0x4D9
 19593                           status	equ	0x4D8

Data Sizes:
    Strings     327
    Constant    100
    Data        688
    BSS         451
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     54      95
    BANK5           160    134     142
    BANK6           256    232     232
    BANK7           256    200     232
    BANK8           256    200     232
    BANK9           256    200     232
    BANK10          256      0     200
    BANK11          256      0     200
    BANK12          256      0     200
    BANK13          256      0     200
    BANK14          256      0     200
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK7[32]), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    Nrf24_config@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_dataReady@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_flushRx@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_getCRCLength@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_getData@data	PTR unsigned char  size(2) Largest target is 32
		 -> init_nrf@buf(BANK5[32]), nrf_interrupt@buf(COMRAM[32]), 

    Nrf24_getData@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_getDataRate@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_getPALevel@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_getRetransmitDelay@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_getStatus@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_init@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_isSend@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_powerUpRx@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_powerUpTx@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_print_address_register@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_print_address_register@name	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_4(CODE[13]), STR_6(CODE[9]), 

    Nrf24_print_byte_register@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_print_byte_register@name	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_10(CODE[7]), STR_11(CODE[9]), STR_12(CODE[8]), STR_13(CODE[14]), 
		 -> STR_5(CODE[13]), STR_7(CODE[11]), STR_8(CODE[7]), STR_9(CODE[10]), 

    Nrf24_printDetails@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_readRegister@value	PTR unsigned char  size(2) Largest target is 5
		 -> Nrf24_addRADDR@value(COMRAM[1]), Nrf24_getCRCLength@AA(BANK5[1]), Nrf24_getCRCLength@config(BANK5[1]), Nrf24_getDataRate@dr(BANK5[1]), 
		 -> Nrf24_getPALevel@level(BANK5[1]), Nrf24_getRetransmitDelay@value(BANK5[1]), Nrf24_getStatus@rv(BANK5[1]), Nrf24_print_address_register@buffer(BANK5[5]), 
		 -> Nrf24_print_byte_register@buffer(BANK5[1]), Nrf24_rxFifoEmpty@fifoStatus(COMRAM[1]), Nrf24_SetOutputRF_PWR@value(COMRAM[1]), Nrf24_setRADDR@buffer(BANK5[5]), 
		 -> Nrf24_setRetransmitDelay@value(BANK5[1]), Nrf24_SetSpeedDataRates@value(BANK5[1]), Nrf24_setTADDR@buffer(BANK5[5]), 

    Nrf24_send@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_send@value	PTR unsigned char  size(2) Largest target is 32
		 -> main@buf(BANK6[32]), 

    Nrf24_setRADDR@adr	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    Nrf24_setRADDR@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_setRetransmitDelay@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_SetSpeedDataRates@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_setTADDR@adr	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    Nrf24_setTADDR@dev	PTR struct . size(2) Largest target is 3
		 -> dev(BANK5[3]), 

    Nrf24_writeRegister@value	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), STR_2(CODE[6]), 

    NULL$0	PTR FTN()void  size(3) Largest target is 0

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK7[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_14(CODE[17]), STR_15(CODE[18]), STR_16(CODE[16]), STR_17(CODE[21]), 
		 -> STR_18(CODE[70]), STR_19(CODE[6]), STR_20(CODE[4]), STR_21(CODE[5]), 
		 -> STR_22(CODE[3]), STR_23(CODE[6]), STR_24(CODE[8]), STR_25(CODE[3]), 
		 -> STR_3(CODE[53]), 

    RC6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> nrf_interrupt(), NULL(), 

    RC6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> nrf_interrupt(), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    S2054$buffer	PTR unsigned char  size(2) Largest target is 0

    S2054$source	PTR const unsigned char  size(2) Largest target is 0

    S40$4$0	PTR void  size(2) Largest target is 0

    S40$5$0	PTR void  size(2) Largest target is 0

    S40$6$0	PTR void  size(2) Largest target is 0

    S40SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S40SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferRead(), 

    S40SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S40SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S40SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteRead(), 

    S40SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S40SPI_INTERFACE$Close	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    S40SPI_INTERFACE$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S40SPI_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Initialize(), 

    S40SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S40SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S40SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(3) Largest target is 1
		 -> SPI1_Open(), 

    S40SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S40SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S882$4$0	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), 

    S882TMR_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), 

    S882TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), 

    S882TMR_INTERFACE$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), 

    S882TMR_INTERFACE$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), 

    S882TMR_INTERFACE$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    S882TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    sendGrid@grid	PTR unsigned char  size(2) Largest target is 200
		 -> main@gridB(BANK9[200]), main@gridG(BANK8[200]), received_data(BANK10[200]), 

    sp__memset	PTR void  size(2) Largest target is 0

    sp__Nrf24_getDataRateString	PTR unsigned char  size(2) Largest target is 24
		 -> rf24_datarates(COMRAM[24]), 

    sp__Nrf24_getPALevelString	PTR unsigned char  size(2) Largest target is 32
		 -> rf24_pa_dbm(BANK9[32]), 

    SPI1_nrf24$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_nrf24$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_nrf24$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_nrf24$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> i2_SPI1_ByteExchange(), SPI1_ByteExchange(), 

    SPI1_nrf24$ByteRead	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_nrf24$ByteWrite	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_nrf24$Close	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_nrf24$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_nrf24$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_nrf24$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_nrf24$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_nrf24$Open	PTR FTN(unsigned char ,)_Bool  size(3) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_nrf24$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    SPI1_nrf24$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    SPI_read_buff@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> init_nrf@buf(BANK5[32]), Nrf24_addRADDR@value(COMRAM[1]), Nrf24_getCRCLength@AA(BANK5[1]), Nrf24_getCRCLength@config(BANK5[1]), 
		 -> Nrf24_getDataRate@dr(BANK5[1]), Nrf24_getPALevel@level(BANK5[1]), Nrf24_getRetransmitDelay@value(BANK5[1]), Nrf24_getStatus@rv(BANK5[1]), 
		 -> Nrf24_print_address_register@buffer(BANK5[5]), Nrf24_print_byte_register@buffer(BANK5[1]), Nrf24_rxFifoEmpty@fifoStatus(COMRAM[1]), Nrf24_SetOutputRF_PWR@value(COMRAM[1]), 
		 -> Nrf24_setRADDR@buffer(BANK5[5]), Nrf24_setRetransmitDelay@value(BANK5[1]), Nrf24_SetSpeedDataRates@value(BANK5[1]), Nrf24_setTADDR@buffer(BANK5[5]), 
		 -> nrf_interrupt@buf(COMRAM[32]), 

    SPI_write_buff@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@buf(BANK6[32]), STR_1(CODE[6]), STR_2(CODE[6]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK5[2]), rf24_crclength(CODE[30]), rf24_datarates(COMRAM[24]), rf24_pa_dbm(BANK9[32]), 
		 -> STR_10(CODE[7]), STR_11(CODE[9]), STR_12(CODE[8]), STR_13(CODE[14]), 
		 -> STR_26(CODE[7]), STR_4(CODE[13]), STR_5(CODE[13]), STR_6(CODE[9]), 
		 -> STR_7(CODE[11]), STR_8(CODE[7]), STR_9(CODE[10]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK5[2]), rf24_crclength(CODE[30]), rf24_datarates(COMRAM[24]), rf24_pa_dbm(BANK9[32]), 
		 -> STR_10(CODE[7]), STR_11(CODE[9]), STR_12(CODE[8]), STR_13(CODE[14]), 
		 -> STR_4(CODE[13]), STR_5(CODE[13]), STR_6(CODE[9]), STR_7(CODE[11]), 
		 -> STR_8(CODE[7]), STR_9(CODE[10]), 

    Timer0$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), 

    Timer0$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), 

    Timer0$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), NULL(), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 70
		 -> STR_14(CODE[17]), STR_15(CODE[18]), STR_16(CODE[16]), STR_17(CODE[21]), 
		 -> STR_18(CODE[70]), STR_19(CODE[6]), STR_20(CODE[4]), STR_21(CODE[5]), 
		 -> STR_22(CODE[3]), STR_23(CODE[6]), STR_24(CODE[8]), STR_25(CODE[3]), 
		 -> STR_3(CODE[53]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 70
		 -> STR_14(CODE[17]), STR_15(CODE[18]), STR_16(CODE[16]), STR_17(CODE[21]), 
		 -> STR_18(CODE[70]), STR_19(CODE[6]), STR_20(CODE[4]), STR_21(CODE[5]), 
		 -> STR_22(CODE[3]), STR_23(CODE[6]), STR_24(CODE[8]), STR_25(CODE[3]), 
		 -> STR_3(CODE[53]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_14(CODE[17]), STR_15(CODE[18]), STR_16(CODE[16]), STR_17(CODE[21]), 
		 -> STR_18(CODE[70]), STR_19(CODE[6]), STR_20(CODE[4]), STR_21(CODE[5]), 
		 -> STR_22(CODE[3]), STR_23(CODE[6]), STR_24(CODE[8]), STR_25(CODE[3]), 
		 -> STR_3(CODE[53]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_nrf_interrupt
    _nrf_interrupt->i2_sendGrid
    i2_sendGrid->i2_sendCell
    i2_sendCell->i2_sendRGB
    i2_sendRGB->i2_sendByte
    i2_Nrf24_getData->i2_SPI_read_buff
    i2_Nrf24_configRegister->i2_SPI1_ByteExchange
    i2_Nrf24_dataReady->i2_Nrf24_getStatus
    i2_Nrf24_getStatus->i2_Nrf24_readRegister
    i2_Nrf24_readRegister->i2_SPI_read_buff
    i2_SPI_read_buff->i2_SPI1_ByteExchange

Critical Paths under _main in BANK5

    _main->_init_nrf
    _sendGrid->_sendCell
    _sendCell->_sendRGB
    _sendRGB->_sendByte
    _init_nrf->_Nrf24_printDetails
    _Nrf24_setTADDR->_Nrf24_readRegister
    _Nrf24_setTADDR->_Nrf24_writeRegister
    _Nrf24_setRetransmitDelay->_Nrf24_readRegister
    _Nrf24_setRADDR->_Nrf24_readRegister
    _Nrf24_setRADDR->_Nrf24_writeRegister
    _Nrf24_writeRegister->_SPI_write_buff
    _Nrf24_printDetails->_Nrf24_print_address_register
    _Nrf24_print_status->_printf
    _Nrf24_print_byte_register->_printf
    _Nrf24_print_address_register->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Nrf24_getRetransmitDelay->_Nrf24_readRegister
    _Nrf24_getPALevel->_Nrf24_readRegister
    _Nrf24_getDataRate->_Nrf24_readRegister
    _Nrf24_getCRCLength->_Nrf24_readRegister
    _Nrf24_init->_SPI1_Open
    _Nrf24_getData->_SPI_read_buff
    _Nrf24_dataReady->_Nrf24_getStatus
    _Nrf24_config->_Nrf24_getStatus
    _Nrf24_flushRx->_SPI1_ByteExchange
    _Nrf24_SetSpeedDataRates->_Nrf24_readRegister
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _Nrf24_send->_Nrf24_getStatus
    _SPI_write_buff->_DELAY_microseconds
    _SPI_write_buff->_SPI1_ByteExchange
    _Nrf24_powerUpTx->_Nrf24_configRegister
    _Nrf24_isSend->_Nrf24_getStatus
    _Nrf24_powerUpRx->_Nrf24_configRegister
    _Nrf24_configRegister->_SPI1_ByteExchange
    _Nrf24_getStatus->_Nrf24_readRegister
    _Nrf24_readRegister->_SPI_read_buff
    _SPI_read_buff->_SPI1_ByteExchange

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               832   832      0   30443
                                              0 BANK6    232   232      0
                                              0 BANK7    200   200      0
                                              0 BANK8    200   200      0
                                              0 BANK9    200   200      0
                 _DELAY_milliseconds
                       _Nrf24_isSend
                         _Nrf24_send
            _RC6_SetInterruptHandler
                  _SYSTEM_Initialize
                           _init_nrf
                           _sendGrid
 ---------------------------------------------------------------------------------
 (1) _sendGrid                                            13    11      2     748
                                              5 BANK5     13    11      2
                           _sendCell
 ---------------------------------------------------------------------------------
 (2) _sendCell                                             2     2      0     409
                                              4 BANK5      1     1      0
                            _sendRGB
 ---------------------------------------------------------------------------------
 (3) _sendRGB                                              3     1      2     313
                                              1 BANK5      3     1      2
                           _sendByte
 ---------------------------------------------------------------------------------
 (4) _sendByte                                             1     1      0     232
                                              0 BANK5      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_nrf                                            34    34      0   27877
                                            100 BANK5     34    34      0
                 _DELAY_milliseconds
            _Nrf24_SetSpeedDataRates
                       _Nrf24_config
                    _Nrf24_dataReady
                      _Nrf24_getData
                         _Nrf24_init
                 _Nrf24_printDetails
                     _Nrf24_setRADDR
           _Nrf24_setRetransmitDelay
                     _Nrf24_setTADDR
 ---------------------------------------------------------------------------------
 (2) _Nrf24_setTADDR                                      16    12      4     861
                                             10 BANK5     16    12      4
                 _Nrf24_readRegister
                _Nrf24_writeRegister
 ---------------------------------------------------------------------------------
 (2) _Nrf24_setRetransmitDelay                             4     1      3     551
                                             10 BANK5      4     1      3
               _Nrf24_configRegister
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (2) _Nrf24_setRADDR                                      16    12      4     839
                                             10 BANK5     16    12      4
                 _Nrf24_readRegister
                _Nrf24_writeRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_writeRegister                                  4     1      3     326
                                              6 BANK5      4     1      3
                  _SPI1_ByteExchange
                     _SPI_write_buff
 ---------------------------------------------------------------------------------
 (2) _Nrf24_printDetails                                   9     7      2   22983
                                             91 BANK5      9     7      2
                 _Nrf24_getCRCLength
                  _Nrf24_getDataRate
                   _Nrf24_getPALevel
           _Nrf24_getRetransmitDelay
                    _Nrf24_getStatus
       _Nrf24_print_address_register
          _Nrf24_print_byte_register
                 _Nrf24_print_status
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_status                                   2     2      0    5049
                                             77 BANK5      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_byte_register                            7     1      6    5326
                                             77 BANK5      7     1      6
                 _Nrf24_readRegister
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_address_register                        14     8      6    5371
                                             77 BANK5     14     8      6
                 _Nrf24_readRegister
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              18     4     14    4875
                                             61 BANK5     16     2     14
                 _Nrf24_getCRCLength (ARG)
                  _Nrf24_getDataRate (ARG)
                   _Nrf24_getPALevel (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    4802
                                             53 BANK5      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           16    10      6    4658
                                             38 BANK5     15     9      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                13     9      4    1060
                                             25 BANK5     13     9      4
                                _pad
 ---------------------------------------------------------------------------------
 (6) _stoa                                                14    10      4     557
                                              9 BANK5     14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   9     5      4     182
                                              0 BANK5      9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                12     8      4    1840
                                             25 BANK5     12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  9     3      6     762
                                             16 BANK5      9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4     339
                                              9 BANK5      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     238
                                              0 BANK5      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      67
                                              6 BANK5      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     298
                                              0 BANK5      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     302
                                              0 BANK5      8     4      4
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getRetransmitDelay                             3     1      2     353
                                             10 BANK5      3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getPALevel                                     3     1      2     377
                                             10 BANK5      3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getDataRate                                    4     2      2     424
                                             10 BANK5      4     2      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getCRCLength                                   5     3      2     471
                                             10 BANK5      5     3      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (2) _Nrf24_init                                           2     0      2     199
                                              1 BANK5      2     0      2
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (3) _SPI1_Open                                            2     2      0     154
                                              0 BANK5      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Nrf24_getData                                        4     0      4     354
                                              6 BANK5      4     0      4
               _Nrf24_configRegister
                  _SPI1_ByteExchange
                      _SPI_read_buff
 ---------------------------------------------------------------------------------
 (2) _Nrf24_dataReady                                      3     1      2     406
                                             13 BANK5      3     1      2
                    _Nrf24_getStatus
 ---------------------------------------------------------------------------------
 (2) _Nrf24_config                                         4     0      4     921
                                             13 BANK5      4     0      4
               _Nrf24_configRegister
                      _Nrf24_flushRx
                    _Nrf24_getStatus
                    _Nrf24_powerUpRx
 ---------------------------------------------------------------------------------
 (3) _Nrf24_flushRx                                        2     0      2      54
                                              2 BANK5      2     0      2
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (2) _Nrf24_SetSpeedDataRates                              4     1      3     663
                                             10 BANK5      4     1      3
               _Nrf24_configRegister
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      46
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      46
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      23
                                              0 BANK5      3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      23
                                              0 BANK5      3     0      3
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RC6_SetInterruptHandler                              3     0      3      23
                                              0 BANK5      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Nrf24_send                                           6     2      4     917
                                             13 BANK5      6     2      4
                    _Nrf24_getStatus
                    _Nrf24_powerUpTx
                  _SPI1_ByteExchange
                     _SPI_write_buff
 ---------------------------------------------------------------------------------
 (4) _SPI_write_buff                                       4     1      3     172
                                              2 BANK5      4     1      3
                 _DELAY_microseconds
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _DELAY_microseconds                                   2     0      2      46
                                              0 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Nrf24_powerUpTx                                      2     0      2     152
                                              4 BANK5      2     0      2
               _Nrf24_configRegister
 ---------------------------------------------------------------------------------
 (1) _Nrf24_isSend                                        13     9      4     724
                                             13 BANK5     13     9      4
                 _DELAY_milliseconds
                    _Nrf24_getStatus
                    _Nrf24_powerUpRx
 ---------------------------------------------------------------------------------
 (3) _Nrf24_powerUpRx                                      2     0      2     155
                                              4 BANK5      2     0      2
               _Nrf24_configRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_configRegister                                 2     1      1     129
                                              2 BANK5      2     1      1
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getStatus                                      3     1      2     360
                                             10 BANK5      3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_readRegister                                   4     1      3     304
                                              6 BANK5      4     1      3
                  _SPI1_ByteExchange
                      _SPI_read_buff
 ---------------------------------------------------------------------------------
 (4) _SPI_read_buff                                        4     1      3     126
                                              2 BANK5      4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    2     2      0      53
                                              0 BANK5      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DELAY_milliseconds                                   3     1      2      28
                                              0 BANK5      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          2     2      0    1563
                                             52 COMRAM     2     2      0
                                NULL *
                   _TMR0_OverflowISR
                      _nrf_interrupt *
 ---------------------------------------------------------------------------------
 (13) _nrf_interrupt                                      34    34      0    1563
                                             18 COMRAM    34    34      0
                  i2_Nrf24_dataReady
                    i2_Nrf24_getData
                         i2_sendGrid
 ---------------------------------------------------------------------------------
 (14) i2_sendGrid                                         13    11      2     747
                                              5 COMRAM    13    11      2
                         i2_sendCell
 ---------------------------------------------------------------------------------
 (15) i2_sendCell                                          2     2      0     409
                                              4 COMRAM     1     1      0
                          i2_sendRGB
 ---------------------------------------------------------------------------------
 (16) i2_sendRGB                                           3     1      2     313
                                              1 COMRAM     3     1      2
                         i2_sendByte
 ---------------------------------------------------------------------------------
 (17) i2_sendByte                                          1     1      0     232
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_Nrf24_getData                                     4     0      4     330
                                              6 COMRAM     4     0      4
             i2_Nrf24_configRegister
                i2_SPI1_ByteExchange
                    i2_SPI_read_buff
 ---------------------------------------------------------------------------------
 (15) i2_Nrf24_configRegister                              2     1      1     105
                                              2 COMRAM     2     1      1
                i2_SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (14) i2_Nrf24_dataReady                                   3     1      2     369
                                             13 COMRAM     3     1      2
                  i2_Nrf24_getStatus
 ---------------------------------------------------------------------------------
 (15) i2_Nrf24_getStatus                                   3     1      2     323
                                             10 COMRAM     3     1      2
               i2_Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (16) i2_Nrf24_readRegister                                4     1      3     276
                                              6 COMRAM     4     1      3
                i2_SPI1_ByteExchange
                    i2_SPI_read_buff
 ---------------------------------------------------------------------------------
 (15) i2_SPI_read_buff                                     4     1      3     126
                                              2 COMRAM     4     1      3
                i2_SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (16) i2_SPI1_ByteExchange                                 2     2      0      53
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _TMR0_OverflowISR                                    0     0      0       0
                                NULL *
       _TMR0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_milliseconds
   _Nrf24_isSend
     _DELAY_milliseconds
     _Nrf24_getStatus
       _Nrf24_readRegister
         _SPI1_ByteExchange
         _SPI_read_buff
           _SPI1_ByteExchange
     _Nrf24_powerUpRx
       _Nrf24_configRegister
         _SPI1_ByteExchange
   _Nrf24_send
     _Nrf24_getStatus
     _Nrf24_powerUpTx
       _Nrf24_configRegister
     _SPI1_ByteExchange
     _SPI_write_buff
       _DELAY_microseconds
       _SPI1_ByteExchange
   _RC6_SetInterruptHandler
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _init_nrf
     _DELAY_milliseconds
     _Nrf24_SetSpeedDataRates
       _Nrf24_configRegister
       _Nrf24_readRegister
     _Nrf24_config
       _Nrf24_configRegister
       _Nrf24_flushRx
         _SPI1_ByteExchange
       _Nrf24_getStatus
       _Nrf24_powerUpRx
     _Nrf24_dataReady
       _Nrf24_getStatus
     _Nrf24_getData
       _Nrf24_configRegister
       _SPI1_ByteExchange
       _SPI_read_buff
     _Nrf24_init
       _SPI1_Open
     _Nrf24_printDetails
       _Nrf24_getCRCLength
         _Nrf24_readRegister
       _Nrf24_getDataRate
         _Nrf24_readRegister
       _Nrf24_getPALevel
         _Nrf24_readRegister
       _Nrf24_getRetransmitDelay
         _Nrf24_readRegister
       _Nrf24_getStatus
       _Nrf24_print_address_register
         _Nrf24_readRegister
         _printf
           _Nrf24_getCRCLength (ARG)
           _Nrf24_getDataRate (ARG)
           _Nrf24_getPALevel (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _dtoa
                 ___awdiv
                 ___awmod
                 _abs
                   ___awmod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
               _fputc
               _read_prec_or_width
               _stoa
                 _fputc
               _xtoa
                 _pad
       _Nrf24_print_byte_register
         _Nrf24_readRegister
         _printf
       _Nrf24_print_status
         _printf
       _printf
     _Nrf24_setRADDR
       _Nrf24_readRegister
       _Nrf24_writeRegister
         _SPI1_ByteExchange
         _SPI_write_buff
     _Nrf24_setRetransmitDelay
       _Nrf24_configRegister
       _Nrf24_readRegister
     _Nrf24_setTADDR
       _Nrf24_readRegister
       _Nrf24_writeRegister
   _sendGrid
     _sendCell
       _sendRGB
         _sendByte

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _TMR0_OverflowISR *
     NULL(Fake) *
     _TMR0_DefaultOverflowCallback *
   _nrf_interrupt *
     i2_Nrf24_dataReady
       i2_Nrf24_getStatus
         i2_Nrf24_readRegister
           i2_SPI1_ByteExchange
           i2_SPI_read_buff
             i2_SPI1_ByteExchange
     i2_Nrf24_getData
       i2_Nrf24_configRegister
         i2_SPI1_ByteExchange
       i2_SPI1_ByteExchange
       i2_SPI_read_buff
     i2_sendGrid
       i2_sendCell
         i2_sendRGB
           i2_sendByte

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh        1150      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0     200     78.1%
BITBANK13          256      0       0      0.0%
BANK13             256      0     200     78.1%
BITBANK12          256      0       0      0.0%
BANK12             256      0     200     78.1%
BITBANK11          256      0       0      0.0%
BANK11             256      0     200     78.1%
BITBANK10          256      0       0      0.0%
BANK10             256      0     200     78.1%
BITBANK9           256      0       0      0.0%
BANK9              256    200     232     90.6%
BITBANK8           256      0       0      0.0%
BANK8              256    200     232     90.6%
BITBANK7           256      0       0      0.0%
BANK7              256    200     232     90.6%
BITBANK6           256      0       0      0.0%
BANK6              256    232     232     90.6%
BITBANK5           160      0       0      0.0%
BANK5              160    134     142     88.8%
BITBIGSFRl         128      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     54      95    100.0%
STACK                0      0       0      0.0%
DATA                 0      0    2165      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Apr 17 15:24:00 2025

                       _SPI1_ByteExchange 2494                         Nrf24_setTADDR@adr 056C  
                          nrf_interrupt@i 0533                         Nrf24_setTADDR@dev 056A  
                       ??_Nrf24_powerUpRx 0566                         ??_Nrf24_powerUpTx 0566  
                       Nrf24_setTADDR@ret 0576                      ??_Nrf24_printDetails 05BD  
                                      l61 295E                                        l67 1468  
                                      l69 1468                        ?_SPI1_ByteExchange 0501  
                     ?_Nrf24_print_status 0501                              ___awdiv@sign 0565  
                                     l102 24B6                                       l104 24C4  
                                     l105 24CC                                       l136 29B6  
                                     l313 25DC                                       l351 29E4  
                                     l263 1E92                                       l328 29F2  
                                     l521 0412                                       l531 058E  
                                     l523 045E                                       l364 29D6  
                                     l380 29C8                                       l516 0E86  
                                     l533 05DA                                       l525 04AA  
                                     l535 05F6                                       l527 04F6  
                                     l519 03C6                  Nrf24_getCRCLength@config 056E  
                                     l720 25F4                                       l712 28E0  
                                     l641 2504                                       l705 2572  
                                     l529 0542                                       l634 24CE  
                                     l538 28DA                                       l635 24D0  
                                     l651 2346                                       l803 270C  
                                     l547 2138                                       l388 2644  
                                     l724 2610                                       l716 28F8  
                                     l644 22EC                                       l732 253A  
                                     l397 239E                                       l645 22EE  
                                     l709 25A6                                       l557 11A2  
                                     l670 20C6                                       l830 244A  
                                     l806 0A6C                                       l639 2502  
                                     l751 1F32                                       l823 22EA  
                                     l664 276A                                       l728 251C  
                                     l680 1B4A                                       l649 2344  
                                     l841 2218                                       l817 1CAE  
                                     l809 2044                                       l762 1A42  
                                     l850 2914                                       l674 1DEA  
                                     l682 1B52                                       l763 1A9E  
                                     l739 1EF0                                       l836 2216  
                                     l828 2446                                       l844 287C  
                                     l676 1DF2                                       l782 29FE  
                                     l838 21FC                                       l775 280E  
                                     l768 292E                                       l696 27E6  
                                     l785 2834                                       l778 29F4  
                                     l798 21AA                __end_of_DELAY_milliseconds 2646  
                        nrf_interrupt@buf 0513                                       _abs 253C  
                                     _dev 05EB                                       _pad 1CB0  
                                     fsr1 04E1                                       fsr2 04D9  
                     ??_SPI1_ByteExchange 0560                              ___awmod@sign 0565  
                Nrf24_getCRCLength@result 056C                                       prod 04F3  
                                     tosl 04FD                                       wreg 04E8  
                                    l1103 1C02                                      ?_abs 0566  
                                    l1090 19E4                                      l3100 19B8  
                                    l3102 19BE                                      l4000 29E6  
                                    l3104 19C4                                      l3120 1B72  
                                    l3112 1B54                                      l3200 0B58  
                                    l4002 29B8                                      l3106 19D4  
                                    l3130 1BAA                                      l3122 1B80  
                                    l3114 1B58                                      l3050 155E  
                                    l3210 0BB2                                      l3202 0B6A  
                                    l4010 0D7E                                      l1603 0D60  
                                    l3300 24A2                                      l4100 1F06  
                                    l4004 29C4                                      l3108 19DC  
                                    l3132 1BB8                                      l3140 1BE2  
                                    l3124 1B88                                      l3116 1B66  
                                    l3052 1568                                      l3060 244C  
                                    l3212 0BB8                                      l3204 0B7A  
                                    l3220 0C06                                      l4020 0DF4  
                                    l4012 0D94                                      l3310 24C8  
                                    l3302 24A6                                      l4110 1F30  
                                    l4102 1F08                                      l3070 1926  
                                    l3142 1BF2                                      l3134 1BCE  
                                    l3126 1B9A                                      l3118 1B6E  
                                    l3054 1586                                      l3046 1538  
                                    l3062 245A                                      l3150 1CC0  
                                    l3214 0BC8                                      l3206 0B94  
                                    l3230 0C82                                      l3222 0C0E  
                                    l4022 0E08                                      l4014 0DB2  
                                    l4006 0D62                                      l1623 1536  
                                    l1615 109E                                      l1543 27BE  
                                    l3304 24AC                                      l4120 1A32  
                                    l4112 19E6                                      l4104 1F0A  
                                    l3080 1956                                      l3072 1934  
                                    l3144 1BFA                                      l3136 1BD6  
                                    l3128 1BA2                                      l3056 15BC  
                                    l3048 154C                                      l3064 246C  
                                    l3160 1D12                                      l3152 1CD4  
                                    l3208 0BA2                                      l3232 0C96  
                                    l3240 0CFC                                      l3224 0C1A  
                                    l3320 0044                                      l4032 0E6C  
                                    l4024 0E1A                                      l4016 0DC6  
                                    l4008 0D70                                      l4040 10C6  
                                    l3306 24AE                                      l4130 1A60  
                                    l4114 19FE                                      l4106 1F10  
                                    l3090 1984                                      l3082 195A  
                                    l3074 193C                                      l3138 1BDC  
                                    l3066 2472                                      l3162 1D3E  
                                    l3154 1CE4                                      l3170 0A74  
                                    l3234 0C9C                                      l3226 0C20  
                                    l3218 0BEA                                      l3250 0F98  
                                    l3322 0048                                      l3314 0000  
                                    l4026 0E3C                                      l4018 0DD8  
                                    l4050 114E                                      l4042 10D2  
                                    l4034 10A0                                      l1563 1CEC  
                                    l1571 0ACE                                      l1619 152E  
                                    l3308 24B2                                      l4116 1A14  
                                    l4132 1A6E                                      l3420 237A  
                                    l3412 2348                                      l4108 1F2E  
                                    l3092 1992                                      l3084 1962  
                                    l3076 1940                                      l3068 1922  
                                    l3164 253C                                      l3156 1CF8  
                                    l3148 1CB0                                      l3180 0AB6  
                                    l3172 0A88                                      l3244 0D28  
                                    l3236 0CBE                                      l3260 0FC2  
                                    l3252 0F9E                                      l3340 00CA  
                                    l3332 006A                                      l3324 004E  
                                    l3316 0028                                      l4028 0E4A  
                                    l3500 04D6                                      l4044 1100  
                                    l4052 1154                                      l4036 10AA  
                                    l1661 2570                                      l3430 24F0  
                                    l4118 1A24                                      l3422 2382  
                                    l3414 234C                                      l3094 1998  
                                    l3086 1974                                      l3078 194E  
                                    l3166 254C                                      l1566 1D30  
                                    l3158 1D0C                                      l3190 0AE4  
                                    l3182 0AC2                                      l3174 0A90  
                                    l3246 0D3C                                      l3238 0CF6  
                                    l3270 0FF0                                      l3262 0FD2  
                                    l3254 0FAE                                      l1638 0390  
                                    l3350 0168                                      l3342 00D4  
                                    l3326 0050                                      l3334 008E  
                                    l3318 0036                                      l1654 23F4  
                                    l3510 05AA                                      l3502 0512  
                                    l4054 1172                                      l4046 110E  
                                    l4038 10B8                                      l4150 12A2  
                                    l1591 0C5E                                      l1639 021C  
                                    l3424 24D8                                      l4128 1A54  
                                    l3416 2354                                      l3520 232E  
                                    l3096 19AE                                      l3088 197C  
                                    l1568 1D52                                      l1584 0BE8  
                                    l3192 0B18                                      l3184 0ACA  
                                    l3176 0AA0                                      l3168 0A6E  
                                    l3248 0D42                                      l3280 1056  
                                    l3272 0FF6                                      l3264 0FDA  
                                    l3256 0FB6                                      l3344 00E4  
                                    l3336 009E                                      l3328 0062  
                                    l3432 23A0                                      l3600 1C1E  
                                    l3512 05BA                                      l3504 0522  
                                    l4048 113C                                      l4056 1176  
                                    l4160 12FA                                      l4152 12A6  
                                    l1673 1602                                      l1681 2492  
                                    l3426 24E8                                      l3530 25F6  
                                    l3418 235E                                      l3514 22F6  
                                    l3522 2332                                      l4090 1ECA  
                                    l3098 19B6                                      l1658 2558  
                                    l3194 0B1A                                      l3186 0AD6  
                                    l3178 0AA6                                      l3290 1474  
                                    l3282 1070                                      l3266 0FDE  
                                    l3258 0FBC                                      l3274 1016  
                                    l3370 0254                                      l3354 0180  
                                    l3346 0104                                      l3338 00BA  
                                    l3434 23AC                                      l3602 1C30  
                                    l3506 055E                                      l4170 1322  
                                    l4162 1308                                      l4154 12B2  
                                    l3428 24EE                                      l3532 25FE  
                                    l3524 28E2                                      l3516 231C  
                                    l4092 1ED8                                      l4084 1E94  
                                    l1684 2A00                                      l3196 0B20  
                                    l3188 0ADE                                      l3292 149C  
                                    l3276 1034                                      l3284 107E  
                                    l3268 0FEE                                      l3372 025C  
                                    l3364 0200                                      l3356 01A0  
                                    l3348 0124                                      l3436 23CA  
                                    l3620 1CA2                                      l3612 1C4A  
                                    l3604 1C34                                      l3508 056E  
                                    l4180 136A                                      l4172 1326  
                                    l4164 130A                                      l4156 12CA  
                                    l3534 260E                                      l3526 28F6  
                                    l3518 2322                                      l4094 1EF2  
                                    l4086 1EA4                                      l3710 2956  
                                    l3198 0B3C                                      l3294 14D6  
                                    l1598 0D16                                      l3278 1046  
                                    l3374 0284                                      l3382 0308  
                                    l3366 021E                                      l3358 01E8  
                                    l3438 23EA                                      l3614 1C6C  
                                    l3606 1C40                                      l3630 22CA  
                                    l3622 2288                                      l4182 1380  
                                    l4174 1334                                      l4166 130E  
                                    l4158 12E2                                      l3528 25E2  
                                    l4096 1EFE                                      l4088 1EB4  
                                    l3720 29AA                                      l3800 1E8E  
                                    l3712 2958                                      l3560 1464  
                                    l3552 139A                                      l3640 2424  
                                    l3296 14F4                                      l3288 146A  
                                    l3384 0318                                      l3376 02BC  
                                    l3368 0246                                      l3392 0362  
                                    l3536 2798                                      l3616 1C72  
                                    l3632 22DE                                      l3624 22A2  
                                    l4176 1342                                      l4168 1310  
                                    l3570 292A                                      l4098 1F00  
                                    l3722 29AC                                      l3562 29D8  
                                    l3810 25C8                                      l3802 1E90  
                                    l3730 1E0E                                      l3714 295A  
                                    l3706 2948                                      l3554 13AA  
                                    l3650 21AC                                      l3642 242C  
                                    l3634 23F6                                      l3298 1502  
                                    l3378 02F4                                      l3538 27A2  
                                    l3618 1C8E                                      l3626 22B4  
                                    l3490 042E                                      l3482 0396  
                                    l4178 1354                                      l3812 2612  
                                    l3580 2800                                      l3724 29B2  
                                    l3564 29CA                                      l3804 25A8  
                                    l3740 1E36                                      l3732 1E12  
                                    l3716 295C                                      l3708 2952  
                                    l3556 145E                                      l3820 2744  
                                    l3660 21EC                                      l3652 21B0  
                                    l3644 243E                                      l3636 240A  
                                    l3388 0350                                      l3628 22B8  
                                    l3900 26DE                                      l3492 043E  
                                    l3484 03A6                                      l3814 2616  
                                    l3582 2802                                      l3574 27E8  
                                    l3726 29B4                                      l3718 29A4  
                                    l3806 25B4                                      l3750 1E40  
                                    l3742 1E38                                      l3734 1E18  
                                    l3830 2068                                      l3558 1460  
                                    l3822 2756                                      l3662 220A  
                                    l3654 21C2                                      l3646 2448  
                                    l3638 2412                                      l3670 2870  
                                    l3910 0A20                                      l3590 251E  
                                    l3902 26F2                                      l3494 047A  
                                    l3486 03E2                                      l3566 28C2  
                                    ?_pad 0570                                      l3816 2628  
                                    l3568 2916                                      l3576 27F2  
                                    l3808 25C6                                      l3760 1E4E  
                                    l3752 1E42                                      l3744 1E3A  
                                    l3736 1E26                                      l3728 1DF4  
                                    l3584 29F6                                      l3840 20BA  
                                    l3832 2074                                      l3920 27DE  
                                    l3824 2766                                      l3664 2212  
                                    l3656 21CA                                      l3672 287A  
                                    l3912 0A30                                      l3592 2528  
                                    l3904 26FA                                      l3496 048A  
                                    l3488 03F2                                      l3578 27F4  
                                    l3770 1E5C                                      l3762 1E50  
                                    l3754 1E44                                      l3746 1E3C  
                                    l3738 1E2C                                      l3586 29FC  
                                    l3834 207E                                      l3930 257A  
                                    l3826 2768                                      l3818 273E  
                                    l3658 21DC                                      l3914 0A58  
                                    l3594 2538                                      l3842 1D54  
                                    l3906 2702                                      l3498 04C6  
                                    l3780 1E78                                      l3772 1E5E  
                                    l3764 1E52                                      l3756 1E46  
                                    l3748 1E3E                                      l3836 2096  
                                    l3828 2046                                      l3924 27E4  
                                    l3916 27C0                                      l3932 2598  
                                    l3668 285C                                      l3676 28FA  
                                    l3596 1FC6                                      l3908 084C  
                                    l3588 250A                                      l3860 1DCE  
                                    l3844 1D5E                                      l3940 20E2  
                                    l3950 2810                                      l3790 1E84  
                                    l3782 1E7C                                      l3774 1E62  
                                    l3766 1E54                                      l3758 1E48  
                                    l3838 20AE                                      l3918 27D0  
                                    l3934 259A                                      l3678 290E  
                                    l3598 1C04                                      l3854 1D8E  
                                    l3846 1D70                                      l3870 1AE4  
                                    l3862 1AA0                                      l3942 20F4  
                                    l3952 281C                                      l3792 1E86  
                                    l3784 1E7E                                      l3776 1E64  
                                    l3768 1E56                                      l3928 2574  
                                    l3856 1DC6                                      l3848 1D84  
                                    l3880 1B2A                                      l3864 1AAA  
                                    l3944 2106                                      l3936 20CC  
                                    l3954 2828                                      l3794 1E88  
                                    l3786 1E80                                      l3778 1E66  
                                    l3890 2162                                      l3858 1DCA  
                                    l3882 1B2E                                      l3866 1ABC  
                                    l3938 20D0                                      l3796 1E8A  
                                    l3788 1E82                                      l3892 2176  
                                    l3884 213A                                      l3876 1AEE  
                                    l3868 1AD0                                      l3948 2118  
                                    l3798 1E8C                                      l3894 2182  
                                    l3878 1B26                                      l3896 2190  
                                    l3888 2150                                      l3898 21A0  
                                    STR_1 FFF4                                      STR_2 FFF4  
                                    STR_3 FEFD                                      STR_4 FF88  
                                    STR_5 FF95                                      STR_6 FFB7  
                                    STR_7 FFA2                                      STR_8 FFE0  
                                    STR_9 FFAD                      ??_Nrf24_print_status 05AD  
                                    u2000 0C06                                      u2001 0C02  
                                    u2010 0C4E                                      u2020 0C5E  
                                    u2021 0C5A                                      u2030 0C7E  
                                    u2110 1034                                      u2031 0C7A  
                                    u2111 1030                                      u3000 1A50  
                                    u2040 0CBA                                      u2120 1046  
                                    u2200 009E                                      u3001 1A4C  
                                    u2041 0CB6                                      u2017 0C44  
                                    u2121 1042                                      u2105 1002  
                                    u2201 009A                                      u3010 1A9E  
                                    u2050 0CE0                                      u2130 1056  
                                    u2210 00CA                                      u3011 1A9A  
                                    u2131 1052                                      u2211 00C6  
                                    u2060 0D16                                      u2140 1070  
                                    u2220 0104                                      u2061 0D12  
                                    u2141 106C                                      u2221 0100  
                                    u3101 12BC                                      _LATA 04BE  
                                    u2310 2376                                      u2070 0D24  
                                    u2150 107E                                      u2230 0124  
                                    _LATB 04BF                                      u2311 2372  
                                    u2071 0D20                                      u2151 107A  
                                    u2231 0120                                      u3111 12D4  
                                    _LATC 04C0                                      u2320 239E  
                                    u2160 149C                                      u2080 0D60  
                                    u2240 01A0                                      _LATD 04C1  
                                    u2321 239A                                      u2161 1498  
                                    u2081 0D5C                                      u2057 0CD6  
                                    u2241 019C                                      u3121 12EC  
                                    _LATE 04C2                                      u2330 2502  
                                    u2170 152E                                      u2090 0FD2  
                                    u2250 0246                                      _LATF 04C3  
                                    u2331 24FE                                      u2171 152A  
                                    u2091 0FCE                                      u2251 0242  
                                    u3131 134C                                      u2180 24C4  
                                    u1700 1586                                      u2260 0284  
                                    u2340 23EA                                      u2500 056E  
                                    u2181 24C0                                      u1701 1582  
                                    u2261 0280                                      u2341 23E6  
                                    u2501 056A                                      u1710 15BC  
                                    u2270 02BC                                      u2190 0028  
                                    u2510 05BA                                      u1711 15B8  
                                    u2271 02B8                                      u2191 0024  
                                    u2511 05B6                                      u2520 2318  
                                    u1800 1B80                                      u1720 2492  
                                    u2280 02F4                                      u2600 1FFC  
                                    u2440 03A6                                      u3217 234E  
                                    u1801 1B7C                                      u1721 248E  
                                    u2281 02F0                                      u2601 1FF6  
                                    u2441 03A2                                      u2530 2344  
                                    u1730 1934                                      u1810 1B9A  
                                    u2290 0318                                      u2610 1FFE  
                                    u2450 03F2                                      u3227 237C  
                                    u2531 2340                                      u1731 1930  
                                    u1811 1B96                                      u2291 0314  
                                    u2451 03EE                                      u3091 12AC  
                                    u2540 25F4                                      u2700 243E  
                                    u1740 194E                                      u1820 1BB8  
                                    u1900 0A84                                      u2620 2012  
                                    u2460 043E                                      u3237 261E  
                                    u2541 25F0                                      u2701 243A  
                                    u1741 194A                                      u1821 1BB4  
                                    u1901 0A7E                                      u2621 200C  
                                    u2461 043A                                      u2710 21EC  
                                    u1750 1974                                      u1830 1BCE  
                                    u1910 0A86                                      u2630 2014  
                                    u2470 048A                                      u2527 230E  
                                    u2711 21E8                                      u1751 1970  
                                    u1831 1BCA                                      u2471 0486  
                                    u2800 2176                                      u2560 13AA  
                                    u2720 21FC                                      u1760 1992  
                                    u1840 1BF2                                      u1680 154C  
                                    u1920 0AA0                                      u2640 203A  
                                    u2480 04D6                                      u2801 2172  
                                    u2561 13A6                                      u2721 21F8  
                                    u1761 198E                                      u1841 1BEE  
                                    u1681 1548                                      u1921 0A9C  
                                    u2641 2034                                      u2481 04D2  
                                    u2810 27DE                                      u2730 220A  
                                    u1770 19AE                                      u1690 155E  
                                    u1850 1CC0                                      u1930 0AB6  
                                    u2650 203C                                      u2570 251C  
                                    u2490 0522                                      u2811 27DA  
                                    u2731 2206                                      u1771 19AA  
                                    u1691 155A                                      u1851 1CBC  
                                    u1931 0AB2                                      u2571 2518  
                                    u2491 051E                                      u2740 2644  
                                    u1780 19D4                                      u1860 1CE4  
                                    u1940 0B58                                      u2660 1C8E  
                                    u2580 1FE6                                      u2900 1172  
                                    u2741 2640                                      u1781 19D0  
                                    u1861 1CE0                                      u1941 0B54  
                                    u2661 1C8A                                      u2581 1FE0  
                                    u2901 116E                                      u1790 1B66  
                                    u1870 1D30                                      u1950 0B6A  
                                    u2670 1CA2                                      u2590 1FE8  
                                    u2750 1DC6                                      u2910 11A2  
                                    u1791 1B62                                      u1871 1D2C  
                                    u1951 0B66                                      u2671 1C9E  
                                    u2751 1DC2                                      u2911 119E  
                                    u1880 1D3E                                      u1960 0B7A  
                                    u2680 22DE                                      u2760 1DEA  
                                    u1881 1D3A                                      u1961 0B76  
                                    u2681 22DA                                      u2761 1DE6  
                                    u2690 2424                                      u1890 254C  
                                    u1970 0B94                                      u2770 1B26  
                                    u2691 2420                                      u1891 2548  
                                    u1971 0B90                                      u2771 1B22  
                                    u1980 0BA2                                      u2780 1B4A  
                                    u2860 0DC6                                      u1981 0B9E  
                                    u2781 1B46                                      u2861 0DC2  
                                    u2790 214C                                      u1990 0BB2  
                                    u2870 0E08                                      u2791 2148  
                                    u1991 0BAE                                      u2871 0E04  
                                    u2960 1ECA                                      u2880 0E68  
                                    u2961 1EC6                                      u2881 0E64  
                                    u2970 1EF0                                      u2890 110E  
                                    u2971 1EEC                                      u2891 110A  
                                    u2980 19FE                                      u2981 19FA  
                                    u2990 1A32                                      u2991 1A2E  
                                    _WPUA 0401                                      _WPUB 0409  
                                    _WPUC 0411                                      _WPUD 0419  
                                    _WPUE 0421                                      _WPUF 0429  
                    Nrf24_setTADDR@buffer 0571                                      abs@a 0566  
                                    _dbuf 07C8                                      _main 12A2  
                                    _dtoa 0A6E                          Nrf24_send@status 0572  
                                    _prec 05E8                                      pad@i 0577  
                                    pad@p 0574                                      fsr0h 04EA  
                                    fsr1h 04E2                                      indf0 04EF  
                                    fsr2h 04DA                                      fsr0l 04E9  
                                    indf1 04E7                                      indf2 04DF  
                                    fsr1l 04E1                                      fsr2l 04D9  
                                    _stoa 0BEA                                      _xtoa 0F98  
               ?_INT2_SetInterruptHandler 0560                                      prodh 04F4  
                                    prodl 04F3                                      start 001A  
                              i2_sendCell 221A                      i2_Nrf24_readRegister 270E  
                              i2_sendGrid 11A4                                i2_sendByte 05F8  
               __end_of_SPI1_ByteExchange 24CE                            _SPI1STATUSbits 0087  
                            ___param_bank 0000                          _TMR0_OverflowISR 26AC  
                                   ??_abs 0568                                     ??_pad 0576  
                                   ?_main 0501                                     ?_dtoa 0579  
                         __end_of___awdiv 19E6                                     STR_10 FFE7  
                                   STR_11 FFC0                                     STR_20 FFFA  
                                   STR_12 FFC9                                     STR_21 FFD4  
                                   STR_13 FF7A                                     STR_22 FEFA  
                                   STR_14 FF59                                     STR_23 FFEE  
                                   STR_15 FF47                                     STR_24 FFD1  
                                   STR_16 FF6A                                     STR_25 FEFA  
                                   STR_17 FF32                                     STR_26 FFD9  
                                   STR_18 FEB7                                     STR_19 FFEE  
                         __end_of___awmod 1C04                                     ?_stoa 0569  
                          SPI_read_buff@i 0565                           ___awdiv@divisor 0562  
                                   ?_xtoa 0579                                     _IOCAF 0407  
                                   _IOCBF 040F                                     _IOCCF 0417  
                                   _IOCAN 0406                                     _IOCEF 0427  
                                   _IOCAP 0405                                     _IOCBN 040E  
                                   _IOCBP 040D                                     _IOCCN 0416  
                                   _IOCCP 0415                                     _IOCEN 0426  
                                   _IOCEP 0425                                     i2l102 2782  
                                   i2l104 2790                                     i2l105 2796  
                 _RC6_SetInterruptHandler 29E6                                     i2l323 1FB8  
                                   i2l319 1F5C                                     i2l521 0672  
                                   i2l531 07E4                                     i2l523 06BC  
                                   i2l533 082E                                     i2l525 0706  
                                   i2l455 2A02                                     i2l535 084A  
                                   i2l527 0750                                     i2l519 0628  
                                   i2l720 2720                                     i2l712 2962  
                                   i2l449 26DC                                     i2l641 2678  
                                   i2l705 267A                                     i2l529 079A  
                                   i2l634 2646                                     i2l538 298C  
                                   i2l635 2648                                     i2l547 2286  
                                   i2l724 273C                                     i2l716 2976  
                                   i2l709 26AA                                     i2l557 12A0  
                                   i2l565 1920                                     i2l639 2676  
                                   i2l768 29A2                                     i2l696 285A  
                         ___awdiv@counter 0564                                     _OSCEN 00B3  
                            vfpfcnvrt@fmt 0588                                     _TMR0H 0319  
                                   _TMR0L 0318                                     _TRISA 04C6  
                                   _TRISB 04C7                                     _TRISC 04C8  
                                   _TRISD 04C9                                     _TRISE 04CA  
                                   _TRISF 04CB                                _Nrf24_init 273E  
                              _Nrf24_send 1E94                    ??_Nrf24_configRegister 0563  
                                   _flags 05EA                       read_prec_or_width@c 0566  
                     read_prec_or_width@n 0567                                     _fputc 1538  
                                   _fputs 244C                           __end_of_sendRGB 28DC  
                                   pad@fp 0570                                     _width 05E6  
                                   _putch 2A00                                     dtoa@d 057B  
                                   dtoa@i 0583                                     dtoa@p 057F  
                                   dtoa@s 0582                                     dtoa@w 0580  
                              i2sendRGB@b 0503                                i2sendRGB@g 0502  
                              i2sendRGB@r 0504                  _INT1_SetInterruptHandler 29D8  
                                   pclath 04FA                                     pclatu 04FB  
                                   tablat 04F5                                     plusw1 04E3  
                                   plusw2 04DB                                     stoa@l 0575  
                                   stoa@p 056F                                     stoa@s 056B  
                                   stoa@w 0571               __end_ofi2_SPI1_ByteExchange 2798  
                                   status 04D8                                     xtoa@c 0583  
                                   xtoa@d 057B                                     xtoa@i 0584  
                                   xtoa@p 0580                                     xtoa@w 0581  
                   ?i2_Nrf24_readRegister 0507                   _Nrf24_SetSpeedDataRates 213A  
                         __initialization 0E88                  Nrf24_writeRegister@value 0566  
                           _SPI_read_buff 24CE                              __end_of_main 1396  
                            __end_of_dtoa 0BEA                   Nrf24_configRegister@reg 0563  
                            __end_of_stoa 0D62                              __end_of_xtoa 10A0  
            SPI1_ByteExchange@returnValue 0561                     __end_of_nrf_interrupt 1922  
             ?_INTERRUPT_InterruptManager 0501              Nrf24_print_byte_register@dev 05AD  
            Nrf24_print_byte_register@reg 05B1              Nrf24_print_byte_register@qty 05B2  
               Nrf24_configRegister@value 0562                                    ??_main 05E6  
                                  ??_dtoa 057D                       Nrf24_config@channel 056F  
                                  ??_stoa 056D                                    ??_xtoa 057D  
                           __activetblptr 0003                           _Nrf24_dataReady 27C0  
             ??_Nrf24_print_byte_register 05B3                      __end_of_Nrf24_config 20C8  
              __end_of_read_prec_or_width 1538                        Nrf24_dataReady@dev 056D  
                    __end_of_Nrf24_isSend 1AA0                       Nrf24_config@payload 0570  
                                  ?_fputc 0560                                    _ACTCON 00AC  
                                  ?_fputs 0569                          ___awdiv@dividend 0560  
                                  _ANSELA 0400                                    ?_putch 0501  
                                  _ANSELB 0408                                    _ANSELC 0410  
                                  _ANSELD 0418                                    _ANSELE 0420  
                                  _ANSELF 0428                                    _T0CON0 031A  
                                  _T0CON1 031B                                    _RB1I2C 0289  
                                  _RB2I2C 0288                                    _RC3I2C 0287  
                                  _RC4I2C 0286                                    _RC3PPS 0214  
                                  _RC5PPS 0216                                    _ODCONA 0402  
                                  _ODCONB 040A                                    _ODCONC 0412  
                                  _ODCOND 041A                                    _ODCONE 0422  
                                  _ODCONF 042A                                    i2l3400 2772  
                                  i2l3402 2778                                    i2l3404 277A  
                                  i2l4060 1878                                    i2l4140 1F6A  
                                  i2l3406 277E                                    i2l4070 18B0  
                                  i2l4062 188C                                    i2l4142 1F78  
                                  i2l4134 1F3C                                    i2l3408 2794  
                                  i2l4080 190C                                    i2l4072 18CC  
                                  i2l4144 1F88                                    i2l4136 1F4A  
                                  i2l2642 26AC                                    i2l3450 068E  
                                  i2l3442 05FA                                    i2l4082 1914  
                                  i2l4074 18D0                                    i2l4058 185C  
                                  i2l4146 1F8A                                    i2l4138 1F58  
                                  i2l2644 26AE                                    i2l3700 298E  
                                  i2l3460 0730                                    i2l3452 069C  
                                  i2l3444 0608                                    i2l4076 18D4  
                                  i2l4068 1894                                    i2l4148 1F9E  
                                  i2l2646 26C2                                    i2l3550 273A  
                                  i2l3702 29A0                                    i2l3470 0800  
                                  i2l3462 076C                                    i2l3454 06D8  
                                  i2l3446 0644                                    i2l3542 297A  
                                  i2l4078 18F0                                    i2l3480 2664  
                                  i2l3544 2710                                    i2l3472 080E  
                                  i2l3464 077A                                    i2l3456 06E6  
                                  i2l3448 0652                                    i2l3474 264E  
                                  i2l3546 2722                                    i2l3466 07B6  
                                  i2l3458 0722                                    i2l3476 265E  
                                  i2l3548 272A                                    i2l3468 07C4  
                                  i2l3398 276E                                    i2l3478 2662  
                                  _INLVLA 0404                                    i2l3690 2256  
                                  i2l3682 221C                                    _INLVLB 040C  
                                  _INLVLC 0414                                    i2l3684 2220  
                                  _INLVLD 041C                                    _INLVLE 0424  
                                  i2l3686 2232                                    i2l3694 2268  
                                  _INLVLF 042C                                    i2l3696 2964  
                                  i2l3688 2244                                    i2l3960 11BA  
                                  i2l3698 2974                                    i2l3970 123C  
                                  i2l3962 11C6                                    i2l3980 2836  
                                  i2l3972 124E                                    i2l3964 11D2  
                                  i2l3956 11A4                                    i2l3982 2844  
                                  i2l3966 1200                                    i2l3974 1252  
                                  i2l3958 11AC                                    i2l3984 2852  
                                  i2l3992 267C                                    i2l3976 1270  
                                  i2l3968 120E                                    i2l3994 2682  
                                  i2l3978 1274                                    i2l3988 2858  
                                  i2l3996 269E                                    i2l3998 26A0  
                         _Nrf24_getStatus 2916                        i2Nrf24_getData@dev 0507  
                                  _OSCFRQ 00B1                             vfpfcnvrt@done 0592  
                             INTSTAT_ADDR 00D7                               ?i2_sendCell 0501  
         Nrf24_print_byte_register@buffer 05B3                               ?i2_sendGrid 0506  
                             ?i2_sendByte 0501                         __end_of_SPI1_Open 146A  
                                  _Timer0 FE7D                            ?_SPI_read_buff 0562  
                            vfprintf@cfmt 059B                                 ??___awdiv 0564  
                               ??___awmod 0564                           i2_Nrf24_getData 267A  
           Nrf24_getRetransmitDelay@value 056C                      read_prec_or_width@ap 0562  
               ??_RC6_SetInterruptHandler 0563                          __end_of_init_nrf 0E88  
                                  clear_0 0F4E                                    clear_1 0F5A  
                                  clear_2 0F66                                    clear_3 0F72  
                                  clear_4 0F7E                          ___awdiv@quotient 0566  
                         ___awmod@divisor 0562                                    isa$std 0001  
                         ___awmod@counter 0564                                    _printf 2798  
                                  pad@buf 0572                          __end_of_sendCell 213A  
               i2Nrf24_readRegister@value 0507                         ?_CLOCK_Initialize 0501  
                                  dtoa@fp 0579                          __end_of_sendGrid 11A4  
                            __pdataBANK11 0B00                          __end_of_sendByte 05F8  
                            __pdataBANK12 0C00                              __pdataBANK13 0D00  
                             init_nrf@buf 05C4                               init_nrf@ret 05E4  
                                  fputc@c 0560              _INT2_DefaultInterruptHandler 0000  
                                  fputs@c 056D                                    fputs@i 056E  
                            __pdataCOMRAM 0537                                    fputs@s 0569  
                      ??_CLOCK_Initialize 0560                                 ??_sendRGB 0563  
                            __mediumconst FE52                                    tblptrh 04F7  
                                  tblptrl 04F6                      _RC6_InterruptHandler 0555  
                                  tblptru 04F8                               ?_Nrf24_init 0561  
                             ?_Nrf24_send 056D                                    stoa@cp 0573  
                                  stoa@fp 0569                                    putch@c 0501  
                        __end_of_vfprintf 23F6  INT2_SetInterruptHandler@InterruptHandler 0560  
INT1_SetInterruptHandler@InterruptHandler 0560   RC6_SetInterruptHandler@InterruptHandler 0560  
                                  xtoa@fp 0579                            _SPI1_IsRxReady 0000  
                          _SPI1_IsTxReady 0000                         _SYSTEM_Initialize 29B8  
                       __end_ofi2_sendRGB 298E                           _Nrf24_powerUpRx 27E8  
                         _Nrf24_powerUpTx 2810                                __accesstop 0560  
                 __end_of__initialization 0F92                    ??i2_Nrf24_readRegister 050A  
                   Nrf24_getCRCLength@dev 056A                 ??_Nrf24_SetSpeedDataRates 056D  
                          _SPI1_ByteWrite 0000                 _Nrf24_print_byte_register 2288  
                      ?_SYSTEM_Initialize 0501                        _Nrf24_getCRCLength 21AC  
                           ___rparam_used 0001             Nrf24_setRetransmitDelay@value 056D  
                          __pcstackCOMRAM 0501                              __pidataBANK8 287E  
                            __pidataBANK9 289E                       ??_SYSTEM_Initialize 0563  
                     ?_Nrf24_getCRCLength 056A                  ??i2_Nrf24_configRegister 0504  
                 __end_of_Nrf24_dataReady 27E8                             __end_of_fputc 1604  
                           __end_of_fputs 2494                         ??_SPI1_Initialize 0560  
                      _DELAY_microseconds 2348                             __end_of_putch 2A02  
               ?_Nrf24_getRetransmitDelay 056A                 ?_Nrf24_setRetransmitDelay 056A  
                      _spi1_configuration FE8F              Nrf24_SetSpeedDataRates@value 056D  
                     ?_DELAY_microseconds 0560                       SPI_write_buff@bytes 0564  
        __end_of_INT2_SetInterruptHandler 29D8             Nrf24_print_byte_register@name 05AF  
                 __end_of_Nrf24_getStatus 2930                      ??_Nrf24_getCRCLength 056C  
                __end_of_TMR0_OverflowISR 26DE                                   ??_fputc 0564  
               __end_of_SYSTEM_Initialize 29CA                                   ??_fputs 056D  
                                 ??_putch 0560                            _rf24_datarates 0537  
                       ??i2_SPI_read_buff 0506                                __pbssBANK5 05E6  
                              __pbssBANK7 07C8                     Nrf24_dataReady@status 056F  
                      _DELAY_milliseconds 2612                     _INT0_InterruptHandler 0552  
                              __pnvCOMRAM 055A                     _TMR0_OverflowCallback 054F  
                   __end_of_Nrf24_getData 25A8                          _Nrf24_getPALevel 285C  
                         ??_SPI_read_buff 0565                                   IVTBASEH 045E  
                                 IVTBASEL 045D                                   IVTBASEU 045F  
                    ??_DELAY_microseconds 0562                   __end_ofi2_Nrf24_getData 26AC  
                          _rf24_crclength FE99                             sendGrid@index 056A  
                   __end_of_Nrf24_flushRx 2A00        Nrf24_print_address_register@buffer 05B4  
                             sendGrid@col 056C                       ?_DELAY_milliseconds 0560  
                             sendGrid@row 056E                                   ?_printf 059D  
                     Nrf24_isSend@timeout 056F                ??_INT1_SetInterruptHandler 0563  
                    Nrf24_getDataRate@dev 056A                      ??_DELAY_milliseconds 0562  
                                 _OSCCON1 00AD                                   _OSCCON3 00AF  
                     i2Nrf24_getData@data 0509                                   _SPI1CLK 008C  
                 __end_of_Nrf24_powerUpRx 2810                   __end_of_Nrf24_powerUpTx 2836  
                                 _SPI1RXB 0080                                   _SPI1TXB 0081  
              __end_of_Nrf24_readRegister 2612                                   _OSCTUNE 00B0  
                                 _SLRCONA 0403                                   _SLRCONB 040B  
                                 _SLRCONC 0413                                   _SLRCOND 041B  
                                 _SLRCONE 0423                                   _SLRCONF 042B  
             i2SPI1_ByteExchange@byteData 0501                                 ?_init_nrf 0501  
                  __end_of_rf24_crclength FEB7                                 ?_sendCell 0501  
                               ?_sendGrid 0565                                 ?_sendByte 0501  
                                 __Hparam 0000                              _Nrf24_config 2046  
                                 __Lparam 0000                              _Nrf24_isSend 19E6  
                      __end_of_SPI1_nrf24 FE7D                       _Nrf24_writeRegister 2506  
                          _SPI_write_buff 22EC                                   ___awdiv 1922  
                                 ___awmod 1B54                          ?_Nrf24_dataReady 056D  
                               ?_vfprintf 0595                        SPI_read_buff@bytes 0564  
                                 __pcinit 0E88                                   __ramtop 2600  
                                 __ptext0 12A2                                   __ptext1 10A0  
                                 __ptext2 20C8                                   __ptext3 28BE  
                                 __ptext4 0392                                   __ptext5 0D62  
                                 __ptext6 1AA0                                   __ptext7 26DE  
                                 __ptext8 1D54                                   __ptext9 2506  
                   read_prec_or_width@fmt 0560                          ___awmod@dividend 0560  
                                 _sendRGB 28BE                  ??_PIN_MANAGER_Initialize 0560  
                               _IOCCFbits 0417                          ?_Nrf24_getStatus 056A  
                               _IOCCNbits 0416            i2SPI1_ByteExchange@returnValue 0502  
                    ?_Nrf24_writeRegister 0566                             _received_data 0A00  
                                 main@buf 06C8                      end_of_initialization 0F92  
                _INT2_SetInterruptHandler 29CA                           Nrf24_config@dev 056D  
                               _PIR10bits 04B8                                   fputc@fp 0562  
                                 fputs@fp 056B                                ??_init_nrf 05C4  
                      _read_prec_or_width 146A                              ??i2_sendCell 0505  
                         Nrf24_isSend@dev 056D                                ??_sendCell 0564  
                            ??i2_sendGrid 0508                              ??i2_sendByte 0501  
                              ??_sendGrid 0567                                ??_sendByte 0560  
           Nrf24_print_address_register@i 05B9                          ?i2_Nrf24_getData 0507  
                  __end_of_SPI_write_buff 2348                         __end_of_vfpfcnvrt 0392  
                         _SPI1_BufferRead 0000                                 _SPI1TCNTH 0083  
                               _SPI1TCNTL 0082                                   postdec1 04E5  
                                 postdec2 04DD                       ?_read_prec_or_width 0560  
                                 postinc0 04EE                                   postinc1 04E6  
                                 postinc2 04DE                       i2Nrf24_getStatus@rv 050D  
                        vfpfcnvrt@convarg 058E                                main@F17920 0D00  
                              main@F17914 0E00                                main@F17916 0B00  
                              main@F17924 08C8                                main@F17918 0C00  
                              ??_vfprintf 059B                                 _SPI1_Open 1396  
                   _INT1_InterruptHandler 055D                                 _TMR0_Stop 0000  
                   Nrf24_printDetails@dev 05BB                       _SPI1_BufferExchange 0000  
                     Nrf24_getPALevel@dev 056A             _TMR0_OverflowCallbackRegister 0000  
                            ??_Nrf24_init 0563                                 _TRISCbits 04C8  
                         Nrf24_setRADDR@i 0578                              ??_Nrf24_send 0571  
                      __end_ofi2_sendCell 2288                           Nrf24_setTADDR@i 0578  
                        ?_Nrf24_powerUpRx 0564                          ?_Nrf24_powerUpTx 0564  
                      __end_ofi2_sendGrid 12A2                     ??_Nrf24_writeRegister 0569  
                      __end_ofi2_sendByte 084C                      ??_read_prec_or_width 0564  
               i2Nrf24_configRegister@reg 0504                    i2_Nrf24_configRegister 2960  
                 i2Nrf24_dataReady@status 0510                           _SPI1_Initialize 2948  
    __end_of_TMR0_DefaultOverflowCallback 2A04              _TMR0_DefaultOverflowCallback 2A02  
                         Nrf24_send@value 056F          __end_of_Nrf24_getRetransmitDelay 2916  
        __end_of_Nrf24_setRetransmitDelay 270E                                 i2_sendRGB 2978  
                         ?_SPI_write_buff 0562                            __end_of_Timer0 FE8F  
            __end_of_INTERRUPT_Initialize 25DE                        __end_of_Nrf24_init 276C  
                      __end_of_Nrf24_send 1F34                               _rf24_pa_dbm 09C8  
                           __pidataBANK11 1604                             __pidataBANK12 16CC  
                           __pidataBANK13 1794                                ?_SPI1_Open 0501  
                             vfpfcnvrt@ap 058A                               vfpfcnvrt@cp 0593  
                             vfpfcnvrt@fp 0586                        Nrf24_getStatus@dev 056A  
                           __pidataCOMRAM 2930                           i2_SPI_read_buff 2646  
                          __end_of_printf 27C0                  __end_of_Nrf24_getPALevel 287E  
                    i2Nrf24_dataReady@dev 050E                       start_initialization 0E88  
                             __end_of_abs 2572                               __end_of_pad 1D54  
                       ?_TMR0_OverflowISR 0501                                ivt0x8_base 0008  
                      ??_TMR0_OverflowISR 0501                      SPI_write_buff@buffer 0562  
                              ?i2_sendRGB 0502             ?_TMR0_DefaultOverflowCallback 0501  
                             vfprintf@fmt 0597                  ?_RC6_SetInterruptHandler 0560  
                          _Nrf24_setRADDR 1D54                            _Nrf24_setTADDR 1AA0  
    __end_of_Nrf24_print_address_register 1CB0              _Nrf24_print_address_register 1C04  
                             __pdataBANK8 08C8                               __pdataBANK9 09C8  
             i2Nrf24_configRegister@value 0503                             _nrf_interrupt 185C  
                                ??_printf 05AB                               __pbssBANK10 0A00  
                             __pbssBANK14 0E00                      Nrf24_getCRCLength@AA 056D  
                   i2SPI_read_buff@buffer 0503                             _SPI1_ByteRead 0000  
                            sendCell@cell 0564                               __pbssCOMRAM 054F  
                           __pcstackBANK5 0560                             __pcstackBANK6 0600  
                           __pcstackBANK7 0700                             __pcstackBANK8 0800  
                           __pcstackBANK9 0900                   __end_of_SPI1_Initialize 2960  
                        sendGrid@gridSize 0570                        Nrf24_powerUpRx@dev 0564  
                Nrf24_print_status@status 05AE                  ?_Nrf24_SetSpeedDataRates 056A  
                      Nrf24_powerUpTx@dev 0564                     _INT2_InterruptHandler 055A  
                      _Nrf24_readRegister 25DE                    __end_of_Nrf24_setRADDR 1DF4  
                  __end_of_Nrf24_setTADDR 1B54                    _PIN_MANAGER_Initialize 1DF4  
                            sendGrid@grid 0565                                 _dtoa$2119 057D  
                       Nrf24_getData@data 0568                     __end_of_SPI_read_buff 2506  
              __end_of_Nrf24_printDetails 0A6E                              sendByte@byte 0560  
                           __pmediumconst FE52                   __end_ofi2_SPI_read_buff 267A  
                                ?___awdiv 0560                                  ?___awmod 0560  
                       _Nrf24_getDataRate 23F6                  _Nrf24_getRetransmitDelay 28FA  
                _Nrf24_setRetransmitDelay 26DE                               ??_SPI1_Open 0560  
                     ?_Nrf24_readRegister 0566                            ?_nrf_interrupt 0501  
                      Nrf24_isSend@status 0579             ?_Nrf24_print_address_register 05AD  
                     Nrf24_getDataRate@dr 056D                        ?_Nrf24_getDataRate 056A  
            ??_INTERRUPT_InterruptManager 0535          Nrf24_print_address_register@name 05AF  
          DELAY_microseconds@microseconds 0560                ??_INT2_SetInterruptHandler 0563  
                                ?_sendRGB 0561                       ??_Nrf24_getDataRate 056C  
              __end_of_Nrf24_print_status 2046                       i2_SPI1_ByteExchange 276C  
                         SPI_write_buff@i 0565                      ??_Nrf24_readRegister 0569  
                    _INTERRUPT_Initialize 25A8                     Nrf24_readRegister@len 0568  
                   Nrf24_readRegister@reg 0569                          _CLOCK_Initialize 29A4  
                                _LATCbits 04C0           __end_of_RC6_SetInterruptHandler 29F4  
                                _LATFbits 04C3                 ?_INT1_SetInterruptHandler 0560  
                                _PIE0bits 049E                                  _PIE1bits 049F  
                                _PIE3bits 04A1                              _SPI1CON0bits 0084  
                             ??i2_sendRGB 0504                                  i2u120_48 26C8  
                                i2u120_49 26DC                                  i2u230_40 2790  
                                i2u302_40 1F4A                                  i2u230_41 278C  
                                i2u302_41 1F46                                  i2u119_40 26C2  
                                i2u303_40 1F58                                  i2u119_41 26BE  
                                i2u303_41 1F54                                  i2u240_40 077A  
                                i2u304_40 1F6A                                  i2u240_41 0776  
                                i2u304_41 1F66                           ?_Nrf24_setRADDR 056A  
                                i2u241_40 07C4                                  i2u305_40 1F78  
                                i2u241_41 07C0                                  i2u305_41 1F74  
                                i2u242_40 080E                                  i2u306_40 1F88  
                                i2u242_41 080A                                  i2u306_41 1F84  
                                i2u243_40 2676                                  i2u235_40 0608  
                                i2u307_40 1F9E                                  i2u243_41 2672  
                                i2u235_41 0604                                  i2u307_41 1F9A  
                                i2u236_40 0652                                  i2u236_41 064E  
                         ?_Nrf24_setTADDR 056A                                  i2u237_40 069C  
                                i2u308_48 1FA4                                  i2u237_41 0698  
                                i2u308_49 1FB8                                  i2u238_40 06E6  
                                i2u238_41 06E2                                  i2u255_40 2720  
                                i2u239_40 0730                                  i2u255_41 271C  
                                i2u239_41 072C                                  _PIR0bits 04AE  
                                _PIR1bits 04AF                                  i2u282_40 120E  
                                i2u282_41 120A                                  i2u283_40 1270  
                                i2u283_41 126C                                  _SPI1BAUD 0089  
                                i2u284_40 12A0                                  i2u292_40 1878  
                                i2u284_41 129C                                  i2u292_41 1874  
                                i2u285_40 2852                                  i2u293_40 18B0  
                                i2u285_41 284E                                  i2u293_41 18AC  
                                _PIR3bits 04B1                                  i2u294_40 18F0  
                                i2u294_41 18EC                                  i2u295_40 190C  
                                i2u295_41 1908                                  _SPI1CON0 0084  
                                _SPI1CON1 0085                                  _SPI1CON2 0086  
               __end_of_Nrf24_getDataRate 244C                                  _PIR6bits 04B4  
                    ?i2_SPI1_ByteExchange 0501            DELAY_milliseconds@milliseconds 0560  
            __end_of_Nrf24_configRegister 28FA            ??_TMR0_DefaultOverflowCallback 0501  
                               _vfpfcnvrt 0000                           i2sendGrid@index 050B  
                            _SPI1INTFbits 008A                         _SPI1_Deinitialize 0000  
             Nrf24_getRetransmitDelay@dev 056A                                 main@gridB 0900  
                               main@gridE 0600                                 main@gridG 0800  
                               main@gridR 0700           __end_of_Nrf24_SetSpeedDataRates 21AC  
                 ?i2_Nrf24_configRegister 0503               Nrf24_setRetransmitDelay@dev 056A  
             Nrf24_setRetransmitDelay@val 056C                          ?_SPI1_Initialize 0501  
                       Nrf24_getStatus@rv 056C                               _INTCON0bits 04D6  
                               copy_data0 0E9C                                 copy_data1 0EBC  
                               copy_data2 0EDC                                 copy_data3 0EFC  
                               copy_data4 0F1C                                 copy_data5 0F3C  
                   ?_INTERRUPT_Initialize 0501                Nrf24_SetSpeedDataRates@dev 056A  
              Nrf24_SetSpeedDataRates@val 056C                    Nrf24_writeRegister@len 0568  
                  Nrf24_writeRegister@reg 0569                          ??_SPI_write_buff 0565  
                           _Nrf24_getData 2572                                  __Hrparam 0000  
                   ??i2_SPI1_ByteExchange 0501                                vfprintf@ap 0599  
                                __Lrparam 0000                                vfprintf@fp 0595  
                           _Nrf24_flushRx 29F4                           ??_nrf_interrupt 0513  
                        ?i2_SPI_read_buff 0503                      i2SPI_read_buff@bytes 0505  
                              ?_vfpfcnvrt 0586               __end_of_Nrf24_writeRegister 253C  
          __end_ofi2_Nrf24_configRegister 2978                       SPI_read_buff@buffer 0562  
          ??_Nrf24_print_address_register 05B3                                _T0CON0bits 031A  
                       ?_Nrf24_getPALevel 056A                         i2_Nrf24_dataReady 2836  
                        Nrf24_getData@dev 0566                                  __pivt0x8 0008  
                          i2sendCell@cell 0505                                  __ptext10 084C  
                                __ptext11 1FC2                                  __ptext20 0A6E  
                                __ptext12 2288                                  __ptext21 1CB0  
                                __ptext13 1C04                                  __ptext30 23F6  
                                __ptext22 244C                                  __ptext14 2798  
                                __ptext31 21AC                                  __ptext23 1538  
                                __ptext15 23A0                                  __ptext40 2948  
                                __ptext32 273E                                  __ptext24 2A00  
                                __ptext16 0000                                  __ptext41 1DF4  
                                __ptext33 1396                                  __ptext25 253C  
                                __ptext17 0F98                                  __ptext50 2810  
                                __ptext42 25A8                                  __ptext34 2572  
                                __ptext26 1B54                                  __ptext18 0BEA  
                                __ptext51 19E6                                  __ptext43 29CA  
                                __ptext35 27C0                                  __ptext27 1922  
                                __ptext19 146A                                  __ptext60 185C  
                                __ptext52 27E8                                  __ptext44 29D8  
                                __ptext36 2046                                  __ptext28 28FA  
                                __ptext61 11A4                                  __ptext53 28DC  
                                __ptext45 29A4                                  __ptext37 29F4  
                                __ptext29 285C                                  __ptext70 2646  
                                __ptext62 221A                                  __ptext54 2916  
                                __ptext46 29E6                                  __ptext38 213A  
                                __ptext71 276C                                  __ptext63 2978  
                                __ptext55 25DE                                  __ptext47 1E94  
                                __ptext39 29B8                                  __ptext72 26AC  
                                __ptext64 05F8                                  __ptext56 24CE  
                                __ptext48 22EC                                  __ptext73 2A02  
                                __ptext65 267A                                  __ptext57 2494  
                                __ptext49 2348                                  __ptext66 2960  
                                __ptext58 2612                                  __ptext67 2836  
                                __ptext59 1F34                        ??_Nrf24_getPALevel 056C  
                                __ptext68 298E                                  __ptext69 270E  
                      ?i2_Nrf24_dataReady 050E           Nrf24_print_address_register@dev 05AD  
         Nrf24_print_address_register@reg 05B1           Nrf24_print_address_register@qty 05B2  
                                _init_nrf 0D62                   Nrf24_readRegister@value 0566  
                          ?_Nrf24_getData 0566                         i2_Nrf24_getStatus 298E  
                     ??i2_Nrf24_dataReady 0510                                  _sendCell 20C8  
                                _sendGrid 10A0                                  _sendByte 0392  
                          ?_Nrf24_flushRx 0562                        ?i2_Nrf24_getStatus 050B  
                           Nrf24_isSend@i 0575                                  isa$xinst 0000  
                           Nrf24_init@dev 0561                            i2sendGrid@grid 0506  
                                _vfprintf 23A0        __end_of_INTERRUPT_InterruptManager 1FC2  
              _INTERRUPT_InterruptManager 1F34                                 printf@fmt 059D  
                          i2sendByte@byte 0501                             Nrf24_send@dev 056D  
                     ??i2_Nrf24_getStatus 050D                            _received_index 0558  
            _INT1_DefaultInterruptHandler 0000              __end_ofi2_Nrf24_readRegister 273E  
              ?_Nrf24_print_byte_register 05AD                 __end_ofi2_Nrf24_dataReady 285C  
             _SPI1_ByteExchange$intlevel0 249E                    ??_INTERRUPT_Initialize 0563  
                 i2Nrf24_readRegister@len 0509                   i2Nrf24_readRegister@reg 050A  
                                sendRGB@b 0562                                  sendRGB@g 0561  
                                sendRGB@r 0563                      _Nrf24_configRegister 28DC  
                                intlevel2 0000                         ??_Nrf24_dataReady 056F  
               __end_ofi2_Nrf24_getStatus 29A4                   Nrf24_getDataRate@result 056C  
                 ?_PIN_MANAGER_Initialize 0501                 SPI1_ByteExchange@byteData 0560  
              ??_Nrf24_getRetransmitDelay 056C                ??_Nrf24_setRetransmitDelay 056D  
                        i2SPI_read_buff@i 0506                             ?_Nrf24_config 056D  
                           ?_Nrf24_isSend 056D                             i2sendGrid@col 050D  
                             _TMR0_Reload 0000                         ??_Nrf24_getStatus 056C  
                              _SPI1SDIPPS 026B                                _SPI1SCKPPS 026A  
                           i2sendGrid@row 050F                                  printf@ap 05AB  
                        _SPI1_BufferWrite 0000                      i2Nrf24_getStatus@dev 050B  
                             ??_vfpfcnvrt 058C                   Nrf24_printDetails@delay 05C1  
                __end_of_CLOCK_Initialize 29B8                                _SPI1_Close 0000  
            Nrf24_printDetails@retransmit 05C3                     Nrf24_getPALevel@level 056C  
                      _Nrf24_printDetails 084C                                _SPI1_nrf24 FE53  
       __end_of_Nrf24_print_byte_register 22EC                           _TMR0_Initialize 0000  
        __end_of_INT1_SetInterruptHandler 29E6                __end_of_Nrf24_getCRCLength 221A  
                       ??i2_Nrf24_getData 050B                                _TMR0_Start 0000  
                        Nrf24_flushRx@dev 0562                     ?_Nrf24_configRegister 0562  
                     ?_Nrf24_printDetails 05BB            __end_of_PIN_MANAGER_Initialize 1E94  
                         ??_Nrf24_getData 056A                      Nrf24_setRADDR@buffer 0571  
                        ??_Nrf24_setRADDR 056E                          ??_Nrf24_setTADDR 056E  
              __end_of_DELAY_microseconds 23A0                        i2sendGrid@gridSize 0511  
                         ??_Nrf24_flushRx 0564                   SPI1_Open@spiConfigIndex 0560  
                          ??_Nrf24_config 0571                            ??_Nrf24_isSend 0571  
                      _Nrf24_print_status 1FC2                         Nrf24_setRADDR@adr 056C  
                       Nrf24_setRADDR@dev 056A                __end_of_spi1_configuration FE99  
                       Nrf24_setRADDR@ret 0576  
