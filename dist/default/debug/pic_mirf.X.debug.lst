

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Mar 25 18:45:14 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK6,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK8,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	idataBANK9,global,class=CODE,space=0,delta=1,noexec
     8                           	psect	idataBANK11,global,class=CODE,space=0,delta=1,noexec
     9                           	psect	idataBANK12,global,class=CODE,space=0,delta=1,noexec
    10                           	psect	idataBANK13,global,class=CODE,space=0,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
    12                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK12,global,class=BANK12,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK13,global,class=BANK13,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK14,global,class=BANK14,space=1,delta=1,lowdata,noexec
    25                           	psect	cstackBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    27                           	psect	cstackBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    30                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    49                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    50                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    51                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=1
    52                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=1
    53                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=1
    54                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=1
    55                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=3
    56                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=3
    57                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    58                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    59                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=2
    60                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=2
    61                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   103                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   104                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   105                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   106                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   107   000000                     
   108                           ; Generated 18/12/2023 GMT
   109                           ; 
   110                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   111                           ; All rights reserved.
   112                           ; 
   113                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   114                           ; 
   115                           ; Redistribution and use in source and binary forms, with or without modification, are
   116                           ; permitted provided that the following conditions are met:
   117                           ; 
   118                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   119                           ;        conditions and the following disclaimer.
   120                           ; 
   121                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   122                           ;        of conditions and the following disclaimer in the documentation and/or other
   123                           ;        materials provided with the distribution. Publication is not required when
   124                           ;        this file is used in an embedded application.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC18F57Q43 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142   0004E0                     bsr             equ	1248
   143   0004E9                     fsr0            equ	1257
   144   0004EA                     fsr0h           equ	1258
   145   0004E9                     fsr0l           equ	1257
   146   0004E1                     fsr1            equ	1249
   147   0004E2                     fsr1h           equ	1250
   148   0004E1                     fsr1l           equ	1249
   149   0004D9                     fsr2            equ	1241
   150   0004DA                     fsr2h           equ	1242
   151   0004D9                     fsr2l           equ	1241
   152   0004EF                     indf0           equ	1263
   153   0004E7                     indf1           equ	1255
   154   0004DF                     indf2           equ	1247
   155   0004D6                     intcon          equ	1238
   156   000041                     nvmcon          equ	65
   157   0004F9                     pcl             equ	1273
   158   0004FA                     pclath          equ	1274
   159   0004FB                     pclatu          equ	1275
   160   0004EB                     plusw0          equ	1259
   161   0004E3                     plusw1          equ	1251
   162   0004DB                     plusw2          equ	1243
   163   0004ED                     postdec0        equ	1261
   164   0004E5                     postdec1        equ	1253
   165   0004DD                     postdec2        equ	1245
   166   0004EE                     postinc0        equ	1262
   167   0004E6                     postinc1        equ	1254
   168   0004DE                     postinc2        equ	1246
   169   0004EC                     preinc0         equ	1260
   170   0004E4                     preinc1         equ	1252
   171   0004DC                     preinc2         equ	1244
   172   0004F3                     prod            equ	1267
   173   0004F4                     prodh           equ	1268
   174   0004F3                     prodl           equ	1267
   175   0004D8                     status          equ	1240
   176   0004F5                     tablat          equ	1269
   177   0004F6                     tblptr          equ	1270
   178   0004F7                     tblptrh         equ	1271
   179   0004F6                     tblptrl         equ	1270
   180   0004F8                     tblptru         equ	1272
   181   0004FD                     tosl            equ	1277
   182   0004E8                     wreg            equ	1256
   183   000039                     CLKRCON         equ	57	;# 
   184   00003A                     CLKRCLK         equ	58	;# 
   185   000040                     NVMCON0         equ	64	;# 
   186   000041                     NVMCON1         equ	65	;# 
   187   000042                     NVMLOCK         equ	66	;# 
   188   000043                     NVMADR          equ	67	;# 
   189   000043                     NVMADRL         equ	67	;# 
   190   000044                     NVMADRH         equ	68	;# 
   191   000045                     NVMADRU         equ	69	;# 
   192   000046                     NVMDAT          equ	70	;# 
   193   000046                     NVMDATL         equ	70	;# 
   194   000047                     NVMDATH         equ	71	;# 
   195   000048                     VREGCON         equ	72	;# 
   196   000049                     BORCON          equ	73	;# 
   197   00004A                     HLVDCON0        equ	74	;# 
   198   00004B                     HLVDCON1        equ	75	;# 
   199   00004C                     ZCDCON          equ	76	;# 
   200   000060                     PMD0            equ	96	;# 
   201   000061                     PMD1            equ	97	;# 
   202   000063                     PMD3            equ	99	;# 
   203   000064                     PMD4            equ	100	;# 
   204   000065                     PMD5            equ	101	;# 
   205   000066                     PMD6            equ	102	;# 
   206   000067                     PMD7            equ	103	;# 
   207   000068                     PMD8            equ	104	;# 
   208   00006A                     MD1CON0         equ	106	;# 
   209   00006B                     MD1CON1         equ	107	;# 
   210   00006C                     MD1SRC          equ	108	;# 
   211   00006D                     MD1CARL         equ	109	;# 
   212   00006E                     MD1CARH         equ	110	;# 
   213   00006F                     CMOUT           equ	111	;# 
   214   000070                     CM1CON0         equ	112	;# 
   215   000071                     CM1CON1         equ	113	;# 
   216   000072                     CM1NCH          equ	114	;# 
   217   000073                     CM1PCH          equ	115	;# 
   218   000074                     CM2CON0         equ	116	;# 
   219   000075                     CM2CON1         equ	117	;# 
   220   000076                     CM2NCH          equ	118	;# 
   221   000077                     CM2PCH          equ	119	;# 
   222   000078                     WDTCON0         equ	120	;# 
   223   000079                     WDTCON1         equ	121	;# 
   224   00007A                     WDTPS           equ	122	;# 
   225   00007A                     WDTPSL          equ	122	;# 
   226   00007B                     WDTPSH          equ	123	;# 
   227   00007C                     WDTTMR          equ	124	;# 
   228   00007D                     DAC1DAT         equ	125	;# 
   229   00007D                     DAC1DATL        equ	125	;# 
   230   00007F                     DAC1CON         equ	127	;# 
   231   000080                     SPI1RXB         equ	128	;# 
   232   000081                     SPI1TXB         equ	129	;# 
   233   000082                     SPI1TCNT        equ	130	;# 
   234   000082                     SPI1TCNTL       equ	130	;# 
   235   000083                     SPI1TCNTH       equ	131	;# 
   236   000084                     SPI1CON0        equ	132	;# 
   237   000085                     SPI1CON1        equ	133	;# 
   238   000086                     SPI1CON2        equ	134	;# 
   239   000087                     SPI1STATUS      equ	135	;# 
   240   000088                     SPI1TWIDTH      equ	136	;# 
   241   000089                     SPI1BAUD        equ	137	;# 
   242   00008A                     SPI1INTF        equ	138	;# 
   243   00008B                     SPI1INTE        equ	139	;# 
   244   00008C                     SPI1CLK         equ	140	;# 
   245   00008D                     SPI2RXB         equ	141	;# 
   246   00008E                     SPI2TXB         equ	142	;# 
   247   00008F                     SPI2TCNT        equ	143	;# 
   248   00008F                     SPI2TCNTL       equ	143	;# 
   249   000090                     SPI2TCNTH       equ	144	;# 
   250   000091                     SPI2CON0        equ	145	;# 
   251   000092                     SPI2CON1        equ	146	;# 
   252   000093                     SPI2CON2        equ	147	;# 
   253   000094                     SPI2STATUS      equ	148	;# 
   254   000095                     SPI2TWIDTH      equ	149	;# 
   255   000096                     SPI2BAUD        equ	150	;# 
   256   000097                     SPI2INTF        equ	151	;# 
   257   000098                     SPI2INTE        equ	152	;# 
   258   000099                     SPI2CLK         equ	153	;# 
   259   0000AC                     ACTCON          equ	172	;# 
   260   0000AD                     OSCCON1         equ	173	;# 
   261   0000AE                     OSCCON2         equ	174	;# 
   262   0000AF                     OSCCON3         equ	175	;# 
   263   0000B0                     OSCTUNE         equ	176	;# 
   264   0000B1                     OSCFRQ          equ	177	;# 
   265   0000B1                     OSCFREQ         equ	177	;# 
   266   0000B2                     OSCSTAT         equ	178	;# 
   267   0000B2                     OSCSTAT1        equ	178	;# 
   268   0000B3                     OSCEN           equ	179	;# 
   269   0000B4                     PRLOCK          equ	180	;# 
   270   0000B5                     SCANPR          equ	181	;# 
   271   0000B6                     DMA1PR          equ	182	;# 
   272   0000B7                     DMA2PR          equ	183	;# 
   273   0000B8                     DMA3PR          equ	184	;# 
   274   0000B9                     DMA4PR          equ	185	;# 
   275   0000BA                     DMA5PR          equ	186	;# 
   276   0000BB                     DMA6PR          equ	187	;# 
   277   0000BE                     MAINPR          equ	190	;# 
   278   0000BF                     ISRPR           equ	191	;# 
   279   0000D4                     CLCDATA         equ	212	;# 
   280   0000D5                     CLCSELECT       equ	213	;# 
   281   0000D6                     CLCnCON         equ	214	;# 
   282   0000D7                     CLCnPOL         equ	215	;# 
   283   0000D8                     CLCnSEL0        equ	216	;# 
   284   0000D9                     CLCnSEL1        equ	217	;# 
   285   0000DA                     CLCnSEL2        equ	218	;# 
   286   0000DB                     CLCnSEL3        equ	219	;# 
   287   0000DC                     CLCnGLS0        equ	220	;# 
   288   0000DD                     CLCnGLS1        equ	221	;# 
   289   0000DE                     CLCnGLS2        equ	222	;# 
   290   0000DF                     CLCnGLS3        equ	223	;# 
   291   0000E8                     DMASELECT       equ	232	;# 
   292   0000E9                     DMAnBUF         equ	233	;# 
   293   0000EA                     DMAnDCNT        equ	234	;# 
   294   0000EA                     DMAnDCNTL       equ	234	;# 
   295   0000EB                     DMAnDCNTH       equ	235	;# 
   296   0000EC                     DMAnDPTR        equ	236	;# 
   297   0000EC                     DMAnDPTRL       equ	236	;# 
   298   0000ED                     DMAnDPTRH       equ	237	;# 
   299   0000EE                     DMAnDSZ         equ	238	;# 
   300   0000EE                     DMAnDSZL        equ	238	;# 
   301   0000EF                     DMAnDSZH        equ	239	;# 
   302   0000F0                     DMAnDSA         equ	240	;# 
   303   0000F0                     DMAnDSAL        equ	240	;# 
   304   0000F1                     DMAnDSAH        equ	241	;# 
   305   0000F2                     DMAnSCNT        equ	242	;# 
   306   0000F2                     DMAnSCNTL       equ	242	;# 
   307   0000F3                     DMAnSCNTH       equ	243	;# 
   308   0000F4                     DMAnSPTR        equ	244	;# 
   309   0000F4                     DMAnSPTRL       equ	244	;# 
   310   0000F5                     DMAnSPTRH       equ	245	;# 
   311   0000F6                     DMAnSPTRU       equ	246	;# 
   312   0000F7                     DMAnSSZ         equ	247	;# 
   313   0000F7                     DMAnSSZL        equ	247	;# 
   314   0000F8                     DMAnSSZH        equ	248	;# 
   315   0000F9                     DMAnSSA         equ	249	;# 
   316   0000F9                     DMAnSSAL        equ	249	;# 
   317   0000FA                     DMAnSSAH        equ	250	;# 
   318   0000FB                     DMAnSSAU        equ	251	;# 
   319   0000FC                     DMAnCON0        equ	252	;# 
   320   0000FD                     DMAnCON1        equ	253	;# 
   321   0000FE                     DMAnAIRQ        equ	254	;# 
   322   0000FF                     DMAnSIRQ        equ	255	;# 
   323   000200                     PPSLOCK         equ	512	;# 
   324   000201                     RA0PPS          equ	513	;# 
   325   000202                     RA1PPS          equ	514	;# 
   326   000203                     RA2PPS          equ	515	;# 
   327   000204                     RA3PPS          equ	516	;# 
   328   000205                     RA4PPS          equ	517	;# 
   329   000206                     RA5PPS          equ	518	;# 
   330   000207                     RA6PPS          equ	519	;# 
   331   000208                     RA7PPS          equ	520	;# 
   332   000209                     RB0PPS          equ	521	;# 
   333   00020A                     RB1PPS          equ	522	;# 
   334   00020B                     RB2PPS          equ	523	;# 
   335   00020C                     RB3PPS          equ	524	;# 
   336   00020D                     RB4PPS          equ	525	;# 
   337   00020E                     RB5PPS          equ	526	;# 
   338   00020F                     RB6PPS          equ	527	;# 
   339   000210                     RB7PPS          equ	528	;# 
   340   000211                     RC0PPS          equ	529	;# 
   341   000212                     RC1PPS          equ	530	;# 
   342   000213                     RC2PPS          equ	531	;# 
   343   000214                     RC3PPS          equ	532	;# 
   344   000215                     RC4PPS          equ	533	;# 
   345   000216                     RC5PPS          equ	534	;# 
   346   000217                     RC6PPS          equ	535	;# 
   347   000218                     RC7PPS          equ	536	;# 
   348   000219                     RD0PPS          equ	537	;# 
   349   00021A                     RD1PPS          equ	538	;# 
   350   00021B                     RD2PPS          equ	539	;# 
   351   00021C                     RD3PPS          equ	540	;# 
   352   00021D                     RD4PPS          equ	541	;# 
   353   00021E                     RD5PPS          equ	542	;# 
   354   00021F                     RD6PPS          equ	543	;# 
   355   000220                     RD7PPS          equ	544	;# 
   356   000221                     RE0PPS          equ	545	;# 
   357   000222                     RE1PPS          equ	546	;# 
   358   000223                     RE2PPS          equ	547	;# 
   359   000229                     RF0PPS          equ	553	;# 
   360   00022A                     RF1PPS          equ	554	;# 
   361   00022B                     RF2PPS          equ	555	;# 
   362   00022C                     RF3PPS          equ	556	;# 
   363   00022D                     RF4PPS          equ	557	;# 
   364   00022E                     RF5PPS          equ	558	;# 
   365   00022F                     RF6PPS          equ	559	;# 
   366   000230                     RF7PPS          equ	560	;# 
   367   00023E                     INT0PPS         equ	574	;# 
   368   00023F                     INT1PPS         equ	575	;# 
   369   000240                     INT2PPS         equ	576	;# 
   370   000241                     T0CKIPPS        equ	577	;# 
   371   000242                     T1CKIPPS        equ	578	;# 
   372   000243                     T1GPPS          equ	579	;# 
   373   000244                     T3CKIPPS        equ	580	;# 
   374   000245                     T3GPPS          equ	581	;# 
   375   000246                     T5CKIPPS        equ	582	;# 
   376   000247                     T5GPPS          equ	583	;# 
   377   000248                     T2INPPS         equ	584	;# 
   378   000249                     T4INPPS         equ	585	;# 
   379   00024A                     T6INPPS         equ	586	;# 
   380   00024F                     CCP1PPS         equ	591	;# 
   381   000250                     CCP2PPS         equ	592	;# 
   382   000251                     CCP3PPS         equ	593	;# 
   383   000253                     PWM1ERSPPS      equ	595	;# 
   384   000254                     PWM2ERSPPS      equ	596	;# 
   385   000255                     PWM3ERSPPS      equ	597	;# 
   386   000257                     PWMIN0PPS       equ	599	;# 
   387   000258                     PWMIN1PPS       equ	600	;# 
   388   000259                     SMT1WINPPS      equ	601	;# 
   389   00025A                     SMT1SIGPPS      equ	602	;# 
   390   00025B                     CWG1PPS         equ	603	;# 
   391   00025B                     CWG1INPPS       equ	603	;# 
   392   00025C                     CWG2PPS         equ	604	;# 
   393   00025C                     CWG2INPPS       equ	604	;# 
   394   00025D                     CWG3PPS         equ	605	;# 
   395   00025D                     CWG3INPPS       equ	605	;# 
   396   00025E                     MD1CARLPPS      equ	606	;# 
   397   00025E                     MDCARLPPS       equ	606	;# 
   398   00025F                     MD1CARHPPS      equ	607	;# 
   399   00025F                     MDCARHPPS       equ	607	;# 
   400   000260                     MD1SRCPPS       equ	608	;# 
   401   000260                     MDSRCPPS        equ	608	;# 
   402   000261                     CLCIN0PPS       equ	609	;# 
   403   000262                     CLCIN1PPS       equ	610	;# 
   404   000263                     CLCIN2PPS       equ	611	;# 
   405   000264                     CLCIN3PPS       equ	612	;# 
   406   000265                     CLCIN4PPS       equ	613	;# 
   407   000266                     CLCIN5PPS       equ	614	;# 
   408   000267                     CLCIN6PPS       equ	615	;# 
   409   000268                     CLCIN7PPS       equ	616	;# 
   410   000269                     ADACTPPS        equ	617	;# 
   411   00026A                     SPI1SCKPPS      equ	618	;# 
   412   00026B                     SPI1SDIPPS      equ	619	;# 
   413   00026C                     SPI1SSPPS       equ	620	;# 
   414   00026D                     SPI2SCKPPS      equ	621	;# 
   415   00026E                     SPI2SDIPPS      equ	622	;# 
   416   00026F                     SPI2SSPPS       equ	623	;# 
   417   000270                     I2C1SDAPPS      equ	624	;# 
   418   000271                     I2C1SCLPPS      equ	625	;# 
   419   000272                     U1RXPPS         equ	626	;# 
   420   000273                     U1CTSPPS        equ	627	;# 
   421   000274                     U2RXPPS         equ	628	;# 
   422   000275                     U2CTSPPS        equ	629	;# 
   423   000276                     U3RXPPS         equ	630	;# 
   424   000277                     U3CTSPPS        equ	631	;# 
   425   000278                     U4RXPPS         equ	632	;# 
   426   000279                     U4CTSPPS        equ	633	;# 
   427   00027A                     U5RXPPS         equ	634	;# 
   428   00027B                     U5CTSPPS        equ	635	;# 
   429   000286                     RC4I2C          equ	646	;# 
   430   000287                     RC3I2C          equ	647	;# 
   431   000288                     RB2I2C          equ	648	;# 
   432   000289                     RB1I2C          equ	649	;# 
   433   00028B                     I2C1RXB         equ	651	;# 
   434   00028C                     I2C1TXB         equ	652	;# 
   435   00028D                     I2C1CNT         equ	653	;# 
   436   00028E                     I2C1ADB0        equ	654	;# 
   437   00028F                     I2C1ADB1        equ	655	;# 
   438   000290                     I2C1ADR0        equ	656	;# 
   439   000291                     I2C1ADR1        equ	657	;# 
   440   000292                     I2C1ADR2        equ	658	;# 
   441   000293                     I2C1ADR3        equ	659	;# 
   442   000294                     I2C1CON0        equ	660	;# 
   443   000295                     I2C1CON1        equ	661	;# 
   444   000296                     I2C1CON2        equ	662	;# 
   445   000297                     I2C1ERR         equ	663	;# 
   446   000298                     I2C1STAT0       equ	664	;# 
   447   000299                     I2C1STAT1       equ	665	;# 
   448   00029A                     I2C1PIR         equ	666	;# 
   449   00029B                     I2C1PIE         equ	667	;# 
   450   00029C                     I2C1CLK         equ	668	;# 
   451   00029D                     I2C1BTO         equ	669	;# 
   452   0002A1                     U1RXB           equ	673	;# 
   453   0002A1                     U1RXBL          equ	673	;# 
   454   0002A2                     U1RXCHK         equ	674	;# 
   455   0002A3                     U1TXB           equ	675	;# 
   456   0002A3                     U1TXBL          equ	675	;# 
   457   0002A4                     U1TXCHK         equ	676	;# 
   458   0002A5                     U1P1            equ	677	;# 
   459   0002A5                     U1P1L           equ	677	;# 
   460   0002A6                     U1P1H           equ	678	;# 
   461   0002A7                     U1P2            equ	679	;# 
   462   0002A7                     U1P2L           equ	679	;# 
   463   0002A8                     U1P2H           equ	680	;# 
   464   0002A9                     U1P3            equ	681	;# 
   465   0002A9                     U1P3L           equ	681	;# 
   466   0002AA                     U1P3H           equ	682	;# 
   467   0002AB                     U1CON0          equ	683	;# 
   468   0002AC                     U1CON1          equ	684	;# 
   469   0002AD                     U1CON2          equ	685	;# 
   470   0002AE                     U1BRG           equ	686	;# 
   471   0002AE                     U1BRGL          equ	686	;# 
   472   0002AF                     U1BRGH          equ	687	;# 
   473   0002B0                     U1FIFO          equ	688	;# 
   474   0002B1                     U1UIR           equ	689	;# 
   475   0002B2                     U1ERRIR         equ	690	;# 
   476   0002B3                     U1ERRIE         equ	691	;# 
   477   0002B4                     U2RXB           equ	692	;# 
   478   0002B4                     U2RXBL          equ	692	;# 
   479   0002B6                     U2TXB           equ	694	;# 
   480   0002B6                     U2TXBL          equ	694	;# 
   481   0002B8                     U2P1            equ	696	;# 
   482   0002B8                     U2P1L           equ	696	;# 
   483   0002BA                     U2P2            equ	698	;# 
   484   0002BA                     U2P2L           equ	698	;# 
   485   0002BC                     U2P3            equ	700	;# 
   486   0002BC                     U2P3L           equ	700	;# 
   487   0002BE                     U2CON0          equ	702	;# 
   488   0002BF                     U2CON1          equ	703	;# 
   489   0002C0                     U2CON2          equ	704	;# 
   490   0002C1                     U2BRG           equ	705	;# 
   491   0002C1                     U2BRGL          equ	705	;# 
   492   0002C2                     U2BRGH          equ	706	;# 
   493   0002C3                     U2FIFO          equ	707	;# 
   494   0002C4                     U2UIR           equ	708	;# 
   495   0002C5                     U2ERRIR         equ	709	;# 
   496   0002C6                     U2ERRIE         equ	710	;# 
   497   0002C7                     U3RXB           equ	711	;# 
   498   0002C7                     U3RXBL          equ	711	;# 
   499   0002C9                     U3TXB           equ	713	;# 
   500   0002C9                     U3TXBL          equ	713	;# 
   501   0002CB                     U3P1            equ	715	;# 
   502   0002CB                     U3P1L           equ	715	;# 
   503   0002CD                     U3P2            equ	717	;# 
   504   0002CD                     U3P2L           equ	717	;# 
   505   0002CF                     U3P3            equ	719	;# 
   506   0002CF                     U3P3L           equ	719	;# 
   507   0002D1                     U3CON0          equ	721	;# 
   508   0002D2                     U3CON1          equ	722	;# 
   509   0002D3                     U3CON2          equ	723	;# 
   510   0002D4                     U3BRG           equ	724	;# 
   511   0002D4                     U3BRGL          equ	724	;# 
   512   0002D5                     U3BRGH          equ	725	;# 
   513   0002D6                     U3FIFO          equ	726	;# 
   514   0002D7                     U3UIR           equ	727	;# 
   515   0002D8                     U3ERRIR         equ	728	;# 
   516   0002D9                     U3ERRIE         equ	729	;# 
   517   0002DA                     U4RXB           equ	730	;# 
   518   0002DA                     U4RXBL          equ	730	;# 
   519   0002DC                     U4TXB           equ	732	;# 
   520   0002DC                     U4TXBL          equ	732	;# 
   521   0002DE                     U4P1            equ	734	;# 
   522   0002DE                     U4P1L           equ	734	;# 
   523   0002E0                     U4P2            equ	736	;# 
   524   0002E0                     U4P2L           equ	736	;# 
   525   0002E2                     U4P3            equ	738	;# 
   526   0002E2                     U4P3L           equ	738	;# 
   527   0002E4                     U4CON0          equ	740	;# 
   528   0002E5                     U4CON1          equ	741	;# 
   529   0002E6                     U4CON2          equ	742	;# 
   530   0002E7                     U4BRG           equ	743	;# 
   531   0002E7                     U4BRGL          equ	743	;# 
   532   0002E8                     U4BRGH          equ	744	;# 
   533   0002E9                     U4FIFO          equ	745	;# 
   534   0002EA                     U4UIR           equ	746	;# 
   535   0002EB                     U4ERRIR         equ	747	;# 
   536   0002EC                     U4ERRIE         equ	748	;# 
   537   0002ED                     U5RXB           equ	749	;# 
   538   0002ED                     U5RXBL          equ	749	;# 
   539   0002EF                     U5TXB           equ	751	;# 
   540   0002EF                     U5TXBL          equ	751	;# 
   541   0002F1                     U5P1            equ	753	;# 
   542   0002F1                     U5P1L           equ	753	;# 
   543   0002F3                     U5P2            equ	755	;# 
   544   0002F3                     U5P2L           equ	755	;# 
   545   0002F5                     U5P3            equ	757	;# 
   546   0002F5                     U5P3L           equ	757	;# 
   547   0002F7                     U5CON0          equ	759	;# 
   548   0002F8                     U5CON1          equ	760	;# 
   549   0002F9                     U5CON2          equ	761	;# 
   550   0002FA                     U5BRG           equ	762	;# 
   551   0002FA                     U5BRGL          equ	762	;# 
   552   0002FB                     U5BRGH          equ	763	;# 
   553   0002FC                     U5FIFO          equ	764	;# 
   554   0002FD                     U5UIR           equ	765	;# 
   555   0002FE                     U5ERRIR         equ	766	;# 
   556   0002FF                     U5ERRIE         equ	767	;# 
   557   000300                     SMT1TMR         equ	768	;# 
   558   000300                     SMT1TMRL        equ	768	;# 
   559   000301                     SMT1TMRH        equ	769	;# 
   560   000302                     SMT1TMRU        equ	770	;# 
   561   000303                     SMT1CPR         equ	771	;# 
   562   000303                     SMT1CPRL        equ	771	;# 
   563   000304                     SMT1CPRH        equ	772	;# 
   564   000305                     SMT1CPRU        equ	773	;# 
   565   000306                     SMT1CPW         equ	774	;# 
   566   000306                     SMT1CPWL        equ	774	;# 
   567   000307                     SMT1CPWH        equ	775	;# 
   568   000308                     SMT1CPWU        equ	776	;# 
   569   000309                     SMT1PR          equ	777	;# 
   570   000309                     SMT1PRL         equ	777	;# 
   571   00030A                     SMT1PRH         equ	778	;# 
   572   00030B                     SMT1PRU         equ	779	;# 
   573   00030C                     SMT1CON0        equ	780	;# 
   574   00030D                     SMT1CON1        equ	781	;# 
   575   00030E                     SMT1STAT        equ	782	;# 
   576   00030F                     SMT1CLK         equ	783	;# 
   577   000310                     SMT1SIG         equ	784	;# 
   578   000311                     SMT1WIN         equ	785	;# 
   579   000318                     TMR0L           equ	792	;# 
   580   000318                     TMR0            equ	792	;# 
   581   000319                     TMR0H           equ	793	;# 
   582   000319                     PR0             equ	793	;# 
   583   00031A                     T0CON0          equ	794	;# 
   584   00031B                     T0CON1          equ	795	;# 
   585   00031C                     TMR1            equ	796	;# 
   586   00031C                     TMR1L           equ	796	;# 
   587   00031D                     TMR1H           equ	797	;# 
   588   00031E                     T1CON           equ	798	;# 
   589   00031E                     TMR1CON         equ	798	;# 
   590   00031F                     T1GCON          equ	799	;# 
   591   00031F                     TMR1GCON        equ	799	;# 
   592   000320                     T1GATE          equ	800	;# 
   593   000320                     TMR1GATE        equ	800	;# 
   594   000321                     T1CLK           equ	801	;# 
   595   000321                     TMR1CLK         equ	801	;# 
   596   000321                     PR1             equ	801	;# 
   597   000322                     T2TMR           equ	802	;# 
   598   000322                     TMR2            equ	802	;# 
   599   000323                     T2PR            equ	803	;# 
   600   000323                     PR2             equ	803	;# 
   601   000324                     T2CON           equ	804	;# 
   602   000325                     T2HLT           equ	805	;# 
   603   000326                     T2CLKCON        equ	806	;# 
   604   000326                     T2CLK           equ	806	;# 
   605   000327                     T2RST           equ	807	;# 
   606   000328                     TMR3            equ	808	;# 
   607   000328                     TMR3L           equ	808	;# 
   608   000329                     TMR3H           equ	809	;# 
   609   00032A                     T3CON           equ	810	;# 
   610   00032A                     TMR3CON         equ	810	;# 
   611   00032B                     T3GCON          equ	811	;# 
   612   00032B                     TMR3GCON        equ	811	;# 
   613   00032C                     T3GATE          equ	812	;# 
   614   00032C                     TMR3GATE        equ	812	;# 
   615   00032D                     T3CLK           equ	813	;# 
   616   00032D                     TMR3CLK         equ	813	;# 
   617   00032D                     PR3             equ	813	;# 
   618   00032E                     T4TMR           equ	814	;# 
   619   00032E                     TMR4            equ	814	;# 
   620   00032F                     T4PR            equ	815	;# 
   621   00032F                     PR4             equ	815	;# 
   622   000330                     T4CON           equ	816	;# 
   623   000331                     T4HLT           equ	817	;# 
   624   000332                     T4CLKCON        equ	818	;# 
   625   000332                     T4CLK           equ	818	;# 
   626   000333                     T4RST           equ	819	;# 
   627   000334                     TMR5            equ	820	;# 
   628   000334                     TMR5L           equ	820	;# 
   629   000335                     TMR5H           equ	821	;# 
   630   000336                     T5CON           equ	822	;# 
   631   000336                     TMR5CON         equ	822	;# 
   632   000337                     T5GCON          equ	823	;# 
   633   000337                     TMR5GCON        equ	823	;# 
   634   000338                     T5GATE          equ	824	;# 
   635   000338                     TMR5GATE        equ	824	;# 
   636   000339                     T5CLK           equ	825	;# 
   637   000339                     TMR5CLK         equ	825	;# 
   638   000339                     PR5             equ	825	;# 
   639   00033A                     T6TMR           equ	826	;# 
   640   00033A                     TMR6            equ	826	;# 
   641   00033B                     T6PR            equ	827	;# 
   642   00033B                     PR6             equ	827	;# 
   643   00033C                     T6CON           equ	828	;# 
   644   00033D                     T6HLT           equ	829	;# 
   645   00033E                     T6CLKCON        equ	830	;# 
   646   00033E                     T6CLK           equ	830	;# 
   647   00033F                     T6RST           equ	831	;# 
   648   000340                     CCPR1           equ	832	;# 
   649   000340                     CCPR1L          equ	832	;# 
   650   000341                     CCPR1H          equ	833	;# 
   651   000342                     CCP1CON         equ	834	;# 
   652   000343                     CCP1CAP         equ	835	;# 
   653   000344                     CCPR2           equ	836	;# 
   654   000344                     CCPR2L          equ	836	;# 
   655   000345                     CCPR2H          equ	837	;# 
   656   000346                     CCP2CON         equ	838	;# 
   657   000347                     CCP2CAP         equ	839	;# 
   658   000348                     CCPR3           equ	840	;# 
   659   000348                     CCPR3L          equ	840	;# 
   660   000349                     CCPR3H          equ	841	;# 
   661   00034A                     CCP3CON         equ	842	;# 
   662   00034B                     CCP3CAP         equ	843	;# 
   663   00034C                     CCPTMRS0        equ	844	;# 
   664   00034F                     CRCDATA         equ	847	;# 
   665   00034F                     CRCDATL         equ	847	;# 
   666   000350                     CRCDATH         equ	848	;# 
   667   000351                     CRCACC          equ	849	;# 
   668   000351                     CRCACCL         equ	849	;# 
   669   000352                     CRCACCH         equ	850	;# 
   670   000353                     CRCSHFT         equ	851	;# 
   671   000353                     CRCSHIFTL       equ	851	;# 
   672   000354                     CRCSHIFTH       equ	852	;# 
   673   000355                     CRCXOR          equ	853	;# 
   674   000355                     CRCXORL         equ	853	;# 
   675   000356                     CRCXORH         equ	854	;# 
   676   000357                     CRCCON0         equ	855	;# 
   677   000358                     CRCCON1         equ	856	;# 
   678   00035A                     SCANLADR        equ	858	;# 
   679   00035A                     SCANLADRL       equ	858	;# 
   680   00035B                     SCANLADRH       equ	859	;# 
   681   00035C                     SCANLADRU       equ	860	;# 
   682   00035D                     SCANHADR        equ	861	;# 
   683   00035D                     SCANHADRL       equ	861	;# 
   684   00035E                     SCANHADRH       equ	862	;# 
   685   00035F                     SCANHADRU       equ	863	;# 
   686   000360                     SCANCON0        equ	864	;# 
   687   000361                     SCANTRIG        equ	865	;# 
   688   000362                     IPR0            equ	866	;# 
   689   000363                     IPR1            equ	867	;# 
   690   000364                     IPR2            equ	868	;# 
   691   000365                     IPR3            equ	869	;# 
   692   000366                     IPR4            equ	870	;# 
   693   000367                     IPR5            equ	871	;# 
   694   000368                     IPR6            equ	872	;# 
   695   000369                     IPR7            equ	873	;# 
   696   00036A                     IPR8            equ	874	;# 
   697   00036B                     IPR9            equ	875	;# 
   698   00036C                     IPR10           equ	876	;# 
   699   00036D                     IPR11           equ	877	;# 
   700   00036E                     IPR12           equ	878	;# 
   701   00036F                     IPR13           equ	879	;# 
   702   000370                     IPR14           equ	880	;# 
   703   000371                     IPR15           equ	881	;# 
   704   000373                     STATUS_CSHAD    equ	883	;# 
   705   000374                     WREG_CSHAD      equ	884	;# 
   706   000375                     BSR_CSHAD       equ	885	;# 
   707   000376                     SHADCON         equ	886	;# 
   708   000377                     STATUS_SHAD     equ	887	;# 
   709   000378                     WREG_SHAD       equ	888	;# 
   710   000379                     BSR_SHAD        equ	889	;# 
   711   00037A                     PCLATH_SHAD     equ	890	;# 
   712   00037B                     PCLATU_SHAD     equ	891	;# 
   713   00037C                     FSR0SH          equ	892	;# 
   714   00037C                     FSR0L_SHAD      equ	892	;# 
   715   00037D                     FSR0H_SHAD      equ	893	;# 
   716   00037E                     FSR1SH          equ	894	;# 
   717   00037E                     FSR1L_SHAD      equ	894	;# 
   718   00037F                     FSR1H_SHAD      equ	895	;# 
   719   000380                     FSR2SH          equ	896	;# 
   720   000380                     FSR2L_SHAD      equ	896	;# 
   721   000381                     FSR2H_SHAD      equ	897	;# 
   722   000382                     PRODSH          equ	898	;# 
   723   000382                     PRODL_SHAD      equ	898	;# 
   724   000383                     PRODH_SHAD      equ	899	;# 
   725   0003BC                     CWG1CLK         equ	956	;# 
   726   0003BC                     CWG1CLKCON      equ	956	;# 
   727   0003BD                     CWG1ISM         equ	957	;# 
   728   0003BD                     CWG1DAT         equ	957	;# 
   729   0003BE                     CWG1DBR         equ	958	;# 
   730   0003BF                     CWG1DBF         equ	959	;# 
   731   0003C0                     CWG1CON0        equ	960	;# 
   732   0003C1                     CWG1CON1        equ	961	;# 
   733   0003C2                     CWG1AS0         equ	962	;# 
   734   0003C3                     CWG1AS1         equ	963	;# 
   735   0003C4                     CWG1STR         equ	964	;# 
   736   0003C5                     CWG2CLK         equ	965	;# 
   737   0003C5                     CWG2CLKCON      equ	965	;# 
   738   0003C6                     CWG2ISM         equ	966	;# 
   739   0003C6                     CWG2DAT         equ	966	;# 
   740   0003C7                     CWG2DBR         equ	967	;# 
   741   0003C8                     CWG2DBF         equ	968	;# 
   742   0003C9                     CWG2CON0        equ	969	;# 
   743   0003CA                     CWG2CON1        equ	970	;# 
   744   0003CB                     CWG2AS0         equ	971	;# 
   745   0003CC                     CWG2AS1         equ	972	;# 
   746   0003CD                     CWG2STR         equ	973	;# 
   747   0003CE                     CWG3CLK         equ	974	;# 
   748   0003CE                     CWG3CLKCON      equ	974	;# 
   749   0003CF                     CWG3ISM         equ	975	;# 
   750   0003CF                     CWG3DAT         equ	975	;# 
   751   0003D0                     CWG3DBR         equ	976	;# 
   752   0003D1                     CWG3DBF         equ	977	;# 
   753   0003D2                     CWG3CON0        equ	978	;# 
   754   0003D3                     CWG3CON1        equ	979	;# 
   755   0003D4                     CWG3AS0         equ	980	;# 
   756   0003D5                     CWG3AS1         equ	981	;# 
   757   0003D6                     CWG3STR         equ	982	;# 
   758   0003D7                     FVRCON          equ	983	;# 
   759   0003D8                     ADCPCON         equ	984	;# 
   760   0003D8                     ADCP            equ	984	;# 
   761   0003D9                     ADLTH           equ	985	;# 
   762   0003D9                     ADLTHL          equ	985	;# 
   763   0003DA                     ADLTHH          equ	986	;# 
   764   0003DB                     ADUTH           equ	987	;# 
   765   0003DB                     ADUTHL          equ	987	;# 
   766   0003DC                     ADUTHH          equ	988	;# 
   767   0003DD                     ADERR           equ	989	;# 
   768   0003DD                     ADERRL          equ	989	;# 
   769   0003DE                     ADERRH          equ	990	;# 
   770   0003DF                     ADSTPT          equ	991	;# 
   771   0003DF                     ADSTPTL         equ	991	;# 
   772   0003E0                     ADSTPTH         equ	992	;# 
   773   0003E1                     ADFLTR          equ	993	;# 
   774   0003E1                     ADFLTRL         equ	993	;# 
   775   0003E2                     ADFLTRH         equ	994	;# 
   776   0003E3                     ADACC           equ	995	;# 
   777   0003E3                     ADACCL          equ	995	;# 
   778   0003E4                     ADACCH          equ	996	;# 
   779   0003E5                     ADACCU          equ	997	;# 
   780   0003E6                     ADCNT           equ	998	;# 
   781   0003E7                     ADRPT           equ	999	;# 
   782   0003E8                     ADPREV          equ	1000	;# 
   783   0003E8                     ADPREVL         equ	1000	;# 
   784   0003E9                     ADPREVH         equ	1001	;# 
   785   0003EA                     ADRES           equ	1002	;# 
   786   0003EA                     ADRESL          equ	1002	;# 
   787   0003EB                     ADRESH          equ	1003	;# 
   788   0003EC                     ADPCH           equ	1004	;# 
   789   0003EE                     ADACQ           equ	1006	;# 
   790   0003EE                     ADACQL          equ	1006	;# 
   791   0003EF                     ADACQH          equ	1007	;# 
   792   0003F0                     ADCAP           equ	1008	;# 
   793   0003F1                     ADPRE           equ	1009	;# 
   794   0003F1                     ADPREL          equ	1009	;# 
   795   0003F2                     ADPREH          equ	1010	;# 
   796   0003F3                     ADCON0          equ	1011	;# 
   797   0003F4                     ADCON1          equ	1012	;# 
   798   0003F5                     ADCON2          equ	1013	;# 
   799   0003F6                     ADCON3          equ	1014	;# 
   800   0003F7                     ADSTAT          equ	1015	;# 
   801   0003F8                     ADREF           equ	1016	;# 
   802   0003F9                     ADACT           equ	1017	;# 
   803   0003FA                     ADCLK           equ	1018	;# 
   804   000400                     ANSELA          equ	1024	;# 
   805   000401                     WPUA            equ	1025	;# 
   806   000402                     ODCONA          equ	1026	;# 
   807   000403                     SLRCONA         equ	1027	;# 
   808   000404                     INLVLA          equ	1028	;# 
   809   000405                     IOCAP           equ	1029	;# 
   810   000406                     IOCAN           equ	1030	;# 
   811   000407                     IOCAF           equ	1031	;# 
   812   000408                     ANSELB          equ	1032	;# 
   813   000409                     WPUB            equ	1033	;# 
   814   00040A                     ODCONB          equ	1034	;# 
   815   00040B                     SLRCONB         equ	1035	;# 
   816   00040C                     INLVLB          equ	1036	;# 
   817   00040D                     IOCBP           equ	1037	;# 
   818   00040E                     IOCBN           equ	1038	;# 
   819   00040F                     IOCBF           equ	1039	;# 
   820   000410                     ANSELC          equ	1040	;# 
   821   000411                     WPUC            equ	1041	;# 
   822   000412                     ODCONC          equ	1042	;# 
   823   000413                     SLRCONC         equ	1043	;# 
   824   000414                     INLVLC          equ	1044	;# 
   825   000415                     IOCCP           equ	1045	;# 
   826   000416                     IOCCN           equ	1046	;# 
   827   000417                     IOCCF           equ	1047	;# 
   828   000418                     ANSELD          equ	1048	;# 
   829   000419                     WPUD            equ	1049	;# 
   830   00041A                     ODCOND          equ	1050	;# 
   831   00041B                     SLRCOND         equ	1051	;# 
   832   00041C                     INLVLD          equ	1052	;# 
   833   000420                     ANSELE          equ	1056	;# 
   834   000421                     WPUE            equ	1057	;# 
   835   000422                     ODCONE          equ	1058	;# 
   836   000423                     SLRCONE         equ	1059	;# 
   837   000424                     INLVLE          equ	1060	;# 
   838   000425                     IOCEP           equ	1061	;# 
   839   000426                     IOCEN           equ	1062	;# 
   840   000427                     IOCEF           equ	1063	;# 
   841   000428                     ANSELF          equ	1064	;# 
   842   000429                     WPUF            equ	1065	;# 
   843   00042A                     ODCONF          equ	1066	;# 
   844   00042B                     SLRCONF         equ	1067	;# 
   845   00042C                     INLVLF          equ	1068	;# 
   846   000440                     NCO1ACC         equ	1088	;# 
   847   000440                     NCO1ACCL        equ	1088	;# 
   848   000441                     NCO1ACCH        equ	1089	;# 
   849   000442                     NCO1ACCU        equ	1090	;# 
   850   000443                     NCO1INC         equ	1091	;# 
   851   000443                     NCO1INCL        equ	1091	;# 
   852   000444                     NCO1INCH        equ	1092	;# 
   853   000445                     NCO1INCU        equ	1093	;# 
   854   000446                     NCO1CON         equ	1094	;# 
   855   000447                     NCO1CLK         equ	1095	;# 
   856   000448                     NCO2ACC         equ	1096	;# 
   857   000448                     NCO2ACCL        equ	1096	;# 
   858   000449                     NCO2ACCH        equ	1097	;# 
   859   00044A                     NCO2ACCU        equ	1098	;# 
   860   00044B                     NCO2INC         equ	1099	;# 
   861   00044B                     NCO2INCL        equ	1099	;# 
   862   00044C                     NCO2INCH        equ	1100	;# 
   863   00044D                     NCO2INCU        equ	1101	;# 
   864   00044E                     NCO2CON         equ	1102	;# 
   865   00044F                     NCO2CLK         equ	1103	;# 
   866   000450                     NCO3ACC         equ	1104	;# 
   867   000450                     NCO3ACCL        equ	1104	;# 
   868   000451                     NCO3ACCH        equ	1105	;# 
   869   000452                     NCO3ACCU        equ	1106	;# 
   870   000453                     NCO3INC         equ	1107	;# 
   871   000453                     NCO3INCL        equ	1107	;# 
   872   000454                     NCO3INCH        equ	1108	;# 
   873   000455                     NCO3INCU        equ	1109	;# 
   874   000456                     NCO3CON         equ	1110	;# 
   875   000457                     NCO3CLK         equ	1111	;# 
   876   000459                     IVTLOCK         equ	1113	;# 
   877   00045A                     IVTAD           equ	1114	;# 
   878   00045A                     IVTADL          equ	1114	;# 
   879   00045B                     IVTADH          equ	1115	;# 
   880   00045C                     IVTADU          equ	1116	;# 
   881   00045D                     IVTBASE         equ	1117	;# 
   882   00045D                     IVTBASEL        equ	1117	;# 
   883   00045E                     IVTBASEH        equ	1118	;# 
   884   00045F                     IVTBASEU        equ	1119	;# 
   885   000460                     PWM1ERS         equ	1120	;# 
   886   000461                     PWM1CLK         equ	1121	;# 
   887   000462                     PWM1LDS         equ	1122	;# 
   888   000463                     PWM1PR          equ	1123	;# 
   889   000463                     PWM1PRL         equ	1123	;# 
   890   000464                     PWM1PRH         equ	1124	;# 
   891   000465                     PWM1CPRE        equ	1125	;# 
   892   000466                     PWM1PIPOS       equ	1126	;# 
   893   000467                     PWM1GIR         equ	1127	;# 
   894   000468                     PWM1GIE         equ	1128	;# 
   895   000469                     PWM1CON         equ	1129	;# 
   896   00046A                     PWM1S1CFG       equ	1130	;# 
   897   00046B                     PWM1S1P1        equ	1131	;# 
   898   00046B                     PWM1S1P1L       equ	1131	;# 
   899   00046C                     PWM1S1P1H       equ	1132	;# 
   900   00046D                     PWM1S1P2        equ	1133	;# 
   901   00046D                     PWM1S1P2L       equ	1133	;# 
   902   00046E                     PWM1S1P2H       equ	1134	;# 
   903   00046F                     PWM2ERS         equ	1135	;# 
   904   000470                     PWM2CLK         equ	1136	;# 
   905   000471                     PWM2LDS         equ	1137	;# 
   906   000472                     PWM2PR          equ	1138	;# 
   907   000472                     PWM2PRL         equ	1138	;# 
   908   000473                     PWM2PRH         equ	1139	;# 
   909   000474                     PWM2CPRE        equ	1140	;# 
   910   000475                     PWM2PIPOS       equ	1141	;# 
   911   000476                     PWM2GIR         equ	1142	;# 
   912   000477                     PWM2GIE         equ	1143	;# 
   913   000478                     PWM2CON         equ	1144	;# 
   914   000479                     PWM2S1CFG       equ	1145	;# 
   915   00047A                     PWM2S1P1        equ	1146	;# 
   916   00047A                     PWM2S1P1L       equ	1146	;# 
   917   00047B                     PWM2S1P1H       equ	1147	;# 
   918   00047C                     PWM2S1P2        equ	1148	;# 
   919   00047C                     PWM2S1P2L       equ	1148	;# 
   920   00047D                     PWM2S1P2H       equ	1149	;# 
   921   00047E                     PWM3ERS         equ	1150	;# 
   922   00047F                     PWM3CLK         equ	1151	;# 
   923   000480                     PWM3LDS         equ	1152	;# 
   924   000481                     PWM3PR          equ	1153	;# 
   925   000481                     PWM3PRL         equ	1153	;# 
   926   000482                     PWM3PRH         equ	1154	;# 
   927   000483                     PWM3CPRE        equ	1155	;# 
   928   000484                     PWM3PIPOS       equ	1156	;# 
   929   000485                     PWM3GIR         equ	1157	;# 
   930   000486                     PWM3GIE         equ	1158	;# 
   931   000487                     PWM3CON         equ	1159	;# 
   932   000488                     PWM3S1CFG       equ	1160	;# 
   933   000489                     PWM3S1P1        equ	1161	;# 
   934   000489                     PWM3S1P1L       equ	1161	;# 
   935   00048A                     PWM3S1P1H       equ	1162	;# 
   936   00048B                     PWM3S1P2        equ	1163	;# 
   937   00048B                     PWM3S1P2L       equ	1163	;# 
   938   00048C                     PWM3S1P2H       equ	1164	;# 
   939   00049C                     PWMLOAD         equ	1180	;# 
   940   00049D                     PWMEN           equ	1181	;# 
   941   00049E                     PIE0            equ	1182	;# 
   942   00049F                     PIE1            equ	1183	;# 
   943   0004A0                     PIE2            equ	1184	;# 
   944   0004A1                     PIE3            equ	1185	;# 
   945   0004A2                     PIE4            equ	1186	;# 
   946   0004A3                     PIE5            equ	1187	;# 
   947   0004A4                     PIE6            equ	1188	;# 
   948   0004A5                     PIE7            equ	1189	;# 
   949   0004A6                     PIE8            equ	1190	;# 
   950   0004A7                     PIE9            equ	1191	;# 
   951   0004A8                     PIE10           equ	1192	;# 
   952   0004A9                     PIE11           equ	1193	;# 
   953   0004AA                     PIE12           equ	1194	;# 
   954   0004AB                     PIE13           equ	1195	;# 
   955   0004AC                     PIE14           equ	1196	;# 
   956   0004AD                     PIE15           equ	1197	;# 
   957   0004AE                     PIR0            equ	1198	;# 
   958   0004AF                     PIR1            equ	1199	;# 
   959   0004B0                     PIR2            equ	1200	;# 
   960   0004B1                     PIR3            equ	1201	;# 
   961   0004B2                     PIR4            equ	1202	;# 
   962   0004B3                     PIR5            equ	1203	;# 
   963   0004B4                     PIR6            equ	1204	;# 
   964   0004B5                     PIR7            equ	1205	;# 
   965   0004B6                     PIR8            equ	1206	;# 
   966   0004B7                     PIR9            equ	1207	;# 
   967   0004B8                     PIR10           equ	1208	;# 
   968   0004B9                     PIR11           equ	1209	;# 
   969   0004BA                     PIR12           equ	1210	;# 
   970   0004BB                     PIR13           equ	1211	;# 
   971   0004BC                     PIR14           equ	1212	;# 
   972   0004BD                     PIR15           equ	1213	;# 
   973   0004BE                     LATA            equ	1214	;# 
   974   0004BF                     LATB            equ	1215	;# 
   975   0004C0                     LATC            equ	1216	;# 
   976   0004C1                     LATD            equ	1217	;# 
   977   0004C2                     LATE            equ	1218	;# 
   978   0004C3                     LATF            equ	1219	;# 
   979   0004C6                     TRISA           equ	1222	;# 
   980   0004C7                     TRISB           equ	1223	;# 
   981   0004C8                     TRISC           equ	1224	;# 
   982   0004C9                     TRISD           equ	1225	;# 
   983   0004CA                     TRISE           equ	1226	;# 
   984   0004CB                     TRISF           equ	1227	;# 
   985   0004CE                     PORTA           equ	1230	;# 
   986   0004CF                     PORTB           equ	1231	;# 
   987   0004D0                     PORTC           equ	1232	;# 
   988   0004D1                     PORTD           equ	1233	;# 
   989   0004D2                     PORTE           equ	1234	;# 
   990   0004D3                     PORTF           equ	1235	;# 
   991   0004D6                     INTCON0         equ	1238	;# 
   992   0004D7                     INTCON1         equ	1239	;# 
   993   0004D8                     STATUS          equ	1240	;# 
   994   0004D9                     FSR2            equ	1241	;# 
   995   0004D9                     FSR2L           equ	1241	;# 
   996   0004DA                     FSR2H           equ	1242	;# 
   997   0004DB                     PLUSW2          equ	1243	;# 
   998   0004DC                     PREINC2         equ	1244	;# 
   999   0004DD                     POSTDEC2        equ	1245	;# 
  1000   0004DE                     POSTINC2        equ	1246	;# 
  1001   0004DF                     INDF2           equ	1247	;# 
  1002   0004E0                     BSR             equ	1248	;# 
  1003   0004E1                     FSR1            equ	1249	;# 
  1004   0004E1                     FSR1L           equ	1249	;# 
  1005   0004E2                     FSR1H           equ	1250	;# 
  1006   0004E3                     PLUSW1          equ	1251	;# 
  1007   0004E4                     PREINC1         equ	1252	;# 
  1008   0004E5                     POSTDEC1        equ	1253	;# 
  1009   0004E6                     POSTINC1        equ	1254	;# 
  1010   0004E7                     INDF1           equ	1255	;# 
  1011   0004E8                     WREG            equ	1256	;# 
  1012   0004E9                     FSR0            equ	1257	;# 
  1013   0004E9                     FSR0L           equ	1257	;# 
  1014   0004EA                     FSR0H           equ	1258	;# 
  1015   0004EB                     PLUSW0          equ	1259	;# 
  1016   0004EC                     PREINC0         equ	1260	;# 
  1017   0004ED                     POSTDEC0        equ	1261	;# 
  1018   0004EE                     POSTINC0        equ	1262	;# 
  1019   0004EF                     INDF0           equ	1263	;# 
  1020   0004F0                     PCON0           equ	1264	;# 
  1021   0004F1                     PCON1           equ	1265	;# 
  1022   0004F2                     CPUDOZE         equ	1266	;# 
  1023   0004F3                     PROD            equ	1267	;# 
  1024   0004F3                     PRODL           equ	1267	;# 
  1025   0004F4                     PRODH           equ	1268	;# 
  1026   0004F5                     TABLAT          equ	1269	;# 
  1027   0004F6                     TBLPTR          equ	1270	;# 
  1028   0004F6                     TBLPTRL         equ	1270	;# 
  1029   0004F7                     TBLPTRH         equ	1271	;# 
  1030   0004F8                     TBLPTRU         equ	1272	;# 
  1031   0004F9                     PCLAT           equ	1273	;# 
  1032   0004F9                     PCL             equ	1273	;# 
  1033   0004FA                     PCLATH          equ	1274	;# 
  1034   0004FB                     PCLATU          equ	1275	;# 
  1035   0004FC                     STKPTR          equ	1276	;# 
  1036   0004FD                     TOS             equ	1277	;# 
  1037   0004FD                     TOSL            equ	1277	;# 
  1038   0004FE                     TOSH            equ	1278	;# 
  1039   0004FF                     TOSU            equ	1279	;# 
  1040   000039                     CLKRCON         equ	57	;# 
  1041   00003A                     CLKRCLK         equ	58	;# 
  1042   000040                     NVMCON0         equ	64	;# 
  1043   000041                     NVMCON1         equ	65	;# 
  1044   000042                     NVMLOCK         equ	66	;# 
  1045   000043                     NVMADR          equ	67	;# 
  1046   000043                     NVMADRL         equ	67	;# 
  1047   000044                     NVMADRH         equ	68	;# 
  1048   000045                     NVMADRU         equ	69	;# 
  1049   000046                     NVMDAT          equ	70	;# 
  1050   000046                     NVMDATL         equ	70	;# 
  1051   000047                     NVMDATH         equ	71	;# 
  1052   000048                     VREGCON         equ	72	;# 
  1053   000049                     BORCON          equ	73	;# 
  1054   00004A                     HLVDCON0        equ	74	;# 
  1055   00004B                     HLVDCON1        equ	75	;# 
  1056   00004C                     ZCDCON          equ	76	;# 
  1057   000060                     PMD0            equ	96	;# 
  1058   000061                     PMD1            equ	97	;# 
  1059   000063                     PMD3            equ	99	;# 
  1060   000064                     PMD4            equ	100	;# 
  1061   000065                     PMD5            equ	101	;# 
  1062   000066                     PMD6            equ	102	;# 
  1063   000067                     PMD7            equ	103	;# 
  1064   000068                     PMD8            equ	104	;# 
  1065   00006A                     MD1CON0         equ	106	;# 
  1066   00006B                     MD1CON1         equ	107	;# 
  1067   00006C                     MD1SRC          equ	108	;# 
  1068   00006D                     MD1CARL         equ	109	;# 
  1069   00006E                     MD1CARH         equ	110	;# 
  1070   00006F                     CMOUT           equ	111	;# 
  1071   000070                     CM1CON0         equ	112	;# 
  1072   000071                     CM1CON1         equ	113	;# 
  1073   000072                     CM1NCH          equ	114	;# 
  1074   000073                     CM1PCH          equ	115	;# 
  1075   000074                     CM2CON0         equ	116	;# 
  1076   000075                     CM2CON1         equ	117	;# 
  1077   000076                     CM2NCH          equ	118	;# 
  1078   000077                     CM2PCH          equ	119	;# 
  1079   000078                     WDTCON0         equ	120	;# 
  1080   000079                     WDTCON1         equ	121	;# 
  1081   00007A                     WDTPS           equ	122	;# 
  1082   00007A                     WDTPSL          equ	122	;# 
  1083   00007B                     WDTPSH          equ	123	;# 
  1084   00007C                     WDTTMR          equ	124	;# 
  1085   00007D                     DAC1DAT         equ	125	;# 
  1086   00007D                     DAC1DATL        equ	125	;# 
  1087   00007F                     DAC1CON         equ	127	;# 
  1088   000080                     SPI1RXB         equ	128	;# 
  1089   000081                     SPI1TXB         equ	129	;# 
  1090   000082                     SPI1TCNT        equ	130	;# 
  1091   000082                     SPI1TCNTL       equ	130	;# 
  1092   000083                     SPI1TCNTH       equ	131	;# 
  1093   000084                     SPI1CON0        equ	132	;# 
  1094   000085                     SPI1CON1        equ	133	;# 
  1095   000086                     SPI1CON2        equ	134	;# 
  1096   000087                     SPI1STATUS      equ	135	;# 
  1097   000088                     SPI1TWIDTH      equ	136	;# 
  1098   000089                     SPI1BAUD        equ	137	;# 
  1099   00008A                     SPI1INTF        equ	138	;# 
  1100   00008B                     SPI1INTE        equ	139	;# 
  1101   00008C                     SPI1CLK         equ	140	;# 
  1102   00008D                     SPI2RXB         equ	141	;# 
  1103   00008E                     SPI2TXB         equ	142	;# 
  1104   00008F                     SPI2TCNT        equ	143	;# 
  1105   00008F                     SPI2TCNTL       equ	143	;# 
  1106   000090                     SPI2TCNTH       equ	144	;# 
  1107   000091                     SPI2CON0        equ	145	;# 
  1108   000092                     SPI2CON1        equ	146	;# 
  1109   000093                     SPI2CON2        equ	147	;# 
  1110   000094                     SPI2STATUS      equ	148	;# 
  1111   000095                     SPI2TWIDTH      equ	149	;# 
  1112   000096                     SPI2BAUD        equ	150	;# 
  1113   000097                     SPI2INTF        equ	151	;# 
  1114   000098                     SPI2INTE        equ	152	;# 
  1115   000099                     SPI2CLK         equ	153	;# 
  1116   0000AC                     ACTCON          equ	172	;# 
  1117   0000AD                     OSCCON1         equ	173	;# 
  1118   0000AE                     OSCCON2         equ	174	;# 
  1119   0000AF                     OSCCON3         equ	175	;# 
  1120   0000B0                     OSCTUNE         equ	176	;# 
  1121   0000B1                     OSCFRQ          equ	177	;# 
  1122   0000B1                     OSCFREQ         equ	177	;# 
  1123   0000B2                     OSCSTAT         equ	178	;# 
  1124   0000B2                     OSCSTAT1        equ	178	;# 
  1125   0000B3                     OSCEN           equ	179	;# 
  1126   0000B4                     PRLOCK          equ	180	;# 
  1127   0000B5                     SCANPR          equ	181	;# 
  1128   0000B6                     DMA1PR          equ	182	;# 
  1129   0000B7                     DMA2PR          equ	183	;# 
  1130   0000B8                     DMA3PR          equ	184	;# 
  1131   0000B9                     DMA4PR          equ	185	;# 
  1132   0000BA                     DMA5PR          equ	186	;# 
  1133   0000BB                     DMA6PR          equ	187	;# 
  1134   0000BE                     MAINPR          equ	190	;# 
  1135   0000BF                     ISRPR           equ	191	;# 
  1136   0000D4                     CLCDATA         equ	212	;# 
  1137   0000D5                     CLCSELECT       equ	213	;# 
  1138   0000D6                     CLCnCON         equ	214	;# 
  1139   0000D7                     CLCnPOL         equ	215	;# 
  1140   0000D8                     CLCnSEL0        equ	216	;# 
  1141   0000D9                     CLCnSEL1        equ	217	;# 
  1142   0000DA                     CLCnSEL2        equ	218	;# 
  1143   0000DB                     CLCnSEL3        equ	219	;# 
  1144   0000DC                     CLCnGLS0        equ	220	;# 
  1145   0000DD                     CLCnGLS1        equ	221	;# 
  1146   0000DE                     CLCnGLS2        equ	222	;# 
  1147   0000DF                     CLCnGLS3        equ	223	;# 
  1148   0000E8                     DMASELECT       equ	232	;# 
  1149   0000E9                     DMAnBUF         equ	233	;# 
  1150   0000EA                     DMAnDCNT        equ	234	;# 
  1151   0000EA                     DMAnDCNTL       equ	234	;# 
  1152   0000EB                     DMAnDCNTH       equ	235	;# 
  1153   0000EC                     DMAnDPTR        equ	236	;# 
  1154   0000EC                     DMAnDPTRL       equ	236	;# 
  1155   0000ED                     DMAnDPTRH       equ	237	;# 
  1156   0000EE                     DMAnDSZ         equ	238	;# 
  1157   0000EE                     DMAnDSZL        equ	238	;# 
  1158   0000EF                     DMAnDSZH        equ	239	;# 
  1159   0000F0                     DMAnDSA         equ	240	;# 
  1160   0000F0                     DMAnDSAL        equ	240	;# 
  1161   0000F1                     DMAnDSAH        equ	241	;# 
  1162   0000F2                     DMAnSCNT        equ	242	;# 
  1163   0000F2                     DMAnSCNTL       equ	242	;# 
  1164   0000F3                     DMAnSCNTH       equ	243	;# 
  1165   0000F4                     DMAnSPTR        equ	244	;# 
  1166   0000F4                     DMAnSPTRL       equ	244	;# 
  1167   0000F5                     DMAnSPTRH       equ	245	;# 
  1168   0000F6                     DMAnSPTRU       equ	246	;# 
  1169   0000F7                     DMAnSSZ         equ	247	;# 
  1170   0000F7                     DMAnSSZL        equ	247	;# 
  1171   0000F8                     DMAnSSZH        equ	248	;# 
  1172   0000F9                     DMAnSSA         equ	249	;# 
  1173   0000F9                     DMAnSSAL        equ	249	;# 
  1174   0000FA                     DMAnSSAH        equ	250	;# 
  1175   0000FB                     DMAnSSAU        equ	251	;# 
  1176   0000FC                     DMAnCON0        equ	252	;# 
  1177   0000FD                     DMAnCON1        equ	253	;# 
  1178   0000FE                     DMAnAIRQ        equ	254	;# 
  1179   0000FF                     DMAnSIRQ        equ	255	;# 
  1180   000200                     PPSLOCK         equ	512	;# 
  1181   000201                     RA0PPS          equ	513	;# 
  1182   000202                     RA1PPS          equ	514	;# 
  1183   000203                     RA2PPS          equ	515	;# 
  1184   000204                     RA3PPS          equ	516	;# 
  1185   000205                     RA4PPS          equ	517	;# 
  1186   000206                     RA5PPS          equ	518	;# 
  1187   000207                     RA6PPS          equ	519	;# 
  1188   000208                     RA7PPS          equ	520	;# 
  1189   000209                     RB0PPS          equ	521	;# 
  1190   00020A                     RB1PPS          equ	522	;# 
  1191   00020B                     RB2PPS          equ	523	;# 
  1192   00020C                     RB3PPS          equ	524	;# 
  1193   00020D                     RB4PPS          equ	525	;# 
  1194   00020E                     RB5PPS          equ	526	;# 
  1195   00020F                     RB6PPS          equ	527	;# 
  1196   000210                     RB7PPS          equ	528	;# 
  1197   000211                     RC0PPS          equ	529	;# 
  1198   000212                     RC1PPS          equ	530	;# 
  1199   000213                     RC2PPS          equ	531	;# 
  1200   000214                     RC3PPS          equ	532	;# 
  1201   000215                     RC4PPS          equ	533	;# 
  1202   000216                     RC5PPS          equ	534	;# 
  1203   000217                     RC6PPS          equ	535	;# 
  1204   000218                     RC7PPS          equ	536	;# 
  1205   000219                     RD0PPS          equ	537	;# 
  1206   00021A                     RD1PPS          equ	538	;# 
  1207   00021B                     RD2PPS          equ	539	;# 
  1208   00021C                     RD3PPS          equ	540	;# 
  1209   00021D                     RD4PPS          equ	541	;# 
  1210   00021E                     RD5PPS          equ	542	;# 
  1211   00021F                     RD6PPS          equ	543	;# 
  1212   000220                     RD7PPS          equ	544	;# 
  1213   000221                     RE0PPS          equ	545	;# 
  1214   000222                     RE1PPS          equ	546	;# 
  1215   000223                     RE2PPS          equ	547	;# 
  1216   000229                     RF0PPS          equ	553	;# 
  1217   00022A                     RF1PPS          equ	554	;# 
  1218   00022B                     RF2PPS          equ	555	;# 
  1219   00022C                     RF3PPS          equ	556	;# 
  1220   00022D                     RF4PPS          equ	557	;# 
  1221   00022E                     RF5PPS          equ	558	;# 
  1222   00022F                     RF6PPS          equ	559	;# 
  1223   000230                     RF7PPS          equ	560	;# 
  1224   00023E                     INT0PPS         equ	574	;# 
  1225   00023F                     INT1PPS         equ	575	;# 
  1226   000240                     INT2PPS         equ	576	;# 
  1227   000241                     T0CKIPPS        equ	577	;# 
  1228   000242                     T1CKIPPS        equ	578	;# 
  1229   000243                     T1GPPS          equ	579	;# 
  1230   000244                     T3CKIPPS        equ	580	;# 
  1231   000245                     T3GPPS          equ	581	;# 
  1232   000246                     T5CKIPPS        equ	582	;# 
  1233   000247                     T5GPPS          equ	583	;# 
  1234   000248                     T2INPPS         equ	584	;# 
  1235   000249                     T4INPPS         equ	585	;# 
  1236   00024A                     T6INPPS         equ	586	;# 
  1237   00024F                     CCP1PPS         equ	591	;# 
  1238   000250                     CCP2PPS         equ	592	;# 
  1239   000251                     CCP3PPS         equ	593	;# 
  1240   000253                     PWM1ERSPPS      equ	595	;# 
  1241   000254                     PWM2ERSPPS      equ	596	;# 
  1242   000255                     PWM3ERSPPS      equ	597	;# 
  1243   000257                     PWMIN0PPS       equ	599	;# 
  1244   000258                     PWMIN1PPS       equ	600	;# 
  1245   000259                     SMT1WINPPS      equ	601	;# 
  1246   00025A                     SMT1SIGPPS      equ	602	;# 
  1247   00025B                     CWG1PPS         equ	603	;# 
  1248   00025B                     CWG1INPPS       equ	603	;# 
  1249   00025C                     CWG2PPS         equ	604	;# 
  1250   00025C                     CWG2INPPS       equ	604	;# 
  1251   00025D                     CWG3PPS         equ	605	;# 
  1252   00025D                     CWG3INPPS       equ	605	;# 
  1253   00025E                     MD1CARLPPS      equ	606	;# 
  1254   00025E                     MDCARLPPS       equ	606	;# 
  1255   00025F                     MD1CARHPPS      equ	607	;# 
  1256   00025F                     MDCARHPPS       equ	607	;# 
  1257   000260                     MD1SRCPPS       equ	608	;# 
  1258   000260                     MDSRCPPS        equ	608	;# 
  1259   000261                     CLCIN0PPS       equ	609	;# 
  1260   000262                     CLCIN1PPS       equ	610	;# 
  1261   000263                     CLCIN2PPS       equ	611	;# 
  1262   000264                     CLCIN3PPS       equ	612	;# 
  1263   000265                     CLCIN4PPS       equ	613	;# 
  1264   000266                     CLCIN5PPS       equ	614	;# 
  1265   000267                     CLCIN6PPS       equ	615	;# 
  1266   000268                     CLCIN7PPS       equ	616	;# 
  1267   000269                     ADACTPPS        equ	617	;# 
  1268   00026A                     SPI1SCKPPS      equ	618	;# 
  1269   00026B                     SPI1SDIPPS      equ	619	;# 
  1270   00026C                     SPI1SSPPS       equ	620	;# 
  1271   00026D                     SPI2SCKPPS      equ	621	;# 
  1272   00026E                     SPI2SDIPPS      equ	622	;# 
  1273   00026F                     SPI2SSPPS       equ	623	;# 
  1274   000270                     I2C1SDAPPS      equ	624	;# 
  1275   000271                     I2C1SCLPPS      equ	625	;# 
  1276   000272                     U1RXPPS         equ	626	;# 
  1277   000273                     U1CTSPPS        equ	627	;# 
  1278   000274                     U2RXPPS         equ	628	;# 
  1279   000275                     U2CTSPPS        equ	629	;# 
  1280   000276                     U3RXPPS         equ	630	;# 
  1281   000277                     U3CTSPPS        equ	631	;# 
  1282   000278                     U4RXPPS         equ	632	;# 
  1283   000279                     U4CTSPPS        equ	633	;# 
  1284   00027A                     U5RXPPS         equ	634	;# 
  1285   00027B                     U5CTSPPS        equ	635	;# 
  1286   000286                     RC4I2C          equ	646	;# 
  1287   000287                     RC3I2C          equ	647	;# 
  1288   000288                     RB2I2C          equ	648	;# 
  1289   000289                     RB1I2C          equ	649	;# 
  1290   00028B                     I2C1RXB         equ	651	;# 
  1291   00028C                     I2C1TXB         equ	652	;# 
  1292   00028D                     I2C1CNT         equ	653	;# 
  1293   00028E                     I2C1ADB0        equ	654	;# 
  1294   00028F                     I2C1ADB1        equ	655	;# 
  1295   000290                     I2C1ADR0        equ	656	;# 
  1296   000291                     I2C1ADR1        equ	657	;# 
  1297   000292                     I2C1ADR2        equ	658	;# 
  1298   000293                     I2C1ADR3        equ	659	;# 
  1299   000294                     I2C1CON0        equ	660	;# 
  1300   000295                     I2C1CON1        equ	661	;# 
  1301   000296                     I2C1CON2        equ	662	;# 
  1302   000297                     I2C1ERR         equ	663	;# 
  1303   000298                     I2C1STAT0       equ	664	;# 
  1304   000299                     I2C1STAT1       equ	665	;# 
  1305   00029A                     I2C1PIR         equ	666	;# 
  1306   00029B                     I2C1PIE         equ	667	;# 
  1307   00029C                     I2C1CLK         equ	668	;# 
  1308   00029D                     I2C1BTO         equ	669	;# 
  1309   0002A1                     U1RXB           equ	673	;# 
  1310   0002A1                     U1RXBL          equ	673	;# 
  1311   0002A2                     U1RXCHK         equ	674	;# 
  1312   0002A3                     U1TXB           equ	675	;# 
  1313   0002A3                     U1TXBL          equ	675	;# 
  1314   0002A4                     U1TXCHK         equ	676	;# 
  1315   0002A5                     U1P1            equ	677	;# 
  1316   0002A5                     U1P1L           equ	677	;# 
  1317   0002A6                     U1P1H           equ	678	;# 
  1318   0002A7                     U1P2            equ	679	;# 
  1319   0002A7                     U1P2L           equ	679	;# 
  1320   0002A8                     U1P2H           equ	680	;# 
  1321   0002A9                     U1P3            equ	681	;# 
  1322   0002A9                     U1P3L           equ	681	;# 
  1323   0002AA                     U1P3H           equ	682	;# 
  1324   0002AB                     U1CON0          equ	683	;# 
  1325   0002AC                     U1CON1          equ	684	;# 
  1326   0002AD                     U1CON2          equ	685	;# 
  1327   0002AE                     U1BRG           equ	686	;# 
  1328   0002AE                     U1BRGL          equ	686	;# 
  1329   0002AF                     U1BRGH          equ	687	;# 
  1330   0002B0                     U1FIFO          equ	688	;# 
  1331   0002B1                     U1UIR           equ	689	;# 
  1332   0002B2                     U1ERRIR         equ	690	;# 
  1333   0002B3                     U1ERRIE         equ	691	;# 
  1334   0002B4                     U2RXB           equ	692	;# 
  1335   0002B4                     U2RXBL          equ	692	;# 
  1336   0002B6                     U2TXB           equ	694	;# 
  1337   0002B6                     U2TXBL          equ	694	;# 
  1338   0002B8                     U2P1            equ	696	;# 
  1339   0002B8                     U2P1L           equ	696	;# 
  1340   0002BA                     U2P2            equ	698	;# 
  1341   0002BA                     U2P2L           equ	698	;# 
  1342   0002BC                     U2P3            equ	700	;# 
  1343   0002BC                     U2P3L           equ	700	;# 
  1344   0002BE                     U2CON0          equ	702	;# 
  1345   0002BF                     U2CON1          equ	703	;# 
  1346   0002C0                     U2CON2          equ	704	;# 
  1347   0002C1                     U2BRG           equ	705	;# 
  1348   0002C1                     U2BRGL          equ	705	;# 
  1349   0002C2                     U2BRGH          equ	706	;# 
  1350   0002C3                     U2FIFO          equ	707	;# 
  1351   0002C4                     U2UIR           equ	708	;# 
  1352   0002C5                     U2ERRIR         equ	709	;# 
  1353   0002C6                     U2ERRIE         equ	710	;# 
  1354   0002C7                     U3RXB           equ	711	;# 
  1355   0002C7                     U3RXBL          equ	711	;# 
  1356   0002C9                     U3TXB           equ	713	;# 
  1357   0002C9                     U3TXBL          equ	713	;# 
  1358   0002CB                     U3P1            equ	715	;# 
  1359   0002CB                     U3P1L           equ	715	;# 
  1360   0002CD                     U3P2            equ	717	;# 
  1361   0002CD                     U3P2L           equ	717	;# 
  1362   0002CF                     U3P3            equ	719	;# 
  1363   0002CF                     U3P3L           equ	719	;# 
  1364   0002D1                     U3CON0          equ	721	;# 
  1365   0002D2                     U3CON1          equ	722	;# 
  1366   0002D3                     U3CON2          equ	723	;# 
  1367   0002D4                     U3BRG           equ	724	;# 
  1368   0002D4                     U3BRGL          equ	724	;# 
  1369   0002D5                     U3BRGH          equ	725	;# 
  1370   0002D6                     U3FIFO          equ	726	;# 
  1371   0002D7                     U3UIR           equ	727	;# 
  1372   0002D8                     U3ERRIR         equ	728	;# 
  1373   0002D9                     U3ERRIE         equ	729	;# 
  1374   0002DA                     U4RXB           equ	730	;# 
  1375   0002DA                     U4RXBL          equ	730	;# 
  1376   0002DC                     U4TXB           equ	732	;# 
  1377   0002DC                     U4TXBL          equ	732	;# 
  1378   0002DE                     U4P1            equ	734	;# 
  1379   0002DE                     U4P1L           equ	734	;# 
  1380   0002E0                     U4P2            equ	736	;# 
  1381   0002E0                     U4P2L           equ	736	;# 
  1382   0002E2                     U4P3            equ	738	;# 
  1383   0002E2                     U4P3L           equ	738	;# 
  1384   0002E4                     U4CON0          equ	740	;# 
  1385   0002E5                     U4CON1          equ	741	;# 
  1386   0002E6                     U4CON2          equ	742	;# 
  1387   0002E7                     U4BRG           equ	743	;# 
  1388   0002E7                     U4BRGL          equ	743	;# 
  1389   0002E8                     U4BRGH          equ	744	;# 
  1390   0002E9                     U4FIFO          equ	745	;# 
  1391   0002EA                     U4UIR           equ	746	;# 
  1392   0002EB                     U4ERRIR         equ	747	;# 
  1393   0002EC                     U4ERRIE         equ	748	;# 
  1394   0002ED                     U5RXB           equ	749	;# 
  1395   0002ED                     U5RXBL          equ	749	;# 
  1396   0002EF                     U5TXB           equ	751	;# 
  1397   0002EF                     U5TXBL          equ	751	;# 
  1398   0002F1                     U5P1            equ	753	;# 
  1399   0002F1                     U5P1L           equ	753	;# 
  1400   0002F3                     U5P2            equ	755	;# 
  1401   0002F3                     U5P2L           equ	755	;# 
  1402   0002F5                     U5P3            equ	757	;# 
  1403   0002F5                     U5P3L           equ	757	;# 
  1404   0002F7                     U5CON0          equ	759	;# 
  1405   0002F8                     U5CON1          equ	760	;# 
  1406   0002F9                     U5CON2          equ	761	;# 
  1407   0002FA                     U5BRG           equ	762	;# 
  1408   0002FA                     U5BRGL          equ	762	;# 
  1409   0002FB                     U5BRGH          equ	763	;# 
  1410   0002FC                     U5FIFO          equ	764	;# 
  1411   0002FD                     U5UIR           equ	765	;# 
  1412   0002FE                     U5ERRIR         equ	766	;# 
  1413   0002FF                     U5ERRIE         equ	767	;# 
  1414   000300                     SMT1TMR         equ	768	;# 
  1415   000300                     SMT1TMRL        equ	768	;# 
  1416   000301                     SMT1TMRH        equ	769	;# 
  1417   000302                     SMT1TMRU        equ	770	;# 
  1418   000303                     SMT1CPR         equ	771	;# 
  1419   000303                     SMT1CPRL        equ	771	;# 
  1420   000304                     SMT1CPRH        equ	772	;# 
  1421   000305                     SMT1CPRU        equ	773	;# 
  1422   000306                     SMT1CPW         equ	774	;# 
  1423   000306                     SMT1CPWL        equ	774	;# 
  1424   000307                     SMT1CPWH        equ	775	;# 
  1425   000308                     SMT1CPWU        equ	776	;# 
  1426   000309                     SMT1PR          equ	777	;# 
  1427   000309                     SMT1PRL         equ	777	;# 
  1428   00030A                     SMT1PRH         equ	778	;# 
  1429   00030B                     SMT1PRU         equ	779	;# 
  1430   00030C                     SMT1CON0        equ	780	;# 
  1431   00030D                     SMT1CON1        equ	781	;# 
  1432   00030E                     SMT1STAT        equ	782	;# 
  1433   00030F                     SMT1CLK         equ	783	;# 
  1434   000310                     SMT1SIG         equ	784	;# 
  1435   000311                     SMT1WIN         equ	785	;# 
  1436   000318                     TMR0L           equ	792	;# 
  1437   000318                     TMR0            equ	792	;# 
  1438   000319                     TMR0H           equ	793	;# 
  1439   000319                     PR0             equ	793	;# 
  1440   00031A                     T0CON0          equ	794	;# 
  1441   00031B                     T0CON1          equ	795	;# 
  1442   00031C                     TMR1            equ	796	;# 
  1443   00031C                     TMR1L           equ	796	;# 
  1444   00031D                     TMR1H           equ	797	;# 
  1445   00031E                     T1CON           equ	798	;# 
  1446   00031E                     TMR1CON         equ	798	;# 
  1447   00031F                     T1GCON          equ	799	;# 
  1448   00031F                     TMR1GCON        equ	799	;# 
  1449   000320                     T1GATE          equ	800	;# 
  1450   000320                     TMR1GATE        equ	800	;# 
  1451   000321                     T1CLK           equ	801	;# 
  1452   000321                     TMR1CLK         equ	801	;# 
  1453   000321                     PR1             equ	801	;# 
  1454   000322                     T2TMR           equ	802	;# 
  1455   000322                     TMR2            equ	802	;# 
  1456   000323                     T2PR            equ	803	;# 
  1457   000323                     PR2             equ	803	;# 
  1458   000324                     T2CON           equ	804	;# 
  1459   000325                     T2HLT           equ	805	;# 
  1460   000326                     T2CLKCON        equ	806	;# 
  1461   000326                     T2CLK           equ	806	;# 
  1462   000327                     T2RST           equ	807	;# 
  1463   000328                     TMR3            equ	808	;# 
  1464   000328                     TMR3L           equ	808	;# 
  1465   000329                     TMR3H           equ	809	;# 
  1466   00032A                     T3CON           equ	810	;# 
  1467   00032A                     TMR3CON         equ	810	;# 
  1468   00032B                     T3GCON          equ	811	;# 
  1469   00032B                     TMR3GCON        equ	811	;# 
  1470   00032C                     T3GATE          equ	812	;# 
  1471   00032C                     TMR3GATE        equ	812	;# 
  1472   00032D                     T3CLK           equ	813	;# 
  1473   00032D                     TMR3CLK         equ	813	;# 
  1474   00032D                     PR3             equ	813	;# 
  1475   00032E                     T4TMR           equ	814	;# 
  1476   00032E                     TMR4            equ	814	;# 
  1477   00032F                     T4PR            equ	815	;# 
  1478   00032F                     PR4             equ	815	;# 
  1479   000330                     T4CON           equ	816	;# 
  1480   000331                     T4HLT           equ	817	;# 
  1481   000332                     T4CLKCON        equ	818	;# 
  1482   000332                     T4CLK           equ	818	;# 
  1483   000333                     T4RST           equ	819	;# 
  1484   000334                     TMR5            equ	820	;# 
  1485   000334                     TMR5L           equ	820	;# 
  1486   000335                     TMR5H           equ	821	;# 
  1487   000336                     T5CON           equ	822	;# 
  1488   000336                     TMR5CON         equ	822	;# 
  1489   000337                     T5GCON          equ	823	;# 
  1490   000337                     TMR5GCON        equ	823	;# 
  1491   000338                     T5GATE          equ	824	;# 
  1492   000338                     TMR5GATE        equ	824	;# 
  1493   000339                     T5CLK           equ	825	;# 
  1494   000339                     TMR5CLK         equ	825	;# 
  1495   000339                     PR5             equ	825	;# 
  1496   00033A                     T6TMR           equ	826	;# 
  1497   00033A                     TMR6            equ	826	;# 
  1498   00033B                     T6PR            equ	827	;# 
  1499   00033B                     PR6             equ	827	;# 
  1500   00033C                     T6CON           equ	828	;# 
  1501   00033D                     T6HLT           equ	829	;# 
  1502   00033E                     T6CLKCON        equ	830	;# 
  1503   00033E                     T6CLK           equ	830	;# 
  1504   00033F                     T6RST           equ	831	;# 
  1505   000340                     CCPR1           equ	832	;# 
  1506   000340                     CCPR1L          equ	832	;# 
  1507   000341                     CCPR1H          equ	833	;# 
  1508   000342                     CCP1CON         equ	834	;# 
  1509   000343                     CCP1CAP         equ	835	;# 
  1510   000344                     CCPR2           equ	836	;# 
  1511   000344                     CCPR2L          equ	836	;# 
  1512   000345                     CCPR2H          equ	837	;# 
  1513   000346                     CCP2CON         equ	838	;# 
  1514   000347                     CCP2CAP         equ	839	;# 
  1515   000348                     CCPR3           equ	840	;# 
  1516   000348                     CCPR3L          equ	840	;# 
  1517   000349                     CCPR3H          equ	841	;# 
  1518   00034A                     CCP3CON         equ	842	;# 
  1519   00034B                     CCP3CAP         equ	843	;# 
  1520   00034C                     CCPTMRS0        equ	844	;# 
  1521   00034F                     CRCDATA         equ	847	;# 
  1522   00034F                     CRCDATL         equ	847	;# 
  1523   000350                     CRCDATH         equ	848	;# 
  1524   000351                     CRCACC          equ	849	;# 
  1525   000351                     CRCACCL         equ	849	;# 
  1526   000352                     CRCACCH         equ	850	;# 
  1527   000353                     CRCSHFT         equ	851	;# 
  1528   000353                     CRCSHIFTL       equ	851	;# 
  1529   000354                     CRCSHIFTH       equ	852	;# 
  1530   000355                     CRCXOR          equ	853	;# 
  1531   000355                     CRCXORL         equ	853	;# 
  1532   000356                     CRCXORH         equ	854	;# 
  1533   000357                     CRCCON0         equ	855	;# 
  1534   000358                     CRCCON1         equ	856	;# 
  1535   00035A                     SCANLADR        equ	858	;# 
  1536   00035A                     SCANLADRL       equ	858	;# 
  1537   00035B                     SCANLADRH       equ	859	;# 
  1538   00035C                     SCANLADRU       equ	860	;# 
  1539   00035D                     SCANHADR        equ	861	;# 
  1540   00035D                     SCANHADRL       equ	861	;# 
  1541   00035E                     SCANHADRH       equ	862	;# 
  1542   00035F                     SCANHADRU       equ	863	;# 
  1543   000360                     SCANCON0        equ	864	;# 
  1544   000361                     SCANTRIG        equ	865	;# 
  1545   000362                     IPR0            equ	866	;# 
  1546   000363                     IPR1            equ	867	;# 
  1547   000364                     IPR2            equ	868	;# 
  1548   000365                     IPR3            equ	869	;# 
  1549   000366                     IPR4            equ	870	;# 
  1550   000367                     IPR5            equ	871	;# 
  1551   000368                     IPR6            equ	872	;# 
  1552   000369                     IPR7            equ	873	;# 
  1553   00036A                     IPR8            equ	874	;# 
  1554   00036B                     IPR9            equ	875	;# 
  1555   00036C                     IPR10           equ	876	;# 
  1556   00036D                     IPR11           equ	877	;# 
  1557   00036E                     IPR12           equ	878	;# 
  1558   00036F                     IPR13           equ	879	;# 
  1559   000370                     IPR14           equ	880	;# 
  1560   000371                     IPR15           equ	881	;# 
  1561   000373                     STATUS_CSHAD    equ	883	;# 
  1562   000374                     WREG_CSHAD      equ	884	;# 
  1563   000375                     BSR_CSHAD       equ	885	;# 
  1564   000376                     SHADCON         equ	886	;# 
  1565   000377                     STATUS_SHAD     equ	887	;# 
  1566   000378                     WREG_SHAD       equ	888	;# 
  1567   000379                     BSR_SHAD        equ	889	;# 
  1568   00037A                     PCLATH_SHAD     equ	890	;# 
  1569   00037B                     PCLATU_SHAD     equ	891	;# 
  1570   00037C                     FSR0SH          equ	892	;# 
  1571   00037C                     FSR0L_SHAD      equ	892	;# 
  1572   00037D                     FSR0H_SHAD      equ	893	;# 
  1573   00037E                     FSR1SH          equ	894	;# 
  1574   00037E                     FSR1L_SHAD      equ	894	;# 
  1575   00037F                     FSR1H_SHAD      equ	895	;# 
  1576   000380                     FSR2SH          equ	896	;# 
  1577   000380                     FSR2L_SHAD      equ	896	;# 
  1578   000381                     FSR2H_SHAD      equ	897	;# 
  1579   000382                     PRODSH          equ	898	;# 
  1580   000382                     PRODL_SHAD      equ	898	;# 
  1581   000383                     PRODH_SHAD      equ	899	;# 
  1582   0003BC                     CWG1CLK         equ	956	;# 
  1583   0003BC                     CWG1CLKCON      equ	956	;# 
  1584   0003BD                     CWG1ISM         equ	957	;# 
  1585   0003BD                     CWG1DAT         equ	957	;# 
  1586   0003BE                     CWG1DBR         equ	958	;# 
  1587   0003BF                     CWG1DBF         equ	959	;# 
  1588   0003C0                     CWG1CON0        equ	960	;# 
  1589   0003C1                     CWG1CON1        equ	961	;# 
  1590   0003C2                     CWG1AS0         equ	962	;# 
  1591   0003C3                     CWG1AS1         equ	963	;# 
  1592   0003C4                     CWG1STR         equ	964	;# 
  1593   0003C5                     CWG2CLK         equ	965	;# 
  1594   0003C5                     CWG2CLKCON      equ	965	;# 
  1595   0003C6                     CWG2ISM         equ	966	;# 
  1596   0003C6                     CWG2DAT         equ	966	;# 
  1597   0003C7                     CWG2DBR         equ	967	;# 
  1598   0003C8                     CWG2DBF         equ	968	;# 
  1599   0003C9                     CWG2CON0        equ	969	;# 
  1600   0003CA                     CWG2CON1        equ	970	;# 
  1601   0003CB                     CWG2AS0         equ	971	;# 
  1602   0003CC                     CWG2AS1         equ	972	;# 
  1603   0003CD                     CWG2STR         equ	973	;# 
  1604   0003CE                     CWG3CLK         equ	974	;# 
  1605   0003CE                     CWG3CLKCON      equ	974	;# 
  1606   0003CF                     CWG3ISM         equ	975	;# 
  1607   0003CF                     CWG3DAT         equ	975	;# 
  1608   0003D0                     CWG3DBR         equ	976	;# 
  1609   0003D1                     CWG3DBF         equ	977	;# 
  1610   0003D2                     CWG3CON0        equ	978	;# 
  1611   0003D3                     CWG3CON1        equ	979	;# 
  1612   0003D4                     CWG3AS0         equ	980	;# 
  1613   0003D5                     CWG3AS1         equ	981	;# 
  1614   0003D6                     CWG3STR         equ	982	;# 
  1615   0003D7                     FVRCON          equ	983	;# 
  1616   0003D8                     ADCPCON         equ	984	;# 
  1617   0003D8                     ADCP            equ	984	;# 
  1618   0003D9                     ADLTH           equ	985	;# 
  1619   0003D9                     ADLTHL          equ	985	;# 
  1620   0003DA                     ADLTHH          equ	986	;# 
  1621   0003DB                     ADUTH           equ	987	;# 
  1622   0003DB                     ADUTHL          equ	987	;# 
  1623   0003DC                     ADUTHH          equ	988	;# 
  1624   0003DD                     ADERR           equ	989	;# 
  1625   0003DD                     ADERRL          equ	989	;# 
  1626   0003DE                     ADERRH          equ	990	;# 
  1627   0003DF                     ADSTPT          equ	991	;# 
  1628   0003DF                     ADSTPTL         equ	991	;# 
  1629   0003E0                     ADSTPTH         equ	992	;# 
  1630   0003E1                     ADFLTR          equ	993	;# 
  1631   0003E1                     ADFLTRL         equ	993	;# 
  1632   0003E2                     ADFLTRH         equ	994	;# 
  1633   0003E3                     ADACC           equ	995	;# 
  1634   0003E3                     ADACCL          equ	995	;# 
  1635   0003E4                     ADACCH          equ	996	;# 
  1636   0003E5                     ADACCU          equ	997	;# 
  1637   0003E6                     ADCNT           equ	998	;# 
  1638   0003E7                     ADRPT           equ	999	;# 
  1639   0003E8                     ADPREV          equ	1000	;# 
  1640   0003E8                     ADPREVL         equ	1000	;# 
  1641   0003E9                     ADPREVH         equ	1001	;# 
  1642   0003EA                     ADRES           equ	1002	;# 
  1643   0003EA                     ADRESL          equ	1002	;# 
  1644   0003EB                     ADRESH          equ	1003	;# 
  1645   0003EC                     ADPCH           equ	1004	;# 
  1646   0003EE                     ADACQ           equ	1006	;# 
  1647   0003EE                     ADACQL          equ	1006	;# 
  1648   0003EF                     ADACQH          equ	1007	;# 
  1649   0003F0                     ADCAP           equ	1008	;# 
  1650   0003F1                     ADPRE           equ	1009	;# 
  1651   0003F1                     ADPREL          equ	1009	;# 
  1652   0003F2                     ADPREH          equ	1010	;# 
  1653   0003F3                     ADCON0          equ	1011	;# 
  1654   0003F4                     ADCON1          equ	1012	;# 
  1655   0003F5                     ADCON2          equ	1013	;# 
  1656   0003F6                     ADCON3          equ	1014	;# 
  1657   0003F7                     ADSTAT          equ	1015	;# 
  1658   0003F8                     ADREF           equ	1016	;# 
  1659   0003F9                     ADACT           equ	1017	;# 
  1660   0003FA                     ADCLK           equ	1018	;# 
  1661   000400                     ANSELA          equ	1024	;# 
  1662   000401                     WPUA            equ	1025	;# 
  1663   000402                     ODCONA          equ	1026	;# 
  1664   000403                     SLRCONA         equ	1027	;# 
  1665   000404                     INLVLA          equ	1028	;# 
  1666   000405                     IOCAP           equ	1029	;# 
  1667   000406                     IOCAN           equ	1030	;# 
  1668   000407                     IOCAF           equ	1031	;# 
  1669   000408                     ANSELB          equ	1032	;# 
  1670   000409                     WPUB            equ	1033	;# 
  1671   00040A                     ODCONB          equ	1034	;# 
  1672   00040B                     SLRCONB         equ	1035	;# 
  1673   00040C                     INLVLB          equ	1036	;# 
  1674   00040D                     IOCBP           equ	1037	;# 
  1675   00040E                     IOCBN           equ	1038	;# 
  1676   00040F                     IOCBF           equ	1039	;# 
  1677   000410                     ANSELC          equ	1040	;# 
  1678   000411                     WPUC            equ	1041	;# 
  1679   000412                     ODCONC          equ	1042	;# 
  1680   000413                     SLRCONC         equ	1043	;# 
  1681   000414                     INLVLC          equ	1044	;# 
  1682   000415                     IOCCP           equ	1045	;# 
  1683   000416                     IOCCN           equ	1046	;# 
  1684   000417                     IOCCF           equ	1047	;# 
  1685   000418                     ANSELD          equ	1048	;# 
  1686   000419                     WPUD            equ	1049	;# 
  1687   00041A                     ODCOND          equ	1050	;# 
  1688   00041B                     SLRCOND         equ	1051	;# 
  1689   00041C                     INLVLD          equ	1052	;# 
  1690   000420                     ANSELE          equ	1056	;# 
  1691   000421                     WPUE            equ	1057	;# 
  1692   000422                     ODCONE          equ	1058	;# 
  1693   000423                     SLRCONE         equ	1059	;# 
  1694   000424                     INLVLE          equ	1060	;# 
  1695   000425                     IOCEP           equ	1061	;# 
  1696   000426                     IOCEN           equ	1062	;# 
  1697   000427                     IOCEF           equ	1063	;# 
  1698   000428                     ANSELF          equ	1064	;# 
  1699   000429                     WPUF            equ	1065	;# 
  1700   00042A                     ODCONF          equ	1066	;# 
  1701   00042B                     SLRCONF         equ	1067	;# 
  1702   00042C                     INLVLF          equ	1068	;# 
  1703   000440                     NCO1ACC         equ	1088	;# 
  1704   000440                     NCO1ACCL        equ	1088	;# 
  1705   000441                     NCO1ACCH        equ	1089	;# 
  1706   000442                     NCO1ACCU        equ	1090	;# 
  1707   000443                     NCO1INC         equ	1091	;# 
  1708   000443                     NCO1INCL        equ	1091	;# 
  1709   000444                     NCO1INCH        equ	1092	;# 
  1710   000445                     NCO1INCU        equ	1093	;# 
  1711   000446                     NCO1CON         equ	1094	;# 
  1712   000447                     NCO1CLK         equ	1095	;# 
  1713   000448                     NCO2ACC         equ	1096	;# 
  1714   000448                     NCO2ACCL        equ	1096	;# 
  1715   000449                     NCO2ACCH        equ	1097	;# 
  1716   00044A                     NCO2ACCU        equ	1098	;# 
  1717   00044B                     NCO2INC         equ	1099	;# 
  1718   00044B                     NCO2INCL        equ	1099	;# 
  1719   00044C                     NCO2INCH        equ	1100	;# 
  1720   00044D                     NCO2INCU        equ	1101	;# 
  1721   00044E                     NCO2CON         equ	1102	;# 
  1722   00044F                     NCO2CLK         equ	1103	;# 
  1723   000450                     NCO3ACC         equ	1104	;# 
  1724   000450                     NCO3ACCL        equ	1104	;# 
  1725   000451                     NCO3ACCH        equ	1105	;# 
  1726   000452                     NCO3ACCU        equ	1106	;# 
  1727   000453                     NCO3INC         equ	1107	;# 
  1728   000453                     NCO3INCL        equ	1107	;# 
  1729   000454                     NCO3INCH        equ	1108	;# 
  1730   000455                     NCO3INCU        equ	1109	;# 
  1731   000456                     NCO3CON         equ	1110	;# 
  1732   000457                     NCO3CLK         equ	1111	;# 
  1733   000459                     IVTLOCK         equ	1113	;# 
  1734   00045A                     IVTAD           equ	1114	;# 
  1735   00045A                     IVTADL          equ	1114	;# 
  1736   00045B                     IVTADH          equ	1115	;# 
  1737   00045C                     IVTADU          equ	1116	;# 
  1738   00045D                     IVTBASE         equ	1117	;# 
  1739   00045D                     IVTBASEL        equ	1117	;# 
  1740   00045E                     IVTBASEH        equ	1118	;# 
  1741   00045F                     IVTBASEU        equ	1119	;# 
  1742   000460                     PWM1ERS         equ	1120	;# 
  1743   000461                     PWM1CLK         equ	1121	;# 
  1744   000462                     PWM1LDS         equ	1122	;# 
  1745   000463                     PWM1PR          equ	1123	;# 
  1746   000463                     PWM1PRL         equ	1123	;# 
  1747   000464                     PWM1PRH         equ	1124	;# 
  1748   000465                     PWM1CPRE        equ	1125	;# 
  1749   000466                     PWM1PIPOS       equ	1126	;# 
  1750   000467                     PWM1GIR         equ	1127	;# 
  1751   000468                     PWM1GIE         equ	1128	;# 
  1752   000469                     PWM1CON         equ	1129	;# 
  1753   00046A                     PWM1S1CFG       equ	1130	;# 
  1754   00046B                     PWM1S1P1        equ	1131	;# 
  1755   00046B                     PWM1S1P1L       equ	1131	;# 
  1756   00046C                     PWM1S1P1H       equ	1132	;# 
  1757   00046D                     PWM1S1P2        equ	1133	;# 
  1758   00046D                     PWM1S1P2L       equ	1133	;# 
  1759   00046E                     PWM1S1P2H       equ	1134	;# 
  1760   00046F                     PWM2ERS         equ	1135	;# 
  1761   000470                     PWM2CLK         equ	1136	;# 
  1762   000471                     PWM2LDS         equ	1137	;# 
  1763   000472                     PWM2PR          equ	1138	;# 
  1764   000472                     PWM2PRL         equ	1138	;# 
  1765   000473                     PWM2PRH         equ	1139	;# 
  1766   000474                     PWM2CPRE        equ	1140	;# 
  1767   000475                     PWM2PIPOS       equ	1141	;# 
  1768   000476                     PWM2GIR         equ	1142	;# 
  1769   000477                     PWM2GIE         equ	1143	;# 
  1770   000478                     PWM2CON         equ	1144	;# 
  1771   000479                     PWM2S1CFG       equ	1145	;# 
  1772   00047A                     PWM2S1P1        equ	1146	;# 
  1773   00047A                     PWM2S1P1L       equ	1146	;# 
  1774   00047B                     PWM2S1P1H       equ	1147	;# 
  1775   00047C                     PWM2S1P2        equ	1148	;# 
  1776   00047C                     PWM2S1P2L       equ	1148	;# 
  1777   00047D                     PWM2S1P2H       equ	1149	;# 
  1778   00047E                     PWM3ERS         equ	1150	;# 
  1779   00047F                     PWM3CLK         equ	1151	;# 
  1780   000480                     PWM3LDS         equ	1152	;# 
  1781   000481                     PWM3PR          equ	1153	;# 
  1782   000481                     PWM3PRL         equ	1153	;# 
  1783   000482                     PWM3PRH         equ	1154	;# 
  1784   000483                     PWM3CPRE        equ	1155	;# 
  1785   000484                     PWM3PIPOS       equ	1156	;# 
  1786   000485                     PWM3GIR         equ	1157	;# 
  1787   000486                     PWM3GIE         equ	1158	;# 
  1788   000487                     PWM3CON         equ	1159	;# 
  1789   000488                     PWM3S1CFG       equ	1160	;# 
  1790   000489                     PWM3S1P1        equ	1161	;# 
  1791   000489                     PWM3S1P1L       equ	1161	;# 
  1792   00048A                     PWM3S1P1H       equ	1162	;# 
  1793   00048B                     PWM3S1P2        equ	1163	;# 
  1794   00048B                     PWM3S1P2L       equ	1163	;# 
  1795   00048C                     PWM3S1P2H       equ	1164	;# 
  1796   00049C                     PWMLOAD         equ	1180	;# 
  1797   00049D                     PWMEN           equ	1181	;# 
  1798   00049E                     PIE0            equ	1182	;# 
  1799   00049F                     PIE1            equ	1183	;# 
  1800   0004A0                     PIE2            equ	1184	;# 
  1801   0004A1                     PIE3            equ	1185	;# 
  1802   0004A2                     PIE4            equ	1186	;# 
  1803   0004A3                     PIE5            equ	1187	;# 
  1804   0004A4                     PIE6            equ	1188	;# 
  1805   0004A5                     PIE7            equ	1189	;# 
  1806   0004A6                     PIE8            equ	1190	;# 
  1807   0004A7                     PIE9            equ	1191	;# 
  1808   0004A8                     PIE10           equ	1192	;# 
  1809   0004A9                     PIE11           equ	1193	;# 
  1810   0004AA                     PIE12           equ	1194	;# 
  1811   0004AB                     PIE13           equ	1195	;# 
  1812   0004AC                     PIE14           equ	1196	;# 
  1813   0004AD                     PIE15           equ	1197	;# 
  1814   0004AE                     PIR0            equ	1198	;# 
  1815   0004AF                     PIR1            equ	1199	;# 
  1816   0004B0                     PIR2            equ	1200	;# 
  1817   0004B1                     PIR3            equ	1201	;# 
  1818   0004B2                     PIR4            equ	1202	;# 
  1819   0004B3                     PIR5            equ	1203	;# 
  1820   0004B4                     PIR6            equ	1204	;# 
  1821   0004B5                     PIR7            equ	1205	;# 
  1822   0004B6                     PIR8            equ	1206	;# 
  1823   0004B7                     PIR9            equ	1207	;# 
  1824   0004B8                     PIR10           equ	1208	;# 
  1825   0004B9                     PIR11           equ	1209	;# 
  1826   0004BA                     PIR12           equ	1210	;# 
  1827   0004BB                     PIR13           equ	1211	;# 
  1828   0004BC                     PIR14           equ	1212	;# 
  1829   0004BD                     PIR15           equ	1213	;# 
  1830   0004BE                     LATA            equ	1214	;# 
  1831   0004BF                     LATB            equ	1215	;# 
  1832   0004C0                     LATC            equ	1216	;# 
  1833   0004C1                     LATD            equ	1217	;# 
  1834   0004C2                     LATE            equ	1218	;# 
  1835   0004C3                     LATF            equ	1219	;# 
  1836   0004C6                     TRISA           equ	1222	;# 
  1837   0004C7                     TRISB           equ	1223	;# 
  1838   0004C8                     TRISC           equ	1224	;# 
  1839   0004C9                     TRISD           equ	1225	;# 
  1840   0004CA                     TRISE           equ	1226	;# 
  1841   0004CB                     TRISF           equ	1227	;# 
  1842   0004CE                     PORTA           equ	1230	;# 
  1843   0004CF                     PORTB           equ	1231	;# 
  1844   0004D0                     PORTC           equ	1232	;# 
  1845   0004D1                     PORTD           equ	1233	;# 
  1846   0004D2                     PORTE           equ	1234	;# 
  1847   0004D3                     PORTF           equ	1235	;# 
  1848   0004D6                     INTCON0         equ	1238	;# 
  1849   0004D7                     INTCON1         equ	1239	;# 
  1850   0004D8                     STATUS          equ	1240	;# 
  1851   0004D9                     FSR2            equ	1241	;# 
  1852   0004D9                     FSR2L           equ	1241	;# 
  1853   0004DA                     FSR2H           equ	1242	;# 
  1854   0004DB                     PLUSW2          equ	1243	;# 
  1855   0004DC                     PREINC2         equ	1244	;# 
  1856   0004DD                     POSTDEC2        equ	1245	;# 
  1857   0004DE                     POSTINC2        equ	1246	;# 
  1858   0004DF                     INDF2           equ	1247	;# 
  1859   0004E0                     BSR             equ	1248	;# 
  1860   0004E1                     FSR1            equ	1249	;# 
  1861   0004E1                     FSR1L           equ	1249	;# 
  1862   0004E2                     FSR1H           equ	1250	;# 
  1863   0004E3                     PLUSW1          equ	1251	;# 
  1864   0004E4                     PREINC1         equ	1252	;# 
  1865   0004E5                     POSTDEC1        equ	1253	;# 
  1866   0004E6                     POSTINC1        equ	1254	;# 
  1867   0004E7                     INDF1           equ	1255	;# 
  1868   0004E8                     WREG            equ	1256	;# 
  1869   0004E9                     FSR0            equ	1257	;# 
  1870   0004E9                     FSR0L           equ	1257	;# 
  1871   0004EA                     FSR0H           equ	1258	;# 
  1872   0004EB                     PLUSW0          equ	1259	;# 
  1873   0004EC                     PREINC0         equ	1260	;# 
  1874   0004ED                     POSTDEC0        equ	1261	;# 
  1875   0004EE                     POSTINC0        equ	1262	;# 
  1876   0004EF                     INDF0           equ	1263	;# 
  1877   0004F0                     PCON0           equ	1264	;# 
  1878   0004F1                     PCON1           equ	1265	;# 
  1879   0004F2                     CPUDOZE         equ	1266	;# 
  1880   0004F3                     PROD            equ	1267	;# 
  1881   0004F3                     PRODL           equ	1267	;# 
  1882   0004F4                     PRODH           equ	1268	;# 
  1883   0004F5                     TABLAT          equ	1269	;# 
  1884   0004F6                     TBLPTR          equ	1270	;# 
  1885   0004F6                     TBLPTRL         equ	1270	;# 
  1886   0004F7                     TBLPTRH         equ	1271	;# 
  1887   0004F8                     TBLPTRU         equ	1272	;# 
  1888   0004F9                     PCLAT           equ	1273	;# 
  1889   0004F9                     PCL             equ	1273	;# 
  1890   0004FA                     PCLATH          equ	1274	;# 
  1891   0004FB                     PCLATU          equ	1275	;# 
  1892   0004FC                     STKPTR          equ	1276	;# 
  1893   0004FD                     TOS             equ	1277	;# 
  1894   0004FD                     TOSL            equ	1277	;# 
  1895   0004FE                     TOSH            equ	1278	;# 
  1896   0004FF                     TOSU            equ	1279	;# 
  1897   000039                     CLKRCON         equ	57	;# 
  1898   00003A                     CLKRCLK         equ	58	;# 
  1899   000040                     NVMCON0         equ	64	;# 
  1900   000041                     NVMCON1         equ	65	;# 
  1901   000042                     NVMLOCK         equ	66	;# 
  1902   000043                     NVMADR          equ	67	;# 
  1903   000043                     NVMADRL         equ	67	;# 
  1904   000044                     NVMADRH         equ	68	;# 
  1905   000045                     NVMADRU         equ	69	;# 
  1906   000046                     NVMDAT          equ	70	;# 
  1907   000046                     NVMDATL         equ	70	;# 
  1908   000047                     NVMDATH         equ	71	;# 
  1909   000048                     VREGCON         equ	72	;# 
  1910   000049                     BORCON          equ	73	;# 
  1911   00004A                     HLVDCON0        equ	74	;# 
  1912   00004B                     HLVDCON1        equ	75	;# 
  1913   00004C                     ZCDCON          equ	76	;# 
  1914   000060                     PMD0            equ	96	;# 
  1915   000061                     PMD1            equ	97	;# 
  1916   000063                     PMD3            equ	99	;# 
  1917   000064                     PMD4            equ	100	;# 
  1918   000065                     PMD5            equ	101	;# 
  1919   000066                     PMD6            equ	102	;# 
  1920   000067                     PMD7            equ	103	;# 
  1921   000068                     PMD8            equ	104	;# 
  1922   00006A                     MD1CON0         equ	106	;# 
  1923   00006B                     MD1CON1         equ	107	;# 
  1924   00006C                     MD1SRC          equ	108	;# 
  1925   00006D                     MD1CARL         equ	109	;# 
  1926   00006E                     MD1CARH         equ	110	;# 
  1927   00006F                     CMOUT           equ	111	;# 
  1928   000070                     CM1CON0         equ	112	;# 
  1929   000071                     CM1CON1         equ	113	;# 
  1930   000072                     CM1NCH          equ	114	;# 
  1931   000073                     CM1PCH          equ	115	;# 
  1932   000074                     CM2CON0         equ	116	;# 
  1933   000075                     CM2CON1         equ	117	;# 
  1934   000076                     CM2NCH          equ	118	;# 
  1935   000077                     CM2PCH          equ	119	;# 
  1936   000078                     WDTCON0         equ	120	;# 
  1937   000079                     WDTCON1         equ	121	;# 
  1938   00007A                     WDTPS           equ	122	;# 
  1939   00007A                     WDTPSL          equ	122	;# 
  1940   00007B                     WDTPSH          equ	123	;# 
  1941   00007C                     WDTTMR          equ	124	;# 
  1942   00007D                     DAC1DAT         equ	125	;# 
  1943   00007D                     DAC1DATL        equ	125	;# 
  1944   00007F                     DAC1CON         equ	127	;# 
  1945   000080                     SPI1RXB         equ	128	;# 
  1946   000081                     SPI1TXB         equ	129	;# 
  1947   000082                     SPI1TCNT        equ	130	;# 
  1948   000082                     SPI1TCNTL       equ	130	;# 
  1949   000083                     SPI1TCNTH       equ	131	;# 
  1950   000084                     SPI1CON0        equ	132	;# 
  1951   000085                     SPI1CON1        equ	133	;# 
  1952   000086                     SPI1CON2        equ	134	;# 
  1953   000087                     SPI1STATUS      equ	135	;# 
  1954   000088                     SPI1TWIDTH      equ	136	;# 
  1955   000089                     SPI1BAUD        equ	137	;# 
  1956   00008A                     SPI1INTF        equ	138	;# 
  1957   00008B                     SPI1INTE        equ	139	;# 
  1958   00008C                     SPI1CLK         equ	140	;# 
  1959   00008D                     SPI2RXB         equ	141	;# 
  1960   00008E                     SPI2TXB         equ	142	;# 
  1961   00008F                     SPI2TCNT        equ	143	;# 
  1962   00008F                     SPI2TCNTL       equ	143	;# 
  1963   000090                     SPI2TCNTH       equ	144	;# 
  1964   000091                     SPI2CON0        equ	145	;# 
  1965   000092                     SPI2CON1        equ	146	;# 
  1966   000093                     SPI2CON2        equ	147	;# 
  1967   000094                     SPI2STATUS      equ	148	;# 
  1968   000095                     SPI2TWIDTH      equ	149	;# 
  1969   000096                     SPI2BAUD        equ	150	;# 
  1970   000097                     SPI2INTF        equ	151	;# 
  1971   000098                     SPI2INTE        equ	152	;# 
  1972   000099                     SPI2CLK         equ	153	;# 
  1973   0000AC                     ACTCON          equ	172	;# 
  1974   0000AD                     OSCCON1         equ	173	;# 
  1975   0000AE                     OSCCON2         equ	174	;# 
  1976   0000AF                     OSCCON3         equ	175	;# 
  1977   0000B0                     OSCTUNE         equ	176	;# 
  1978   0000B1                     OSCFRQ          equ	177	;# 
  1979   0000B1                     OSCFREQ         equ	177	;# 
  1980   0000B2                     OSCSTAT         equ	178	;# 
  1981   0000B2                     OSCSTAT1        equ	178	;# 
  1982   0000B3                     OSCEN           equ	179	;# 
  1983   0000B4                     PRLOCK          equ	180	;# 
  1984   0000B5                     SCANPR          equ	181	;# 
  1985   0000B6                     DMA1PR          equ	182	;# 
  1986   0000B7                     DMA2PR          equ	183	;# 
  1987   0000B8                     DMA3PR          equ	184	;# 
  1988   0000B9                     DMA4PR          equ	185	;# 
  1989   0000BA                     DMA5PR          equ	186	;# 
  1990   0000BB                     DMA6PR          equ	187	;# 
  1991   0000BE                     MAINPR          equ	190	;# 
  1992   0000BF                     ISRPR           equ	191	;# 
  1993   0000D4                     CLCDATA         equ	212	;# 
  1994   0000D5                     CLCSELECT       equ	213	;# 
  1995   0000D6                     CLCnCON         equ	214	;# 
  1996   0000D7                     CLCnPOL         equ	215	;# 
  1997   0000D8                     CLCnSEL0        equ	216	;# 
  1998   0000D9                     CLCnSEL1        equ	217	;# 
  1999   0000DA                     CLCnSEL2        equ	218	;# 
  2000   0000DB                     CLCnSEL3        equ	219	;# 
  2001   0000DC                     CLCnGLS0        equ	220	;# 
  2002   0000DD                     CLCnGLS1        equ	221	;# 
  2003   0000DE                     CLCnGLS2        equ	222	;# 
  2004   0000DF                     CLCnGLS3        equ	223	;# 
  2005   0000E8                     DMASELECT       equ	232	;# 
  2006   0000E9                     DMAnBUF         equ	233	;# 
  2007   0000EA                     DMAnDCNT        equ	234	;# 
  2008   0000EA                     DMAnDCNTL       equ	234	;# 
  2009   0000EB                     DMAnDCNTH       equ	235	;# 
  2010   0000EC                     DMAnDPTR        equ	236	;# 
  2011   0000EC                     DMAnDPTRL       equ	236	;# 
  2012   0000ED                     DMAnDPTRH       equ	237	;# 
  2013   0000EE                     DMAnDSZ         equ	238	;# 
  2014   0000EE                     DMAnDSZL        equ	238	;# 
  2015   0000EF                     DMAnDSZH        equ	239	;# 
  2016   0000F0                     DMAnDSA         equ	240	;# 
  2017   0000F0                     DMAnDSAL        equ	240	;# 
  2018   0000F1                     DMAnDSAH        equ	241	;# 
  2019   0000F2                     DMAnSCNT        equ	242	;# 
  2020   0000F2                     DMAnSCNTL       equ	242	;# 
  2021   0000F3                     DMAnSCNTH       equ	243	;# 
  2022   0000F4                     DMAnSPTR        equ	244	;# 
  2023   0000F4                     DMAnSPTRL       equ	244	;# 
  2024   0000F5                     DMAnSPTRH       equ	245	;# 
  2025   0000F6                     DMAnSPTRU       equ	246	;# 
  2026   0000F7                     DMAnSSZ         equ	247	;# 
  2027   0000F7                     DMAnSSZL        equ	247	;# 
  2028   0000F8                     DMAnSSZH        equ	248	;# 
  2029   0000F9                     DMAnSSA         equ	249	;# 
  2030   0000F9                     DMAnSSAL        equ	249	;# 
  2031   0000FA                     DMAnSSAH        equ	250	;# 
  2032   0000FB                     DMAnSSAU        equ	251	;# 
  2033   0000FC                     DMAnCON0        equ	252	;# 
  2034   0000FD                     DMAnCON1        equ	253	;# 
  2035   0000FE                     DMAnAIRQ        equ	254	;# 
  2036   0000FF                     DMAnSIRQ        equ	255	;# 
  2037   000200                     PPSLOCK         equ	512	;# 
  2038   000201                     RA0PPS          equ	513	;# 
  2039   000202                     RA1PPS          equ	514	;# 
  2040   000203                     RA2PPS          equ	515	;# 
  2041   000204                     RA3PPS          equ	516	;# 
  2042   000205                     RA4PPS          equ	517	;# 
  2043   000206                     RA5PPS          equ	518	;# 
  2044   000207                     RA6PPS          equ	519	;# 
  2045   000208                     RA7PPS          equ	520	;# 
  2046   000209                     RB0PPS          equ	521	;# 
  2047   00020A                     RB1PPS          equ	522	;# 
  2048   00020B                     RB2PPS          equ	523	;# 
  2049   00020C                     RB3PPS          equ	524	;# 
  2050   00020D                     RB4PPS          equ	525	;# 
  2051   00020E                     RB5PPS          equ	526	;# 
  2052   00020F                     RB6PPS          equ	527	;# 
  2053   000210                     RB7PPS          equ	528	;# 
  2054   000211                     RC0PPS          equ	529	;# 
  2055   000212                     RC1PPS          equ	530	;# 
  2056   000213                     RC2PPS          equ	531	;# 
  2057   000214                     RC3PPS          equ	532	;# 
  2058   000215                     RC4PPS          equ	533	;# 
  2059   000216                     RC5PPS          equ	534	;# 
  2060   000217                     RC6PPS          equ	535	;# 
  2061   000218                     RC7PPS          equ	536	;# 
  2062   000219                     RD0PPS          equ	537	;# 
  2063   00021A                     RD1PPS          equ	538	;# 
  2064   00021B                     RD2PPS          equ	539	;# 
  2065   00021C                     RD3PPS          equ	540	;# 
  2066   00021D                     RD4PPS          equ	541	;# 
  2067   00021E                     RD5PPS          equ	542	;# 
  2068   00021F                     RD6PPS          equ	543	;# 
  2069   000220                     RD7PPS          equ	544	;# 
  2070   000221                     RE0PPS          equ	545	;# 
  2071   000222                     RE1PPS          equ	546	;# 
  2072   000223                     RE2PPS          equ	547	;# 
  2073   000229                     RF0PPS          equ	553	;# 
  2074   00022A                     RF1PPS          equ	554	;# 
  2075   00022B                     RF2PPS          equ	555	;# 
  2076   00022C                     RF3PPS          equ	556	;# 
  2077   00022D                     RF4PPS          equ	557	;# 
  2078   00022E                     RF5PPS          equ	558	;# 
  2079   00022F                     RF6PPS          equ	559	;# 
  2080   000230                     RF7PPS          equ	560	;# 
  2081   00023E                     INT0PPS         equ	574	;# 
  2082   00023F                     INT1PPS         equ	575	;# 
  2083   000240                     INT2PPS         equ	576	;# 
  2084   000241                     T0CKIPPS        equ	577	;# 
  2085   000242                     T1CKIPPS        equ	578	;# 
  2086   000243                     T1GPPS          equ	579	;# 
  2087   000244                     T3CKIPPS        equ	580	;# 
  2088   000245                     T3GPPS          equ	581	;# 
  2089   000246                     T5CKIPPS        equ	582	;# 
  2090   000247                     T5GPPS          equ	583	;# 
  2091   000248                     T2INPPS         equ	584	;# 
  2092   000249                     T4INPPS         equ	585	;# 
  2093   00024A                     T6INPPS         equ	586	;# 
  2094   00024F                     CCP1PPS         equ	591	;# 
  2095   000250                     CCP2PPS         equ	592	;# 
  2096   000251                     CCP3PPS         equ	593	;# 
  2097   000253                     PWM1ERSPPS      equ	595	;# 
  2098   000254                     PWM2ERSPPS      equ	596	;# 
  2099   000255                     PWM3ERSPPS      equ	597	;# 
  2100   000257                     PWMIN0PPS       equ	599	;# 
  2101   000258                     PWMIN1PPS       equ	600	;# 
  2102   000259                     SMT1WINPPS      equ	601	;# 
  2103   00025A                     SMT1SIGPPS      equ	602	;# 
  2104   00025B                     CWG1PPS         equ	603	;# 
  2105   00025B                     CWG1INPPS       equ	603	;# 
  2106   00025C                     CWG2PPS         equ	604	;# 
  2107   00025C                     CWG2INPPS       equ	604	;# 
  2108   00025D                     CWG3PPS         equ	605	;# 
  2109   00025D                     CWG3INPPS       equ	605	;# 
  2110   00025E                     MD1CARLPPS      equ	606	;# 
  2111   00025E                     MDCARLPPS       equ	606	;# 
  2112   00025F                     MD1CARHPPS      equ	607	;# 
  2113   00025F                     MDCARHPPS       equ	607	;# 
  2114   000260                     MD1SRCPPS       equ	608	;# 
  2115   000260                     MDSRCPPS        equ	608	;# 
  2116   000261                     CLCIN0PPS       equ	609	;# 
  2117   000262                     CLCIN1PPS       equ	610	;# 
  2118   000263                     CLCIN2PPS       equ	611	;# 
  2119   000264                     CLCIN3PPS       equ	612	;# 
  2120   000265                     CLCIN4PPS       equ	613	;# 
  2121   000266                     CLCIN5PPS       equ	614	;# 
  2122   000267                     CLCIN6PPS       equ	615	;# 
  2123   000268                     CLCIN7PPS       equ	616	;# 
  2124   000269                     ADACTPPS        equ	617	;# 
  2125   00026A                     SPI1SCKPPS      equ	618	;# 
  2126   00026B                     SPI1SDIPPS      equ	619	;# 
  2127   00026C                     SPI1SSPPS       equ	620	;# 
  2128   00026D                     SPI2SCKPPS      equ	621	;# 
  2129   00026E                     SPI2SDIPPS      equ	622	;# 
  2130   00026F                     SPI2SSPPS       equ	623	;# 
  2131   000270                     I2C1SDAPPS      equ	624	;# 
  2132   000271                     I2C1SCLPPS      equ	625	;# 
  2133   000272                     U1RXPPS         equ	626	;# 
  2134   000273                     U1CTSPPS        equ	627	;# 
  2135   000274                     U2RXPPS         equ	628	;# 
  2136   000275                     U2CTSPPS        equ	629	;# 
  2137   000276                     U3RXPPS         equ	630	;# 
  2138   000277                     U3CTSPPS        equ	631	;# 
  2139   000278                     U4RXPPS         equ	632	;# 
  2140   000279                     U4CTSPPS        equ	633	;# 
  2141   00027A                     U5RXPPS         equ	634	;# 
  2142   00027B                     U5CTSPPS        equ	635	;# 
  2143   000286                     RC4I2C          equ	646	;# 
  2144   000287                     RC3I2C          equ	647	;# 
  2145   000288                     RB2I2C          equ	648	;# 
  2146   000289                     RB1I2C          equ	649	;# 
  2147   00028B                     I2C1RXB         equ	651	;# 
  2148   00028C                     I2C1TXB         equ	652	;# 
  2149   00028D                     I2C1CNT         equ	653	;# 
  2150   00028E                     I2C1ADB0        equ	654	;# 
  2151   00028F                     I2C1ADB1        equ	655	;# 
  2152   000290                     I2C1ADR0        equ	656	;# 
  2153   000291                     I2C1ADR1        equ	657	;# 
  2154   000292                     I2C1ADR2        equ	658	;# 
  2155   000293                     I2C1ADR3        equ	659	;# 
  2156   000294                     I2C1CON0        equ	660	;# 
  2157   000295                     I2C1CON1        equ	661	;# 
  2158   000296                     I2C1CON2        equ	662	;# 
  2159   000297                     I2C1ERR         equ	663	;# 
  2160   000298                     I2C1STAT0       equ	664	;# 
  2161   000299                     I2C1STAT1       equ	665	;# 
  2162   00029A                     I2C1PIR         equ	666	;# 
  2163   00029B                     I2C1PIE         equ	667	;# 
  2164   00029C                     I2C1CLK         equ	668	;# 
  2165   00029D                     I2C1BTO         equ	669	;# 
  2166   0002A1                     U1RXB           equ	673	;# 
  2167   0002A1                     U1RXBL          equ	673	;# 
  2168   0002A2                     U1RXCHK         equ	674	;# 
  2169   0002A3                     U1TXB           equ	675	;# 
  2170   0002A3                     U1TXBL          equ	675	;# 
  2171   0002A4                     U1TXCHK         equ	676	;# 
  2172   0002A5                     U1P1            equ	677	;# 
  2173   0002A5                     U1P1L           equ	677	;# 
  2174   0002A6                     U1P1H           equ	678	;# 
  2175   0002A7                     U1P2            equ	679	;# 
  2176   0002A7                     U1P2L           equ	679	;# 
  2177   0002A8                     U1P2H           equ	680	;# 
  2178   0002A9                     U1P3            equ	681	;# 
  2179   0002A9                     U1P3L           equ	681	;# 
  2180   0002AA                     U1P3H           equ	682	;# 
  2181   0002AB                     U1CON0          equ	683	;# 
  2182   0002AC                     U1CON1          equ	684	;# 
  2183   0002AD                     U1CON2          equ	685	;# 
  2184   0002AE                     U1BRG           equ	686	;# 
  2185   0002AE                     U1BRGL          equ	686	;# 
  2186   0002AF                     U1BRGH          equ	687	;# 
  2187   0002B0                     U1FIFO          equ	688	;# 
  2188   0002B1                     U1UIR           equ	689	;# 
  2189   0002B2                     U1ERRIR         equ	690	;# 
  2190   0002B3                     U1ERRIE         equ	691	;# 
  2191   0002B4                     U2RXB           equ	692	;# 
  2192   0002B4                     U2RXBL          equ	692	;# 
  2193   0002B6                     U2TXB           equ	694	;# 
  2194   0002B6                     U2TXBL          equ	694	;# 
  2195   0002B8                     U2P1            equ	696	;# 
  2196   0002B8                     U2P1L           equ	696	;# 
  2197   0002BA                     U2P2            equ	698	;# 
  2198   0002BA                     U2P2L           equ	698	;# 
  2199   0002BC                     U2P3            equ	700	;# 
  2200   0002BC                     U2P3L           equ	700	;# 
  2201   0002BE                     U2CON0          equ	702	;# 
  2202   0002BF                     U2CON1          equ	703	;# 
  2203   0002C0                     U2CON2          equ	704	;# 
  2204   0002C1                     U2BRG           equ	705	;# 
  2205   0002C1                     U2BRGL          equ	705	;# 
  2206   0002C2                     U2BRGH          equ	706	;# 
  2207   0002C3                     U2FIFO          equ	707	;# 
  2208   0002C4                     U2UIR           equ	708	;# 
  2209   0002C5                     U2ERRIR         equ	709	;# 
  2210   0002C6                     U2ERRIE         equ	710	;# 
  2211   0002C7                     U3RXB           equ	711	;# 
  2212   0002C7                     U3RXBL          equ	711	;# 
  2213   0002C9                     U3TXB           equ	713	;# 
  2214   0002C9                     U3TXBL          equ	713	;# 
  2215   0002CB                     U3P1            equ	715	;# 
  2216   0002CB                     U3P1L           equ	715	;# 
  2217   0002CD                     U3P2            equ	717	;# 
  2218   0002CD                     U3P2L           equ	717	;# 
  2219   0002CF                     U3P3            equ	719	;# 
  2220   0002CF                     U3P3L           equ	719	;# 
  2221   0002D1                     U3CON0          equ	721	;# 
  2222   0002D2                     U3CON1          equ	722	;# 
  2223   0002D3                     U3CON2          equ	723	;# 
  2224   0002D4                     U3BRG           equ	724	;# 
  2225   0002D4                     U3BRGL          equ	724	;# 
  2226   0002D5                     U3BRGH          equ	725	;# 
  2227   0002D6                     U3FIFO          equ	726	;# 
  2228   0002D7                     U3UIR           equ	727	;# 
  2229   0002D8                     U3ERRIR         equ	728	;# 
  2230   0002D9                     U3ERRIE         equ	729	;# 
  2231   0002DA                     U4RXB           equ	730	;# 
  2232   0002DA                     U4RXBL          equ	730	;# 
  2233   0002DC                     U4TXB           equ	732	;# 
  2234   0002DC                     U4TXBL          equ	732	;# 
  2235   0002DE                     U4P1            equ	734	;# 
  2236   0002DE                     U4P1L           equ	734	;# 
  2237   0002E0                     U4P2            equ	736	;# 
  2238   0002E0                     U4P2L           equ	736	;# 
  2239   0002E2                     U4P3            equ	738	;# 
  2240   0002E2                     U4P3L           equ	738	;# 
  2241   0002E4                     U4CON0          equ	740	;# 
  2242   0002E5                     U4CON1          equ	741	;# 
  2243   0002E6                     U4CON2          equ	742	;# 
  2244   0002E7                     U4BRG           equ	743	;# 
  2245   0002E7                     U4BRGL          equ	743	;# 
  2246   0002E8                     U4BRGH          equ	744	;# 
  2247   0002E9                     U4FIFO          equ	745	;# 
  2248   0002EA                     U4UIR           equ	746	;# 
  2249   0002EB                     U4ERRIR         equ	747	;# 
  2250   0002EC                     U4ERRIE         equ	748	;# 
  2251   0002ED                     U5RXB           equ	749	;# 
  2252   0002ED                     U5RXBL          equ	749	;# 
  2253   0002EF                     U5TXB           equ	751	;# 
  2254   0002EF                     U5TXBL          equ	751	;# 
  2255   0002F1                     U5P1            equ	753	;# 
  2256   0002F1                     U5P1L           equ	753	;# 
  2257   0002F3                     U5P2            equ	755	;# 
  2258   0002F3                     U5P2L           equ	755	;# 
  2259   0002F5                     U5P3            equ	757	;# 
  2260   0002F5                     U5P3L           equ	757	;# 
  2261   0002F7                     U5CON0          equ	759	;# 
  2262   0002F8                     U5CON1          equ	760	;# 
  2263   0002F9                     U5CON2          equ	761	;# 
  2264   0002FA                     U5BRG           equ	762	;# 
  2265   0002FA                     U5BRGL          equ	762	;# 
  2266   0002FB                     U5BRGH          equ	763	;# 
  2267   0002FC                     U5FIFO          equ	764	;# 
  2268   0002FD                     U5UIR           equ	765	;# 
  2269   0002FE                     U5ERRIR         equ	766	;# 
  2270   0002FF                     U5ERRIE         equ	767	;# 
  2271   000300                     SMT1TMR         equ	768	;# 
  2272   000300                     SMT1TMRL        equ	768	;# 
  2273   000301                     SMT1TMRH        equ	769	;# 
  2274   000302                     SMT1TMRU        equ	770	;# 
  2275   000303                     SMT1CPR         equ	771	;# 
  2276   000303                     SMT1CPRL        equ	771	;# 
  2277   000304                     SMT1CPRH        equ	772	;# 
  2278   000305                     SMT1CPRU        equ	773	;# 
  2279   000306                     SMT1CPW         equ	774	;# 
  2280   000306                     SMT1CPWL        equ	774	;# 
  2281   000307                     SMT1CPWH        equ	775	;# 
  2282   000308                     SMT1CPWU        equ	776	;# 
  2283   000309                     SMT1PR          equ	777	;# 
  2284   000309                     SMT1PRL         equ	777	;# 
  2285   00030A                     SMT1PRH         equ	778	;# 
  2286   00030B                     SMT1PRU         equ	779	;# 
  2287   00030C                     SMT1CON0        equ	780	;# 
  2288   00030D                     SMT1CON1        equ	781	;# 
  2289   00030E                     SMT1STAT        equ	782	;# 
  2290   00030F                     SMT1CLK         equ	783	;# 
  2291   000310                     SMT1SIG         equ	784	;# 
  2292   000311                     SMT1WIN         equ	785	;# 
  2293   000318                     TMR0L           equ	792	;# 
  2294   000318                     TMR0            equ	792	;# 
  2295   000319                     TMR0H           equ	793	;# 
  2296   000319                     PR0             equ	793	;# 
  2297   00031A                     T0CON0          equ	794	;# 
  2298   00031B                     T0CON1          equ	795	;# 
  2299   00031C                     TMR1            equ	796	;# 
  2300   00031C                     TMR1L           equ	796	;# 
  2301   00031D                     TMR1H           equ	797	;# 
  2302   00031E                     T1CON           equ	798	;# 
  2303   00031E                     TMR1CON         equ	798	;# 
  2304   00031F                     T1GCON          equ	799	;# 
  2305   00031F                     TMR1GCON        equ	799	;# 
  2306   000320                     T1GATE          equ	800	;# 
  2307   000320                     TMR1GATE        equ	800	;# 
  2308   000321                     T1CLK           equ	801	;# 
  2309   000321                     TMR1CLK         equ	801	;# 
  2310   000321                     PR1             equ	801	;# 
  2311   000322                     T2TMR           equ	802	;# 
  2312   000322                     TMR2            equ	802	;# 
  2313   000323                     T2PR            equ	803	;# 
  2314   000323                     PR2             equ	803	;# 
  2315   000324                     T2CON           equ	804	;# 
  2316   000325                     T2HLT           equ	805	;# 
  2317   000326                     T2CLKCON        equ	806	;# 
  2318   000326                     T2CLK           equ	806	;# 
  2319   000327                     T2RST           equ	807	;# 
  2320   000328                     TMR3            equ	808	;# 
  2321   000328                     TMR3L           equ	808	;# 
  2322   000329                     TMR3H           equ	809	;# 
  2323   00032A                     T3CON           equ	810	;# 
  2324   00032A                     TMR3CON         equ	810	;# 
  2325   00032B                     T3GCON          equ	811	;# 
  2326   00032B                     TMR3GCON        equ	811	;# 
  2327   00032C                     T3GATE          equ	812	;# 
  2328   00032C                     TMR3GATE        equ	812	;# 
  2329   00032D                     T3CLK           equ	813	;# 
  2330   00032D                     TMR3CLK         equ	813	;# 
  2331   00032D                     PR3             equ	813	;# 
  2332   00032E                     T4TMR           equ	814	;# 
  2333   00032E                     TMR4            equ	814	;# 
  2334   00032F                     T4PR            equ	815	;# 
  2335   00032F                     PR4             equ	815	;# 
  2336   000330                     T4CON           equ	816	;# 
  2337   000331                     T4HLT           equ	817	;# 
  2338   000332                     T4CLKCON        equ	818	;# 
  2339   000332                     T4CLK           equ	818	;# 
  2340   000333                     T4RST           equ	819	;# 
  2341   000334                     TMR5            equ	820	;# 
  2342   000334                     TMR5L           equ	820	;# 
  2343   000335                     TMR5H           equ	821	;# 
  2344   000336                     T5CON           equ	822	;# 
  2345   000336                     TMR5CON         equ	822	;# 
  2346   000337                     T5GCON          equ	823	;# 
  2347   000337                     TMR5GCON        equ	823	;# 
  2348   000338                     T5GATE          equ	824	;# 
  2349   000338                     TMR5GATE        equ	824	;# 
  2350   000339                     T5CLK           equ	825	;# 
  2351   000339                     TMR5CLK         equ	825	;# 
  2352   000339                     PR5             equ	825	;# 
  2353   00033A                     T6TMR           equ	826	;# 
  2354   00033A                     TMR6            equ	826	;# 
  2355   00033B                     T6PR            equ	827	;# 
  2356   00033B                     PR6             equ	827	;# 
  2357   00033C                     T6CON           equ	828	;# 
  2358   00033D                     T6HLT           equ	829	;# 
  2359   00033E                     T6CLKCON        equ	830	;# 
  2360   00033E                     T6CLK           equ	830	;# 
  2361   00033F                     T6RST           equ	831	;# 
  2362   000340                     CCPR1           equ	832	;# 
  2363   000340                     CCPR1L          equ	832	;# 
  2364   000341                     CCPR1H          equ	833	;# 
  2365   000342                     CCP1CON         equ	834	;# 
  2366   000343                     CCP1CAP         equ	835	;# 
  2367   000344                     CCPR2           equ	836	;# 
  2368   000344                     CCPR2L          equ	836	;# 
  2369   000345                     CCPR2H          equ	837	;# 
  2370   000346                     CCP2CON         equ	838	;# 
  2371   000347                     CCP2CAP         equ	839	;# 
  2372   000348                     CCPR3           equ	840	;# 
  2373   000348                     CCPR3L          equ	840	;# 
  2374   000349                     CCPR3H          equ	841	;# 
  2375   00034A                     CCP3CON         equ	842	;# 
  2376   00034B                     CCP3CAP         equ	843	;# 
  2377   00034C                     CCPTMRS0        equ	844	;# 
  2378   00034F                     CRCDATA         equ	847	;# 
  2379   00034F                     CRCDATL         equ	847	;# 
  2380   000350                     CRCDATH         equ	848	;# 
  2381   000351                     CRCACC          equ	849	;# 
  2382   000351                     CRCACCL         equ	849	;# 
  2383   000352                     CRCACCH         equ	850	;# 
  2384   000353                     CRCSHFT         equ	851	;# 
  2385   000353                     CRCSHIFTL       equ	851	;# 
  2386   000354                     CRCSHIFTH       equ	852	;# 
  2387   000355                     CRCXOR          equ	853	;# 
  2388   000355                     CRCXORL         equ	853	;# 
  2389   000356                     CRCXORH         equ	854	;# 
  2390   000357                     CRCCON0         equ	855	;# 
  2391   000358                     CRCCON1         equ	856	;# 
  2392   00035A                     SCANLADR        equ	858	;# 
  2393   00035A                     SCANLADRL       equ	858	;# 
  2394   00035B                     SCANLADRH       equ	859	;# 
  2395   00035C                     SCANLADRU       equ	860	;# 
  2396   00035D                     SCANHADR        equ	861	;# 
  2397   00035D                     SCANHADRL       equ	861	;# 
  2398   00035E                     SCANHADRH       equ	862	;# 
  2399   00035F                     SCANHADRU       equ	863	;# 
  2400   000360                     SCANCON0        equ	864	;# 
  2401   000361                     SCANTRIG        equ	865	;# 
  2402   000362                     IPR0            equ	866	;# 
  2403   000363                     IPR1            equ	867	;# 
  2404   000364                     IPR2            equ	868	;# 
  2405   000365                     IPR3            equ	869	;# 
  2406   000366                     IPR4            equ	870	;# 
  2407   000367                     IPR5            equ	871	;# 
  2408   000368                     IPR6            equ	872	;# 
  2409   000369                     IPR7            equ	873	;# 
  2410   00036A                     IPR8            equ	874	;# 
  2411   00036B                     IPR9            equ	875	;# 
  2412   00036C                     IPR10           equ	876	;# 
  2413   00036D                     IPR11           equ	877	;# 
  2414   00036E                     IPR12           equ	878	;# 
  2415   00036F                     IPR13           equ	879	;# 
  2416   000370                     IPR14           equ	880	;# 
  2417   000371                     IPR15           equ	881	;# 
  2418   000373                     STATUS_CSHAD    equ	883	;# 
  2419   000374                     WREG_CSHAD      equ	884	;# 
  2420   000375                     BSR_CSHAD       equ	885	;# 
  2421   000376                     SHADCON         equ	886	;# 
  2422   000377                     STATUS_SHAD     equ	887	;# 
  2423   000378                     WREG_SHAD       equ	888	;# 
  2424   000379                     BSR_SHAD        equ	889	;# 
  2425   00037A                     PCLATH_SHAD     equ	890	;# 
  2426   00037B                     PCLATU_SHAD     equ	891	;# 
  2427   00037C                     FSR0SH          equ	892	;# 
  2428   00037C                     FSR0L_SHAD      equ	892	;# 
  2429   00037D                     FSR0H_SHAD      equ	893	;# 
  2430   00037E                     FSR1SH          equ	894	;# 
  2431   00037E                     FSR1L_SHAD      equ	894	;# 
  2432   00037F                     FSR1H_SHAD      equ	895	;# 
  2433   000380                     FSR2SH          equ	896	;# 
  2434   000380                     FSR2L_SHAD      equ	896	;# 
  2435   000381                     FSR2H_SHAD      equ	897	;# 
  2436   000382                     PRODSH          equ	898	;# 
  2437   000382                     PRODL_SHAD      equ	898	;# 
  2438   000383                     PRODH_SHAD      equ	899	;# 
  2439   0003BC                     CWG1CLK         equ	956	;# 
  2440   0003BC                     CWG1CLKCON      equ	956	;# 
  2441   0003BD                     CWG1ISM         equ	957	;# 
  2442   0003BD                     CWG1DAT         equ	957	;# 
  2443   0003BE                     CWG1DBR         equ	958	;# 
  2444   0003BF                     CWG1DBF         equ	959	;# 
  2445   0003C0                     CWG1CON0        equ	960	;# 
  2446   0003C1                     CWG1CON1        equ	961	;# 
  2447   0003C2                     CWG1AS0         equ	962	;# 
  2448   0003C3                     CWG1AS1         equ	963	;# 
  2449   0003C4                     CWG1STR         equ	964	;# 
  2450   0003C5                     CWG2CLK         equ	965	;# 
  2451   0003C5                     CWG2CLKCON      equ	965	;# 
  2452   0003C6                     CWG2ISM         equ	966	;# 
  2453   0003C6                     CWG2DAT         equ	966	;# 
  2454   0003C7                     CWG2DBR         equ	967	;# 
  2455   0003C8                     CWG2DBF         equ	968	;# 
  2456   0003C9                     CWG2CON0        equ	969	;# 
  2457   0003CA                     CWG2CON1        equ	970	;# 
  2458   0003CB                     CWG2AS0         equ	971	;# 
  2459   0003CC                     CWG2AS1         equ	972	;# 
  2460   0003CD                     CWG2STR         equ	973	;# 
  2461   0003CE                     CWG3CLK         equ	974	;# 
  2462   0003CE                     CWG3CLKCON      equ	974	;# 
  2463   0003CF                     CWG3ISM         equ	975	;# 
  2464   0003CF                     CWG3DAT         equ	975	;# 
  2465   0003D0                     CWG3DBR         equ	976	;# 
  2466   0003D1                     CWG3DBF         equ	977	;# 
  2467   0003D2                     CWG3CON0        equ	978	;# 
  2468   0003D3                     CWG3CON1        equ	979	;# 
  2469   0003D4                     CWG3AS0         equ	980	;# 
  2470   0003D5                     CWG3AS1         equ	981	;# 
  2471   0003D6                     CWG3STR         equ	982	;# 
  2472   0003D7                     FVRCON          equ	983	;# 
  2473   0003D8                     ADCPCON         equ	984	;# 
  2474   0003D8                     ADCP            equ	984	;# 
  2475   0003D9                     ADLTH           equ	985	;# 
  2476   0003D9                     ADLTHL          equ	985	;# 
  2477   0003DA                     ADLTHH          equ	986	;# 
  2478   0003DB                     ADUTH           equ	987	;# 
  2479   0003DB                     ADUTHL          equ	987	;# 
  2480   0003DC                     ADUTHH          equ	988	;# 
  2481   0003DD                     ADERR           equ	989	;# 
  2482   0003DD                     ADERRL          equ	989	;# 
  2483   0003DE                     ADERRH          equ	990	;# 
  2484   0003DF                     ADSTPT          equ	991	;# 
  2485   0003DF                     ADSTPTL         equ	991	;# 
  2486   0003E0                     ADSTPTH         equ	992	;# 
  2487   0003E1                     ADFLTR          equ	993	;# 
  2488   0003E1                     ADFLTRL         equ	993	;# 
  2489   0003E2                     ADFLTRH         equ	994	;# 
  2490   0003E3                     ADACC           equ	995	;# 
  2491   0003E3                     ADACCL          equ	995	;# 
  2492   0003E4                     ADACCH          equ	996	;# 
  2493   0003E5                     ADACCU          equ	997	;# 
  2494   0003E6                     ADCNT           equ	998	;# 
  2495   0003E7                     ADRPT           equ	999	;# 
  2496   0003E8                     ADPREV          equ	1000	;# 
  2497   0003E8                     ADPREVL         equ	1000	;# 
  2498   0003E9                     ADPREVH         equ	1001	;# 
  2499   0003EA                     ADRES           equ	1002	;# 
  2500   0003EA                     ADRESL          equ	1002	;# 
  2501   0003EB                     ADRESH          equ	1003	;# 
  2502   0003EC                     ADPCH           equ	1004	;# 
  2503   0003EE                     ADACQ           equ	1006	;# 
  2504   0003EE                     ADACQL          equ	1006	;# 
  2505   0003EF                     ADACQH          equ	1007	;# 
  2506   0003F0                     ADCAP           equ	1008	;# 
  2507   0003F1                     ADPRE           equ	1009	;# 
  2508   0003F1                     ADPREL          equ	1009	;# 
  2509   0003F2                     ADPREH          equ	1010	;# 
  2510   0003F3                     ADCON0          equ	1011	;# 
  2511   0003F4                     ADCON1          equ	1012	;# 
  2512   0003F5                     ADCON2          equ	1013	;# 
  2513   0003F6                     ADCON3          equ	1014	;# 
  2514   0003F7                     ADSTAT          equ	1015	;# 
  2515   0003F8                     ADREF           equ	1016	;# 
  2516   0003F9                     ADACT           equ	1017	;# 
  2517   0003FA                     ADCLK           equ	1018	;# 
  2518   000400                     ANSELA          equ	1024	;# 
  2519   000401                     WPUA            equ	1025	;# 
  2520   000402                     ODCONA          equ	1026	;# 
  2521   000403                     SLRCONA         equ	1027	;# 
  2522   000404                     INLVLA          equ	1028	;# 
  2523   000405                     IOCAP           equ	1029	;# 
  2524   000406                     IOCAN           equ	1030	;# 
  2525   000407                     IOCAF           equ	1031	;# 
  2526   000408                     ANSELB          equ	1032	;# 
  2527   000409                     WPUB            equ	1033	;# 
  2528   00040A                     ODCONB          equ	1034	;# 
  2529   00040B                     SLRCONB         equ	1035	;# 
  2530   00040C                     INLVLB          equ	1036	;# 
  2531   00040D                     IOCBP           equ	1037	;# 
  2532   00040E                     IOCBN           equ	1038	;# 
  2533   00040F                     IOCBF           equ	1039	;# 
  2534   000410                     ANSELC          equ	1040	;# 
  2535   000411                     WPUC            equ	1041	;# 
  2536   000412                     ODCONC          equ	1042	;# 
  2537   000413                     SLRCONC         equ	1043	;# 
  2538   000414                     INLVLC          equ	1044	;# 
  2539   000415                     IOCCP           equ	1045	;# 
  2540   000416                     IOCCN           equ	1046	;# 
  2541   000417                     IOCCF           equ	1047	;# 
  2542   000418                     ANSELD          equ	1048	;# 
  2543   000419                     WPUD            equ	1049	;# 
  2544   00041A                     ODCOND          equ	1050	;# 
  2545   00041B                     SLRCOND         equ	1051	;# 
  2546   00041C                     INLVLD          equ	1052	;# 
  2547   000420                     ANSELE          equ	1056	;# 
  2548   000421                     WPUE            equ	1057	;# 
  2549   000422                     ODCONE          equ	1058	;# 
  2550   000423                     SLRCONE         equ	1059	;# 
  2551   000424                     INLVLE          equ	1060	;# 
  2552   000425                     IOCEP           equ	1061	;# 
  2553   000426                     IOCEN           equ	1062	;# 
  2554   000427                     IOCEF           equ	1063	;# 
  2555   000428                     ANSELF          equ	1064	;# 
  2556   000429                     WPUF            equ	1065	;# 
  2557   00042A                     ODCONF          equ	1066	;# 
  2558   00042B                     SLRCONF         equ	1067	;# 
  2559   00042C                     INLVLF          equ	1068	;# 
  2560   000440                     NCO1ACC         equ	1088	;# 
  2561   000440                     NCO1ACCL        equ	1088	;# 
  2562   000441                     NCO1ACCH        equ	1089	;# 
  2563   000442                     NCO1ACCU        equ	1090	;# 
  2564   000443                     NCO1INC         equ	1091	;# 
  2565   000443                     NCO1INCL        equ	1091	;# 
  2566   000444                     NCO1INCH        equ	1092	;# 
  2567   000445                     NCO1INCU        equ	1093	;# 
  2568   000446                     NCO1CON         equ	1094	;# 
  2569   000447                     NCO1CLK         equ	1095	;# 
  2570   000448                     NCO2ACC         equ	1096	;# 
  2571   000448                     NCO2ACCL        equ	1096	;# 
  2572   000449                     NCO2ACCH        equ	1097	;# 
  2573   00044A                     NCO2ACCU        equ	1098	;# 
  2574   00044B                     NCO2INC         equ	1099	;# 
  2575   00044B                     NCO2INCL        equ	1099	;# 
  2576   00044C                     NCO2INCH        equ	1100	;# 
  2577   00044D                     NCO2INCU        equ	1101	;# 
  2578   00044E                     NCO2CON         equ	1102	;# 
  2579   00044F                     NCO2CLK         equ	1103	;# 
  2580   000450                     NCO3ACC         equ	1104	;# 
  2581   000450                     NCO3ACCL        equ	1104	;# 
  2582   000451                     NCO3ACCH        equ	1105	;# 
  2583   000452                     NCO3ACCU        equ	1106	;# 
  2584   000453                     NCO3INC         equ	1107	;# 
  2585   000453                     NCO3INCL        equ	1107	;# 
  2586   000454                     NCO3INCH        equ	1108	;# 
  2587   000455                     NCO3INCU        equ	1109	;# 
  2588   000456                     NCO3CON         equ	1110	;# 
  2589   000457                     NCO3CLK         equ	1111	;# 
  2590   000459                     IVTLOCK         equ	1113	;# 
  2591   00045A                     IVTAD           equ	1114	;# 
  2592   00045A                     IVTADL          equ	1114	;# 
  2593   00045B                     IVTADH          equ	1115	;# 
  2594   00045C                     IVTADU          equ	1116	;# 
  2595   00045D                     IVTBASE         equ	1117	;# 
  2596   00045D                     IVTBASEL        equ	1117	;# 
  2597   00045E                     IVTBASEH        equ	1118	;# 
  2598   00045F                     IVTBASEU        equ	1119	;# 
  2599   000460                     PWM1ERS         equ	1120	;# 
  2600   000461                     PWM1CLK         equ	1121	;# 
  2601   000462                     PWM1LDS         equ	1122	;# 
  2602   000463                     PWM1PR          equ	1123	;# 
  2603   000463                     PWM1PRL         equ	1123	;# 
  2604   000464                     PWM1PRH         equ	1124	;# 
  2605   000465                     PWM1CPRE        equ	1125	;# 
  2606   000466                     PWM1PIPOS       equ	1126	;# 
  2607   000467                     PWM1GIR         equ	1127	;# 
  2608   000468                     PWM1GIE         equ	1128	;# 
  2609   000469                     PWM1CON         equ	1129	;# 
  2610   00046A                     PWM1S1CFG       equ	1130	;# 
  2611   00046B                     PWM1S1P1        equ	1131	;# 
  2612   00046B                     PWM1S1P1L       equ	1131	;# 
  2613   00046C                     PWM1S1P1H       equ	1132	;# 
  2614   00046D                     PWM1S1P2        equ	1133	;# 
  2615   00046D                     PWM1S1P2L       equ	1133	;# 
  2616   00046E                     PWM1S1P2H       equ	1134	;# 
  2617   00046F                     PWM2ERS         equ	1135	;# 
  2618   000470                     PWM2CLK         equ	1136	;# 
  2619   000471                     PWM2LDS         equ	1137	;# 
  2620   000472                     PWM2PR          equ	1138	;# 
  2621   000472                     PWM2PRL         equ	1138	;# 
  2622   000473                     PWM2PRH         equ	1139	;# 
  2623   000474                     PWM2CPRE        equ	1140	;# 
  2624   000475                     PWM2PIPOS       equ	1141	;# 
  2625   000476                     PWM2GIR         equ	1142	;# 
  2626   000477                     PWM2GIE         equ	1143	;# 
  2627   000478                     PWM2CON         equ	1144	;# 
  2628   000479                     PWM2S1CFG       equ	1145	;# 
  2629   00047A                     PWM2S1P1        equ	1146	;# 
  2630   00047A                     PWM2S1P1L       equ	1146	;# 
  2631   00047B                     PWM2S1P1H       equ	1147	;# 
  2632   00047C                     PWM2S1P2        equ	1148	;# 
  2633   00047C                     PWM2S1P2L       equ	1148	;# 
  2634   00047D                     PWM2S1P2H       equ	1149	;# 
  2635   00047E                     PWM3ERS         equ	1150	;# 
  2636   00047F                     PWM3CLK         equ	1151	;# 
  2637   000480                     PWM3LDS         equ	1152	;# 
  2638   000481                     PWM3PR          equ	1153	;# 
  2639   000481                     PWM3PRL         equ	1153	;# 
  2640   000482                     PWM3PRH         equ	1154	;# 
  2641   000483                     PWM3CPRE        equ	1155	;# 
  2642   000484                     PWM3PIPOS       equ	1156	;# 
  2643   000485                     PWM3GIR         equ	1157	;# 
  2644   000486                     PWM3GIE         equ	1158	;# 
  2645   000487                     PWM3CON         equ	1159	;# 
  2646   000488                     PWM3S1CFG       equ	1160	;# 
  2647   000489                     PWM3S1P1        equ	1161	;# 
  2648   000489                     PWM3S1P1L       equ	1161	;# 
  2649   00048A                     PWM3S1P1H       equ	1162	;# 
  2650   00048B                     PWM3S1P2        equ	1163	;# 
  2651   00048B                     PWM3S1P2L       equ	1163	;# 
  2652   00048C                     PWM3S1P2H       equ	1164	;# 
  2653   00049C                     PWMLOAD         equ	1180	;# 
  2654   00049D                     PWMEN           equ	1181	;# 
  2655   00049E                     PIE0            equ	1182	;# 
  2656   00049F                     PIE1            equ	1183	;# 
  2657   0004A0                     PIE2            equ	1184	;# 
  2658   0004A1                     PIE3            equ	1185	;# 
  2659   0004A2                     PIE4            equ	1186	;# 
  2660   0004A3                     PIE5            equ	1187	;# 
  2661   0004A4                     PIE6            equ	1188	;# 
  2662   0004A5                     PIE7            equ	1189	;# 
  2663   0004A6                     PIE8            equ	1190	;# 
  2664   0004A7                     PIE9            equ	1191	;# 
  2665   0004A8                     PIE10           equ	1192	;# 
  2666   0004A9                     PIE11           equ	1193	;# 
  2667   0004AA                     PIE12           equ	1194	;# 
  2668   0004AB                     PIE13           equ	1195	;# 
  2669   0004AC                     PIE14           equ	1196	;# 
  2670   0004AD                     PIE15           equ	1197	;# 
  2671   0004AE                     PIR0            equ	1198	;# 
  2672   0004AF                     PIR1            equ	1199	;# 
  2673   0004B0                     PIR2            equ	1200	;# 
  2674   0004B1                     PIR3            equ	1201	;# 
  2675   0004B2                     PIR4            equ	1202	;# 
  2676   0004B3                     PIR5            equ	1203	;# 
  2677   0004B4                     PIR6            equ	1204	;# 
  2678   0004B5                     PIR7            equ	1205	;# 
  2679   0004B6                     PIR8            equ	1206	;# 
  2680   0004B7                     PIR9            equ	1207	;# 
  2681   0004B8                     PIR10           equ	1208	;# 
  2682   0004B9                     PIR11           equ	1209	;# 
  2683   0004BA                     PIR12           equ	1210	;# 
  2684   0004BB                     PIR13           equ	1211	;# 
  2685   0004BC                     PIR14           equ	1212	;# 
  2686   0004BD                     PIR15           equ	1213	;# 
  2687   0004BE                     LATA            equ	1214	;# 
  2688   0004BF                     LATB            equ	1215	;# 
  2689   0004C0                     LATC            equ	1216	;# 
  2690   0004C1                     LATD            equ	1217	;# 
  2691   0004C2                     LATE            equ	1218	;# 
  2692   0004C3                     LATF            equ	1219	;# 
  2693   0004C6                     TRISA           equ	1222	;# 
  2694   0004C7                     TRISB           equ	1223	;# 
  2695   0004C8                     TRISC           equ	1224	;# 
  2696   0004C9                     TRISD           equ	1225	;# 
  2697   0004CA                     TRISE           equ	1226	;# 
  2698   0004CB                     TRISF           equ	1227	;# 
  2699   0004CE                     PORTA           equ	1230	;# 
  2700   0004CF                     PORTB           equ	1231	;# 
  2701   0004D0                     PORTC           equ	1232	;# 
  2702   0004D1                     PORTD           equ	1233	;# 
  2703   0004D2                     PORTE           equ	1234	;# 
  2704   0004D3                     PORTF           equ	1235	;# 
  2705   0004D6                     INTCON0         equ	1238	;# 
  2706   0004D7                     INTCON1         equ	1239	;# 
  2707   0004D8                     STATUS          equ	1240	;# 
  2708   0004D9                     FSR2            equ	1241	;# 
  2709   0004D9                     FSR2L           equ	1241	;# 
  2710   0004DA                     FSR2H           equ	1242	;# 
  2711   0004DB                     PLUSW2          equ	1243	;# 
  2712   0004DC                     PREINC2         equ	1244	;# 
  2713   0004DD                     POSTDEC2        equ	1245	;# 
  2714   0004DE                     POSTINC2        equ	1246	;# 
  2715   0004DF                     INDF2           equ	1247	;# 
  2716   0004E0                     BSR             equ	1248	;# 
  2717   0004E1                     FSR1            equ	1249	;# 
  2718   0004E1                     FSR1L           equ	1249	;# 
  2719   0004E2                     FSR1H           equ	1250	;# 
  2720   0004E3                     PLUSW1          equ	1251	;# 
  2721   0004E4                     PREINC1         equ	1252	;# 
  2722   0004E5                     POSTDEC1        equ	1253	;# 
  2723   0004E6                     POSTINC1        equ	1254	;# 
  2724   0004E7                     INDF1           equ	1255	;# 
  2725   0004E8                     WREG            equ	1256	;# 
  2726   0004E9                     FSR0            equ	1257	;# 
  2727   0004E9                     FSR0L           equ	1257	;# 
  2728   0004EA                     FSR0H           equ	1258	;# 
  2729   0004EB                     PLUSW0          equ	1259	;# 
  2730   0004EC                     PREINC0         equ	1260	;# 
  2731   0004ED                     POSTDEC0        equ	1261	;# 
  2732   0004EE                     POSTINC0        equ	1262	;# 
  2733   0004EF                     INDF0           equ	1263	;# 
  2734   0004F0                     PCON0           equ	1264	;# 
  2735   0004F1                     PCON1           equ	1265	;# 
  2736   0004F2                     CPUDOZE         equ	1266	;# 
  2737   0004F3                     PROD            equ	1267	;# 
  2738   0004F3                     PRODL           equ	1267	;# 
  2739   0004F4                     PRODH           equ	1268	;# 
  2740   0004F5                     TABLAT          equ	1269	;# 
  2741   0004F6                     TBLPTR          equ	1270	;# 
  2742   0004F6                     TBLPTRL         equ	1270	;# 
  2743   0004F7                     TBLPTRH         equ	1271	;# 
  2744   0004F8                     TBLPTRU         equ	1272	;# 
  2745   0004F9                     PCLAT           equ	1273	;# 
  2746   0004F9                     PCL             equ	1273	;# 
  2747   0004FA                     PCLATH          equ	1274	;# 
  2748   0004FB                     PCLATU          equ	1275	;# 
  2749   0004FC                     STKPTR          equ	1276	;# 
  2750   0004FD                     TOS             equ	1277	;# 
  2751   0004FD                     TOSL            equ	1277	;# 
  2752   0004FE                     TOSH            equ	1278	;# 
  2753   0004FF                     TOSU            equ	1279	;# 
  2754   000039                     CLKRCON         equ	57	;# 
  2755   00003A                     CLKRCLK         equ	58	;# 
  2756   000040                     NVMCON0         equ	64	;# 
  2757   000041                     NVMCON1         equ	65	;# 
  2758   000042                     NVMLOCK         equ	66	;# 
  2759   000043                     NVMADR          equ	67	;# 
  2760   000043                     NVMADRL         equ	67	;# 
  2761   000044                     NVMADRH         equ	68	;# 
  2762   000045                     NVMADRU         equ	69	;# 
  2763   000046                     NVMDAT          equ	70	;# 
  2764   000046                     NVMDATL         equ	70	;# 
  2765   000047                     NVMDATH         equ	71	;# 
  2766   000048                     VREGCON         equ	72	;# 
  2767   000049                     BORCON          equ	73	;# 
  2768   00004A                     HLVDCON0        equ	74	;# 
  2769   00004B                     HLVDCON1        equ	75	;# 
  2770   00004C                     ZCDCON          equ	76	;# 
  2771   000060                     PMD0            equ	96	;# 
  2772   000061                     PMD1            equ	97	;# 
  2773   000063                     PMD3            equ	99	;# 
  2774   000064                     PMD4            equ	100	;# 
  2775   000065                     PMD5            equ	101	;# 
  2776   000066                     PMD6            equ	102	;# 
  2777   000067                     PMD7            equ	103	;# 
  2778   000068                     PMD8            equ	104	;# 
  2779   00006A                     MD1CON0         equ	106	;# 
  2780   00006B                     MD1CON1         equ	107	;# 
  2781   00006C                     MD1SRC          equ	108	;# 
  2782   00006D                     MD1CARL         equ	109	;# 
  2783   00006E                     MD1CARH         equ	110	;# 
  2784   00006F                     CMOUT           equ	111	;# 
  2785   000070                     CM1CON0         equ	112	;# 
  2786   000071                     CM1CON1         equ	113	;# 
  2787   000072                     CM1NCH          equ	114	;# 
  2788   000073                     CM1PCH          equ	115	;# 
  2789   000074                     CM2CON0         equ	116	;# 
  2790   000075                     CM2CON1         equ	117	;# 
  2791   000076                     CM2NCH          equ	118	;# 
  2792   000077                     CM2PCH          equ	119	;# 
  2793   000078                     WDTCON0         equ	120	;# 
  2794   000079                     WDTCON1         equ	121	;# 
  2795   00007A                     WDTPS           equ	122	;# 
  2796   00007A                     WDTPSL          equ	122	;# 
  2797   00007B                     WDTPSH          equ	123	;# 
  2798   00007C                     WDTTMR          equ	124	;# 
  2799   00007D                     DAC1DAT         equ	125	;# 
  2800   00007D                     DAC1DATL        equ	125	;# 
  2801   00007F                     DAC1CON         equ	127	;# 
  2802   000080                     SPI1RXB         equ	128	;# 
  2803   000081                     SPI1TXB         equ	129	;# 
  2804   000082                     SPI1TCNT        equ	130	;# 
  2805   000082                     SPI1TCNTL       equ	130	;# 
  2806   000083                     SPI1TCNTH       equ	131	;# 
  2807   000084                     SPI1CON0        equ	132	;# 
  2808   000085                     SPI1CON1        equ	133	;# 
  2809   000086                     SPI1CON2        equ	134	;# 
  2810   000087                     SPI1STATUS      equ	135	;# 
  2811   000088                     SPI1TWIDTH      equ	136	;# 
  2812   000089                     SPI1BAUD        equ	137	;# 
  2813   00008A                     SPI1INTF        equ	138	;# 
  2814   00008B                     SPI1INTE        equ	139	;# 
  2815   00008C                     SPI1CLK         equ	140	;# 
  2816   00008D                     SPI2RXB         equ	141	;# 
  2817   00008E                     SPI2TXB         equ	142	;# 
  2818   00008F                     SPI2TCNT        equ	143	;# 
  2819   00008F                     SPI2TCNTL       equ	143	;# 
  2820   000090                     SPI2TCNTH       equ	144	;# 
  2821   000091                     SPI2CON0        equ	145	;# 
  2822   000092                     SPI2CON1        equ	146	;# 
  2823   000093                     SPI2CON2        equ	147	;# 
  2824   000094                     SPI2STATUS      equ	148	;# 
  2825   000095                     SPI2TWIDTH      equ	149	;# 
  2826   000096                     SPI2BAUD        equ	150	;# 
  2827   000097                     SPI2INTF        equ	151	;# 
  2828   000098                     SPI2INTE        equ	152	;# 
  2829   000099                     SPI2CLK         equ	153	;# 
  2830   0000AC                     ACTCON          equ	172	;# 
  2831   0000AD                     OSCCON1         equ	173	;# 
  2832   0000AE                     OSCCON2         equ	174	;# 
  2833   0000AF                     OSCCON3         equ	175	;# 
  2834   0000B0                     OSCTUNE         equ	176	;# 
  2835   0000B1                     OSCFRQ          equ	177	;# 
  2836   0000B1                     OSCFREQ         equ	177	;# 
  2837   0000B2                     OSCSTAT         equ	178	;# 
  2838   0000B2                     OSCSTAT1        equ	178	;# 
  2839   0000B3                     OSCEN           equ	179	;# 
  2840   0000B4                     PRLOCK          equ	180	;# 
  2841   0000B5                     SCANPR          equ	181	;# 
  2842   0000B6                     DMA1PR          equ	182	;# 
  2843   0000B7                     DMA2PR          equ	183	;# 
  2844   0000B8                     DMA3PR          equ	184	;# 
  2845   0000B9                     DMA4PR          equ	185	;# 
  2846   0000BA                     DMA5PR          equ	186	;# 
  2847   0000BB                     DMA6PR          equ	187	;# 
  2848   0000BE                     MAINPR          equ	190	;# 
  2849   0000BF                     ISRPR           equ	191	;# 
  2850   0000D4                     CLCDATA         equ	212	;# 
  2851   0000D5                     CLCSELECT       equ	213	;# 
  2852   0000D6                     CLCnCON         equ	214	;# 
  2853   0000D7                     CLCnPOL         equ	215	;# 
  2854   0000D8                     CLCnSEL0        equ	216	;# 
  2855   0000D9                     CLCnSEL1        equ	217	;# 
  2856   0000DA                     CLCnSEL2        equ	218	;# 
  2857   0000DB                     CLCnSEL3        equ	219	;# 
  2858   0000DC                     CLCnGLS0        equ	220	;# 
  2859   0000DD                     CLCnGLS1        equ	221	;# 
  2860   0000DE                     CLCnGLS2        equ	222	;# 
  2861   0000DF                     CLCnGLS3        equ	223	;# 
  2862   0000E8                     DMASELECT       equ	232	;# 
  2863   0000E9                     DMAnBUF         equ	233	;# 
  2864   0000EA                     DMAnDCNT        equ	234	;# 
  2865   0000EA                     DMAnDCNTL       equ	234	;# 
  2866   0000EB                     DMAnDCNTH       equ	235	;# 
  2867   0000EC                     DMAnDPTR        equ	236	;# 
  2868   0000EC                     DMAnDPTRL       equ	236	;# 
  2869   0000ED                     DMAnDPTRH       equ	237	;# 
  2870   0000EE                     DMAnDSZ         equ	238	;# 
  2871   0000EE                     DMAnDSZL        equ	238	;# 
  2872   0000EF                     DMAnDSZH        equ	239	;# 
  2873   0000F0                     DMAnDSA         equ	240	;# 
  2874   0000F0                     DMAnDSAL        equ	240	;# 
  2875   0000F1                     DMAnDSAH        equ	241	;# 
  2876   0000F2                     DMAnSCNT        equ	242	;# 
  2877   0000F2                     DMAnSCNTL       equ	242	;# 
  2878   0000F3                     DMAnSCNTH       equ	243	;# 
  2879   0000F4                     DMAnSPTR        equ	244	;# 
  2880   0000F4                     DMAnSPTRL       equ	244	;# 
  2881   0000F5                     DMAnSPTRH       equ	245	;# 
  2882   0000F6                     DMAnSPTRU       equ	246	;# 
  2883   0000F7                     DMAnSSZ         equ	247	;# 
  2884   0000F7                     DMAnSSZL        equ	247	;# 
  2885   0000F8                     DMAnSSZH        equ	248	;# 
  2886   0000F9                     DMAnSSA         equ	249	;# 
  2887   0000F9                     DMAnSSAL        equ	249	;# 
  2888   0000FA                     DMAnSSAH        equ	250	;# 
  2889   0000FB                     DMAnSSAU        equ	251	;# 
  2890   0000FC                     DMAnCON0        equ	252	;# 
  2891   0000FD                     DMAnCON1        equ	253	;# 
  2892   0000FE                     DMAnAIRQ        equ	254	;# 
  2893   0000FF                     DMAnSIRQ        equ	255	;# 
  2894   000200                     PPSLOCK         equ	512	;# 
  2895   000201                     RA0PPS          equ	513	;# 
  2896   000202                     RA1PPS          equ	514	;# 
  2897   000203                     RA2PPS          equ	515	;# 
  2898   000204                     RA3PPS          equ	516	;# 
  2899   000205                     RA4PPS          equ	517	;# 
  2900   000206                     RA5PPS          equ	518	;# 
  2901   000207                     RA6PPS          equ	519	;# 
  2902   000208                     RA7PPS          equ	520	;# 
  2903   000209                     RB0PPS          equ	521	;# 
  2904   00020A                     RB1PPS          equ	522	;# 
  2905   00020B                     RB2PPS          equ	523	;# 
  2906   00020C                     RB3PPS          equ	524	;# 
  2907   00020D                     RB4PPS          equ	525	;# 
  2908   00020E                     RB5PPS          equ	526	;# 
  2909   00020F                     RB6PPS          equ	527	;# 
  2910   000210                     RB7PPS          equ	528	;# 
  2911   000211                     RC0PPS          equ	529	;# 
  2912   000212                     RC1PPS          equ	530	;# 
  2913   000213                     RC2PPS          equ	531	;# 
  2914   000214                     RC3PPS          equ	532	;# 
  2915   000215                     RC4PPS          equ	533	;# 
  2916   000216                     RC5PPS          equ	534	;# 
  2917   000217                     RC6PPS          equ	535	;# 
  2918   000218                     RC7PPS          equ	536	;# 
  2919   000219                     RD0PPS          equ	537	;# 
  2920   00021A                     RD1PPS          equ	538	;# 
  2921   00021B                     RD2PPS          equ	539	;# 
  2922   00021C                     RD3PPS          equ	540	;# 
  2923   00021D                     RD4PPS          equ	541	;# 
  2924   00021E                     RD5PPS          equ	542	;# 
  2925   00021F                     RD6PPS          equ	543	;# 
  2926   000220                     RD7PPS          equ	544	;# 
  2927   000221                     RE0PPS          equ	545	;# 
  2928   000222                     RE1PPS          equ	546	;# 
  2929   000223                     RE2PPS          equ	547	;# 
  2930   000229                     RF0PPS          equ	553	;# 
  2931   00022A                     RF1PPS          equ	554	;# 
  2932   00022B                     RF2PPS          equ	555	;# 
  2933   00022C                     RF3PPS          equ	556	;# 
  2934   00022D                     RF4PPS          equ	557	;# 
  2935   00022E                     RF5PPS          equ	558	;# 
  2936   00022F                     RF6PPS          equ	559	;# 
  2937   000230                     RF7PPS          equ	560	;# 
  2938   00023E                     INT0PPS         equ	574	;# 
  2939   00023F                     INT1PPS         equ	575	;# 
  2940   000240                     INT2PPS         equ	576	;# 
  2941   000241                     T0CKIPPS        equ	577	;# 
  2942   000242                     T1CKIPPS        equ	578	;# 
  2943   000243                     T1GPPS          equ	579	;# 
  2944   000244                     T3CKIPPS        equ	580	;# 
  2945   000245                     T3GPPS          equ	581	;# 
  2946   000246                     T5CKIPPS        equ	582	;# 
  2947   000247                     T5GPPS          equ	583	;# 
  2948   000248                     T2INPPS         equ	584	;# 
  2949   000249                     T4INPPS         equ	585	;# 
  2950   00024A                     T6INPPS         equ	586	;# 
  2951   00024F                     CCP1PPS         equ	591	;# 
  2952   000250                     CCP2PPS         equ	592	;# 
  2953   000251                     CCP3PPS         equ	593	;# 
  2954   000253                     PWM1ERSPPS      equ	595	;# 
  2955   000254                     PWM2ERSPPS      equ	596	;# 
  2956   000255                     PWM3ERSPPS      equ	597	;# 
  2957   000257                     PWMIN0PPS       equ	599	;# 
  2958   000258                     PWMIN1PPS       equ	600	;# 
  2959   000259                     SMT1WINPPS      equ	601	;# 
  2960   00025A                     SMT1SIGPPS      equ	602	;# 
  2961   00025B                     CWG1PPS         equ	603	;# 
  2962   00025B                     CWG1INPPS       equ	603	;# 
  2963   00025C                     CWG2PPS         equ	604	;# 
  2964   00025C                     CWG2INPPS       equ	604	;# 
  2965   00025D                     CWG3PPS         equ	605	;# 
  2966   00025D                     CWG3INPPS       equ	605	;# 
  2967   00025E                     MD1CARLPPS      equ	606	;# 
  2968   00025E                     MDCARLPPS       equ	606	;# 
  2969   00025F                     MD1CARHPPS      equ	607	;# 
  2970   00025F                     MDCARHPPS       equ	607	;# 
  2971   000260                     MD1SRCPPS       equ	608	;# 
  2972   000260                     MDSRCPPS        equ	608	;# 
  2973   000261                     CLCIN0PPS       equ	609	;# 
  2974   000262                     CLCIN1PPS       equ	610	;# 
  2975   000263                     CLCIN2PPS       equ	611	;# 
  2976   000264                     CLCIN3PPS       equ	612	;# 
  2977   000265                     CLCIN4PPS       equ	613	;# 
  2978   000266                     CLCIN5PPS       equ	614	;# 
  2979   000267                     CLCIN6PPS       equ	615	;# 
  2980   000268                     CLCIN7PPS       equ	616	;# 
  2981   000269                     ADACTPPS        equ	617	;# 
  2982   00026A                     SPI1SCKPPS      equ	618	;# 
  2983   00026B                     SPI1SDIPPS      equ	619	;# 
  2984   00026C                     SPI1SSPPS       equ	620	;# 
  2985   00026D                     SPI2SCKPPS      equ	621	;# 
  2986   00026E                     SPI2SDIPPS      equ	622	;# 
  2987   00026F                     SPI2SSPPS       equ	623	;# 
  2988   000270                     I2C1SDAPPS      equ	624	;# 
  2989   000271                     I2C1SCLPPS      equ	625	;# 
  2990   000272                     U1RXPPS         equ	626	;# 
  2991   000273                     U1CTSPPS        equ	627	;# 
  2992   000274                     U2RXPPS         equ	628	;# 
  2993   000275                     U2CTSPPS        equ	629	;# 
  2994   000276                     U3RXPPS         equ	630	;# 
  2995   000277                     U3CTSPPS        equ	631	;# 
  2996   000278                     U4RXPPS         equ	632	;# 
  2997   000279                     U4CTSPPS        equ	633	;# 
  2998   00027A                     U5RXPPS         equ	634	;# 
  2999   00027B                     U5CTSPPS        equ	635	;# 
  3000   000286                     RC4I2C          equ	646	;# 
  3001   000287                     RC3I2C          equ	647	;# 
  3002   000288                     RB2I2C          equ	648	;# 
  3003   000289                     RB1I2C          equ	649	;# 
  3004   00028B                     I2C1RXB         equ	651	;# 
  3005   00028C                     I2C1TXB         equ	652	;# 
  3006   00028D                     I2C1CNT         equ	653	;# 
  3007   00028E                     I2C1ADB0        equ	654	;# 
  3008   00028F                     I2C1ADB1        equ	655	;# 
  3009   000290                     I2C1ADR0        equ	656	;# 
  3010   000291                     I2C1ADR1        equ	657	;# 
  3011   000292                     I2C1ADR2        equ	658	;# 
  3012   000293                     I2C1ADR3        equ	659	;# 
  3013   000294                     I2C1CON0        equ	660	;# 
  3014   000295                     I2C1CON1        equ	661	;# 
  3015   000296                     I2C1CON2        equ	662	;# 
  3016   000297                     I2C1ERR         equ	663	;# 
  3017   000298                     I2C1STAT0       equ	664	;# 
  3018   000299                     I2C1STAT1       equ	665	;# 
  3019   00029A                     I2C1PIR         equ	666	;# 
  3020   00029B                     I2C1PIE         equ	667	;# 
  3021   00029C                     I2C1CLK         equ	668	;# 
  3022   00029D                     I2C1BTO         equ	669	;# 
  3023   0002A1                     U1RXB           equ	673	;# 
  3024   0002A1                     U1RXBL          equ	673	;# 
  3025   0002A2                     U1RXCHK         equ	674	;# 
  3026   0002A3                     U1TXB           equ	675	;# 
  3027   0002A3                     U1TXBL          equ	675	;# 
  3028   0002A4                     U1TXCHK         equ	676	;# 
  3029   0002A5                     U1P1            equ	677	;# 
  3030   0002A5                     U1P1L           equ	677	;# 
  3031   0002A6                     U1P1H           equ	678	;# 
  3032   0002A7                     U1P2            equ	679	;# 
  3033   0002A7                     U1P2L           equ	679	;# 
  3034   0002A8                     U1P2H           equ	680	;# 
  3035   0002A9                     U1P3            equ	681	;# 
  3036   0002A9                     U1P3L           equ	681	;# 
  3037   0002AA                     U1P3H           equ	682	;# 
  3038   0002AB                     U1CON0          equ	683	;# 
  3039   0002AC                     U1CON1          equ	684	;# 
  3040   0002AD                     U1CON2          equ	685	;# 
  3041   0002AE                     U1BRG           equ	686	;# 
  3042   0002AE                     U1BRGL          equ	686	;# 
  3043   0002AF                     U1BRGH          equ	687	;# 
  3044   0002B0                     U1FIFO          equ	688	;# 
  3045   0002B1                     U1UIR           equ	689	;# 
  3046   0002B2                     U1ERRIR         equ	690	;# 
  3047   0002B3                     U1ERRIE         equ	691	;# 
  3048   0002B4                     U2RXB           equ	692	;# 
  3049   0002B4                     U2RXBL          equ	692	;# 
  3050   0002B6                     U2TXB           equ	694	;# 
  3051   0002B6                     U2TXBL          equ	694	;# 
  3052   0002B8                     U2P1            equ	696	;# 
  3053   0002B8                     U2P1L           equ	696	;# 
  3054   0002BA                     U2P2            equ	698	;# 
  3055   0002BA                     U2P2L           equ	698	;# 
  3056   0002BC                     U2P3            equ	700	;# 
  3057   0002BC                     U2P3L           equ	700	;# 
  3058   0002BE                     U2CON0          equ	702	;# 
  3059   0002BF                     U2CON1          equ	703	;# 
  3060   0002C0                     U2CON2          equ	704	;# 
  3061   0002C1                     U2BRG           equ	705	;# 
  3062   0002C1                     U2BRGL          equ	705	;# 
  3063   0002C2                     U2BRGH          equ	706	;# 
  3064   0002C3                     U2FIFO          equ	707	;# 
  3065   0002C4                     U2UIR           equ	708	;# 
  3066   0002C5                     U2ERRIR         equ	709	;# 
  3067   0002C6                     U2ERRIE         equ	710	;# 
  3068   0002C7                     U3RXB           equ	711	;# 
  3069   0002C7                     U3RXBL          equ	711	;# 
  3070   0002C9                     U3TXB           equ	713	;# 
  3071   0002C9                     U3TXBL          equ	713	;# 
  3072   0002CB                     U3P1            equ	715	;# 
  3073   0002CB                     U3P1L           equ	715	;# 
  3074   0002CD                     U3P2            equ	717	;# 
  3075   0002CD                     U3P2L           equ	717	;# 
  3076   0002CF                     U3P3            equ	719	;# 
  3077   0002CF                     U3P3L           equ	719	;# 
  3078   0002D1                     U3CON0          equ	721	;# 
  3079   0002D2                     U3CON1          equ	722	;# 
  3080   0002D3                     U3CON2          equ	723	;# 
  3081   0002D4                     U3BRG           equ	724	;# 
  3082   0002D4                     U3BRGL          equ	724	;# 
  3083   0002D5                     U3BRGH          equ	725	;# 
  3084   0002D6                     U3FIFO          equ	726	;# 
  3085   0002D7                     U3UIR           equ	727	;# 
  3086   0002D8                     U3ERRIR         equ	728	;# 
  3087   0002D9                     U3ERRIE         equ	729	;# 
  3088   0002DA                     U4RXB           equ	730	;# 
  3089   0002DA                     U4RXBL          equ	730	;# 
  3090   0002DC                     U4TXB           equ	732	;# 
  3091   0002DC                     U4TXBL          equ	732	;# 
  3092   0002DE                     U4P1            equ	734	;# 
  3093   0002DE                     U4P1L           equ	734	;# 
  3094   0002E0                     U4P2            equ	736	;# 
  3095   0002E0                     U4P2L           equ	736	;# 
  3096   0002E2                     U4P3            equ	738	;# 
  3097   0002E2                     U4P3L           equ	738	;# 
  3098   0002E4                     U4CON0          equ	740	;# 
  3099   0002E5                     U4CON1          equ	741	;# 
  3100   0002E6                     U4CON2          equ	742	;# 
  3101   0002E7                     U4BRG           equ	743	;# 
  3102   0002E7                     U4BRGL          equ	743	;# 
  3103   0002E8                     U4BRGH          equ	744	;# 
  3104   0002E9                     U4FIFO          equ	745	;# 
  3105   0002EA                     U4UIR           equ	746	;# 
  3106   0002EB                     U4ERRIR         equ	747	;# 
  3107   0002EC                     U4ERRIE         equ	748	;# 
  3108   0002ED                     U5RXB           equ	749	;# 
  3109   0002ED                     U5RXBL          equ	749	;# 
  3110   0002EF                     U5TXB           equ	751	;# 
  3111   0002EF                     U5TXBL          equ	751	;# 
  3112   0002F1                     U5P1            equ	753	;# 
  3113   0002F1                     U5P1L           equ	753	;# 
  3114   0002F3                     U5P2            equ	755	;# 
  3115   0002F3                     U5P2L           equ	755	;# 
  3116   0002F5                     U5P3            equ	757	;# 
  3117   0002F5                     U5P3L           equ	757	;# 
  3118   0002F7                     U5CON0          equ	759	;# 
  3119   0002F8                     U5CON1          equ	760	;# 
  3120   0002F9                     U5CON2          equ	761	;# 
  3121   0002FA                     U5BRG           equ	762	;# 
  3122   0002FA                     U5BRGL          equ	762	;# 
  3123   0002FB                     U5BRGH          equ	763	;# 
  3124   0002FC                     U5FIFO          equ	764	;# 
  3125   0002FD                     U5UIR           equ	765	;# 
  3126   0002FE                     U5ERRIR         equ	766	;# 
  3127   0002FF                     U5ERRIE         equ	767	;# 
  3128   000300                     SMT1TMR         equ	768	;# 
  3129   000300                     SMT1TMRL        equ	768	;# 
  3130   000301                     SMT1TMRH        equ	769	;# 
  3131   000302                     SMT1TMRU        equ	770	;# 
  3132   000303                     SMT1CPR         equ	771	;# 
  3133   000303                     SMT1CPRL        equ	771	;# 
  3134   000304                     SMT1CPRH        equ	772	;# 
  3135   000305                     SMT1CPRU        equ	773	;# 
  3136   000306                     SMT1CPW         equ	774	;# 
  3137   000306                     SMT1CPWL        equ	774	;# 
  3138   000307                     SMT1CPWH        equ	775	;# 
  3139   000308                     SMT1CPWU        equ	776	;# 
  3140   000309                     SMT1PR          equ	777	;# 
  3141   000309                     SMT1PRL         equ	777	;# 
  3142   00030A                     SMT1PRH         equ	778	;# 
  3143   00030B                     SMT1PRU         equ	779	;# 
  3144   00030C                     SMT1CON0        equ	780	;# 
  3145   00030D                     SMT1CON1        equ	781	;# 
  3146   00030E                     SMT1STAT        equ	782	;# 
  3147   00030F                     SMT1CLK         equ	783	;# 
  3148   000310                     SMT1SIG         equ	784	;# 
  3149   000311                     SMT1WIN         equ	785	;# 
  3150   000318                     TMR0L           equ	792	;# 
  3151   000318                     TMR0            equ	792	;# 
  3152   000319                     TMR0H           equ	793	;# 
  3153   000319                     PR0             equ	793	;# 
  3154   00031A                     T0CON0          equ	794	;# 
  3155   00031B                     T0CON1          equ	795	;# 
  3156   00031C                     TMR1            equ	796	;# 
  3157   00031C                     TMR1L           equ	796	;# 
  3158   00031D                     TMR1H           equ	797	;# 
  3159   00031E                     T1CON           equ	798	;# 
  3160   00031E                     TMR1CON         equ	798	;# 
  3161   00031F                     T1GCON          equ	799	;# 
  3162   00031F                     TMR1GCON        equ	799	;# 
  3163   000320                     T1GATE          equ	800	;# 
  3164   000320                     TMR1GATE        equ	800	;# 
  3165   000321                     T1CLK           equ	801	;# 
  3166   000321                     TMR1CLK         equ	801	;# 
  3167   000321                     PR1             equ	801	;# 
  3168   000322                     T2TMR           equ	802	;# 
  3169   000322                     TMR2            equ	802	;# 
  3170   000323                     T2PR            equ	803	;# 
  3171   000323                     PR2             equ	803	;# 
  3172   000324                     T2CON           equ	804	;# 
  3173   000325                     T2HLT           equ	805	;# 
  3174   000326                     T2CLKCON        equ	806	;# 
  3175   000326                     T2CLK           equ	806	;# 
  3176   000327                     T2RST           equ	807	;# 
  3177   000328                     TMR3            equ	808	;# 
  3178   000328                     TMR3L           equ	808	;# 
  3179   000329                     TMR3H           equ	809	;# 
  3180   00032A                     T3CON           equ	810	;# 
  3181   00032A                     TMR3CON         equ	810	;# 
  3182   00032B                     T3GCON          equ	811	;# 
  3183   00032B                     TMR3GCON        equ	811	;# 
  3184   00032C                     T3GATE          equ	812	;# 
  3185   00032C                     TMR3GATE        equ	812	;# 
  3186   00032D                     T3CLK           equ	813	;# 
  3187   00032D                     TMR3CLK         equ	813	;# 
  3188   00032D                     PR3             equ	813	;# 
  3189   00032E                     T4TMR           equ	814	;# 
  3190   00032E                     TMR4            equ	814	;# 
  3191   00032F                     T4PR            equ	815	;# 
  3192   00032F                     PR4             equ	815	;# 
  3193   000330                     T4CON           equ	816	;# 
  3194   000331                     T4HLT           equ	817	;# 
  3195   000332                     T4CLKCON        equ	818	;# 
  3196   000332                     T4CLK           equ	818	;# 
  3197   000333                     T4RST           equ	819	;# 
  3198   000334                     TMR5            equ	820	;# 
  3199   000334                     TMR5L           equ	820	;# 
  3200   000335                     TMR5H           equ	821	;# 
  3201   000336                     T5CON           equ	822	;# 
  3202   000336                     TMR5CON         equ	822	;# 
  3203   000337                     T5GCON          equ	823	;# 
  3204   000337                     TMR5GCON        equ	823	;# 
  3205   000338                     T5GATE          equ	824	;# 
  3206   000338                     TMR5GATE        equ	824	;# 
  3207   000339                     T5CLK           equ	825	;# 
  3208   000339                     TMR5CLK         equ	825	;# 
  3209   000339                     PR5             equ	825	;# 
  3210   00033A                     T6TMR           equ	826	;# 
  3211   00033A                     TMR6            equ	826	;# 
  3212   00033B                     T6PR            equ	827	;# 
  3213   00033B                     PR6             equ	827	;# 
  3214   00033C                     T6CON           equ	828	;# 
  3215   00033D                     T6HLT           equ	829	;# 
  3216   00033E                     T6CLKCON        equ	830	;# 
  3217   00033E                     T6CLK           equ	830	;# 
  3218   00033F                     T6RST           equ	831	;# 
  3219   000340                     CCPR1           equ	832	;# 
  3220   000340                     CCPR1L          equ	832	;# 
  3221   000341                     CCPR1H          equ	833	;# 
  3222   000342                     CCP1CON         equ	834	;# 
  3223   000343                     CCP1CAP         equ	835	;# 
  3224   000344                     CCPR2           equ	836	;# 
  3225   000344                     CCPR2L          equ	836	;# 
  3226   000345                     CCPR2H          equ	837	;# 
  3227   000346                     CCP2CON         equ	838	;# 
  3228   000347                     CCP2CAP         equ	839	;# 
  3229   000348                     CCPR3           equ	840	;# 
  3230   000348                     CCPR3L          equ	840	;# 
  3231   000349                     CCPR3H          equ	841	;# 
  3232   00034A                     CCP3CON         equ	842	;# 
  3233   00034B                     CCP3CAP         equ	843	;# 
  3234   00034C                     CCPTMRS0        equ	844	;# 
  3235   00034F                     CRCDATA         equ	847	;# 
  3236   00034F                     CRCDATL         equ	847	;# 
  3237   000350                     CRCDATH         equ	848	;# 
  3238   000351                     CRCACC          equ	849	;# 
  3239   000351                     CRCACCL         equ	849	;# 
  3240   000352                     CRCACCH         equ	850	;# 
  3241   000353                     CRCSHFT         equ	851	;# 
  3242   000353                     CRCSHIFTL       equ	851	;# 
  3243   000354                     CRCSHIFTH       equ	852	;# 
  3244   000355                     CRCXOR          equ	853	;# 
  3245   000355                     CRCXORL         equ	853	;# 
  3246   000356                     CRCXORH         equ	854	;# 
  3247   000357                     CRCCON0         equ	855	;# 
  3248   000358                     CRCCON1         equ	856	;# 
  3249   00035A                     SCANLADR        equ	858	;# 
  3250   00035A                     SCANLADRL       equ	858	;# 
  3251   00035B                     SCANLADRH       equ	859	;# 
  3252   00035C                     SCANLADRU       equ	860	;# 
  3253   00035D                     SCANHADR        equ	861	;# 
  3254   00035D                     SCANHADRL       equ	861	;# 
  3255   00035E                     SCANHADRH       equ	862	;# 
  3256   00035F                     SCANHADRU       equ	863	;# 
  3257   000360                     SCANCON0        equ	864	;# 
  3258   000361                     SCANTRIG        equ	865	;# 
  3259   000362                     IPR0            equ	866	;# 
  3260   000363                     IPR1            equ	867	;# 
  3261   000364                     IPR2            equ	868	;# 
  3262   000365                     IPR3            equ	869	;# 
  3263   000366                     IPR4            equ	870	;# 
  3264   000367                     IPR5            equ	871	;# 
  3265   000368                     IPR6            equ	872	;# 
  3266   000369                     IPR7            equ	873	;# 
  3267   00036A                     IPR8            equ	874	;# 
  3268   00036B                     IPR9            equ	875	;# 
  3269   00036C                     IPR10           equ	876	;# 
  3270   00036D                     IPR11           equ	877	;# 
  3271   00036E                     IPR12           equ	878	;# 
  3272   00036F                     IPR13           equ	879	;# 
  3273   000370                     IPR14           equ	880	;# 
  3274   000371                     IPR15           equ	881	;# 
  3275   000373                     STATUS_CSHAD    equ	883	;# 
  3276   000374                     WREG_CSHAD      equ	884	;# 
  3277   000375                     BSR_CSHAD       equ	885	;# 
  3278   000376                     SHADCON         equ	886	;# 
  3279   000377                     STATUS_SHAD     equ	887	;# 
  3280   000378                     WREG_SHAD       equ	888	;# 
  3281   000379                     BSR_SHAD        equ	889	;# 
  3282   00037A                     PCLATH_SHAD     equ	890	;# 
  3283   00037B                     PCLATU_SHAD     equ	891	;# 
  3284   00037C                     FSR0SH          equ	892	;# 
  3285   00037C                     FSR0L_SHAD      equ	892	;# 
  3286   00037D                     FSR0H_SHAD      equ	893	;# 
  3287   00037E                     FSR1SH          equ	894	;# 
  3288   00037E                     FSR1L_SHAD      equ	894	;# 
  3289   00037F                     FSR1H_SHAD      equ	895	;# 
  3290   000380                     FSR2SH          equ	896	;# 
  3291   000380                     FSR2L_SHAD      equ	896	;# 
  3292   000381                     FSR2H_SHAD      equ	897	;# 
  3293   000382                     PRODSH          equ	898	;# 
  3294   000382                     PRODL_SHAD      equ	898	;# 
  3295   000383                     PRODH_SHAD      equ	899	;# 
  3296   0003BC                     CWG1CLK         equ	956	;# 
  3297   0003BC                     CWG1CLKCON      equ	956	;# 
  3298   0003BD                     CWG1ISM         equ	957	;# 
  3299   0003BD                     CWG1DAT         equ	957	;# 
  3300   0003BE                     CWG1DBR         equ	958	;# 
  3301   0003BF                     CWG1DBF         equ	959	;# 
  3302   0003C0                     CWG1CON0        equ	960	;# 
  3303   0003C1                     CWG1CON1        equ	961	;# 
  3304   0003C2                     CWG1AS0         equ	962	;# 
  3305   0003C3                     CWG1AS1         equ	963	;# 
  3306   0003C4                     CWG1STR         equ	964	;# 
  3307   0003C5                     CWG2CLK         equ	965	;# 
  3308   0003C5                     CWG2CLKCON      equ	965	;# 
  3309   0003C6                     CWG2ISM         equ	966	;# 
  3310   0003C6                     CWG2DAT         equ	966	;# 
  3311   0003C7                     CWG2DBR         equ	967	;# 
  3312   0003C8                     CWG2DBF         equ	968	;# 
  3313   0003C9                     CWG2CON0        equ	969	;# 
  3314   0003CA                     CWG2CON1        equ	970	;# 
  3315   0003CB                     CWG2AS0         equ	971	;# 
  3316   0003CC                     CWG2AS1         equ	972	;# 
  3317   0003CD                     CWG2STR         equ	973	;# 
  3318   0003CE                     CWG3CLK         equ	974	;# 
  3319   0003CE                     CWG3CLKCON      equ	974	;# 
  3320   0003CF                     CWG3ISM         equ	975	;# 
  3321   0003CF                     CWG3DAT         equ	975	;# 
  3322   0003D0                     CWG3DBR         equ	976	;# 
  3323   0003D1                     CWG3DBF         equ	977	;# 
  3324   0003D2                     CWG3CON0        equ	978	;# 
  3325   0003D3                     CWG3CON1        equ	979	;# 
  3326   0003D4                     CWG3AS0         equ	980	;# 
  3327   0003D5                     CWG3AS1         equ	981	;# 
  3328   0003D6                     CWG3STR         equ	982	;# 
  3329   0003D7                     FVRCON          equ	983	;# 
  3330   0003D8                     ADCPCON         equ	984	;# 
  3331   0003D8                     ADCP            equ	984	;# 
  3332   0003D9                     ADLTH           equ	985	;# 
  3333   0003D9                     ADLTHL          equ	985	;# 
  3334   0003DA                     ADLTHH          equ	986	;# 
  3335   0003DB                     ADUTH           equ	987	;# 
  3336   0003DB                     ADUTHL          equ	987	;# 
  3337   0003DC                     ADUTHH          equ	988	;# 
  3338   0003DD                     ADERR           equ	989	;# 
  3339   0003DD                     ADERRL          equ	989	;# 
  3340   0003DE                     ADERRH          equ	990	;# 
  3341   0003DF                     ADSTPT          equ	991	;# 
  3342   0003DF                     ADSTPTL         equ	991	;# 
  3343   0003E0                     ADSTPTH         equ	992	;# 
  3344   0003E1                     ADFLTR          equ	993	;# 
  3345   0003E1                     ADFLTRL         equ	993	;# 
  3346   0003E2                     ADFLTRH         equ	994	;# 
  3347   0003E3                     ADACC           equ	995	;# 
  3348   0003E3                     ADACCL          equ	995	;# 
  3349   0003E4                     ADACCH          equ	996	;# 
  3350   0003E5                     ADACCU          equ	997	;# 
  3351   0003E6                     ADCNT           equ	998	;# 
  3352   0003E7                     ADRPT           equ	999	;# 
  3353   0003E8                     ADPREV          equ	1000	;# 
  3354   0003E8                     ADPREVL         equ	1000	;# 
  3355   0003E9                     ADPREVH         equ	1001	;# 
  3356   0003EA                     ADRES           equ	1002	;# 
  3357   0003EA                     ADRESL          equ	1002	;# 
  3358   0003EB                     ADRESH          equ	1003	;# 
  3359   0003EC                     ADPCH           equ	1004	;# 
  3360   0003EE                     ADACQ           equ	1006	;# 
  3361   0003EE                     ADACQL          equ	1006	;# 
  3362   0003EF                     ADACQH          equ	1007	;# 
  3363   0003F0                     ADCAP           equ	1008	;# 
  3364   0003F1                     ADPRE           equ	1009	;# 
  3365   0003F1                     ADPREL          equ	1009	;# 
  3366   0003F2                     ADPREH          equ	1010	;# 
  3367   0003F3                     ADCON0          equ	1011	;# 
  3368   0003F4                     ADCON1          equ	1012	;# 
  3369   0003F5                     ADCON2          equ	1013	;# 
  3370   0003F6                     ADCON3          equ	1014	;# 
  3371   0003F7                     ADSTAT          equ	1015	;# 
  3372   0003F8                     ADREF           equ	1016	;# 
  3373   0003F9                     ADACT           equ	1017	;# 
  3374   0003FA                     ADCLK           equ	1018	;# 
  3375   000400                     ANSELA          equ	1024	;# 
  3376   000401                     WPUA            equ	1025	;# 
  3377   000402                     ODCONA          equ	1026	;# 
  3378   000403                     SLRCONA         equ	1027	;# 
  3379   000404                     INLVLA          equ	1028	;# 
  3380   000405                     IOCAP           equ	1029	;# 
  3381   000406                     IOCAN           equ	1030	;# 
  3382   000407                     IOCAF           equ	1031	;# 
  3383   000408                     ANSELB          equ	1032	;# 
  3384   000409                     WPUB            equ	1033	;# 
  3385   00040A                     ODCONB          equ	1034	;# 
  3386   00040B                     SLRCONB         equ	1035	;# 
  3387   00040C                     INLVLB          equ	1036	;# 
  3388   00040D                     IOCBP           equ	1037	;# 
  3389   00040E                     IOCBN           equ	1038	;# 
  3390   00040F                     IOCBF           equ	1039	;# 
  3391   000410                     ANSELC          equ	1040	;# 
  3392   000411                     WPUC            equ	1041	;# 
  3393   000412                     ODCONC          equ	1042	;# 
  3394   000413                     SLRCONC         equ	1043	;# 
  3395   000414                     INLVLC          equ	1044	;# 
  3396   000415                     IOCCP           equ	1045	;# 
  3397   000416                     IOCCN           equ	1046	;# 
  3398   000417                     IOCCF           equ	1047	;# 
  3399   000418                     ANSELD          equ	1048	;# 
  3400   000419                     WPUD            equ	1049	;# 
  3401   00041A                     ODCOND          equ	1050	;# 
  3402   00041B                     SLRCOND         equ	1051	;# 
  3403   00041C                     INLVLD          equ	1052	;# 
  3404   000420                     ANSELE          equ	1056	;# 
  3405   000421                     WPUE            equ	1057	;# 
  3406   000422                     ODCONE          equ	1058	;# 
  3407   000423                     SLRCONE         equ	1059	;# 
  3408   000424                     INLVLE          equ	1060	;# 
  3409   000425                     IOCEP           equ	1061	;# 
  3410   000426                     IOCEN           equ	1062	;# 
  3411   000427                     IOCEF           equ	1063	;# 
  3412   000428                     ANSELF          equ	1064	;# 
  3413   000429                     WPUF            equ	1065	;# 
  3414   00042A                     ODCONF          equ	1066	;# 
  3415   00042B                     SLRCONF         equ	1067	;# 
  3416   00042C                     INLVLF          equ	1068	;# 
  3417   000440                     NCO1ACC         equ	1088	;# 
  3418   000440                     NCO1ACCL        equ	1088	;# 
  3419   000441                     NCO1ACCH        equ	1089	;# 
  3420   000442                     NCO1ACCU        equ	1090	;# 
  3421   000443                     NCO1INC         equ	1091	;# 
  3422   000443                     NCO1INCL        equ	1091	;# 
  3423   000444                     NCO1INCH        equ	1092	;# 
  3424   000445                     NCO1INCU        equ	1093	;# 
  3425   000446                     NCO1CON         equ	1094	;# 
  3426   000447                     NCO1CLK         equ	1095	;# 
  3427   000448                     NCO2ACC         equ	1096	;# 
  3428   000448                     NCO2ACCL        equ	1096	;# 
  3429   000449                     NCO2ACCH        equ	1097	;# 
  3430   00044A                     NCO2ACCU        equ	1098	;# 
  3431   00044B                     NCO2INC         equ	1099	;# 
  3432   00044B                     NCO2INCL        equ	1099	;# 
  3433   00044C                     NCO2INCH        equ	1100	;# 
  3434   00044D                     NCO2INCU        equ	1101	;# 
  3435   00044E                     NCO2CON         equ	1102	;# 
  3436   00044F                     NCO2CLK         equ	1103	;# 
  3437   000450                     NCO3ACC         equ	1104	;# 
  3438   000450                     NCO3ACCL        equ	1104	;# 
  3439   000451                     NCO3ACCH        equ	1105	;# 
  3440   000452                     NCO3ACCU        equ	1106	;# 
  3441   000453                     NCO3INC         equ	1107	;# 
  3442   000453                     NCO3INCL        equ	1107	;# 
  3443   000454                     NCO3INCH        equ	1108	;# 
  3444   000455                     NCO3INCU        equ	1109	;# 
  3445   000456                     NCO3CON         equ	1110	;# 
  3446   000457                     NCO3CLK         equ	1111	;# 
  3447   000459                     IVTLOCK         equ	1113	;# 
  3448   00045A                     IVTAD           equ	1114	;# 
  3449   00045A                     IVTADL          equ	1114	;# 
  3450   00045B                     IVTADH          equ	1115	;# 
  3451   00045C                     IVTADU          equ	1116	;# 
  3452   00045D                     IVTBASE         equ	1117	;# 
  3453   00045D                     IVTBASEL        equ	1117	;# 
  3454   00045E                     IVTBASEH        equ	1118	;# 
  3455   00045F                     IVTBASEU        equ	1119	;# 
  3456   000460                     PWM1ERS         equ	1120	;# 
  3457   000461                     PWM1CLK         equ	1121	;# 
  3458   000462                     PWM1LDS         equ	1122	;# 
  3459   000463                     PWM1PR          equ	1123	;# 
  3460   000463                     PWM1PRL         equ	1123	;# 
  3461   000464                     PWM1PRH         equ	1124	;# 
  3462   000465                     PWM1CPRE        equ	1125	;# 
  3463   000466                     PWM1PIPOS       equ	1126	;# 
  3464   000467                     PWM1GIR         equ	1127	;# 
  3465   000468                     PWM1GIE         equ	1128	;# 
  3466   000469                     PWM1CON         equ	1129	;# 
  3467   00046A                     PWM1S1CFG       equ	1130	;# 
  3468   00046B                     PWM1S1P1        equ	1131	;# 
  3469   00046B                     PWM1S1P1L       equ	1131	;# 
  3470   00046C                     PWM1S1P1H       equ	1132	;# 
  3471   00046D                     PWM1S1P2        equ	1133	;# 
  3472   00046D                     PWM1S1P2L       equ	1133	;# 
  3473   00046E                     PWM1S1P2H       equ	1134	;# 
  3474   00046F                     PWM2ERS         equ	1135	;# 
  3475   000470                     PWM2CLK         equ	1136	;# 
  3476   000471                     PWM2LDS         equ	1137	;# 
  3477   000472                     PWM2PR          equ	1138	;# 
  3478   000472                     PWM2PRL         equ	1138	;# 
  3479   000473                     PWM2PRH         equ	1139	;# 
  3480   000474                     PWM2CPRE        equ	1140	;# 
  3481   000475                     PWM2PIPOS       equ	1141	;# 
  3482   000476                     PWM2GIR         equ	1142	;# 
  3483   000477                     PWM2GIE         equ	1143	;# 
  3484   000478                     PWM2CON         equ	1144	;# 
  3485   000479                     PWM2S1CFG       equ	1145	;# 
  3486   00047A                     PWM2S1P1        equ	1146	;# 
  3487   00047A                     PWM2S1P1L       equ	1146	;# 
  3488   00047B                     PWM2S1P1H       equ	1147	;# 
  3489   00047C                     PWM2S1P2        equ	1148	;# 
  3490   00047C                     PWM2S1P2L       equ	1148	;# 
  3491   00047D                     PWM2S1P2H       equ	1149	;# 
  3492   00047E                     PWM3ERS         equ	1150	;# 
  3493   00047F                     PWM3CLK         equ	1151	;# 
  3494   000480                     PWM3LDS         equ	1152	;# 
  3495   000481                     PWM3PR          equ	1153	;# 
  3496   000481                     PWM3PRL         equ	1153	;# 
  3497   000482                     PWM3PRH         equ	1154	;# 
  3498   000483                     PWM3CPRE        equ	1155	;# 
  3499   000484                     PWM3PIPOS       equ	1156	;# 
  3500   000485                     PWM3GIR         equ	1157	;# 
  3501   000486                     PWM3GIE         equ	1158	;# 
  3502   000487                     PWM3CON         equ	1159	;# 
  3503   000488                     PWM3S1CFG       equ	1160	;# 
  3504   000489                     PWM3S1P1        equ	1161	;# 
  3505   000489                     PWM3S1P1L       equ	1161	;# 
  3506   00048A                     PWM3S1P1H       equ	1162	;# 
  3507   00048B                     PWM3S1P2        equ	1163	;# 
  3508   00048B                     PWM3S1P2L       equ	1163	;# 
  3509   00048C                     PWM3S1P2H       equ	1164	;# 
  3510   00049C                     PWMLOAD         equ	1180	;# 
  3511   00049D                     PWMEN           equ	1181	;# 
  3512   00049E                     PIE0            equ	1182	;# 
  3513   00049F                     PIE1            equ	1183	;# 
  3514   0004A0                     PIE2            equ	1184	;# 
  3515   0004A1                     PIE3            equ	1185	;# 
  3516   0004A2                     PIE4            equ	1186	;# 
  3517   0004A3                     PIE5            equ	1187	;# 
  3518   0004A4                     PIE6            equ	1188	;# 
  3519   0004A5                     PIE7            equ	1189	;# 
  3520   0004A6                     PIE8            equ	1190	;# 
  3521   0004A7                     PIE9            equ	1191	;# 
  3522   0004A8                     PIE10           equ	1192	;# 
  3523   0004A9                     PIE11           equ	1193	;# 
  3524   0004AA                     PIE12           equ	1194	;# 
  3525   0004AB                     PIE13           equ	1195	;# 
  3526   0004AC                     PIE14           equ	1196	;# 
  3527   0004AD                     PIE15           equ	1197	;# 
  3528   0004AE                     PIR0            equ	1198	;# 
  3529   0004AF                     PIR1            equ	1199	;# 
  3530   0004B0                     PIR2            equ	1200	;# 
  3531   0004B1                     PIR3            equ	1201	;# 
  3532   0004B2                     PIR4            equ	1202	;# 
  3533   0004B3                     PIR5            equ	1203	;# 
  3534   0004B4                     PIR6            equ	1204	;# 
  3535   0004B5                     PIR7            equ	1205	;# 
  3536   0004B6                     PIR8            equ	1206	;# 
  3537   0004B7                     PIR9            equ	1207	;# 
  3538   0004B8                     PIR10           equ	1208	;# 
  3539   0004B9                     PIR11           equ	1209	;# 
  3540   0004BA                     PIR12           equ	1210	;# 
  3541   0004BB                     PIR13           equ	1211	;# 
  3542   0004BC                     PIR14           equ	1212	;# 
  3543   0004BD                     PIR15           equ	1213	;# 
  3544   0004BE                     LATA            equ	1214	;# 
  3545   0004BF                     LATB            equ	1215	;# 
  3546   0004C0                     LATC            equ	1216	;# 
  3547   0004C1                     LATD            equ	1217	;# 
  3548   0004C2                     LATE            equ	1218	;# 
  3549   0004C3                     LATF            equ	1219	;# 
  3550   0004C6                     TRISA           equ	1222	;# 
  3551   0004C7                     TRISB           equ	1223	;# 
  3552   0004C8                     TRISC           equ	1224	;# 
  3553   0004C9                     TRISD           equ	1225	;# 
  3554   0004CA                     TRISE           equ	1226	;# 
  3555   0004CB                     TRISF           equ	1227	;# 
  3556   0004CE                     PORTA           equ	1230	;# 
  3557   0004CF                     PORTB           equ	1231	;# 
  3558   0004D0                     PORTC           equ	1232	;# 
  3559   0004D1                     PORTD           equ	1233	;# 
  3560   0004D2                     PORTE           equ	1234	;# 
  3561   0004D3                     PORTF           equ	1235	;# 
  3562   0004D6                     INTCON0         equ	1238	;# 
  3563   0004D7                     INTCON1         equ	1239	;# 
  3564   0004D8                     STATUS          equ	1240	;# 
  3565   0004D9                     FSR2            equ	1241	;# 
  3566   0004D9                     FSR2L           equ	1241	;# 
  3567   0004DA                     FSR2H           equ	1242	;# 
  3568   0004DB                     PLUSW2          equ	1243	;# 
  3569   0004DC                     PREINC2         equ	1244	;# 
  3570   0004DD                     POSTDEC2        equ	1245	;# 
  3571   0004DE                     POSTINC2        equ	1246	;# 
  3572   0004DF                     INDF2           equ	1247	;# 
  3573   0004E0                     BSR             equ	1248	;# 
  3574   0004E1                     FSR1            equ	1249	;# 
  3575   0004E1                     FSR1L           equ	1249	;# 
  3576   0004E2                     FSR1H           equ	1250	;# 
  3577   0004E3                     PLUSW1          equ	1251	;# 
  3578   0004E4                     PREINC1         equ	1252	;# 
  3579   0004E5                     POSTDEC1        equ	1253	;# 
  3580   0004E6                     POSTINC1        equ	1254	;# 
  3581   0004E7                     INDF1           equ	1255	;# 
  3582   0004E8                     WREG            equ	1256	;# 
  3583   0004E9                     FSR0            equ	1257	;# 
  3584   0004E9                     FSR0L           equ	1257	;# 
  3585   0004EA                     FSR0H           equ	1258	;# 
  3586   0004EB                     PLUSW0          equ	1259	;# 
  3587   0004EC                     PREINC0         equ	1260	;# 
  3588   0004ED                     POSTDEC0        equ	1261	;# 
  3589   0004EE                     POSTINC0        equ	1262	;# 
  3590   0004EF                     INDF0           equ	1263	;# 
  3591   0004F0                     PCON0           equ	1264	;# 
  3592   0004F1                     PCON1           equ	1265	;# 
  3593   0004F2                     CPUDOZE         equ	1266	;# 
  3594   0004F3                     PROD            equ	1267	;# 
  3595   0004F3                     PRODL           equ	1267	;# 
  3596   0004F4                     PRODH           equ	1268	;# 
  3597   0004F5                     TABLAT          equ	1269	;# 
  3598   0004F6                     TBLPTR          equ	1270	;# 
  3599   0004F6                     TBLPTRL         equ	1270	;# 
  3600   0004F7                     TBLPTRH         equ	1271	;# 
  3601   0004F8                     TBLPTRU         equ	1272	;# 
  3602   0004F9                     PCLAT           equ	1273	;# 
  3603   0004F9                     PCL             equ	1273	;# 
  3604   0004FA                     PCLATH          equ	1274	;# 
  3605   0004FB                     PCLATU          equ	1275	;# 
  3606   0004FC                     STKPTR          equ	1276	;# 
  3607   0004FD                     TOS             equ	1277	;# 
  3608   0004FD                     TOSL            equ	1277	;# 
  3609   0004FE                     TOSH            equ	1278	;# 
  3610   0004FF                     TOSU            equ	1279	;# 
  3611   000039                     CLKRCON         equ	57	;# 
  3612   00003A                     CLKRCLK         equ	58	;# 
  3613   000040                     NVMCON0         equ	64	;# 
  3614   000041                     NVMCON1         equ	65	;# 
  3615   000042                     NVMLOCK         equ	66	;# 
  3616   000043                     NVMADR          equ	67	;# 
  3617   000043                     NVMADRL         equ	67	;# 
  3618   000044                     NVMADRH         equ	68	;# 
  3619   000045                     NVMADRU         equ	69	;# 
  3620   000046                     NVMDAT          equ	70	;# 
  3621   000046                     NVMDATL         equ	70	;# 
  3622   000047                     NVMDATH         equ	71	;# 
  3623   000048                     VREGCON         equ	72	;# 
  3624   000049                     BORCON          equ	73	;# 
  3625   00004A                     HLVDCON0        equ	74	;# 
  3626   00004B                     HLVDCON1        equ	75	;# 
  3627   00004C                     ZCDCON          equ	76	;# 
  3628   000060                     PMD0            equ	96	;# 
  3629   000061                     PMD1            equ	97	;# 
  3630   000063                     PMD3            equ	99	;# 
  3631   000064                     PMD4            equ	100	;# 
  3632   000065                     PMD5            equ	101	;# 
  3633   000066                     PMD6            equ	102	;# 
  3634   000067                     PMD7            equ	103	;# 
  3635   000068                     PMD8            equ	104	;# 
  3636   00006A                     MD1CON0         equ	106	;# 
  3637   00006B                     MD1CON1         equ	107	;# 
  3638   00006C                     MD1SRC          equ	108	;# 
  3639   00006D                     MD1CARL         equ	109	;# 
  3640   00006E                     MD1CARH         equ	110	;# 
  3641   00006F                     CMOUT           equ	111	;# 
  3642   000070                     CM1CON0         equ	112	;# 
  3643   000071                     CM1CON1         equ	113	;# 
  3644   000072                     CM1NCH          equ	114	;# 
  3645   000073                     CM1PCH          equ	115	;# 
  3646   000074                     CM2CON0         equ	116	;# 
  3647   000075                     CM2CON1         equ	117	;# 
  3648   000076                     CM2NCH          equ	118	;# 
  3649   000077                     CM2PCH          equ	119	;# 
  3650   000078                     WDTCON0         equ	120	;# 
  3651   000079                     WDTCON1         equ	121	;# 
  3652   00007A                     WDTPS           equ	122	;# 
  3653   00007A                     WDTPSL          equ	122	;# 
  3654   00007B                     WDTPSH          equ	123	;# 
  3655   00007C                     WDTTMR          equ	124	;# 
  3656   00007D                     DAC1DAT         equ	125	;# 
  3657   00007D                     DAC1DATL        equ	125	;# 
  3658   00007F                     DAC1CON         equ	127	;# 
  3659   000080                     SPI1RXB         equ	128	;# 
  3660   000081                     SPI1TXB         equ	129	;# 
  3661   000082                     SPI1TCNT        equ	130	;# 
  3662   000082                     SPI1TCNTL       equ	130	;# 
  3663   000083                     SPI1TCNTH       equ	131	;# 
  3664   000084                     SPI1CON0        equ	132	;# 
  3665   000085                     SPI1CON1        equ	133	;# 
  3666   000086                     SPI1CON2        equ	134	;# 
  3667   000087                     SPI1STATUS      equ	135	;# 
  3668   000088                     SPI1TWIDTH      equ	136	;# 
  3669   000089                     SPI1BAUD        equ	137	;# 
  3670   00008A                     SPI1INTF        equ	138	;# 
  3671   00008B                     SPI1INTE        equ	139	;# 
  3672   00008C                     SPI1CLK         equ	140	;# 
  3673   00008D                     SPI2RXB         equ	141	;# 
  3674   00008E                     SPI2TXB         equ	142	;# 
  3675   00008F                     SPI2TCNT        equ	143	;# 
  3676   00008F                     SPI2TCNTL       equ	143	;# 
  3677   000090                     SPI2TCNTH       equ	144	;# 
  3678   000091                     SPI2CON0        equ	145	;# 
  3679   000092                     SPI2CON1        equ	146	;# 
  3680   000093                     SPI2CON2        equ	147	;# 
  3681   000094                     SPI2STATUS      equ	148	;# 
  3682   000095                     SPI2TWIDTH      equ	149	;# 
  3683   000096                     SPI2BAUD        equ	150	;# 
  3684   000097                     SPI2INTF        equ	151	;# 
  3685   000098                     SPI2INTE        equ	152	;# 
  3686   000099                     SPI2CLK         equ	153	;# 
  3687   0000AC                     ACTCON          equ	172	;# 
  3688   0000AD                     OSCCON1         equ	173	;# 
  3689   0000AE                     OSCCON2         equ	174	;# 
  3690   0000AF                     OSCCON3         equ	175	;# 
  3691   0000B0                     OSCTUNE         equ	176	;# 
  3692   0000B1                     OSCFRQ          equ	177	;# 
  3693   0000B1                     OSCFREQ         equ	177	;# 
  3694   0000B2                     OSCSTAT         equ	178	;# 
  3695   0000B2                     OSCSTAT1        equ	178	;# 
  3696   0000B3                     OSCEN           equ	179	;# 
  3697   0000B4                     PRLOCK          equ	180	;# 
  3698   0000B5                     SCANPR          equ	181	;# 
  3699   0000B6                     DMA1PR          equ	182	;# 
  3700   0000B7                     DMA2PR          equ	183	;# 
  3701   0000B8                     DMA3PR          equ	184	;# 
  3702   0000B9                     DMA4PR          equ	185	;# 
  3703   0000BA                     DMA5PR          equ	186	;# 
  3704   0000BB                     DMA6PR          equ	187	;# 
  3705   0000BE                     MAINPR          equ	190	;# 
  3706   0000BF                     ISRPR           equ	191	;# 
  3707   0000D4                     CLCDATA         equ	212	;# 
  3708   0000D5                     CLCSELECT       equ	213	;# 
  3709   0000D6                     CLCnCON         equ	214	;# 
  3710   0000D7                     CLCnPOL         equ	215	;# 
  3711   0000D8                     CLCnSEL0        equ	216	;# 
  3712   0000D9                     CLCnSEL1        equ	217	;# 
  3713   0000DA                     CLCnSEL2        equ	218	;# 
  3714   0000DB                     CLCnSEL3        equ	219	;# 
  3715   0000DC                     CLCnGLS0        equ	220	;# 
  3716   0000DD                     CLCnGLS1        equ	221	;# 
  3717   0000DE                     CLCnGLS2        equ	222	;# 
  3718   0000DF                     CLCnGLS3        equ	223	;# 
  3719   0000E8                     DMASELECT       equ	232	;# 
  3720   0000E9                     DMAnBUF         equ	233	;# 
  3721   0000EA                     DMAnDCNT        equ	234	;# 
  3722   0000EA                     DMAnDCNTL       equ	234	;# 
  3723   0000EB                     DMAnDCNTH       equ	235	;# 
  3724   0000EC                     DMAnDPTR        equ	236	;# 
  3725   0000EC                     DMAnDPTRL       equ	236	;# 
  3726   0000ED                     DMAnDPTRH       equ	237	;# 
  3727   0000EE                     DMAnDSZ         equ	238	;# 
  3728   0000EE                     DMAnDSZL        equ	238	;# 
  3729   0000EF                     DMAnDSZH        equ	239	;# 
  3730   0000F0                     DMAnDSA         equ	240	;# 
  3731   0000F0                     DMAnDSAL        equ	240	;# 
  3732   0000F1                     DMAnDSAH        equ	241	;# 
  3733   0000F2                     DMAnSCNT        equ	242	;# 
  3734   0000F2                     DMAnSCNTL       equ	242	;# 
  3735   0000F3                     DMAnSCNTH       equ	243	;# 
  3736   0000F4                     DMAnSPTR        equ	244	;# 
  3737   0000F4                     DMAnSPTRL       equ	244	;# 
  3738   0000F5                     DMAnSPTRH       equ	245	;# 
  3739   0000F6                     DMAnSPTRU       equ	246	;# 
  3740   0000F7                     DMAnSSZ         equ	247	;# 
  3741   0000F7                     DMAnSSZL        equ	247	;# 
  3742   0000F8                     DMAnSSZH        equ	248	;# 
  3743   0000F9                     DMAnSSA         equ	249	;# 
  3744   0000F9                     DMAnSSAL        equ	249	;# 
  3745   0000FA                     DMAnSSAH        equ	250	;# 
  3746   0000FB                     DMAnSSAU        equ	251	;# 
  3747   0000FC                     DMAnCON0        equ	252	;# 
  3748   0000FD                     DMAnCON1        equ	253	;# 
  3749   0000FE                     DMAnAIRQ        equ	254	;# 
  3750   0000FF                     DMAnSIRQ        equ	255	;# 
  3751   000200                     PPSLOCK         equ	512	;# 
  3752   000201                     RA0PPS          equ	513	;# 
  3753   000202                     RA1PPS          equ	514	;# 
  3754   000203                     RA2PPS          equ	515	;# 
  3755   000204                     RA3PPS          equ	516	;# 
  3756   000205                     RA4PPS          equ	517	;# 
  3757   000206                     RA5PPS          equ	518	;# 
  3758   000207                     RA6PPS          equ	519	;# 
  3759   000208                     RA7PPS          equ	520	;# 
  3760   000209                     RB0PPS          equ	521	;# 
  3761   00020A                     RB1PPS          equ	522	;# 
  3762   00020B                     RB2PPS          equ	523	;# 
  3763   00020C                     RB3PPS          equ	524	;# 
  3764   00020D                     RB4PPS          equ	525	;# 
  3765   00020E                     RB5PPS          equ	526	;# 
  3766   00020F                     RB6PPS          equ	527	;# 
  3767   000210                     RB7PPS          equ	528	;# 
  3768   000211                     RC0PPS          equ	529	;# 
  3769   000212                     RC1PPS          equ	530	;# 
  3770   000213                     RC2PPS          equ	531	;# 
  3771   000214                     RC3PPS          equ	532	;# 
  3772   000215                     RC4PPS          equ	533	;# 
  3773   000216                     RC5PPS          equ	534	;# 
  3774   000217                     RC6PPS          equ	535	;# 
  3775   000218                     RC7PPS          equ	536	;# 
  3776   000219                     RD0PPS          equ	537	;# 
  3777   00021A                     RD1PPS          equ	538	;# 
  3778   00021B                     RD2PPS          equ	539	;# 
  3779   00021C                     RD3PPS          equ	540	;# 
  3780   00021D                     RD4PPS          equ	541	;# 
  3781   00021E                     RD5PPS          equ	542	;# 
  3782   00021F                     RD6PPS          equ	543	;# 
  3783   000220                     RD7PPS          equ	544	;# 
  3784   000221                     RE0PPS          equ	545	;# 
  3785   000222                     RE1PPS          equ	546	;# 
  3786   000223                     RE2PPS          equ	547	;# 
  3787   000229                     RF0PPS          equ	553	;# 
  3788   00022A                     RF1PPS          equ	554	;# 
  3789   00022B                     RF2PPS          equ	555	;# 
  3790   00022C                     RF3PPS          equ	556	;# 
  3791   00022D                     RF4PPS          equ	557	;# 
  3792   00022E                     RF5PPS          equ	558	;# 
  3793   00022F                     RF6PPS          equ	559	;# 
  3794   000230                     RF7PPS          equ	560	;# 
  3795   00023E                     INT0PPS         equ	574	;# 
  3796   00023F                     INT1PPS         equ	575	;# 
  3797   000240                     INT2PPS         equ	576	;# 
  3798   000241                     T0CKIPPS        equ	577	;# 
  3799   000242                     T1CKIPPS        equ	578	;# 
  3800   000243                     T1GPPS          equ	579	;# 
  3801   000244                     T3CKIPPS        equ	580	;# 
  3802   000245                     T3GPPS          equ	581	;# 
  3803   000246                     T5CKIPPS        equ	582	;# 
  3804   000247                     T5GPPS          equ	583	;# 
  3805   000248                     T2INPPS         equ	584	;# 
  3806   000249                     T4INPPS         equ	585	;# 
  3807   00024A                     T6INPPS         equ	586	;# 
  3808   00024F                     CCP1PPS         equ	591	;# 
  3809   000250                     CCP2PPS         equ	592	;# 
  3810   000251                     CCP3PPS         equ	593	;# 
  3811   000253                     PWM1ERSPPS      equ	595	;# 
  3812   000254                     PWM2ERSPPS      equ	596	;# 
  3813   000255                     PWM3ERSPPS      equ	597	;# 
  3814   000257                     PWMIN0PPS       equ	599	;# 
  3815   000258                     PWMIN1PPS       equ	600	;# 
  3816   000259                     SMT1WINPPS      equ	601	;# 
  3817   00025A                     SMT1SIGPPS      equ	602	;# 
  3818   00025B                     CWG1PPS         equ	603	;# 
  3819   00025B                     CWG1INPPS       equ	603	;# 
  3820   00025C                     CWG2PPS         equ	604	;# 
  3821   00025C                     CWG2INPPS       equ	604	;# 
  3822   00025D                     CWG3PPS         equ	605	;# 
  3823   00025D                     CWG3INPPS       equ	605	;# 
  3824   00025E                     MD1CARLPPS      equ	606	;# 
  3825   00025E                     MDCARLPPS       equ	606	;# 
  3826   00025F                     MD1CARHPPS      equ	607	;# 
  3827   00025F                     MDCARHPPS       equ	607	;# 
  3828   000260                     MD1SRCPPS       equ	608	;# 
  3829   000260                     MDSRCPPS        equ	608	;# 
  3830   000261                     CLCIN0PPS       equ	609	;# 
  3831   000262                     CLCIN1PPS       equ	610	;# 
  3832   000263                     CLCIN2PPS       equ	611	;# 
  3833   000264                     CLCIN3PPS       equ	612	;# 
  3834   000265                     CLCIN4PPS       equ	613	;# 
  3835   000266                     CLCIN5PPS       equ	614	;# 
  3836   000267                     CLCIN6PPS       equ	615	;# 
  3837   000268                     CLCIN7PPS       equ	616	;# 
  3838   000269                     ADACTPPS        equ	617	;# 
  3839   00026A                     SPI1SCKPPS      equ	618	;# 
  3840   00026B                     SPI1SDIPPS      equ	619	;# 
  3841   00026C                     SPI1SSPPS       equ	620	;# 
  3842   00026D                     SPI2SCKPPS      equ	621	;# 
  3843   00026E                     SPI2SDIPPS      equ	622	;# 
  3844   00026F                     SPI2SSPPS       equ	623	;# 
  3845   000270                     I2C1SDAPPS      equ	624	;# 
  3846   000271                     I2C1SCLPPS      equ	625	;# 
  3847   000272                     U1RXPPS         equ	626	;# 
  3848   000273                     U1CTSPPS        equ	627	;# 
  3849   000274                     U2RXPPS         equ	628	;# 
  3850   000275                     U2CTSPPS        equ	629	;# 
  3851   000276                     U3RXPPS         equ	630	;# 
  3852   000277                     U3CTSPPS        equ	631	;# 
  3853   000278                     U4RXPPS         equ	632	;# 
  3854   000279                     U4CTSPPS        equ	633	;# 
  3855   00027A                     U5RXPPS         equ	634	;# 
  3856   00027B                     U5CTSPPS        equ	635	;# 
  3857   000286                     RC4I2C          equ	646	;# 
  3858   000287                     RC3I2C          equ	647	;# 
  3859   000288                     RB2I2C          equ	648	;# 
  3860   000289                     RB1I2C          equ	649	;# 
  3861   00028B                     I2C1RXB         equ	651	;# 
  3862   00028C                     I2C1TXB         equ	652	;# 
  3863   00028D                     I2C1CNT         equ	653	;# 
  3864   00028E                     I2C1ADB0        equ	654	;# 
  3865   00028F                     I2C1ADB1        equ	655	;# 
  3866   000290                     I2C1ADR0        equ	656	;# 
  3867   000291                     I2C1ADR1        equ	657	;# 
  3868   000292                     I2C1ADR2        equ	658	;# 
  3869   000293                     I2C1ADR3        equ	659	;# 
  3870   000294                     I2C1CON0        equ	660	;# 
  3871   000295                     I2C1CON1        equ	661	;# 
  3872   000296                     I2C1CON2        equ	662	;# 
  3873   000297                     I2C1ERR         equ	663	;# 
  3874   000298                     I2C1STAT0       equ	664	;# 
  3875   000299                     I2C1STAT1       equ	665	;# 
  3876   00029A                     I2C1PIR         equ	666	;# 
  3877   00029B                     I2C1PIE         equ	667	;# 
  3878   00029C                     I2C1CLK         equ	668	;# 
  3879   00029D                     I2C1BTO         equ	669	;# 
  3880   0002A1                     U1RXB           equ	673	;# 
  3881   0002A1                     U1RXBL          equ	673	;# 
  3882   0002A2                     U1RXCHK         equ	674	;# 
  3883   0002A3                     U1TXB           equ	675	;# 
  3884   0002A3                     U1TXBL          equ	675	;# 
  3885   0002A4                     U1TXCHK         equ	676	;# 
  3886   0002A5                     U1P1            equ	677	;# 
  3887   0002A5                     U1P1L           equ	677	;# 
  3888   0002A6                     U1P1H           equ	678	;# 
  3889   0002A7                     U1P2            equ	679	;# 
  3890   0002A7                     U1P2L           equ	679	;# 
  3891   0002A8                     U1P2H           equ	680	;# 
  3892   0002A9                     U1P3            equ	681	;# 
  3893   0002A9                     U1P3L           equ	681	;# 
  3894   0002AA                     U1P3H           equ	682	;# 
  3895   0002AB                     U1CON0          equ	683	;# 
  3896   0002AC                     U1CON1          equ	684	;# 
  3897   0002AD                     U1CON2          equ	685	;# 
  3898   0002AE                     U1BRG           equ	686	;# 
  3899   0002AE                     U1BRGL          equ	686	;# 
  3900   0002AF                     U1BRGH          equ	687	;# 
  3901   0002B0                     U1FIFO          equ	688	;# 
  3902   0002B1                     U1UIR           equ	689	;# 
  3903   0002B2                     U1ERRIR         equ	690	;# 
  3904   0002B3                     U1ERRIE         equ	691	;# 
  3905   0002B4                     U2RXB           equ	692	;# 
  3906   0002B4                     U2RXBL          equ	692	;# 
  3907   0002B6                     U2TXB           equ	694	;# 
  3908   0002B6                     U2TXBL          equ	694	;# 
  3909   0002B8                     U2P1            equ	696	;# 
  3910   0002B8                     U2P1L           equ	696	;# 
  3911   0002BA                     U2P2            equ	698	;# 
  3912   0002BA                     U2P2L           equ	698	;# 
  3913   0002BC                     U2P3            equ	700	;# 
  3914   0002BC                     U2P3L           equ	700	;# 
  3915   0002BE                     U2CON0          equ	702	;# 
  3916   0002BF                     U2CON1          equ	703	;# 
  3917   0002C0                     U2CON2          equ	704	;# 
  3918   0002C1                     U2BRG           equ	705	;# 
  3919   0002C1                     U2BRGL          equ	705	;# 
  3920   0002C2                     U2BRGH          equ	706	;# 
  3921   0002C3                     U2FIFO          equ	707	;# 
  3922   0002C4                     U2UIR           equ	708	;# 
  3923   0002C5                     U2ERRIR         equ	709	;# 
  3924   0002C6                     U2ERRIE         equ	710	;# 
  3925   0002C7                     U3RXB           equ	711	;# 
  3926   0002C7                     U3RXBL          equ	711	;# 
  3927   0002C9                     U3TXB           equ	713	;# 
  3928   0002C9                     U3TXBL          equ	713	;# 
  3929   0002CB                     U3P1            equ	715	;# 
  3930   0002CB                     U3P1L           equ	715	;# 
  3931   0002CD                     U3P2            equ	717	;# 
  3932   0002CD                     U3P2L           equ	717	;# 
  3933   0002CF                     U3P3            equ	719	;# 
  3934   0002CF                     U3P3L           equ	719	;# 
  3935   0002D1                     U3CON0          equ	721	;# 
  3936   0002D2                     U3CON1          equ	722	;# 
  3937   0002D3                     U3CON2          equ	723	;# 
  3938   0002D4                     U3BRG           equ	724	;# 
  3939   0002D4                     U3BRGL          equ	724	;# 
  3940   0002D5                     U3BRGH          equ	725	;# 
  3941   0002D6                     U3FIFO          equ	726	;# 
  3942   0002D7                     U3UIR           equ	727	;# 
  3943   0002D8                     U3ERRIR         equ	728	;# 
  3944   0002D9                     U3ERRIE         equ	729	;# 
  3945   0002DA                     U4RXB           equ	730	;# 
  3946   0002DA                     U4RXBL          equ	730	;# 
  3947   0002DC                     U4TXB           equ	732	;# 
  3948   0002DC                     U4TXBL          equ	732	;# 
  3949   0002DE                     U4P1            equ	734	;# 
  3950   0002DE                     U4P1L           equ	734	;# 
  3951   0002E0                     U4P2            equ	736	;# 
  3952   0002E0                     U4P2L           equ	736	;# 
  3953   0002E2                     U4P3            equ	738	;# 
  3954   0002E2                     U4P3L           equ	738	;# 
  3955   0002E4                     U4CON0          equ	740	;# 
  3956   0002E5                     U4CON1          equ	741	;# 
  3957   0002E6                     U4CON2          equ	742	;# 
  3958   0002E7                     U4BRG           equ	743	;# 
  3959   0002E7                     U4BRGL          equ	743	;# 
  3960   0002E8                     U4BRGH          equ	744	;# 
  3961   0002E9                     U4FIFO          equ	745	;# 
  3962   0002EA                     U4UIR           equ	746	;# 
  3963   0002EB                     U4ERRIR         equ	747	;# 
  3964   0002EC                     U4ERRIE         equ	748	;# 
  3965   0002ED                     U5RXB           equ	749	;# 
  3966   0002ED                     U5RXBL          equ	749	;# 
  3967   0002EF                     U5TXB           equ	751	;# 
  3968   0002EF                     U5TXBL          equ	751	;# 
  3969   0002F1                     U5P1            equ	753	;# 
  3970   0002F1                     U5P1L           equ	753	;# 
  3971   0002F3                     U5P2            equ	755	;# 
  3972   0002F3                     U5P2L           equ	755	;# 
  3973   0002F5                     U5P3            equ	757	;# 
  3974   0002F5                     U5P3L           equ	757	;# 
  3975   0002F7                     U5CON0          equ	759	;# 
  3976   0002F8                     U5CON1          equ	760	;# 
  3977   0002F9                     U5CON2          equ	761	;# 
  3978   0002FA                     U5BRG           equ	762	;# 
  3979   0002FA                     U5BRGL          equ	762	;# 
  3980   0002FB                     U5BRGH          equ	763	;# 
  3981   0002FC                     U5FIFO          equ	764	;# 
  3982   0002FD                     U5UIR           equ	765	;# 
  3983   0002FE                     U5ERRIR         equ	766	;# 
  3984   0002FF                     U5ERRIE         equ	767	;# 
  3985   000300                     SMT1TMR         equ	768	;# 
  3986   000300                     SMT1TMRL        equ	768	;# 
  3987   000301                     SMT1TMRH        equ	769	;# 
  3988   000302                     SMT1TMRU        equ	770	;# 
  3989   000303                     SMT1CPR         equ	771	;# 
  3990   000303                     SMT1CPRL        equ	771	;# 
  3991   000304                     SMT1CPRH        equ	772	;# 
  3992   000305                     SMT1CPRU        equ	773	;# 
  3993   000306                     SMT1CPW         equ	774	;# 
  3994   000306                     SMT1CPWL        equ	774	;# 
  3995   000307                     SMT1CPWH        equ	775	;# 
  3996   000308                     SMT1CPWU        equ	776	;# 
  3997   000309                     SMT1PR          equ	777	;# 
  3998   000309                     SMT1PRL         equ	777	;# 
  3999   00030A                     SMT1PRH         equ	778	;# 
  4000   00030B                     SMT1PRU         equ	779	;# 
  4001   00030C                     SMT1CON0        equ	780	;# 
  4002   00030D                     SMT1CON1        equ	781	;# 
  4003   00030E                     SMT1STAT        equ	782	;# 
  4004   00030F                     SMT1CLK         equ	783	;# 
  4005   000310                     SMT1SIG         equ	784	;# 
  4006   000311                     SMT1WIN         equ	785	;# 
  4007   000318                     TMR0L           equ	792	;# 
  4008   000318                     TMR0            equ	792	;# 
  4009   000319                     TMR0H           equ	793	;# 
  4010   000319                     PR0             equ	793	;# 
  4011   00031A                     T0CON0          equ	794	;# 
  4012   00031B                     T0CON1          equ	795	;# 
  4013   00031C                     TMR1            equ	796	;# 
  4014   00031C                     TMR1L           equ	796	;# 
  4015   00031D                     TMR1H           equ	797	;# 
  4016   00031E                     T1CON           equ	798	;# 
  4017   00031E                     TMR1CON         equ	798	;# 
  4018   00031F                     T1GCON          equ	799	;# 
  4019   00031F                     TMR1GCON        equ	799	;# 
  4020   000320                     T1GATE          equ	800	;# 
  4021   000320                     TMR1GATE        equ	800	;# 
  4022   000321                     T1CLK           equ	801	;# 
  4023   000321                     TMR1CLK         equ	801	;# 
  4024   000321                     PR1             equ	801	;# 
  4025   000322                     T2TMR           equ	802	;# 
  4026   000322                     TMR2            equ	802	;# 
  4027   000323                     T2PR            equ	803	;# 
  4028   000323                     PR2             equ	803	;# 
  4029   000324                     T2CON           equ	804	;# 
  4030   000325                     T2HLT           equ	805	;# 
  4031   000326                     T2CLKCON        equ	806	;# 
  4032   000326                     T2CLK           equ	806	;# 
  4033   000327                     T2RST           equ	807	;# 
  4034   000328                     TMR3            equ	808	;# 
  4035   000328                     TMR3L           equ	808	;# 
  4036   000329                     TMR3H           equ	809	;# 
  4037   00032A                     T3CON           equ	810	;# 
  4038   00032A                     TMR3CON         equ	810	;# 
  4039   00032B                     T3GCON          equ	811	;# 
  4040   00032B                     TMR3GCON        equ	811	;# 
  4041   00032C                     T3GATE          equ	812	;# 
  4042   00032C                     TMR3GATE        equ	812	;# 
  4043   00032D                     T3CLK           equ	813	;# 
  4044   00032D                     TMR3CLK         equ	813	;# 
  4045   00032D                     PR3             equ	813	;# 
  4046   00032E                     T4TMR           equ	814	;# 
  4047   00032E                     TMR4            equ	814	;# 
  4048   00032F                     T4PR            equ	815	;# 
  4049   00032F                     PR4             equ	815	;# 
  4050   000330                     T4CON           equ	816	;# 
  4051   000331                     T4HLT           equ	817	;# 
  4052   000332                     T4CLKCON        equ	818	;# 
  4053   000332                     T4CLK           equ	818	;# 
  4054   000333                     T4RST           equ	819	;# 
  4055   000334                     TMR5            equ	820	;# 
  4056   000334                     TMR5L           equ	820	;# 
  4057   000335                     TMR5H           equ	821	;# 
  4058   000336                     T5CON           equ	822	;# 
  4059   000336                     TMR5CON         equ	822	;# 
  4060   000337                     T5GCON          equ	823	;# 
  4061   000337                     TMR5GCON        equ	823	;# 
  4062   000338                     T5GATE          equ	824	;# 
  4063   000338                     TMR5GATE        equ	824	;# 
  4064   000339                     T5CLK           equ	825	;# 
  4065   000339                     TMR5CLK         equ	825	;# 
  4066   000339                     PR5             equ	825	;# 
  4067   00033A                     T6TMR           equ	826	;# 
  4068   00033A                     TMR6            equ	826	;# 
  4069   00033B                     T6PR            equ	827	;# 
  4070   00033B                     PR6             equ	827	;# 
  4071   00033C                     T6CON           equ	828	;# 
  4072   00033D                     T6HLT           equ	829	;# 
  4073   00033E                     T6CLKCON        equ	830	;# 
  4074   00033E                     T6CLK           equ	830	;# 
  4075   00033F                     T6RST           equ	831	;# 
  4076   000340                     CCPR1           equ	832	;# 
  4077   000340                     CCPR1L          equ	832	;# 
  4078   000341                     CCPR1H          equ	833	;# 
  4079   000342                     CCP1CON         equ	834	;# 
  4080   000343                     CCP1CAP         equ	835	;# 
  4081   000344                     CCPR2           equ	836	;# 
  4082   000344                     CCPR2L          equ	836	;# 
  4083   000345                     CCPR2H          equ	837	;# 
  4084   000346                     CCP2CON         equ	838	;# 
  4085   000347                     CCP2CAP         equ	839	;# 
  4086   000348                     CCPR3           equ	840	;# 
  4087   000348                     CCPR3L          equ	840	;# 
  4088   000349                     CCPR3H          equ	841	;# 
  4089   00034A                     CCP3CON         equ	842	;# 
  4090   00034B                     CCP3CAP         equ	843	;# 
  4091   00034C                     CCPTMRS0        equ	844	;# 
  4092   00034F                     CRCDATA         equ	847	;# 
  4093   00034F                     CRCDATL         equ	847	;# 
  4094   000350                     CRCDATH         equ	848	;# 
  4095   000351                     CRCACC          equ	849	;# 
  4096   000351                     CRCACCL         equ	849	;# 
  4097   000352                     CRCACCH         equ	850	;# 
  4098   000353                     CRCSHFT         equ	851	;# 
  4099   000353                     CRCSHIFTL       equ	851	;# 
  4100   000354                     CRCSHIFTH       equ	852	;# 
  4101   000355                     CRCXOR          equ	853	;# 
  4102   000355                     CRCXORL         equ	853	;# 
  4103   000356                     CRCXORH         equ	854	;# 
  4104   000357                     CRCCON0         equ	855	;# 
  4105   000358                     CRCCON1         equ	856	;# 
  4106   00035A                     SCANLADR        equ	858	;# 
  4107   00035A                     SCANLADRL       equ	858	;# 
  4108   00035B                     SCANLADRH       equ	859	;# 
  4109   00035C                     SCANLADRU       equ	860	;# 
  4110   00035D                     SCANHADR        equ	861	;# 
  4111   00035D                     SCANHADRL       equ	861	;# 
  4112   00035E                     SCANHADRH       equ	862	;# 
  4113   00035F                     SCANHADRU       equ	863	;# 
  4114   000360                     SCANCON0        equ	864	;# 
  4115   000361                     SCANTRIG        equ	865	;# 
  4116   000362                     IPR0            equ	866	;# 
  4117   000363                     IPR1            equ	867	;# 
  4118   000364                     IPR2            equ	868	;# 
  4119   000365                     IPR3            equ	869	;# 
  4120   000366                     IPR4            equ	870	;# 
  4121   000367                     IPR5            equ	871	;# 
  4122   000368                     IPR6            equ	872	;# 
  4123   000369                     IPR7            equ	873	;# 
  4124   00036A                     IPR8            equ	874	;# 
  4125   00036B                     IPR9            equ	875	;# 
  4126   00036C                     IPR10           equ	876	;# 
  4127   00036D                     IPR11           equ	877	;# 
  4128   00036E                     IPR12           equ	878	;# 
  4129   00036F                     IPR13           equ	879	;# 
  4130   000370                     IPR14           equ	880	;# 
  4131   000371                     IPR15           equ	881	;# 
  4132   000373                     STATUS_CSHAD    equ	883	;# 
  4133   000374                     WREG_CSHAD      equ	884	;# 
  4134   000375                     BSR_CSHAD       equ	885	;# 
  4135   000376                     SHADCON         equ	886	;# 
  4136   000377                     STATUS_SHAD     equ	887	;# 
  4137   000378                     WREG_SHAD       equ	888	;# 
  4138   000379                     BSR_SHAD        equ	889	;# 
  4139   00037A                     PCLATH_SHAD     equ	890	;# 
  4140   00037B                     PCLATU_SHAD     equ	891	;# 
  4141   00037C                     FSR0SH          equ	892	;# 
  4142   00037C                     FSR0L_SHAD      equ	892	;# 
  4143   00037D                     FSR0H_SHAD      equ	893	;# 
  4144   00037E                     FSR1SH          equ	894	;# 
  4145   00037E                     FSR1L_SHAD      equ	894	;# 
  4146   00037F                     FSR1H_SHAD      equ	895	;# 
  4147   000380                     FSR2SH          equ	896	;# 
  4148   000380                     FSR2L_SHAD      equ	896	;# 
  4149   000381                     FSR2H_SHAD      equ	897	;# 
  4150   000382                     PRODSH          equ	898	;# 
  4151   000382                     PRODL_SHAD      equ	898	;# 
  4152   000383                     PRODH_SHAD      equ	899	;# 
  4153   0003BC                     CWG1CLK         equ	956	;# 
  4154   0003BC                     CWG1CLKCON      equ	956	;# 
  4155   0003BD                     CWG1ISM         equ	957	;# 
  4156   0003BD                     CWG1DAT         equ	957	;# 
  4157   0003BE                     CWG1DBR         equ	958	;# 
  4158   0003BF                     CWG1DBF         equ	959	;# 
  4159   0003C0                     CWG1CON0        equ	960	;# 
  4160   0003C1                     CWG1CON1        equ	961	;# 
  4161   0003C2                     CWG1AS0         equ	962	;# 
  4162   0003C3                     CWG1AS1         equ	963	;# 
  4163   0003C4                     CWG1STR         equ	964	;# 
  4164   0003C5                     CWG2CLK         equ	965	;# 
  4165   0003C5                     CWG2CLKCON      equ	965	;# 
  4166   0003C6                     CWG2ISM         equ	966	;# 
  4167   0003C6                     CWG2DAT         equ	966	;# 
  4168   0003C7                     CWG2DBR         equ	967	;# 
  4169   0003C8                     CWG2DBF         equ	968	;# 
  4170   0003C9                     CWG2CON0        equ	969	;# 
  4171   0003CA                     CWG2CON1        equ	970	;# 
  4172   0003CB                     CWG2AS0         equ	971	;# 
  4173   0003CC                     CWG2AS1         equ	972	;# 
  4174   0003CD                     CWG2STR         equ	973	;# 
  4175   0003CE                     CWG3CLK         equ	974	;# 
  4176   0003CE                     CWG3CLKCON      equ	974	;# 
  4177   0003CF                     CWG3ISM         equ	975	;# 
  4178   0003CF                     CWG3DAT         equ	975	;# 
  4179   0003D0                     CWG3DBR         equ	976	;# 
  4180   0003D1                     CWG3DBF         equ	977	;# 
  4181   0003D2                     CWG3CON0        equ	978	;# 
  4182   0003D3                     CWG3CON1        equ	979	;# 
  4183   0003D4                     CWG3AS0         equ	980	;# 
  4184   0003D5                     CWG3AS1         equ	981	;# 
  4185   0003D6                     CWG3STR         equ	982	;# 
  4186   0003D7                     FVRCON          equ	983	;# 
  4187   0003D8                     ADCPCON         equ	984	;# 
  4188   0003D8                     ADCP            equ	984	;# 
  4189   0003D9                     ADLTH           equ	985	;# 
  4190   0003D9                     ADLTHL          equ	985	;# 
  4191   0003DA                     ADLTHH          equ	986	;# 
  4192   0003DB                     ADUTH           equ	987	;# 
  4193   0003DB                     ADUTHL          equ	987	;# 
  4194   0003DC                     ADUTHH          equ	988	;# 
  4195   0003DD                     ADERR           equ	989	;# 
  4196   0003DD                     ADERRL          equ	989	;# 
  4197   0003DE                     ADERRH          equ	990	;# 
  4198   0003DF                     ADSTPT          equ	991	;# 
  4199   0003DF                     ADSTPTL         equ	991	;# 
  4200   0003E0                     ADSTPTH         equ	992	;# 
  4201   0003E1                     ADFLTR          equ	993	;# 
  4202   0003E1                     ADFLTRL         equ	993	;# 
  4203   0003E2                     ADFLTRH         equ	994	;# 
  4204   0003E3                     ADACC           equ	995	;# 
  4205   0003E3                     ADACCL          equ	995	;# 
  4206   0003E4                     ADACCH          equ	996	;# 
  4207   0003E5                     ADACCU          equ	997	;# 
  4208   0003E6                     ADCNT           equ	998	;# 
  4209   0003E7                     ADRPT           equ	999	;# 
  4210   0003E8                     ADPREV          equ	1000	;# 
  4211   0003E8                     ADPREVL         equ	1000	;# 
  4212   0003E9                     ADPREVH         equ	1001	;# 
  4213   0003EA                     ADRES           equ	1002	;# 
  4214   0003EA                     ADRESL          equ	1002	;# 
  4215   0003EB                     ADRESH          equ	1003	;# 
  4216   0003EC                     ADPCH           equ	1004	;# 
  4217   0003EE                     ADACQ           equ	1006	;# 
  4218   0003EE                     ADACQL          equ	1006	;# 
  4219   0003EF                     ADACQH          equ	1007	;# 
  4220   0003F0                     ADCAP           equ	1008	;# 
  4221   0003F1                     ADPRE           equ	1009	;# 
  4222   0003F1                     ADPREL          equ	1009	;# 
  4223   0003F2                     ADPREH          equ	1010	;# 
  4224   0003F3                     ADCON0          equ	1011	;# 
  4225   0003F4                     ADCON1          equ	1012	;# 
  4226   0003F5                     ADCON2          equ	1013	;# 
  4227   0003F6                     ADCON3          equ	1014	;# 
  4228   0003F7                     ADSTAT          equ	1015	;# 
  4229   0003F8                     ADREF           equ	1016	;# 
  4230   0003F9                     ADACT           equ	1017	;# 
  4231   0003FA                     ADCLK           equ	1018	;# 
  4232   000400                     ANSELA          equ	1024	;# 
  4233   000401                     WPUA            equ	1025	;# 
  4234   000402                     ODCONA          equ	1026	;# 
  4235   000403                     SLRCONA         equ	1027	;# 
  4236   000404                     INLVLA          equ	1028	;# 
  4237   000405                     IOCAP           equ	1029	;# 
  4238   000406                     IOCAN           equ	1030	;# 
  4239   000407                     IOCAF           equ	1031	;# 
  4240   000408                     ANSELB          equ	1032	;# 
  4241   000409                     WPUB            equ	1033	;# 
  4242   00040A                     ODCONB          equ	1034	;# 
  4243   00040B                     SLRCONB         equ	1035	;# 
  4244   00040C                     INLVLB          equ	1036	;# 
  4245   00040D                     IOCBP           equ	1037	;# 
  4246   00040E                     IOCBN           equ	1038	;# 
  4247   00040F                     IOCBF           equ	1039	;# 
  4248   000410                     ANSELC          equ	1040	;# 
  4249   000411                     WPUC            equ	1041	;# 
  4250   000412                     ODCONC          equ	1042	;# 
  4251   000413                     SLRCONC         equ	1043	;# 
  4252   000414                     INLVLC          equ	1044	;# 
  4253   000415                     IOCCP           equ	1045	;# 
  4254   000416                     IOCCN           equ	1046	;# 
  4255   000417                     IOCCF           equ	1047	;# 
  4256   000418                     ANSELD          equ	1048	;# 
  4257   000419                     WPUD            equ	1049	;# 
  4258   00041A                     ODCOND          equ	1050	;# 
  4259   00041B                     SLRCOND         equ	1051	;# 
  4260   00041C                     INLVLD          equ	1052	;# 
  4261   000420                     ANSELE          equ	1056	;# 
  4262   000421                     WPUE            equ	1057	;# 
  4263   000422                     ODCONE          equ	1058	;# 
  4264   000423                     SLRCONE         equ	1059	;# 
  4265   000424                     INLVLE          equ	1060	;# 
  4266   000425                     IOCEP           equ	1061	;# 
  4267   000426                     IOCEN           equ	1062	;# 
  4268   000427                     IOCEF           equ	1063	;# 
  4269   000428                     ANSELF          equ	1064	;# 
  4270   000429                     WPUF            equ	1065	;# 
  4271   00042A                     ODCONF          equ	1066	;# 
  4272   00042B                     SLRCONF         equ	1067	;# 
  4273   00042C                     INLVLF          equ	1068	;# 
  4274   000440                     NCO1ACC         equ	1088	;# 
  4275   000440                     NCO1ACCL        equ	1088	;# 
  4276   000441                     NCO1ACCH        equ	1089	;# 
  4277   000442                     NCO1ACCU        equ	1090	;# 
  4278   000443                     NCO1INC         equ	1091	;# 
  4279   000443                     NCO1INCL        equ	1091	;# 
  4280   000444                     NCO1INCH        equ	1092	;# 
  4281   000445                     NCO1INCU        equ	1093	;# 
  4282   000446                     NCO1CON         equ	1094	;# 
  4283   000447                     NCO1CLK         equ	1095	;# 
  4284   000448                     NCO2ACC         equ	1096	;# 
  4285   000448                     NCO2ACCL        equ	1096	;# 
  4286   000449                     NCO2ACCH        equ	1097	;# 
  4287   00044A                     NCO2ACCU        equ	1098	;# 
  4288   00044B                     NCO2INC         equ	1099	;# 
  4289   00044B                     NCO2INCL        equ	1099	;# 
  4290   00044C                     NCO2INCH        equ	1100	;# 
  4291   00044D                     NCO2INCU        equ	1101	;# 
  4292   00044E                     NCO2CON         equ	1102	;# 
  4293   00044F                     NCO2CLK         equ	1103	;# 
  4294   000450                     NCO3ACC         equ	1104	;# 
  4295   000450                     NCO3ACCL        equ	1104	;# 
  4296   000451                     NCO3ACCH        equ	1105	;# 
  4297   000452                     NCO3ACCU        equ	1106	;# 
  4298   000453                     NCO3INC         equ	1107	;# 
  4299   000453                     NCO3INCL        equ	1107	;# 
  4300   000454                     NCO3INCH        equ	1108	;# 
  4301   000455                     NCO3INCU        equ	1109	;# 
  4302   000456                     NCO3CON         equ	1110	;# 
  4303   000457                     NCO3CLK         equ	1111	;# 
  4304   000459                     IVTLOCK         equ	1113	;# 
  4305   00045A                     IVTAD           equ	1114	;# 
  4306   00045A                     IVTADL          equ	1114	;# 
  4307   00045B                     IVTADH          equ	1115	;# 
  4308   00045C                     IVTADU          equ	1116	;# 
  4309   00045D                     IVTBASE         equ	1117	;# 
  4310   00045D                     IVTBASEL        equ	1117	;# 
  4311   00045E                     IVTBASEH        equ	1118	;# 
  4312   00045F                     IVTBASEU        equ	1119	;# 
  4313   000460                     PWM1ERS         equ	1120	;# 
  4314   000461                     PWM1CLK         equ	1121	;# 
  4315   000462                     PWM1LDS         equ	1122	;# 
  4316   000463                     PWM1PR          equ	1123	;# 
  4317   000463                     PWM1PRL         equ	1123	;# 
  4318   000464                     PWM1PRH         equ	1124	;# 
  4319   000465                     PWM1CPRE        equ	1125	;# 
  4320   000466                     PWM1PIPOS       equ	1126	;# 
  4321   000467                     PWM1GIR         equ	1127	;# 
  4322   000468                     PWM1GIE         equ	1128	;# 
  4323   000469                     PWM1CON         equ	1129	;# 
  4324   00046A                     PWM1S1CFG       equ	1130	;# 
  4325   00046B                     PWM1S1P1        equ	1131	;# 
  4326   00046B                     PWM1S1P1L       equ	1131	;# 
  4327   00046C                     PWM1S1P1H       equ	1132	;# 
  4328   00046D                     PWM1S1P2        equ	1133	;# 
  4329   00046D                     PWM1S1P2L       equ	1133	;# 
  4330   00046E                     PWM1S1P2H       equ	1134	;# 
  4331   00046F                     PWM2ERS         equ	1135	;# 
  4332   000470                     PWM2CLK         equ	1136	;# 
  4333   000471                     PWM2LDS         equ	1137	;# 
  4334   000472                     PWM2PR          equ	1138	;# 
  4335   000472                     PWM2PRL         equ	1138	;# 
  4336   000473                     PWM2PRH         equ	1139	;# 
  4337   000474                     PWM2CPRE        equ	1140	;# 
  4338   000475                     PWM2PIPOS       equ	1141	;# 
  4339   000476                     PWM2GIR         equ	1142	;# 
  4340   000477                     PWM2GIE         equ	1143	;# 
  4341   000478                     PWM2CON         equ	1144	;# 
  4342   000479                     PWM2S1CFG       equ	1145	;# 
  4343   00047A                     PWM2S1P1        equ	1146	;# 
  4344   00047A                     PWM2S1P1L       equ	1146	;# 
  4345   00047B                     PWM2S1P1H       equ	1147	;# 
  4346   00047C                     PWM2S1P2        equ	1148	;# 
  4347   00047C                     PWM2S1P2L       equ	1148	;# 
  4348   00047D                     PWM2S1P2H       equ	1149	;# 
  4349   00047E                     PWM3ERS         equ	1150	;# 
  4350   00047F                     PWM3CLK         equ	1151	;# 
  4351   000480                     PWM3LDS         equ	1152	;# 
  4352   000481                     PWM3PR          equ	1153	;# 
  4353   000481                     PWM3PRL         equ	1153	;# 
  4354   000482                     PWM3PRH         equ	1154	;# 
  4355   000483                     PWM3CPRE        equ	1155	;# 
  4356   000484                     PWM3PIPOS       equ	1156	;# 
  4357   000485                     PWM3GIR         equ	1157	;# 
  4358   000486                     PWM3GIE         equ	1158	;# 
  4359   000487                     PWM3CON         equ	1159	;# 
  4360   000488                     PWM3S1CFG       equ	1160	;# 
  4361   000489                     PWM3S1P1        equ	1161	;# 
  4362   000489                     PWM3S1P1L       equ	1161	;# 
  4363   00048A                     PWM3S1P1H       equ	1162	;# 
  4364   00048B                     PWM3S1P2        equ	1163	;# 
  4365   00048B                     PWM3S1P2L       equ	1163	;# 
  4366   00048C                     PWM3S1P2H       equ	1164	;# 
  4367   00049C                     PWMLOAD         equ	1180	;# 
  4368   00049D                     PWMEN           equ	1181	;# 
  4369   00049E                     PIE0            equ	1182	;# 
  4370   00049F                     PIE1            equ	1183	;# 
  4371   0004A0                     PIE2            equ	1184	;# 
  4372   0004A1                     PIE3            equ	1185	;# 
  4373   0004A2                     PIE4            equ	1186	;# 
  4374   0004A3                     PIE5            equ	1187	;# 
  4375   0004A4                     PIE6            equ	1188	;# 
  4376   0004A5                     PIE7            equ	1189	;# 
  4377   0004A6                     PIE8            equ	1190	;# 
  4378   0004A7                     PIE9            equ	1191	;# 
  4379   0004A8                     PIE10           equ	1192	;# 
  4380   0004A9                     PIE11           equ	1193	;# 
  4381   0004AA                     PIE12           equ	1194	;# 
  4382   0004AB                     PIE13           equ	1195	;# 
  4383   0004AC                     PIE14           equ	1196	;# 
  4384   0004AD                     PIE15           equ	1197	;# 
  4385   0004AE                     PIR0            equ	1198	;# 
  4386   0004AF                     PIR1            equ	1199	;# 
  4387   0004B0                     PIR2            equ	1200	;# 
  4388   0004B1                     PIR3            equ	1201	;# 
  4389   0004B2                     PIR4            equ	1202	;# 
  4390   0004B3                     PIR5            equ	1203	;# 
  4391   0004B4                     PIR6            equ	1204	;# 
  4392   0004B5                     PIR7            equ	1205	;# 
  4393   0004B6                     PIR8            equ	1206	;# 
  4394   0004B7                     PIR9            equ	1207	;# 
  4395   0004B8                     PIR10           equ	1208	;# 
  4396   0004B9                     PIR11           equ	1209	;# 
  4397   0004BA                     PIR12           equ	1210	;# 
  4398   0004BB                     PIR13           equ	1211	;# 
  4399   0004BC                     PIR14           equ	1212	;# 
  4400   0004BD                     PIR15           equ	1213	;# 
  4401   0004BE                     LATA            equ	1214	;# 
  4402   0004BF                     LATB            equ	1215	;# 
  4403   0004C0                     LATC            equ	1216	;# 
  4404   0004C1                     LATD            equ	1217	;# 
  4405   0004C2                     LATE            equ	1218	;# 
  4406   0004C3                     LATF            equ	1219	;# 
  4407   0004C6                     TRISA           equ	1222	;# 
  4408   0004C7                     TRISB           equ	1223	;# 
  4409   0004C8                     TRISC           equ	1224	;# 
  4410   0004C9                     TRISD           equ	1225	;# 
  4411   0004CA                     TRISE           equ	1226	;# 
  4412   0004CB                     TRISF           equ	1227	;# 
  4413   0004CE                     PORTA           equ	1230	;# 
  4414   0004CF                     PORTB           equ	1231	;# 
  4415   0004D0                     PORTC           equ	1232	;# 
  4416   0004D1                     PORTD           equ	1233	;# 
  4417   0004D2                     PORTE           equ	1234	;# 
  4418   0004D3                     PORTF           equ	1235	;# 
  4419   0004D6                     INTCON0         equ	1238	;# 
  4420   0004D7                     INTCON1         equ	1239	;# 
  4421   0004D8                     STATUS          equ	1240	;# 
  4422   0004D9                     FSR2            equ	1241	;# 
  4423   0004D9                     FSR2L           equ	1241	;# 
  4424   0004DA                     FSR2H           equ	1242	;# 
  4425   0004DB                     PLUSW2          equ	1243	;# 
  4426   0004DC                     PREINC2         equ	1244	;# 
  4427   0004DD                     POSTDEC2        equ	1245	;# 
  4428   0004DE                     POSTINC2        equ	1246	;# 
  4429   0004DF                     INDF2           equ	1247	;# 
  4430   0004E0                     BSR             equ	1248	;# 
  4431   0004E1                     FSR1            equ	1249	;# 
  4432   0004E1                     FSR1L           equ	1249	;# 
  4433   0004E2                     FSR1H           equ	1250	;# 
  4434   0004E3                     PLUSW1          equ	1251	;# 
  4435   0004E4                     PREINC1         equ	1252	;# 
  4436   0004E5                     POSTDEC1        equ	1253	;# 
  4437   0004E6                     POSTINC1        equ	1254	;# 
  4438   0004E7                     INDF1           equ	1255	;# 
  4439   0004E8                     WREG            equ	1256	;# 
  4440   0004E9                     FSR0            equ	1257	;# 
  4441   0004E9                     FSR0L           equ	1257	;# 
  4442   0004EA                     FSR0H           equ	1258	;# 
  4443   0004EB                     PLUSW0          equ	1259	;# 
  4444   0004EC                     PREINC0         equ	1260	;# 
  4445   0004ED                     POSTDEC0        equ	1261	;# 
  4446   0004EE                     POSTINC0        equ	1262	;# 
  4447   0004EF                     INDF0           equ	1263	;# 
  4448   0004F0                     PCON0           equ	1264	;# 
  4449   0004F1                     PCON1           equ	1265	;# 
  4450   0004F2                     CPUDOZE         equ	1266	;# 
  4451   0004F3                     PROD            equ	1267	;# 
  4452   0004F3                     PRODL           equ	1267	;# 
  4453   0004F4                     PRODH           equ	1268	;# 
  4454   0004F5                     TABLAT          equ	1269	;# 
  4455   0004F6                     TBLPTR          equ	1270	;# 
  4456   0004F6                     TBLPTRL         equ	1270	;# 
  4457   0004F7                     TBLPTRH         equ	1271	;# 
  4458   0004F8                     TBLPTRU         equ	1272	;# 
  4459   0004F9                     PCLAT           equ	1273	;# 
  4460   0004F9                     PCL             equ	1273	;# 
  4461   0004FA                     PCLATH          equ	1274	;# 
  4462   0004FB                     PCLATU          equ	1275	;# 
  4463   0004FC                     STKPTR          equ	1276	;# 
  4464   0004FD                     TOS             equ	1277	;# 
  4465   0004FD                     TOSL            equ	1277	;# 
  4466   0004FE                     TOSH            equ	1278	;# 
  4467   0004FF                     TOSU            equ	1279	;# 
  4468   000039                     CLKRCON         equ	57	;# 
  4469   00003A                     CLKRCLK         equ	58	;# 
  4470   000040                     NVMCON0         equ	64	;# 
  4471   000041                     NVMCON1         equ	65	;# 
  4472   000042                     NVMLOCK         equ	66	;# 
  4473   000043                     NVMADR          equ	67	;# 
  4474   000043                     NVMADRL         equ	67	;# 
  4475   000044                     NVMADRH         equ	68	;# 
  4476   000045                     NVMADRU         equ	69	;# 
  4477   000046                     NVMDAT          equ	70	;# 
  4478   000046                     NVMDATL         equ	70	;# 
  4479   000047                     NVMDATH         equ	71	;# 
  4480   000048                     VREGCON         equ	72	;# 
  4481   000049                     BORCON          equ	73	;# 
  4482   00004A                     HLVDCON0        equ	74	;# 
  4483   00004B                     HLVDCON1        equ	75	;# 
  4484   00004C                     ZCDCON          equ	76	;# 
  4485   000060                     PMD0            equ	96	;# 
  4486   000061                     PMD1            equ	97	;# 
  4487   000063                     PMD3            equ	99	;# 
  4488   000064                     PMD4            equ	100	;# 
  4489   000065                     PMD5            equ	101	;# 
  4490   000066                     PMD6            equ	102	;# 
  4491   000067                     PMD7            equ	103	;# 
  4492   000068                     PMD8            equ	104	;# 
  4493   00006A                     MD1CON0         equ	106	;# 
  4494   00006B                     MD1CON1         equ	107	;# 
  4495   00006C                     MD1SRC          equ	108	;# 
  4496   00006D                     MD1CARL         equ	109	;# 
  4497   00006E                     MD1CARH         equ	110	;# 
  4498   00006F                     CMOUT           equ	111	;# 
  4499   000070                     CM1CON0         equ	112	;# 
  4500   000071                     CM1CON1         equ	113	;# 
  4501   000072                     CM1NCH          equ	114	;# 
  4502   000073                     CM1PCH          equ	115	;# 
  4503   000074                     CM2CON0         equ	116	;# 
  4504   000075                     CM2CON1         equ	117	;# 
  4505   000076                     CM2NCH          equ	118	;# 
  4506   000077                     CM2PCH          equ	119	;# 
  4507   000078                     WDTCON0         equ	120	;# 
  4508   000079                     WDTCON1         equ	121	;# 
  4509   00007A                     WDTPS           equ	122	;# 
  4510   00007A                     WDTPSL          equ	122	;# 
  4511   00007B                     WDTPSH          equ	123	;# 
  4512   00007C                     WDTTMR          equ	124	;# 
  4513   00007D                     DAC1DAT         equ	125	;# 
  4514   00007D                     DAC1DATL        equ	125	;# 
  4515   00007F                     DAC1CON         equ	127	;# 
  4516   000080                     SPI1RXB         equ	128	;# 
  4517   000081                     SPI1TXB         equ	129	;# 
  4518   000082                     SPI1TCNT        equ	130	;# 
  4519   000082                     SPI1TCNTL       equ	130	;# 
  4520   000083                     SPI1TCNTH       equ	131	;# 
  4521   000084                     SPI1CON0        equ	132	;# 
  4522   000085                     SPI1CON1        equ	133	;# 
  4523   000086                     SPI1CON2        equ	134	;# 
  4524   000087                     SPI1STATUS      equ	135	;# 
  4525   000088                     SPI1TWIDTH      equ	136	;# 
  4526   000089                     SPI1BAUD        equ	137	;# 
  4527   00008A                     SPI1INTF        equ	138	;# 
  4528   00008B                     SPI1INTE        equ	139	;# 
  4529   00008C                     SPI1CLK         equ	140	;# 
  4530   00008D                     SPI2RXB         equ	141	;# 
  4531   00008E                     SPI2TXB         equ	142	;# 
  4532   00008F                     SPI2TCNT        equ	143	;# 
  4533   00008F                     SPI2TCNTL       equ	143	;# 
  4534   000090                     SPI2TCNTH       equ	144	;# 
  4535   000091                     SPI2CON0        equ	145	;# 
  4536   000092                     SPI2CON1        equ	146	;# 
  4537   000093                     SPI2CON2        equ	147	;# 
  4538   000094                     SPI2STATUS      equ	148	;# 
  4539   000095                     SPI2TWIDTH      equ	149	;# 
  4540   000096                     SPI2BAUD        equ	150	;# 
  4541   000097                     SPI2INTF        equ	151	;# 
  4542   000098                     SPI2INTE        equ	152	;# 
  4543   000099                     SPI2CLK         equ	153	;# 
  4544   0000AC                     ACTCON          equ	172	;# 
  4545   0000AD                     OSCCON1         equ	173	;# 
  4546   0000AE                     OSCCON2         equ	174	;# 
  4547   0000AF                     OSCCON3         equ	175	;# 
  4548   0000B0                     OSCTUNE         equ	176	;# 
  4549   0000B1                     OSCFRQ          equ	177	;# 
  4550   0000B1                     OSCFREQ         equ	177	;# 
  4551   0000B2                     OSCSTAT         equ	178	;# 
  4552   0000B2                     OSCSTAT1        equ	178	;# 
  4553   0000B3                     OSCEN           equ	179	;# 
  4554   0000B4                     PRLOCK          equ	180	;# 
  4555   0000B5                     SCANPR          equ	181	;# 
  4556   0000B6                     DMA1PR          equ	182	;# 
  4557   0000B7                     DMA2PR          equ	183	;# 
  4558   0000B8                     DMA3PR          equ	184	;# 
  4559   0000B9                     DMA4PR          equ	185	;# 
  4560   0000BA                     DMA5PR          equ	186	;# 
  4561   0000BB                     DMA6PR          equ	187	;# 
  4562   0000BE                     MAINPR          equ	190	;# 
  4563   0000BF                     ISRPR           equ	191	;# 
  4564   0000D4                     CLCDATA         equ	212	;# 
  4565   0000D5                     CLCSELECT       equ	213	;# 
  4566   0000D6                     CLCnCON         equ	214	;# 
  4567   0000D7                     CLCnPOL         equ	215	;# 
  4568   0000D8                     CLCnSEL0        equ	216	;# 
  4569   0000D9                     CLCnSEL1        equ	217	;# 
  4570   0000DA                     CLCnSEL2        equ	218	;# 
  4571   0000DB                     CLCnSEL3        equ	219	;# 
  4572   0000DC                     CLCnGLS0        equ	220	;# 
  4573   0000DD                     CLCnGLS1        equ	221	;# 
  4574   0000DE                     CLCnGLS2        equ	222	;# 
  4575   0000DF                     CLCnGLS3        equ	223	;# 
  4576   0000E8                     DMASELECT       equ	232	;# 
  4577   0000E9                     DMAnBUF         equ	233	;# 
  4578   0000EA                     DMAnDCNT        equ	234	;# 
  4579   0000EA                     DMAnDCNTL       equ	234	;# 
  4580   0000EB                     DMAnDCNTH       equ	235	;# 
  4581   0000EC                     DMAnDPTR        equ	236	;# 
  4582   0000EC                     DMAnDPTRL       equ	236	;# 
  4583   0000ED                     DMAnDPTRH       equ	237	;# 
  4584   0000EE                     DMAnDSZ         equ	238	;# 
  4585   0000EE                     DMAnDSZL        equ	238	;# 
  4586   0000EF                     DMAnDSZH        equ	239	;# 
  4587   0000F0                     DMAnDSA         equ	240	;# 
  4588   0000F0                     DMAnDSAL        equ	240	;# 
  4589   0000F1                     DMAnDSAH        equ	241	;# 
  4590   0000F2                     DMAnSCNT        equ	242	;# 
  4591   0000F2                     DMAnSCNTL       equ	242	;# 
  4592   0000F3                     DMAnSCNTH       equ	243	;# 
  4593   0000F4                     DMAnSPTR        equ	244	;# 
  4594   0000F4                     DMAnSPTRL       equ	244	;# 
  4595   0000F5                     DMAnSPTRH       equ	245	;# 
  4596   0000F6                     DMAnSPTRU       equ	246	;# 
  4597   0000F7                     DMAnSSZ         equ	247	;# 
  4598   0000F7                     DMAnSSZL        equ	247	;# 
  4599   0000F8                     DMAnSSZH        equ	248	;# 
  4600   0000F9                     DMAnSSA         equ	249	;# 
  4601   0000F9                     DMAnSSAL        equ	249	;# 
  4602   0000FA                     DMAnSSAH        equ	250	;# 
  4603   0000FB                     DMAnSSAU        equ	251	;# 
  4604   0000FC                     DMAnCON0        equ	252	;# 
  4605   0000FD                     DMAnCON1        equ	253	;# 
  4606   0000FE                     DMAnAIRQ        equ	254	;# 
  4607   0000FF                     DMAnSIRQ        equ	255	;# 
  4608   000200                     PPSLOCK         equ	512	;# 
  4609   000201                     RA0PPS          equ	513	;# 
  4610   000202                     RA1PPS          equ	514	;# 
  4611   000203                     RA2PPS          equ	515	;# 
  4612   000204                     RA3PPS          equ	516	;# 
  4613   000205                     RA4PPS          equ	517	;# 
  4614   000206                     RA5PPS          equ	518	;# 
  4615   000207                     RA6PPS          equ	519	;# 
  4616   000208                     RA7PPS          equ	520	;# 
  4617   000209                     RB0PPS          equ	521	;# 
  4618   00020A                     RB1PPS          equ	522	;# 
  4619   00020B                     RB2PPS          equ	523	;# 
  4620   00020C                     RB3PPS          equ	524	;# 
  4621   00020D                     RB4PPS          equ	525	;# 
  4622   00020E                     RB5PPS          equ	526	;# 
  4623   00020F                     RB6PPS          equ	527	;# 
  4624   000210                     RB7PPS          equ	528	;# 
  4625   000211                     RC0PPS          equ	529	;# 
  4626   000212                     RC1PPS          equ	530	;# 
  4627   000213                     RC2PPS          equ	531	;# 
  4628   000214                     RC3PPS          equ	532	;# 
  4629   000215                     RC4PPS          equ	533	;# 
  4630   000216                     RC5PPS          equ	534	;# 
  4631   000217                     RC6PPS          equ	535	;# 
  4632   000218                     RC7PPS          equ	536	;# 
  4633   000219                     RD0PPS          equ	537	;# 
  4634   00021A                     RD1PPS          equ	538	;# 
  4635   00021B                     RD2PPS          equ	539	;# 
  4636   00021C                     RD3PPS          equ	540	;# 
  4637   00021D                     RD4PPS          equ	541	;# 
  4638   00021E                     RD5PPS          equ	542	;# 
  4639   00021F                     RD6PPS          equ	543	;# 
  4640   000220                     RD7PPS          equ	544	;# 
  4641   000221                     RE0PPS          equ	545	;# 
  4642   000222                     RE1PPS          equ	546	;# 
  4643   000223                     RE2PPS          equ	547	;# 
  4644   000229                     RF0PPS          equ	553	;# 
  4645   00022A                     RF1PPS          equ	554	;# 
  4646   00022B                     RF2PPS          equ	555	;# 
  4647   00022C                     RF3PPS          equ	556	;# 
  4648   00022D                     RF4PPS          equ	557	;# 
  4649   00022E                     RF5PPS          equ	558	;# 
  4650   00022F                     RF6PPS          equ	559	;# 
  4651   000230                     RF7PPS          equ	560	;# 
  4652   00023E                     INT0PPS         equ	574	;# 
  4653   00023F                     INT1PPS         equ	575	;# 
  4654   000240                     INT2PPS         equ	576	;# 
  4655   000241                     T0CKIPPS        equ	577	;# 
  4656   000242                     T1CKIPPS        equ	578	;# 
  4657   000243                     T1GPPS          equ	579	;# 
  4658   000244                     T3CKIPPS        equ	580	;# 
  4659   000245                     T3GPPS          equ	581	;# 
  4660   000246                     T5CKIPPS        equ	582	;# 
  4661   000247                     T5GPPS          equ	583	;# 
  4662   000248                     T2INPPS         equ	584	;# 
  4663   000249                     T4INPPS         equ	585	;# 
  4664   00024A                     T6INPPS         equ	586	;# 
  4665   00024F                     CCP1PPS         equ	591	;# 
  4666   000250                     CCP2PPS         equ	592	;# 
  4667   000251                     CCP3PPS         equ	593	;# 
  4668   000253                     PWM1ERSPPS      equ	595	;# 
  4669   000254                     PWM2ERSPPS      equ	596	;# 
  4670   000255                     PWM3ERSPPS      equ	597	;# 
  4671   000257                     PWMIN0PPS       equ	599	;# 
  4672   000258                     PWMIN1PPS       equ	600	;# 
  4673   000259                     SMT1WINPPS      equ	601	;# 
  4674   00025A                     SMT1SIGPPS      equ	602	;# 
  4675   00025B                     CWG1PPS         equ	603	;# 
  4676   00025B                     CWG1INPPS       equ	603	;# 
  4677   00025C                     CWG2PPS         equ	604	;# 
  4678   00025C                     CWG2INPPS       equ	604	;# 
  4679   00025D                     CWG3PPS         equ	605	;# 
  4680   00025D                     CWG3INPPS       equ	605	;# 
  4681   00025E                     MD1CARLPPS      equ	606	;# 
  4682   00025E                     MDCARLPPS       equ	606	;# 
  4683   00025F                     MD1CARHPPS      equ	607	;# 
  4684   00025F                     MDCARHPPS       equ	607	;# 
  4685   000260                     MD1SRCPPS       equ	608	;# 
  4686   000260                     MDSRCPPS        equ	608	;# 
  4687   000261                     CLCIN0PPS       equ	609	;# 
  4688   000262                     CLCIN1PPS       equ	610	;# 
  4689   000263                     CLCIN2PPS       equ	611	;# 
  4690   000264                     CLCIN3PPS       equ	612	;# 
  4691   000265                     CLCIN4PPS       equ	613	;# 
  4692   000266                     CLCIN5PPS       equ	614	;# 
  4693   000267                     CLCIN6PPS       equ	615	;# 
  4694   000268                     CLCIN7PPS       equ	616	;# 
  4695   000269                     ADACTPPS        equ	617	;# 
  4696   00026A                     SPI1SCKPPS      equ	618	;# 
  4697   00026B                     SPI1SDIPPS      equ	619	;# 
  4698   00026C                     SPI1SSPPS       equ	620	;# 
  4699   00026D                     SPI2SCKPPS      equ	621	;# 
  4700   00026E                     SPI2SDIPPS      equ	622	;# 
  4701   00026F                     SPI2SSPPS       equ	623	;# 
  4702   000270                     I2C1SDAPPS      equ	624	;# 
  4703   000271                     I2C1SCLPPS      equ	625	;# 
  4704   000272                     U1RXPPS         equ	626	;# 
  4705   000273                     U1CTSPPS        equ	627	;# 
  4706   000274                     U2RXPPS         equ	628	;# 
  4707   000275                     U2CTSPPS        equ	629	;# 
  4708   000276                     U3RXPPS         equ	630	;# 
  4709   000277                     U3CTSPPS        equ	631	;# 
  4710   000278                     U4RXPPS         equ	632	;# 
  4711   000279                     U4CTSPPS        equ	633	;# 
  4712   00027A                     U5RXPPS         equ	634	;# 
  4713   00027B                     U5CTSPPS        equ	635	;# 
  4714   000286                     RC4I2C          equ	646	;# 
  4715   000287                     RC3I2C          equ	647	;# 
  4716   000288                     RB2I2C          equ	648	;# 
  4717   000289                     RB1I2C          equ	649	;# 
  4718   00028B                     I2C1RXB         equ	651	;# 
  4719   00028C                     I2C1TXB         equ	652	;# 
  4720   00028D                     I2C1CNT         equ	653	;# 
  4721   00028E                     I2C1ADB0        equ	654	;# 
  4722   00028F                     I2C1ADB1        equ	655	;# 
  4723   000290                     I2C1ADR0        equ	656	;# 
  4724   000291                     I2C1ADR1        equ	657	;# 
  4725   000292                     I2C1ADR2        equ	658	;# 
  4726   000293                     I2C1ADR3        equ	659	;# 
  4727   000294                     I2C1CON0        equ	660	;# 
  4728   000295                     I2C1CON1        equ	661	;# 
  4729   000296                     I2C1CON2        equ	662	;# 
  4730   000297                     I2C1ERR         equ	663	;# 
  4731   000298                     I2C1STAT0       equ	664	;# 
  4732   000299                     I2C1STAT1       equ	665	;# 
  4733   00029A                     I2C1PIR         equ	666	;# 
  4734   00029B                     I2C1PIE         equ	667	;# 
  4735   00029C                     I2C1CLK         equ	668	;# 
  4736   00029D                     I2C1BTO         equ	669	;# 
  4737   0002A1                     U1RXB           equ	673	;# 
  4738   0002A1                     U1RXBL          equ	673	;# 
  4739   0002A2                     U1RXCHK         equ	674	;# 
  4740   0002A3                     U1TXB           equ	675	;# 
  4741   0002A3                     U1TXBL          equ	675	;# 
  4742   0002A4                     U1TXCHK         equ	676	;# 
  4743   0002A5                     U1P1            equ	677	;# 
  4744   0002A5                     U1P1L           equ	677	;# 
  4745   0002A6                     U1P1H           equ	678	;# 
  4746   0002A7                     U1P2            equ	679	;# 
  4747   0002A7                     U1P2L           equ	679	;# 
  4748   0002A8                     U1P2H           equ	680	;# 
  4749   0002A9                     U1P3            equ	681	;# 
  4750   0002A9                     U1P3L           equ	681	;# 
  4751   0002AA                     U1P3H           equ	682	;# 
  4752   0002AB                     U1CON0          equ	683	;# 
  4753   0002AC                     U1CON1          equ	684	;# 
  4754   0002AD                     U1CON2          equ	685	;# 
  4755   0002AE                     U1BRG           equ	686	;# 
  4756   0002AE                     U1BRGL          equ	686	;# 
  4757   0002AF                     U1BRGH          equ	687	;# 
  4758   0002B0                     U1FIFO          equ	688	;# 
  4759   0002B1                     U1UIR           equ	689	;# 
  4760   0002B2                     U1ERRIR         equ	690	;# 
  4761   0002B3                     U1ERRIE         equ	691	;# 
  4762   0002B4                     U2RXB           equ	692	;# 
  4763   0002B4                     U2RXBL          equ	692	;# 
  4764   0002B6                     U2TXB           equ	694	;# 
  4765   0002B6                     U2TXBL          equ	694	;# 
  4766   0002B8                     U2P1            equ	696	;# 
  4767   0002B8                     U2P1L           equ	696	;# 
  4768   0002BA                     U2P2            equ	698	;# 
  4769   0002BA                     U2P2L           equ	698	;# 
  4770   0002BC                     U2P3            equ	700	;# 
  4771   0002BC                     U2P3L           equ	700	;# 
  4772   0002BE                     U2CON0          equ	702	;# 
  4773   0002BF                     U2CON1          equ	703	;# 
  4774   0002C0                     U2CON2          equ	704	;# 
  4775   0002C1                     U2BRG           equ	705	;# 
  4776   0002C1                     U2BRGL          equ	705	;# 
  4777   0002C2                     U2BRGH          equ	706	;# 
  4778   0002C3                     U2FIFO          equ	707	;# 
  4779   0002C4                     U2UIR           equ	708	;# 
  4780   0002C5                     U2ERRIR         equ	709	;# 
  4781   0002C6                     U2ERRIE         equ	710	;# 
  4782   0002C7                     U3RXB           equ	711	;# 
  4783   0002C7                     U3RXBL          equ	711	;# 
  4784   0002C9                     U3TXB           equ	713	;# 
  4785   0002C9                     U3TXBL          equ	713	;# 
  4786   0002CB                     U3P1            equ	715	;# 
  4787   0002CB                     U3P1L           equ	715	;# 
  4788   0002CD                     U3P2            equ	717	;# 
  4789   0002CD                     U3P2L           equ	717	;# 
  4790   0002CF                     U3P3            equ	719	;# 
  4791   0002CF                     U3P3L           equ	719	;# 
  4792   0002D1                     U3CON0          equ	721	;# 
  4793   0002D2                     U3CON1          equ	722	;# 
  4794   0002D3                     U3CON2          equ	723	;# 
  4795   0002D4                     U3BRG           equ	724	;# 
  4796   0002D4                     U3BRGL          equ	724	;# 
  4797   0002D5                     U3BRGH          equ	725	;# 
  4798   0002D6                     U3FIFO          equ	726	;# 
  4799   0002D7                     U3UIR           equ	727	;# 
  4800   0002D8                     U3ERRIR         equ	728	;# 
  4801   0002D9                     U3ERRIE         equ	729	;# 
  4802   0002DA                     U4RXB           equ	730	;# 
  4803   0002DA                     U4RXBL          equ	730	;# 
  4804   0002DC                     U4TXB           equ	732	;# 
  4805   0002DC                     U4TXBL          equ	732	;# 
  4806   0002DE                     U4P1            equ	734	;# 
  4807   0002DE                     U4P1L           equ	734	;# 
  4808   0002E0                     U4P2            equ	736	;# 
  4809   0002E0                     U4P2L           equ	736	;# 
  4810   0002E2                     U4P3            equ	738	;# 
  4811   0002E2                     U4P3L           equ	738	;# 
  4812   0002E4                     U4CON0          equ	740	;# 
  4813   0002E5                     U4CON1          equ	741	;# 
  4814   0002E6                     U4CON2          equ	742	;# 
  4815   0002E7                     U4BRG           equ	743	;# 
  4816   0002E7                     U4BRGL          equ	743	;# 
  4817   0002E8                     U4BRGH          equ	744	;# 
  4818   0002E9                     U4FIFO          equ	745	;# 
  4819   0002EA                     U4UIR           equ	746	;# 
  4820   0002EB                     U4ERRIR         equ	747	;# 
  4821   0002EC                     U4ERRIE         equ	748	;# 
  4822   0002ED                     U5RXB           equ	749	;# 
  4823   0002ED                     U5RXBL          equ	749	;# 
  4824   0002EF                     U5TXB           equ	751	;# 
  4825   0002EF                     U5TXBL          equ	751	;# 
  4826   0002F1                     U5P1            equ	753	;# 
  4827   0002F1                     U5P1L           equ	753	;# 
  4828   0002F3                     U5P2            equ	755	;# 
  4829   0002F3                     U5P2L           equ	755	;# 
  4830   0002F5                     U5P3            equ	757	;# 
  4831   0002F5                     U5P3L           equ	757	;# 
  4832   0002F7                     U5CON0          equ	759	;# 
  4833   0002F8                     U5CON1          equ	760	;# 
  4834   0002F9                     U5CON2          equ	761	;# 
  4835   0002FA                     U5BRG           equ	762	;# 
  4836   0002FA                     U5BRGL          equ	762	;# 
  4837   0002FB                     U5BRGH          equ	763	;# 
  4838   0002FC                     U5FIFO          equ	764	;# 
  4839   0002FD                     U5UIR           equ	765	;# 
  4840   0002FE                     U5ERRIR         equ	766	;# 
  4841   0002FF                     U5ERRIE         equ	767	;# 
  4842   000300                     SMT1TMR         equ	768	;# 
  4843   000300                     SMT1TMRL        equ	768	;# 
  4844   000301                     SMT1TMRH        equ	769	;# 
  4845   000302                     SMT1TMRU        equ	770	;# 
  4846   000303                     SMT1CPR         equ	771	;# 
  4847   000303                     SMT1CPRL        equ	771	;# 
  4848   000304                     SMT1CPRH        equ	772	;# 
  4849   000305                     SMT1CPRU        equ	773	;# 
  4850   000306                     SMT1CPW         equ	774	;# 
  4851   000306                     SMT1CPWL        equ	774	;# 
  4852   000307                     SMT1CPWH        equ	775	;# 
  4853   000308                     SMT1CPWU        equ	776	;# 
  4854   000309                     SMT1PR          equ	777	;# 
  4855   000309                     SMT1PRL         equ	777	;# 
  4856   00030A                     SMT1PRH         equ	778	;# 
  4857   00030B                     SMT1PRU         equ	779	;# 
  4858   00030C                     SMT1CON0        equ	780	;# 
  4859   00030D                     SMT1CON1        equ	781	;# 
  4860   00030E                     SMT1STAT        equ	782	;# 
  4861   00030F                     SMT1CLK         equ	783	;# 
  4862   000310                     SMT1SIG         equ	784	;# 
  4863   000311                     SMT1WIN         equ	785	;# 
  4864   000318                     TMR0L           equ	792	;# 
  4865   000318                     TMR0            equ	792	;# 
  4866   000319                     TMR0H           equ	793	;# 
  4867   000319                     PR0             equ	793	;# 
  4868   00031A                     T0CON0          equ	794	;# 
  4869   00031B                     T0CON1          equ	795	;# 
  4870   00031C                     TMR1            equ	796	;# 
  4871   00031C                     TMR1L           equ	796	;# 
  4872   00031D                     TMR1H           equ	797	;# 
  4873   00031E                     T1CON           equ	798	;# 
  4874   00031E                     TMR1CON         equ	798	;# 
  4875   00031F                     T1GCON          equ	799	;# 
  4876   00031F                     TMR1GCON        equ	799	;# 
  4877   000320                     T1GATE          equ	800	;# 
  4878   000320                     TMR1GATE        equ	800	;# 
  4879   000321                     T1CLK           equ	801	;# 
  4880   000321                     TMR1CLK         equ	801	;# 
  4881   000321                     PR1             equ	801	;# 
  4882   000322                     T2TMR           equ	802	;# 
  4883   000322                     TMR2            equ	802	;# 
  4884   000323                     T2PR            equ	803	;# 
  4885   000323                     PR2             equ	803	;# 
  4886   000324                     T2CON           equ	804	;# 
  4887   000325                     T2HLT           equ	805	;# 
  4888   000326                     T2CLKCON        equ	806	;# 
  4889   000326                     T2CLK           equ	806	;# 
  4890   000327                     T2RST           equ	807	;# 
  4891   000328                     TMR3            equ	808	;# 
  4892   000328                     TMR3L           equ	808	;# 
  4893   000329                     TMR3H           equ	809	;# 
  4894   00032A                     T3CON           equ	810	;# 
  4895   00032A                     TMR3CON         equ	810	;# 
  4896   00032B                     T3GCON          equ	811	;# 
  4897   00032B                     TMR3GCON        equ	811	;# 
  4898   00032C                     T3GATE          equ	812	;# 
  4899   00032C                     TMR3GATE        equ	812	;# 
  4900   00032D                     T3CLK           equ	813	;# 
  4901   00032D                     TMR3CLK         equ	813	;# 
  4902   00032D                     PR3             equ	813	;# 
  4903   00032E                     T4TMR           equ	814	;# 
  4904   00032E                     TMR4            equ	814	;# 
  4905   00032F                     T4PR            equ	815	;# 
  4906   00032F                     PR4             equ	815	;# 
  4907   000330                     T4CON           equ	816	;# 
  4908   000331                     T4HLT           equ	817	;# 
  4909   000332                     T4CLKCON        equ	818	;# 
  4910   000332                     T4CLK           equ	818	;# 
  4911   000333                     T4RST           equ	819	;# 
  4912   000334                     TMR5            equ	820	;# 
  4913   000334                     TMR5L           equ	820	;# 
  4914   000335                     TMR5H           equ	821	;# 
  4915   000336                     T5CON           equ	822	;# 
  4916   000336                     TMR5CON         equ	822	;# 
  4917   000337                     T5GCON          equ	823	;# 
  4918   000337                     TMR5GCON        equ	823	;# 
  4919   000338                     T5GATE          equ	824	;# 
  4920   000338                     TMR5GATE        equ	824	;# 
  4921   000339                     T5CLK           equ	825	;# 
  4922   000339                     TMR5CLK         equ	825	;# 
  4923   000339                     PR5             equ	825	;# 
  4924   00033A                     T6TMR           equ	826	;# 
  4925   00033A                     TMR6            equ	826	;# 
  4926   00033B                     T6PR            equ	827	;# 
  4927   00033B                     PR6             equ	827	;# 
  4928   00033C                     T6CON           equ	828	;# 
  4929   00033D                     T6HLT           equ	829	;# 
  4930   00033E                     T6CLKCON        equ	830	;# 
  4931   00033E                     T6CLK           equ	830	;# 
  4932   00033F                     T6RST           equ	831	;# 
  4933   000340                     CCPR1           equ	832	;# 
  4934   000340                     CCPR1L          equ	832	;# 
  4935   000341                     CCPR1H          equ	833	;# 
  4936   000342                     CCP1CON         equ	834	;# 
  4937   000343                     CCP1CAP         equ	835	;# 
  4938   000344                     CCPR2           equ	836	;# 
  4939   000344                     CCPR2L          equ	836	;# 
  4940   000345                     CCPR2H          equ	837	;# 
  4941   000346                     CCP2CON         equ	838	;# 
  4942   000347                     CCP2CAP         equ	839	;# 
  4943   000348                     CCPR3           equ	840	;# 
  4944   000348                     CCPR3L          equ	840	;# 
  4945   000349                     CCPR3H          equ	841	;# 
  4946   00034A                     CCP3CON         equ	842	;# 
  4947   00034B                     CCP3CAP         equ	843	;# 
  4948   00034C                     CCPTMRS0        equ	844	;# 
  4949   00034F                     CRCDATA         equ	847	;# 
  4950   00034F                     CRCDATL         equ	847	;# 
  4951   000350                     CRCDATH         equ	848	;# 
  4952   000351                     CRCACC          equ	849	;# 
  4953   000351                     CRCACCL         equ	849	;# 
  4954   000352                     CRCACCH         equ	850	;# 
  4955   000353                     CRCSHFT         equ	851	;# 
  4956   000353                     CRCSHIFTL       equ	851	;# 
  4957   000354                     CRCSHIFTH       equ	852	;# 
  4958   000355                     CRCXOR          equ	853	;# 
  4959   000355                     CRCXORL         equ	853	;# 
  4960   000356                     CRCXORH         equ	854	;# 
  4961   000357                     CRCCON0         equ	855	;# 
  4962   000358                     CRCCON1         equ	856	;# 
  4963   00035A                     SCANLADR        equ	858	;# 
  4964   00035A                     SCANLADRL       equ	858	;# 
  4965   00035B                     SCANLADRH       equ	859	;# 
  4966   00035C                     SCANLADRU       equ	860	;# 
  4967   00035D                     SCANHADR        equ	861	;# 
  4968   00035D                     SCANHADRL       equ	861	;# 
  4969   00035E                     SCANHADRH       equ	862	;# 
  4970   00035F                     SCANHADRU       equ	863	;# 
  4971   000360                     SCANCON0        equ	864	;# 
  4972   000361                     SCANTRIG        equ	865	;# 
  4973   000362                     IPR0            equ	866	;# 
  4974   000363                     IPR1            equ	867	;# 
  4975   000364                     IPR2            equ	868	;# 
  4976   000365                     IPR3            equ	869	;# 
  4977   000366                     IPR4            equ	870	;# 
  4978   000367                     IPR5            equ	871	;# 
  4979   000368                     IPR6            equ	872	;# 
  4980   000369                     IPR7            equ	873	;# 
  4981   00036A                     IPR8            equ	874	;# 
  4982   00036B                     IPR9            equ	875	;# 
  4983   00036C                     IPR10           equ	876	;# 
  4984   00036D                     IPR11           equ	877	;# 
  4985   00036E                     IPR12           equ	878	;# 
  4986   00036F                     IPR13           equ	879	;# 
  4987   000370                     IPR14           equ	880	;# 
  4988   000371                     IPR15           equ	881	;# 
  4989   000373                     STATUS_CSHAD    equ	883	;# 
  4990   000374                     WREG_CSHAD      equ	884	;# 
  4991   000375                     BSR_CSHAD       equ	885	;# 
  4992   000376                     SHADCON         equ	886	;# 
  4993   000377                     STATUS_SHAD     equ	887	;# 
  4994   000378                     WREG_SHAD       equ	888	;# 
  4995   000379                     BSR_SHAD        equ	889	;# 
  4996   00037A                     PCLATH_SHAD     equ	890	;# 
  4997   00037B                     PCLATU_SHAD     equ	891	;# 
  4998   00037C                     FSR0SH          equ	892	;# 
  4999   00037C                     FSR0L_SHAD      equ	892	;# 
  5000   00037D                     FSR0H_SHAD      equ	893	;# 
  5001   00037E                     FSR1SH          equ	894	;# 
  5002   00037E                     FSR1L_SHAD      equ	894	;# 
  5003   00037F                     FSR1H_SHAD      equ	895	;# 
  5004   000380                     FSR2SH          equ	896	;# 
  5005   000380                     FSR2L_SHAD      equ	896	;# 
  5006   000381                     FSR2H_SHAD      equ	897	;# 
  5007   000382                     PRODSH          equ	898	;# 
  5008   000382                     PRODL_SHAD      equ	898	;# 
  5009   000383                     PRODH_SHAD      equ	899	;# 
  5010   0003BC                     CWG1CLK         equ	956	;# 
  5011   0003BC                     CWG1CLKCON      equ	956	;# 
  5012   0003BD                     CWG1ISM         equ	957	;# 
  5013   0003BD                     CWG1DAT         equ	957	;# 
  5014   0003BE                     CWG1DBR         equ	958	;# 
  5015   0003BF                     CWG1DBF         equ	959	;# 
  5016   0003C0                     CWG1CON0        equ	960	;# 
  5017   0003C1                     CWG1CON1        equ	961	;# 
  5018   0003C2                     CWG1AS0         equ	962	;# 
  5019   0003C3                     CWG1AS1         equ	963	;# 
  5020   0003C4                     CWG1STR         equ	964	;# 
  5021   0003C5                     CWG2CLK         equ	965	;# 
  5022   0003C5                     CWG2CLKCON      equ	965	;# 
  5023   0003C6                     CWG2ISM         equ	966	;# 
  5024   0003C6                     CWG2DAT         equ	966	;# 
  5025   0003C7                     CWG2DBR         equ	967	;# 
  5026   0003C8                     CWG2DBF         equ	968	;# 
  5027   0003C9                     CWG2CON0        equ	969	;# 
  5028   0003CA                     CWG2CON1        equ	970	;# 
  5029   0003CB                     CWG2AS0         equ	971	;# 
  5030   0003CC                     CWG2AS1         equ	972	;# 
  5031   0003CD                     CWG2STR         equ	973	;# 
  5032   0003CE                     CWG3CLK         equ	974	;# 
  5033   0003CE                     CWG3CLKCON      equ	974	;# 
  5034   0003CF                     CWG3ISM         equ	975	;# 
  5035   0003CF                     CWG3DAT         equ	975	;# 
  5036   0003D0                     CWG3DBR         equ	976	;# 
  5037   0003D1                     CWG3DBF         equ	977	;# 
  5038   0003D2                     CWG3CON0        equ	978	;# 
  5039   0003D3                     CWG3CON1        equ	979	;# 
  5040   0003D4                     CWG3AS0         equ	980	;# 
  5041   0003D5                     CWG3AS1         equ	981	;# 
  5042   0003D6                     CWG3STR         equ	982	;# 
  5043   0003D7                     FVRCON          equ	983	;# 
  5044   0003D8                     ADCPCON         equ	984	;# 
  5045   0003D8                     ADCP            equ	984	;# 
  5046   0003D9                     ADLTH           equ	985	;# 
  5047   0003D9                     ADLTHL          equ	985	;# 
  5048   0003DA                     ADLTHH          equ	986	;# 
  5049   0003DB                     ADUTH           equ	987	;# 
  5050   0003DB                     ADUTHL          equ	987	;# 
  5051   0003DC                     ADUTHH          equ	988	;# 
  5052   0003DD                     ADERR           equ	989	;# 
  5053   0003DD                     ADERRL          equ	989	;# 
  5054   0003DE                     ADERRH          equ	990	;# 
  5055   0003DF                     ADSTPT          equ	991	;# 
  5056   0003DF                     ADSTPTL         equ	991	;# 
  5057   0003E0                     ADSTPTH         equ	992	;# 
  5058   0003E1                     ADFLTR          equ	993	;# 
  5059   0003E1                     ADFLTRL         equ	993	;# 
  5060   0003E2                     ADFLTRH         equ	994	;# 
  5061   0003E3                     ADACC           equ	995	;# 
  5062   0003E3                     ADACCL          equ	995	;# 
  5063   0003E4                     ADACCH          equ	996	;# 
  5064   0003E5                     ADACCU          equ	997	;# 
  5065   0003E6                     ADCNT           equ	998	;# 
  5066   0003E7                     ADRPT           equ	999	;# 
  5067   0003E8                     ADPREV          equ	1000	;# 
  5068   0003E8                     ADPREVL         equ	1000	;# 
  5069   0003E9                     ADPREVH         equ	1001	;# 
  5070   0003EA                     ADRES           equ	1002	;# 
  5071   0003EA                     ADRESL          equ	1002	;# 
  5072   0003EB                     ADRESH          equ	1003	;# 
  5073   0003EC                     ADPCH           equ	1004	;# 
  5074   0003EE                     ADACQ           equ	1006	;# 
  5075   0003EE                     ADACQL          equ	1006	;# 
  5076   0003EF                     ADACQH          equ	1007	;# 
  5077   0003F0                     ADCAP           equ	1008	;# 
  5078   0003F1                     ADPRE           equ	1009	;# 
  5079   0003F1                     ADPREL          equ	1009	;# 
  5080   0003F2                     ADPREH          equ	1010	;# 
  5081   0003F3                     ADCON0          equ	1011	;# 
  5082   0003F4                     ADCON1          equ	1012	;# 
  5083   0003F5                     ADCON2          equ	1013	;# 
  5084   0003F6                     ADCON3          equ	1014	;# 
  5085   0003F7                     ADSTAT          equ	1015	;# 
  5086   0003F8                     ADREF           equ	1016	;# 
  5087   0003F9                     ADACT           equ	1017	;# 
  5088   0003FA                     ADCLK           equ	1018	;# 
  5089   000400                     ANSELA          equ	1024	;# 
  5090   000401                     WPUA            equ	1025	;# 
  5091   000402                     ODCONA          equ	1026	;# 
  5092   000403                     SLRCONA         equ	1027	;# 
  5093   000404                     INLVLA          equ	1028	;# 
  5094   000405                     IOCAP           equ	1029	;# 
  5095   000406                     IOCAN           equ	1030	;# 
  5096   000407                     IOCAF           equ	1031	;# 
  5097   000408                     ANSELB          equ	1032	;# 
  5098   000409                     WPUB            equ	1033	;# 
  5099   00040A                     ODCONB          equ	1034	;# 
  5100   00040B                     SLRCONB         equ	1035	;# 
  5101   00040C                     INLVLB          equ	1036	;# 
  5102   00040D                     IOCBP           equ	1037	;# 
  5103   00040E                     IOCBN           equ	1038	;# 
  5104   00040F                     IOCBF           equ	1039	;# 
  5105   000410                     ANSELC          equ	1040	;# 
  5106   000411                     WPUC            equ	1041	;# 
  5107   000412                     ODCONC          equ	1042	;# 
  5108   000413                     SLRCONC         equ	1043	;# 
  5109   000414                     INLVLC          equ	1044	;# 
  5110   000415                     IOCCP           equ	1045	;# 
  5111   000416                     IOCCN           equ	1046	;# 
  5112   000417                     IOCCF           equ	1047	;# 
  5113   000418                     ANSELD          equ	1048	;# 
  5114   000419                     WPUD            equ	1049	;# 
  5115   00041A                     ODCOND          equ	1050	;# 
  5116   00041B                     SLRCOND         equ	1051	;# 
  5117   00041C                     INLVLD          equ	1052	;# 
  5118   000420                     ANSELE          equ	1056	;# 
  5119   000421                     WPUE            equ	1057	;# 
  5120   000422                     ODCONE          equ	1058	;# 
  5121   000423                     SLRCONE         equ	1059	;# 
  5122   000424                     INLVLE          equ	1060	;# 
  5123   000425                     IOCEP           equ	1061	;# 
  5124   000426                     IOCEN           equ	1062	;# 
  5125   000427                     IOCEF           equ	1063	;# 
  5126   000428                     ANSELF          equ	1064	;# 
  5127   000429                     WPUF            equ	1065	;# 
  5128   00042A                     ODCONF          equ	1066	;# 
  5129   00042B                     SLRCONF         equ	1067	;# 
  5130   00042C                     INLVLF          equ	1068	;# 
  5131   000440                     NCO1ACC         equ	1088	;# 
  5132   000440                     NCO1ACCL        equ	1088	;# 
  5133   000441                     NCO1ACCH        equ	1089	;# 
  5134   000442                     NCO1ACCU        equ	1090	;# 
  5135   000443                     NCO1INC         equ	1091	;# 
  5136   000443                     NCO1INCL        equ	1091	;# 
  5137   000444                     NCO1INCH        equ	1092	;# 
  5138   000445                     NCO1INCU        equ	1093	;# 
  5139   000446                     NCO1CON         equ	1094	;# 
  5140   000447                     NCO1CLK         equ	1095	;# 
  5141   000448                     NCO2ACC         equ	1096	;# 
  5142   000448                     NCO2ACCL        equ	1096	;# 
  5143   000449                     NCO2ACCH        equ	1097	;# 
  5144   00044A                     NCO2ACCU        equ	1098	;# 
  5145   00044B                     NCO2INC         equ	1099	;# 
  5146   00044B                     NCO2INCL        equ	1099	;# 
  5147   00044C                     NCO2INCH        equ	1100	;# 
  5148   00044D                     NCO2INCU        equ	1101	;# 
  5149   00044E                     NCO2CON         equ	1102	;# 
  5150   00044F                     NCO2CLK         equ	1103	;# 
  5151   000450                     NCO3ACC         equ	1104	;# 
  5152   000450                     NCO3ACCL        equ	1104	;# 
  5153   000451                     NCO3ACCH        equ	1105	;# 
  5154   000452                     NCO3ACCU        equ	1106	;# 
  5155   000453                     NCO3INC         equ	1107	;# 
  5156   000453                     NCO3INCL        equ	1107	;# 
  5157   000454                     NCO3INCH        equ	1108	;# 
  5158   000455                     NCO3INCU        equ	1109	;# 
  5159   000456                     NCO3CON         equ	1110	;# 
  5160   000457                     NCO3CLK         equ	1111	;# 
  5161   000459                     IVTLOCK         equ	1113	;# 
  5162   00045A                     IVTAD           equ	1114	;# 
  5163   00045A                     IVTADL          equ	1114	;# 
  5164   00045B                     IVTADH          equ	1115	;# 
  5165   00045C                     IVTADU          equ	1116	;# 
  5166   00045D                     IVTBASE         equ	1117	;# 
  5167   00045D                     IVTBASEL        equ	1117	;# 
  5168   00045E                     IVTBASEH        equ	1118	;# 
  5169   00045F                     IVTBASEU        equ	1119	;# 
  5170   000460                     PWM1ERS         equ	1120	;# 
  5171   000461                     PWM1CLK         equ	1121	;# 
  5172   000462                     PWM1LDS         equ	1122	;# 
  5173   000463                     PWM1PR          equ	1123	;# 
  5174   000463                     PWM1PRL         equ	1123	;# 
  5175   000464                     PWM1PRH         equ	1124	;# 
  5176   000465                     PWM1CPRE        equ	1125	;# 
  5177   000466                     PWM1PIPOS       equ	1126	;# 
  5178   000467                     PWM1GIR         equ	1127	;# 
  5179   000468                     PWM1GIE         equ	1128	;# 
  5180   000469                     PWM1CON         equ	1129	;# 
  5181   00046A                     PWM1S1CFG       equ	1130	;# 
  5182   00046B                     PWM1S1P1        equ	1131	;# 
  5183   00046B                     PWM1S1P1L       equ	1131	;# 
  5184   00046C                     PWM1S1P1H       equ	1132	;# 
  5185   00046D                     PWM1S1P2        equ	1133	;# 
  5186   00046D                     PWM1S1P2L       equ	1133	;# 
  5187   00046E                     PWM1S1P2H       equ	1134	;# 
  5188   00046F                     PWM2ERS         equ	1135	;# 
  5189   000470                     PWM2CLK         equ	1136	;# 
  5190   000471                     PWM2LDS         equ	1137	;# 
  5191   000472                     PWM2PR          equ	1138	;# 
  5192   000472                     PWM2PRL         equ	1138	;# 
  5193   000473                     PWM2PRH         equ	1139	;# 
  5194   000474                     PWM2CPRE        equ	1140	;# 
  5195   000475                     PWM2PIPOS       equ	1141	;# 
  5196   000476                     PWM2GIR         equ	1142	;# 
  5197   000477                     PWM2GIE         equ	1143	;# 
  5198   000478                     PWM2CON         equ	1144	;# 
  5199   000479                     PWM2S1CFG       equ	1145	;# 
  5200   00047A                     PWM2S1P1        equ	1146	;# 
  5201   00047A                     PWM2S1P1L       equ	1146	;# 
  5202   00047B                     PWM2S1P1H       equ	1147	;# 
  5203   00047C                     PWM2S1P2        equ	1148	;# 
  5204   00047C                     PWM2S1P2L       equ	1148	;# 
  5205   00047D                     PWM2S1P2H       equ	1149	;# 
  5206   00047E                     PWM3ERS         equ	1150	;# 
  5207   00047F                     PWM3CLK         equ	1151	;# 
  5208   000480                     PWM3LDS         equ	1152	;# 
  5209   000481                     PWM3PR          equ	1153	;# 
  5210   000481                     PWM3PRL         equ	1153	;# 
  5211   000482                     PWM3PRH         equ	1154	;# 
  5212   000483                     PWM3CPRE        equ	1155	;# 
  5213   000484                     PWM3PIPOS       equ	1156	;# 
  5214   000485                     PWM3GIR         equ	1157	;# 
  5215   000486                     PWM3GIE         equ	1158	;# 
  5216   000487                     PWM3CON         equ	1159	;# 
  5217   000488                     PWM3S1CFG       equ	1160	;# 
  5218   000489                     PWM3S1P1        equ	1161	;# 
  5219   000489                     PWM3S1P1L       equ	1161	;# 
  5220   00048A                     PWM3S1P1H       equ	1162	;# 
  5221   00048B                     PWM3S1P2        equ	1163	;# 
  5222   00048B                     PWM3S1P2L       equ	1163	;# 
  5223   00048C                     PWM3S1P2H       equ	1164	;# 
  5224   00049C                     PWMLOAD         equ	1180	;# 
  5225   00049D                     PWMEN           equ	1181	;# 
  5226   00049E                     PIE0            equ	1182	;# 
  5227   00049F                     PIE1            equ	1183	;# 
  5228   0004A0                     PIE2            equ	1184	;# 
  5229   0004A1                     PIE3            equ	1185	;# 
  5230   0004A2                     PIE4            equ	1186	;# 
  5231   0004A3                     PIE5            equ	1187	;# 
  5232   0004A4                     PIE6            equ	1188	;# 
  5233   0004A5                     PIE7            equ	1189	;# 
  5234   0004A6                     PIE8            equ	1190	;# 
  5235   0004A7                     PIE9            equ	1191	;# 
  5236   0004A8                     PIE10           equ	1192	;# 
  5237   0004A9                     PIE11           equ	1193	;# 
  5238   0004AA                     PIE12           equ	1194	;# 
  5239   0004AB                     PIE13           equ	1195	;# 
  5240   0004AC                     PIE14           equ	1196	;# 
  5241   0004AD                     PIE15           equ	1197	;# 
  5242   0004AE                     PIR0            equ	1198	;# 
  5243   0004AF                     PIR1            equ	1199	;# 
  5244   0004B0                     PIR2            equ	1200	;# 
  5245   0004B1                     PIR3            equ	1201	;# 
  5246   0004B2                     PIR4            equ	1202	;# 
  5247   0004B3                     PIR5            equ	1203	;# 
  5248   0004B4                     PIR6            equ	1204	;# 
  5249   0004B5                     PIR7            equ	1205	;# 
  5250   0004B6                     PIR8            equ	1206	;# 
  5251   0004B7                     PIR9            equ	1207	;# 
  5252   0004B8                     PIR10           equ	1208	;# 
  5253   0004B9                     PIR11           equ	1209	;# 
  5254   0004BA                     PIR12           equ	1210	;# 
  5255   0004BB                     PIR13           equ	1211	;# 
  5256   0004BC                     PIR14           equ	1212	;# 
  5257   0004BD                     PIR15           equ	1213	;# 
  5258   0004BE                     LATA            equ	1214	;# 
  5259   0004BF                     LATB            equ	1215	;# 
  5260   0004C0                     LATC            equ	1216	;# 
  5261   0004C1                     LATD            equ	1217	;# 
  5262   0004C2                     LATE            equ	1218	;# 
  5263   0004C3                     LATF            equ	1219	;# 
  5264   0004C6                     TRISA           equ	1222	;# 
  5265   0004C7                     TRISB           equ	1223	;# 
  5266   0004C8                     TRISC           equ	1224	;# 
  5267   0004C9                     TRISD           equ	1225	;# 
  5268   0004CA                     TRISE           equ	1226	;# 
  5269   0004CB                     TRISF           equ	1227	;# 
  5270   0004CE                     PORTA           equ	1230	;# 
  5271   0004CF                     PORTB           equ	1231	;# 
  5272   0004D0                     PORTC           equ	1232	;# 
  5273   0004D1                     PORTD           equ	1233	;# 
  5274   0004D2                     PORTE           equ	1234	;# 
  5275   0004D3                     PORTF           equ	1235	;# 
  5276   0004D6                     INTCON0         equ	1238	;# 
  5277   0004D7                     INTCON1         equ	1239	;# 
  5278   0004D8                     STATUS          equ	1240	;# 
  5279   0004D9                     FSR2            equ	1241	;# 
  5280   0004D9                     FSR2L           equ	1241	;# 
  5281   0004DA                     FSR2H           equ	1242	;# 
  5282   0004DB                     PLUSW2          equ	1243	;# 
  5283   0004DC                     PREINC2         equ	1244	;# 
  5284   0004DD                     POSTDEC2        equ	1245	;# 
  5285   0004DE                     POSTINC2        equ	1246	;# 
  5286   0004DF                     INDF2           equ	1247	;# 
  5287   0004E0                     BSR             equ	1248	;# 
  5288   0004E1                     FSR1            equ	1249	;# 
  5289   0004E1                     FSR1L           equ	1249	;# 
  5290   0004E2                     FSR1H           equ	1250	;# 
  5291   0004E3                     PLUSW1          equ	1251	;# 
  5292   0004E4                     PREINC1         equ	1252	;# 
  5293   0004E5                     POSTDEC1        equ	1253	;# 
  5294   0004E6                     POSTINC1        equ	1254	;# 
  5295   0004E7                     INDF1           equ	1255	;# 
  5296   0004E8                     WREG            equ	1256	;# 
  5297   0004E9                     FSR0            equ	1257	;# 
  5298   0004E9                     FSR0L           equ	1257	;# 
  5299   0004EA                     FSR0H           equ	1258	;# 
  5300   0004EB                     PLUSW0          equ	1259	;# 
  5301   0004EC                     PREINC0         equ	1260	;# 
  5302   0004ED                     POSTDEC0        equ	1261	;# 
  5303   0004EE                     POSTINC0        equ	1262	;# 
  5304   0004EF                     INDF0           equ	1263	;# 
  5305   0004F0                     PCON0           equ	1264	;# 
  5306   0004F1                     PCON1           equ	1265	;# 
  5307   0004F2                     CPUDOZE         equ	1266	;# 
  5308   0004F3                     PROD            equ	1267	;# 
  5309   0004F3                     PRODL           equ	1267	;# 
  5310   0004F4                     PRODH           equ	1268	;# 
  5311   0004F5                     TABLAT          equ	1269	;# 
  5312   0004F6                     TBLPTR          equ	1270	;# 
  5313   0004F6                     TBLPTRL         equ	1270	;# 
  5314   0004F7                     TBLPTRH         equ	1271	;# 
  5315   0004F8                     TBLPTRU         equ	1272	;# 
  5316   0004F9                     PCLAT           equ	1273	;# 
  5317   0004F9                     PCL             equ	1273	;# 
  5318   0004FA                     PCLATH          equ	1274	;# 
  5319   0004FB                     PCLATU          equ	1275	;# 
  5320   0004FC                     STKPTR          equ	1276	;# 
  5321   0004FD                     TOS             equ	1277	;# 
  5322   0004FD                     TOSL            equ	1277	;# 
  5323   0004FE                     TOSH            equ	1278	;# 
  5324   0004FF                     TOSU            equ	1279	;# 
  5325   000039                     CLKRCON         equ	57	;# 
  5326   00003A                     CLKRCLK         equ	58	;# 
  5327   000040                     NVMCON0         equ	64	;# 
  5328   000041                     NVMCON1         equ	65	;# 
  5329   000042                     NVMLOCK         equ	66	;# 
  5330   000043                     NVMADR          equ	67	;# 
  5331   000043                     NVMADRL         equ	67	;# 
  5332   000044                     NVMADRH         equ	68	;# 
  5333   000045                     NVMADRU         equ	69	;# 
  5334   000046                     NVMDAT          equ	70	;# 
  5335   000046                     NVMDATL         equ	70	;# 
  5336   000047                     NVMDATH         equ	71	;# 
  5337   000048                     VREGCON         equ	72	;# 
  5338   000049                     BORCON          equ	73	;# 
  5339   00004A                     HLVDCON0        equ	74	;# 
  5340   00004B                     HLVDCON1        equ	75	;# 
  5341   00004C                     ZCDCON          equ	76	;# 
  5342   000060                     PMD0            equ	96	;# 
  5343   000061                     PMD1            equ	97	;# 
  5344   000063                     PMD3            equ	99	;# 
  5345   000064                     PMD4            equ	100	;# 
  5346   000065                     PMD5            equ	101	;# 
  5347   000066                     PMD6            equ	102	;# 
  5348   000067                     PMD7            equ	103	;# 
  5349   000068                     PMD8            equ	104	;# 
  5350   00006A                     MD1CON0         equ	106	;# 
  5351   00006B                     MD1CON1         equ	107	;# 
  5352   00006C                     MD1SRC          equ	108	;# 
  5353   00006D                     MD1CARL         equ	109	;# 
  5354   00006E                     MD1CARH         equ	110	;# 
  5355   00006F                     CMOUT           equ	111	;# 
  5356   000070                     CM1CON0         equ	112	;# 
  5357   000071                     CM1CON1         equ	113	;# 
  5358   000072                     CM1NCH          equ	114	;# 
  5359   000073                     CM1PCH          equ	115	;# 
  5360   000074                     CM2CON0         equ	116	;# 
  5361   000075                     CM2CON1         equ	117	;# 
  5362   000076                     CM2NCH          equ	118	;# 
  5363   000077                     CM2PCH          equ	119	;# 
  5364   000078                     WDTCON0         equ	120	;# 
  5365   000079                     WDTCON1         equ	121	;# 
  5366   00007A                     WDTPS           equ	122	;# 
  5367   00007A                     WDTPSL          equ	122	;# 
  5368   00007B                     WDTPSH          equ	123	;# 
  5369   00007C                     WDTTMR          equ	124	;# 
  5370   00007D                     DAC1DAT         equ	125	;# 
  5371   00007D                     DAC1DATL        equ	125	;# 
  5372   00007F                     DAC1CON         equ	127	;# 
  5373   000080                     SPI1RXB         equ	128	;# 
  5374   000081                     SPI1TXB         equ	129	;# 
  5375   000082                     SPI1TCNT        equ	130	;# 
  5376   000082                     SPI1TCNTL       equ	130	;# 
  5377   000083                     SPI1TCNTH       equ	131	;# 
  5378   000084                     SPI1CON0        equ	132	;# 
  5379   000085                     SPI1CON1        equ	133	;# 
  5380   000086                     SPI1CON2        equ	134	;# 
  5381   000087                     SPI1STATUS      equ	135	;# 
  5382   000088                     SPI1TWIDTH      equ	136	;# 
  5383   000089                     SPI1BAUD        equ	137	;# 
  5384   00008A                     SPI1INTF        equ	138	;# 
  5385   00008B                     SPI1INTE        equ	139	;# 
  5386   00008C                     SPI1CLK         equ	140	;# 
  5387   00008D                     SPI2RXB         equ	141	;# 
  5388   00008E                     SPI2TXB         equ	142	;# 
  5389   00008F                     SPI2TCNT        equ	143	;# 
  5390   00008F                     SPI2TCNTL       equ	143	;# 
  5391   000090                     SPI2TCNTH       equ	144	;# 
  5392   000091                     SPI2CON0        equ	145	;# 
  5393   000092                     SPI2CON1        equ	146	;# 
  5394   000093                     SPI2CON2        equ	147	;# 
  5395   000094                     SPI2STATUS      equ	148	;# 
  5396   000095                     SPI2TWIDTH      equ	149	;# 
  5397   000096                     SPI2BAUD        equ	150	;# 
  5398   000097                     SPI2INTF        equ	151	;# 
  5399   000098                     SPI2INTE        equ	152	;# 
  5400   000099                     SPI2CLK         equ	153	;# 
  5401   0000AC                     ACTCON          equ	172	;# 
  5402   0000AD                     OSCCON1         equ	173	;# 
  5403   0000AE                     OSCCON2         equ	174	;# 
  5404   0000AF                     OSCCON3         equ	175	;# 
  5405   0000B0                     OSCTUNE         equ	176	;# 
  5406   0000B1                     OSCFRQ          equ	177	;# 
  5407   0000B1                     OSCFREQ         equ	177	;# 
  5408   0000B2                     OSCSTAT         equ	178	;# 
  5409   0000B2                     OSCSTAT1        equ	178	;# 
  5410   0000B3                     OSCEN           equ	179	;# 
  5411   0000B4                     PRLOCK          equ	180	;# 
  5412   0000B5                     SCANPR          equ	181	;# 
  5413   0000B6                     DMA1PR          equ	182	;# 
  5414   0000B7                     DMA2PR          equ	183	;# 
  5415   0000B8                     DMA3PR          equ	184	;# 
  5416   0000B9                     DMA4PR          equ	185	;# 
  5417   0000BA                     DMA5PR          equ	186	;# 
  5418   0000BB                     DMA6PR          equ	187	;# 
  5419   0000BE                     MAINPR          equ	190	;# 
  5420   0000BF                     ISRPR           equ	191	;# 
  5421   0000D4                     CLCDATA         equ	212	;# 
  5422   0000D5                     CLCSELECT       equ	213	;# 
  5423   0000D6                     CLCnCON         equ	214	;# 
  5424   0000D7                     CLCnPOL         equ	215	;# 
  5425   0000D8                     CLCnSEL0        equ	216	;# 
  5426   0000D9                     CLCnSEL1        equ	217	;# 
  5427   0000DA                     CLCnSEL2        equ	218	;# 
  5428   0000DB                     CLCnSEL3        equ	219	;# 
  5429   0000DC                     CLCnGLS0        equ	220	;# 
  5430   0000DD                     CLCnGLS1        equ	221	;# 
  5431   0000DE                     CLCnGLS2        equ	222	;# 
  5432   0000DF                     CLCnGLS3        equ	223	;# 
  5433   0000E8                     DMASELECT       equ	232	;# 
  5434   0000E9                     DMAnBUF         equ	233	;# 
  5435   0000EA                     DMAnDCNT        equ	234	;# 
  5436   0000EA                     DMAnDCNTL       equ	234	;# 
  5437   0000EB                     DMAnDCNTH       equ	235	;# 
  5438   0000EC                     DMAnDPTR        equ	236	;# 
  5439   0000EC                     DMAnDPTRL       equ	236	;# 
  5440   0000ED                     DMAnDPTRH       equ	237	;# 
  5441   0000EE                     DMAnDSZ         equ	238	;# 
  5442   0000EE                     DMAnDSZL        equ	238	;# 
  5443   0000EF                     DMAnDSZH        equ	239	;# 
  5444   0000F0                     DMAnDSA         equ	240	;# 
  5445   0000F0                     DMAnDSAL        equ	240	;# 
  5446   0000F1                     DMAnDSAH        equ	241	;# 
  5447   0000F2                     DMAnSCNT        equ	242	;# 
  5448   0000F2                     DMAnSCNTL       equ	242	;# 
  5449   0000F3                     DMAnSCNTH       equ	243	;# 
  5450   0000F4                     DMAnSPTR        equ	244	;# 
  5451   0000F4                     DMAnSPTRL       equ	244	;# 
  5452   0000F5                     DMAnSPTRH       equ	245	;# 
  5453   0000F6                     DMAnSPTRU       equ	246	;# 
  5454   0000F7                     DMAnSSZ         equ	247	;# 
  5455   0000F7                     DMAnSSZL        equ	247	;# 
  5456   0000F8                     DMAnSSZH        equ	248	;# 
  5457   0000F9                     DMAnSSA         equ	249	;# 
  5458   0000F9                     DMAnSSAL        equ	249	;# 
  5459   0000FA                     DMAnSSAH        equ	250	;# 
  5460   0000FB                     DMAnSSAU        equ	251	;# 
  5461   0000FC                     DMAnCON0        equ	252	;# 
  5462   0000FD                     DMAnCON1        equ	253	;# 
  5463   0000FE                     DMAnAIRQ        equ	254	;# 
  5464   0000FF                     DMAnSIRQ        equ	255	;# 
  5465   000200                     PPSLOCK         equ	512	;# 
  5466   000201                     RA0PPS          equ	513	;# 
  5467   000202                     RA1PPS          equ	514	;# 
  5468   000203                     RA2PPS          equ	515	;# 
  5469   000204                     RA3PPS          equ	516	;# 
  5470   000205                     RA4PPS          equ	517	;# 
  5471   000206                     RA5PPS          equ	518	;# 
  5472   000207                     RA6PPS          equ	519	;# 
  5473   000208                     RA7PPS          equ	520	;# 
  5474   000209                     RB0PPS          equ	521	;# 
  5475   00020A                     RB1PPS          equ	522	;# 
  5476   00020B                     RB2PPS          equ	523	;# 
  5477   00020C                     RB3PPS          equ	524	;# 
  5478   00020D                     RB4PPS          equ	525	;# 
  5479   00020E                     RB5PPS          equ	526	;# 
  5480   00020F                     RB6PPS          equ	527	;# 
  5481   000210                     RB7PPS          equ	528	;# 
  5482   000211                     RC0PPS          equ	529	;# 
  5483   000212                     RC1PPS          equ	530	;# 
  5484   000213                     RC2PPS          equ	531	;# 
  5485   000214                     RC3PPS          equ	532	;# 
  5486   000215                     RC4PPS          equ	533	;# 
  5487   000216                     RC5PPS          equ	534	;# 
  5488   000217                     RC6PPS          equ	535	;# 
  5489   000218                     RC7PPS          equ	536	;# 
  5490   000219                     RD0PPS          equ	537	;# 
  5491   00021A                     RD1PPS          equ	538	;# 
  5492   00021B                     RD2PPS          equ	539	;# 
  5493   00021C                     RD3PPS          equ	540	;# 
  5494   00021D                     RD4PPS          equ	541	;# 
  5495   00021E                     RD5PPS          equ	542	;# 
  5496   00021F                     RD6PPS          equ	543	;# 
  5497   000220                     RD7PPS          equ	544	;# 
  5498   000221                     RE0PPS          equ	545	;# 
  5499   000222                     RE1PPS          equ	546	;# 
  5500   000223                     RE2PPS          equ	547	;# 
  5501   000229                     RF0PPS          equ	553	;# 
  5502   00022A                     RF1PPS          equ	554	;# 
  5503   00022B                     RF2PPS          equ	555	;# 
  5504   00022C                     RF3PPS          equ	556	;# 
  5505   00022D                     RF4PPS          equ	557	;# 
  5506   00022E                     RF5PPS          equ	558	;# 
  5507   00022F                     RF6PPS          equ	559	;# 
  5508   000230                     RF7PPS          equ	560	;# 
  5509   00023E                     INT0PPS         equ	574	;# 
  5510   00023F                     INT1PPS         equ	575	;# 
  5511   000240                     INT2PPS         equ	576	;# 
  5512   000241                     T0CKIPPS        equ	577	;# 
  5513   000242                     T1CKIPPS        equ	578	;# 
  5514   000243                     T1GPPS          equ	579	;# 
  5515   000244                     T3CKIPPS        equ	580	;# 
  5516   000245                     T3GPPS          equ	581	;# 
  5517   000246                     T5CKIPPS        equ	582	;# 
  5518   000247                     T5GPPS          equ	583	;# 
  5519   000248                     T2INPPS         equ	584	;# 
  5520   000249                     T4INPPS         equ	585	;# 
  5521   00024A                     T6INPPS         equ	586	;# 
  5522   00024F                     CCP1PPS         equ	591	;# 
  5523   000250                     CCP2PPS         equ	592	;# 
  5524   000251                     CCP3PPS         equ	593	;# 
  5525   000253                     PWM1ERSPPS      equ	595	;# 
  5526   000254                     PWM2ERSPPS      equ	596	;# 
  5527   000255                     PWM3ERSPPS      equ	597	;# 
  5528   000257                     PWMIN0PPS       equ	599	;# 
  5529   000258                     PWMIN1PPS       equ	600	;# 
  5530   000259                     SMT1WINPPS      equ	601	;# 
  5531   00025A                     SMT1SIGPPS      equ	602	;# 
  5532   00025B                     CWG1PPS         equ	603	;# 
  5533   00025B                     CWG1INPPS       equ	603	;# 
  5534   00025C                     CWG2PPS         equ	604	;# 
  5535   00025C                     CWG2INPPS       equ	604	;# 
  5536   00025D                     CWG3PPS         equ	605	;# 
  5537   00025D                     CWG3INPPS       equ	605	;# 
  5538   00025E                     MD1CARLPPS      equ	606	;# 
  5539   00025E                     MDCARLPPS       equ	606	;# 
  5540   00025F                     MD1CARHPPS      equ	607	;# 
  5541   00025F                     MDCARHPPS       equ	607	;# 
  5542   000260                     MD1SRCPPS       equ	608	;# 
  5543   000260                     MDSRCPPS        equ	608	;# 
  5544   000261                     CLCIN0PPS       equ	609	;# 
  5545   000262                     CLCIN1PPS       equ	610	;# 
  5546   000263                     CLCIN2PPS       equ	611	;# 
  5547   000264                     CLCIN3PPS       equ	612	;# 
  5548   000265                     CLCIN4PPS       equ	613	;# 
  5549   000266                     CLCIN5PPS       equ	614	;# 
  5550   000267                     CLCIN6PPS       equ	615	;# 
  5551   000268                     CLCIN7PPS       equ	616	;# 
  5552   000269                     ADACTPPS        equ	617	;# 
  5553   00026A                     SPI1SCKPPS      equ	618	;# 
  5554   00026B                     SPI1SDIPPS      equ	619	;# 
  5555   00026C                     SPI1SSPPS       equ	620	;# 
  5556   00026D                     SPI2SCKPPS      equ	621	;# 
  5557   00026E                     SPI2SDIPPS      equ	622	;# 
  5558   00026F                     SPI2SSPPS       equ	623	;# 
  5559   000270                     I2C1SDAPPS      equ	624	;# 
  5560   000271                     I2C1SCLPPS      equ	625	;# 
  5561   000272                     U1RXPPS         equ	626	;# 
  5562   000273                     U1CTSPPS        equ	627	;# 
  5563   000274                     U2RXPPS         equ	628	;# 
  5564   000275                     U2CTSPPS        equ	629	;# 
  5565   000276                     U3RXPPS         equ	630	;# 
  5566   000277                     U3CTSPPS        equ	631	;# 
  5567   000278                     U4RXPPS         equ	632	;# 
  5568   000279                     U4CTSPPS        equ	633	;# 
  5569   00027A                     U5RXPPS         equ	634	;# 
  5570   00027B                     U5CTSPPS        equ	635	;# 
  5571   000286                     RC4I2C          equ	646	;# 
  5572   000287                     RC3I2C          equ	647	;# 
  5573   000288                     RB2I2C          equ	648	;# 
  5574   000289                     RB1I2C          equ	649	;# 
  5575   00028B                     I2C1RXB         equ	651	;# 
  5576   00028C                     I2C1TXB         equ	652	;# 
  5577   00028D                     I2C1CNT         equ	653	;# 
  5578   00028E                     I2C1ADB0        equ	654	;# 
  5579   00028F                     I2C1ADB1        equ	655	;# 
  5580   000290                     I2C1ADR0        equ	656	;# 
  5581   000291                     I2C1ADR1        equ	657	;# 
  5582   000292                     I2C1ADR2        equ	658	;# 
  5583   000293                     I2C1ADR3        equ	659	;# 
  5584   000294                     I2C1CON0        equ	660	;# 
  5585   000295                     I2C1CON1        equ	661	;# 
  5586   000296                     I2C1CON2        equ	662	;# 
  5587   000297                     I2C1ERR         equ	663	;# 
  5588   000298                     I2C1STAT0       equ	664	;# 
  5589   000299                     I2C1STAT1       equ	665	;# 
  5590   00029A                     I2C1PIR         equ	666	;# 
  5591   00029B                     I2C1PIE         equ	667	;# 
  5592   00029C                     I2C1CLK         equ	668	;# 
  5593   00029D                     I2C1BTO         equ	669	;# 
  5594   0002A1                     U1RXB           equ	673	;# 
  5595   0002A1                     U1RXBL          equ	673	;# 
  5596   0002A2                     U1RXCHK         equ	674	;# 
  5597   0002A3                     U1TXB           equ	675	;# 
  5598   0002A3                     U1TXBL          equ	675	;# 
  5599   0002A4                     U1TXCHK         equ	676	;# 
  5600   0002A5                     U1P1            equ	677	;# 
  5601   0002A5                     U1P1L           equ	677	;# 
  5602   0002A6                     U1P1H           equ	678	;# 
  5603   0002A7                     U1P2            equ	679	;# 
  5604   0002A7                     U1P2L           equ	679	;# 
  5605   0002A8                     U1P2H           equ	680	;# 
  5606   0002A9                     U1P3            equ	681	;# 
  5607   0002A9                     U1P3L           equ	681	;# 
  5608   0002AA                     U1P3H           equ	682	;# 
  5609   0002AB                     U1CON0          equ	683	;# 
  5610   0002AC                     U1CON1          equ	684	;# 
  5611   0002AD                     U1CON2          equ	685	;# 
  5612   0002AE                     U1BRG           equ	686	;# 
  5613   0002AE                     U1BRGL          equ	686	;# 
  5614   0002AF                     U1BRGH          equ	687	;# 
  5615   0002B0                     U1FIFO          equ	688	;# 
  5616   0002B1                     U1UIR           equ	689	;# 
  5617   0002B2                     U1ERRIR         equ	690	;# 
  5618   0002B3                     U1ERRIE         equ	691	;# 
  5619   0002B4                     U2RXB           equ	692	;# 
  5620   0002B4                     U2RXBL          equ	692	;# 
  5621   0002B6                     U2TXB           equ	694	;# 
  5622   0002B6                     U2TXBL          equ	694	;# 
  5623   0002B8                     U2P1            equ	696	;# 
  5624   0002B8                     U2P1L           equ	696	;# 
  5625   0002BA                     U2P2            equ	698	;# 
  5626   0002BA                     U2P2L           equ	698	;# 
  5627   0002BC                     U2P3            equ	700	;# 
  5628   0002BC                     U2P3L           equ	700	;# 
  5629   0002BE                     U2CON0          equ	702	;# 
  5630   0002BF                     U2CON1          equ	703	;# 
  5631   0002C0                     U2CON2          equ	704	;# 
  5632   0002C1                     U2BRG           equ	705	;# 
  5633   0002C1                     U2BRGL          equ	705	;# 
  5634   0002C2                     U2BRGH          equ	706	;# 
  5635   0002C3                     U2FIFO          equ	707	;# 
  5636   0002C4                     U2UIR           equ	708	;# 
  5637   0002C5                     U2ERRIR         equ	709	;# 
  5638   0002C6                     U2ERRIE         equ	710	;# 
  5639   0002C7                     U3RXB           equ	711	;# 
  5640   0002C7                     U3RXBL          equ	711	;# 
  5641   0002C9                     U3TXB           equ	713	;# 
  5642   0002C9                     U3TXBL          equ	713	;# 
  5643   0002CB                     U3P1            equ	715	;# 
  5644   0002CB                     U3P1L           equ	715	;# 
  5645   0002CD                     U3P2            equ	717	;# 
  5646   0002CD                     U3P2L           equ	717	;# 
  5647   0002CF                     U3P3            equ	719	;# 
  5648   0002CF                     U3P3L           equ	719	;# 
  5649   0002D1                     U3CON0          equ	721	;# 
  5650   0002D2                     U3CON1          equ	722	;# 
  5651   0002D3                     U3CON2          equ	723	;# 
  5652   0002D4                     U3BRG           equ	724	;# 
  5653   0002D4                     U3BRGL          equ	724	;# 
  5654   0002D5                     U3BRGH          equ	725	;# 
  5655   0002D6                     U3FIFO          equ	726	;# 
  5656   0002D7                     U3UIR           equ	727	;# 
  5657   0002D8                     U3ERRIR         equ	728	;# 
  5658   0002D9                     U3ERRIE         equ	729	;# 
  5659   0002DA                     U4RXB           equ	730	;# 
  5660   0002DA                     U4RXBL          equ	730	;# 
  5661   0002DC                     U4TXB           equ	732	;# 
  5662   0002DC                     U4TXBL          equ	732	;# 
  5663   0002DE                     U4P1            equ	734	;# 
  5664   0002DE                     U4P1L           equ	734	;# 
  5665   0002E0                     U4P2            equ	736	;# 
  5666   0002E0                     U4P2L           equ	736	;# 
  5667   0002E2                     U4P3            equ	738	;# 
  5668   0002E2                     U4P3L           equ	738	;# 
  5669   0002E4                     U4CON0          equ	740	;# 
  5670   0002E5                     U4CON1          equ	741	;# 
  5671   0002E6                     U4CON2          equ	742	;# 
  5672   0002E7                     U4BRG           equ	743	;# 
  5673   0002E7                     U4BRGL          equ	743	;# 
  5674   0002E8                     U4BRGH          equ	744	;# 
  5675   0002E9                     U4FIFO          equ	745	;# 
  5676   0002EA                     U4UIR           equ	746	;# 
  5677   0002EB                     U4ERRIR         equ	747	;# 
  5678   0002EC                     U4ERRIE         equ	748	;# 
  5679   0002ED                     U5RXB           equ	749	;# 
  5680   0002ED                     U5RXBL          equ	749	;# 
  5681   0002EF                     U5TXB           equ	751	;# 
  5682   0002EF                     U5TXBL          equ	751	;# 
  5683   0002F1                     U5P1            equ	753	;# 
  5684   0002F1                     U5P1L           equ	753	;# 
  5685   0002F3                     U5P2            equ	755	;# 
  5686   0002F3                     U5P2L           equ	755	;# 
  5687   0002F5                     U5P3            equ	757	;# 
  5688   0002F5                     U5P3L           equ	757	;# 
  5689   0002F7                     U5CON0          equ	759	;# 
  5690   0002F8                     U5CON1          equ	760	;# 
  5691   0002F9                     U5CON2          equ	761	;# 
  5692   0002FA                     U5BRG           equ	762	;# 
  5693   0002FA                     U5BRGL          equ	762	;# 
  5694   0002FB                     U5BRGH          equ	763	;# 
  5695   0002FC                     U5FIFO          equ	764	;# 
  5696   0002FD                     U5UIR           equ	765	;# 
  5697   0002FE                     U5ERRIR         equ	766	;# 
  5698   0002FF                     U5ERRIE         equ	767	;# 
  5699   000300                     SMT1TMR         equ	768	;# 
  5700   000300                     SMT1TMRL        equ	768	;# 
  5701   000301                     SMT1TMRH        equ	769	;# 
  5702   000302                     SMT1TMRU        equ	770	;# 
  5703   000303                     SMT1CPR         equ	771	;# 
  5704   000303                     SMT1CPRL        equ	771	;# 
  5705   000304                     SMT1CPRH        equ	772	;# 
  5706   000305                     SMT1CPRU        equ	773	;# 
  5707   000306                     SMT1CPW         equ	774	;# 
  5708   000306                     SMT1CPWL        equ	774	;# 
  5709   000307                     SMT1CPWH        equ	775	;# 
  5710   000308                     SMT1CPWU        equ	776	;# 
  5711   000309                     SMT1PR          equ	777	;# 
  5712   000309                     SMT1PRL         equ	777	;# 
  5713   00030A                     SMT1PRH         equ	778	;# 
  5714   00030B                     SMT1PRU         equ	779	;# 
  5715   00030C                     SMT1CON0        equ	780	;# 
  5716   00030D                     SMT1CON1        equ	781	;# 
  5717   00030E                     SMT1STAT        equ	782	;# 
  5718   00030F                     SMT1CLK         equ	783	;# 
  5719   000310                     SMT1SIG         equ	784	;# 
  5720   000311                     SMT1WIN         equ	785	;# 
  5721   000318                     TMR0L           equ	792	;# 
  5722   000318                     TMR0            equ	792	;# 
  5723   000319                     TMR0H           equ	793	;# 
  5724   000319                     PR0             equ	793	;# 
  5725   00031A                     T0CON0          equ	794	;# 
  5726   00031B                     T0CON1          equ	795	;# 
  5727   00031C                     TMR1            equ	796	;# 
  5728   00031C                     TMR1L           equ	796	;# 
  5729   00031D                     TMR1H           equ	797	;# 
  5730   00031E                     T1CON           equ	798	;# 
  5731   00031E                     TMR1CON         equ	798	;# 
  5732   00031F                     T1GCON          equ	799	;# 
  5733   00031F                     TMR1GCON        equ	799	;# 
  5734   000320                     T1GATE          equ	800	;# 
  5735   000320                     TMR1GATE        equ	800	;# 
  5736   000321                     T1CLK           equ	801	;# 
  5737   000321                     TMR1CLK         equ	801	;# 
  5738   000321                     PR1             equ	801	;# 
  5739   000322                     T2TMR           equ	802	;# 
  5740   000322                     TMR2            equ	802	;# 
  5741   000323                     T2PR            equ	803	;# 
  5742   000323                     PR2             equ	803	;# 
  5743   000324                     T2CON           equ	804	;# 
  5744   000325                     T2HLT           equ	805	;# 
  5745   000326                     T2CLKCON        equ	806	;# 
  5746   000326                     T2CLK           equ	806	;# 
  5747   000327                     T2RST           equ	807	;# 
  5748   000328                     TMR3            equ	808	;# 
  5749   000328                     TMR3L           equ	808	;# 
  5750   000329                     TMR3H           equ	809	;# 
  5751   00032A                     T3CON           equ	810	;# 
  5752   00032A                     TMR3CON         equ	810	;# 
  5753   00032B                     T3GCON          equ	811	;# 
  5754   00032B                     TMR3GCON        equ	811	;# 
  5755   00032C                     T3GATE          equ	812	;# 
  5756   00032C                     TMR3GATE        equ	812	;# 
  5757   00032D                     T3CLK           equ	813	;# 
  5758   00032D                     TMR3CLK         equ	813	;# 
  5759   00032D                     PR3             equ	813	;# 
  5760   00032E                     T4TMR           equ	814	;# 
  5761   00032E                     TMR4            equ	814	;# 
  5762   00032F                     T4PR            equ	815	;# 
  5763   00032F                     PR4             equ	815	;# 
  5764   000330                     T4CON           equ	816	;# 
  5765   000331                     T4HLT           equ	817	;# 
  5766   000332                     T4CLKCON        equ	818	;# 
  5767   000332                     T4CLK           equ	818	;# 
  5768   000333                     T4RST           equ	819	;# 
  5769   000334                     TMR5            equ	820	;# 
  5770   000334                     TMR5L           equ	820	;# 
  5771   000335                     TMR5H           equ	821	;# 
  5772   000336                     T5CON           equ	822	;# 
  5773   000336                     TMR5CON         equ	822	;# 
  5774   000337                     T5GCON          equ	823	;# 
  5775   000337                     TMR5GCON        equ	823	;# 
  5776   000338                     T5GATE          equ	824	;# 
  5777   000338                     TMR5GATE        equ	824	;# 
  5778   000339                     T5CLK           equ	825	;# 
  5779   000339                     TMR5CLK         equ	825	;# 
  5780   000339                     PR5             equ	825	;# 
  5781   00033A                     T6TMR           equ	826	;# 
  5782   00033A                     TMR6            equ	826	;# 
  5783   00033B                     T6PR            equ	827	;# 
  5784   00033B                     PR6             equ	827	;# 
  5785   00033C                     T6CON           equ	828	;# 
  5786   00033D                     T6HLT           equ	829	;# 
  5787   00033E                     T6CLKCON        equ	830	;# 
  5788   00033E                     T6CLK           equ	830	;# 
  5789   00033F                     T6RST           equ	831	;# 
  5790   000340                     CCPR1           equ	832	;# 
  5791   000340                     CCPR1L          equ	832	;# 
  5792   000341                     CCPR1H          equ	833	;# 
  5793   000342                     CCP1CON         equ	834	;# 
  5794   000343                     CCP1CAP         equ	835	;# 
  5795   000344                     CCPR2           equ	836	;# 
  5796   000344                     CCPR2L          equ	836	;# 
  5797   000345                     CCPR2H          equ	837	;# 
  5798   000346                     CCP2CON         equ	838	;# 
  5799   000347                     CCP2CAP         equ	839	;# 
  5800   000348                     CCPR3           equ	840	;# 
  5801   000348                     CCPR3L          equ	840	;# 
  5802   000349                     CCPR3H          equ	841	;# 
  5803   00034A                     CCP3CON         equ	842	;# 
  5804   00034B                     CCP3CAP         equ	843	;# 
  5805   00034C                     CCPTMRS0        equ	844	;# 
  5806   00034F                     CRCDATA         equ	847	;# 
  5807   00034F                     CRCDATL         equ	847	;# 
  5808   000350                     CRCDATH         equ	848	;# 
  5809   000351                     CRCACC          equ	849	;# 
  5810   000351                     CRCACCL         equ	849	;# 
  5811   000352                     CRCACCH         equ	850	;# 
  5812   000353                     CRCSHFT         equ	851	;# 
  5813   000353                     CRCSHIFTL       equ	851	;# 
  5814   000354                     CRCSHIFTH       equ	852	;# 
  5815   000355                     CRCXOR          equ	853	;# 
  5816   000355                     CRCXORL         equ	853	;# 
  5817   000356                     CRCXORH         equ	854	;# 
  5818   000357                     CRCCON0         equ	855	;# 
  5819   000358                     CRCCON1         equ	856	;# 
  5820   00035A                     SCANLADR        equ	858	;# 
  5821   00035A                     SCANLADRL       equ	858	;# 
  5822   00035B                     SCANLADRH       equ	859	;# 
  5823   00035C                     SCANLADRU       equ	860	;# 
  5824   00035D                     SCANHADR        equ	861	;# 
  5825   00035D                     SCANHADRL       equ	861	;# 
  5826   00035E                     SCANHADRH       equ	862	;# 
  5827   00035F                     SCANHADRU       equ	863	;# 
  5828   000360                     SCANCON0        equ	864	;# 
  5829   000361                     SCANTRIG        equ	865	;# 
  5830   000362                     IPR0            equ	866	;# 
  5831   000363                     IPR1            equ	867	;# 
  5832   000364                     IPR2            equ	868	;# 
  5833   000365                     IPR3            equ	869	;# 
  5834   000366                     IPR4            equ	870	;# 
  5835   000367                     IPR5            equ	871	;# 
  5836   000368                     IPR6            equ	872	;# 
  5837   000369                     IPR7            equ	873	;# 
  5838   00036A                     IPR8            equ	874	;# 
  5839   00036B                     IPR9            equ	875	;# 
  5840   00036C                     IPR10           equ	876	;# 
  5841   00036D                     IPR11           equ	877	;# 
  5842   00036E                     IPR12           equ	878	;# 
  5843   00036F                     IPR13           equ	879	;# 
  5844   000370                     IPR14           equ	880	;# 
  5845   000371                     IPR15           equ	881	;# 
  5846   000373                     STATUS_CSHAD    equ	883	;# 
  5847   000374                     WREG_CSHAD      equ	884	;# 
  5848   000375                     BSR_CSHAD       equ	885	;# 
  5849   000376                     SHADCON         equ	886	;# 
  5850   000377                     STATUS_SHAD     equ	887	;# 
  5851   000378                     WREG_SHAD       equ	888	;# 
  5852   000379                     BSR_SHAD        equ	889	;# 
  5853   00037A                     PCLATH_SHAD     equ	890	;# 
  5854   00037B                     PCLATU_SHAD     equ	891	;# 
  5855   00037C                     FSR0SH          equ	892	;# 
  5856   00037C                     FSR0L_SHAD      equ	892	;# 
  5857   00037D                     FSR0H_SHAD      equ	893	;# 
  5858   00037E                     FSR1SH          equ	894	;# 
  5859   00037E                     FSR1L_SHAD      equ	894	;# 
  5860   00037F                     FSR1H_SHAD      equ	895	;# 
  5861   000380                     FSR2SH          equ	896	;# 
  5862   000380                     FSR2L_SHAD      equ	896	;# 
  5863   000381                     FSR2H_SHAD      equ	897	;# 
  5864   000382                     PRODSH          equ	898	;# 
  5865   000382                     PRODL_SHAD      equ	898	;# 
  5866   000383                     PRODH_SHAD      equ	899	;# 
  5867   0003BC                     CWG1CLK         equ	956	;# 
  5868   0003BC                     CWG1CLKCON      equ	956	;# 
  5869   0003BD                     CWG1ISM         equ	957	;# 
  5870   0003BD                     CWG1DAT         equ	957	;# 
  5871   0003BE                     CWG1DBR         equ	958	;# 
  5872   0003BF                     CWG1DBF         equ	959	;# 
  5873   0003C0                     CWG1CON0        equ	960	;# 
  5874   0003C1                     CWG1CON1        equ	961	;# 
  5875   0003C2                     CWG1AS0         equ	962	;# 
  5876   0003C3                     CWG1AS1         equ	963	;# 
  5877   0003C4                     CWG1STR         equ	964	;# 
  5878   0003C5                     CWG2CLK         equ	965	;# 
  5879   0003C5                     CWG2CLKCON      equ	965	;# 
  5880   0003C6                     CWG2ISM         equ	966	;# 
  5881   0003C6                     CWG2DAT         equ	966	;# 
  5882   0003C7                     CWG2DBR         equ	967	;# 
  5883   0003C8                     CWG2DBF         equ	968	;# 
  5884   0003C9                     CWG2CON0        equ	969	;# 
  5885   0003CA                     CWG2CON1        equ	970	;# 
  5886   0003CB                     CWG2AS0         equ	971	;# 
  5887   0003CC                     CWG2AS1         equ	972	;# 
  5888   0003CD                     CWG2STR         equ	973	;# 
  5889   0003CE                     CWG3CLK         equ	974	;# 
  5890   0003CE                     CWG3CLKCON      equ	974	;# 
  5891   0003CF                     CWG3ISM         equ	975	;# 
  5892   0003CF                     CWG3DAT         equ	975	;# 
  5893   0003D0                     CWG3DBR         equ	976	;# 
  5894   0003D1                     CWG3DBF         equ	977	;# 
  5895   0003D2                     CWG3CON0        equ	978	;# 
  5896   0003D3                     CWG3CON1        equ	979	;# 
  5897   0003D4                     CWG3AS0         equ	980	;# 
  5898   0003D5                     CWG3AS1         equ	981	;# 
  5899   0003D6                     CWG3STR         equ	982	;# 
  5900   0003D7                     FVRCON          equ	983	;# 
  5901   0003D8                     ADCPCON         equ	984	;# 
  5902   0003D8                     ADCP            equ	984	;# 
  5903   0003D9                     ADLTH           equ	985	;# 
  5904   0003D9                     ADLTHL          equ	985	;# 
  5905   0003DA                     ADLTHH          equ	986	;# 
  5906   0003DB                     ADUTH           equ	987	;# 
  5907   0003DB                     ADUTHL          equ	987	;# 
  5908   0003DC                     ADUTHH          equ	988	;# 
  5909   0003DD                     ADERR           equ	989	;# 
  5910   0003DD                     ADERRL          equ	989	;# 
  5911   0003DE                     ADERRH          equ	990	;# 
  5912   0003DF                     ADSTPT          equ	991	;# 
  5913   0003DF                     ADSTPTL         equ	991	;# 
  5914   0003E0                     ADSTPTH         equ	992	;# 
  5915   0003E1                     ADFLTR          equ	993	;# 
  5916   0003E1                     ADFLTRL         equ	993	;# 
  5917   0003E2                     ADFLTRH         equ	994	;# 
  5918   0003E3                     ADACC           equ	995	;# 
  5919   0003E3                     ADACCL          equ	995	;# 
  5920   0003E4                     ADACCH          equ	996	;# 
  5921   0003E5                     ADACCU          equ	997	;# 
  5922   0003E6                     ADCNT           equ	998	;# 
  5923   0003E7                     ADRPT           equ	999	;# 
  5924   0003E8                     ADPREV          equ	1000	;# 
  5925   0003E8                     ADPREVL         equ	1000	;# 
  5926   0003E9                     ADPREVH         equ	1001	;# 
  5927   0003EA                     ADRES           equ	1002	;# 
  5928   0003EA                     ADRESL          equ	1002	;# 
  5929   0003EB                     ADRESH          equ	1003	;# 
  5930   0003EC                     ADPCH           equ	1004	;# 
  5931   0003EE                     ADACQ           equ	1006	;# 
  5932   0003EE                     ADACQL          equ	1006	;# 
  5933   0003EF                     ADACQH          equ	1007	;# 
  5934   0003F0                     ADCAP           equ	1008	;# 
  5935   0003F1                     ADPRE           equ	1009	;# 
  5936   0003F1                     ADPREL          equ	1009	;# 
  5937   0003F2                     ADPREH          equ	1010	;# 
  5938   0003F3                     ADCON0          equ	1011	;# 
  5939   0003F4                     ADCON1          equ	1012	;# 
  5940   0003F5                     ADCON2          equ	1013	;# 
  5941   0003F6                     ADCON3          equ	1014	;# 
  5942   0003F7                     ADSTAT          equ	1015	;# 
  5943   0003F8                     ADREF           equ	1016	;# 
  5944   0003F9                     ADACT           equ	1017	;# 
  5945   0003FA                     ADCLK           equ	1018	;# 
  5946   000400                     ANSELA          equ	1024	;# 
  5947   000401                     WPUA            equ	1025	;# 
  5948   000402                     ODCONA          equ	1026	;# 
  5949   000403                     SLRCONA         equ	1027	;# 
  5950   000404                     INLVLA          equ	1028	;# 
  5951   000405                     IOCAP           equ	1029	;# 
  5952   000406                     IOCAN           equ	1030	;# 
  5953   000407                     IOCAF           equ	1031	;# 
  5954   000408                     ANSELB          equ	1032	;# 
  5955   000409                     WPUB            equ	1033	;# 
  5956   00040A                     ODCONB          equ	1034	;# 
  5957   00040B                     SLRCONB         equ	1035	;# 
  5958   00040C                     INLVLB          equ	1036	;# 
  5959   00040D                     IOCBP           equ	1037	;# 
  5960   00040E                     IOCBN           equ	1038	;# 
  5961   00040F                     IOCBF           equ	1039	;# 
  5962   000410                     ANSELC          equ	1040	;# 
  5963   000411                     WPUC            equ	1041	;# 
  5964   000412                     ODCONC          equ	1042	;# 
  5965   000413                     SLRCONC         equ	1043	;# 
  5966   000414                     INLVLC          equ	1044	;# 
  5967   000415                     IOCCP           equ	1045	;# 
  5968   000416                     IOCCN           equ	1046	;# 
  5969   000417                     IOCCF           equ	1047	;# 
  5970   000418                     ANSELD          equ	1048	;# 
  5971   000419                     WPUD            equ	1049	;# 
  5972   00041A                     ODCOND          equ	1050	;# 
  5973   00041B                     SLRCOND         equ	1051	;# 
  5974   00041C                     INLVLD          equ	1052	;# 
  5975   000420                     ANSELE          equ	1056	;# 
  5976   000421                     WPUE            equ	1057	;# 
  5977   000422                     ODCONE          equ	1058	;# 
  5978   000423                     SLRCONE         equ	1059	;# 
  5979   000424                     INLVLE          equ	1060	;# 
  5980   000425                     IOCEP           equ	1061	;# 
  5981   000426                     IOCEN           equ	1062	;# 
  5982   000427                     IOCEF           equ	1063	;# 
  5983   000428                     ANSELF          equ	1064	;# 
  5984   000429                     WPUF            equ	1065	;# 
  5985   00042A                     ODCONF          equ	1066	;# 
  5986   00042B                     SLRCONF         equ	1067	;# 
  5987   00042C                     INLVLF          equ	1068	;# 
  5988   000440                     NCO1ACC         equ	1088	;# 
  5989   000440                     NCO1ACCL        equ	1088	;# 
  5990   000441                     NCO1ACCH        equ	1089	;# 
  5991   000442                     NCO1ACCU        equ	1090	;# 
  5992   000443                     NCO1INC         equ	1091	;# 
  5993   000443                     NCO1INCL        equ	1091	;# 
  5994   000444                     NCO1INCH        equ	1092	;# 
  5995   000445                     NCO1INCU        equ	1093	;# 
  5996   000446                     NCO1CON         equ	1094	;# 
  5997   000447                     NCO1CLK         equ	1095	;# 
  5998   000448                     NCO2ACC         equ	1096	;# 
  5999   000448                     NCO2ACCL        equ	1096	;# 
  6000   000449                     NCO2ACCH        equ	1097	;# 
  6001   00044A                     NCO2ACCU        equ	1098	;# 
  6002   00044B                     NCO2INC         equ	1099	;# 
  6003   00044B                     NCO2INCL        equ	1099	;# 
  6004   00044C                     NCO2INCH        equ	1100	;# 
  6005   00044D                     NCO2INCU        equ	1101	;# 
  6006   00044E                     NCO2CON         equ	1102	;# 
  6007   00044F                     NCO2CLK         equ	1103	;# 
  6008   000450                     NCO3ACC         equ	1104	;# 
  6009   000450                     NCO3ACCL        equ	1104	;# 
  6010   000451                     NCO3ACCH        equ	1105	;# 
  6011   000452                     NCO3ACCU        equ	1106	;# 
  6012   000453                     NCO3INC         equ	1107	;# 
  6013   000453                     NCO3INCL        equ	1107	;# 
  6014   000454                     NCO3INCH        equ	1108	;# 
  6015   000455                     NCO3INCU        equ	1109	;# 
  6016   000456                     NCO3CON         equ	1110	;# 
  6017   000457                     NCO3CLK         equ	1111	;# 
  6018   000459                     IVTLOCK         equ	1113	;# 
  6019   00045A                     IVTAD           equ	1114	;# 
  6020   00045A                     IVTADL          equ	1114	;# 
  6021   00045B                     IVTADH          equ	1115	;# 
  6022   00045C                     IVTADU          equ	1116	;# 
  6023   00045D                     IVTBASE         equ	1117	;# 
  6024   00045D                     IVTBASEL        equ	1117	;# 
  6025   00045E                     IVTBASEH        equ	1118	;# 
  6026   00045F                     IVTBASEU        equ	1119	;# 
  6027   000460                     PWM1ERS         equ	1120	;# 
  6028   000461                     PWM1CLK         equ	1121	;# 
  6029   000462                     PWM1LDS         equ	1122	;# 
  6030   000463                     PWM1PR          equ	1123	;# 
  6031   000463                     PWM1PRL         equ	1123	;# 
  6032   000464                     PWM1PRH         equ	1124	;# 
  6033   000465                     PWM1CPRE        equ	1125	;# 
  6034   000466                     PWM1PIPOS       equ	1126	;# 
  6035   000467                     PWM1GIR         equ	1127	;# 
  6036   000468                     PWM1GIE         equ	1128	;# 
  6037   000469                     PWM1CON         equ	1129	;# 
  6038   00046A                     PWM1S1CFG       equ	1130	;# 
  6039   00046B                     PWM1S1P1        equ	1131	;# 
  6040   00046B                     PWM1S1P1L       equ	1131	;# 
  6041   00046C                     PWM1S1P1H       equ	1132	;# 
  6042   00046D                     PWM1S1P2        equ	1133	;# 
  6043   00046D                     PWM1S1P2L       equ	1133	;# 
  6044   00046E                     PWM1S1P2H       equ	1134	;# 
  6045   00046F                     PWM2ERS         equ	1135	;# 
  6046   000470                     PWM2CLK         equ	1136	;# 
  6047   000471                     PWM2LDS         equ	1137	;# 
  6048   000472                     PWM2PR          equ	1138	;# 
  6049   000472                     PWM2PRL         equ	1138	;# 
  6050   000473                     PWM2PRH         equ	1139	;# 
  6051   000474                     PWM2CPRE        equ	1140	;# 
  6052   000475                     PWM2PIPOS       equ	1141	;# 
  6053   000476                     PWM2GIR         equ	1142	;# 
  6054   000477                     PWM2GIE         equ	1143	;# 
  6055   000478                     PWM2CON         equ	1144	;# 
  6056   000479                     PWM2S1CFG       equ	1145	;# 
  6057   00047A                     PWM2S1P1        equ	1146	;# 
  6058   00047A                     PWM2S1P1L       equ	1146	;# 
  6059   00047B                     PWM2S1P1H       equ	1147	;# 
  6060   00047C                     PWM2S1P2        equ	1148	;# 
  6061   00047C                     PWM2S1P2L       equ	1148	;# 
  6062   00047D                     PWM2S1P2H       equ	1149	;# 
  6063   00047E                     PWM3ERS         equ	1150	;# 
  6064   00047F                     PWM3CLK         equ	1151	;# 
  6065   000480                     PWM3LDS         equ	1152	;# 
  6066   000481                     PWM3PR          equ	1153	;# 
  6067   000481                     PWM3PRL         equ	1153	;# 
  6068   000482                     PWM3PRH         equ	1154	;# 
  6069   000483                     PWM3CPRE        equ	1155	;# 
  6070   000484                     PWM3PIPOS       equ	1156	;# 
  6071   000485                     PWM3GIR         equ	1157	;# 
  6072   000486                     PWM3GIE         equ	1158	;# 
  6073   000487                     PWM3CON         equ	1159	;# 
  6074   000488                     PWM3S1CFG       equ	1160	;# 
  6075   000489                     PWM3S1P1        equ	1161	;# 
  6076   000489                     PWM3S1P1L       equ	1161	;# 
  6077   00048A                     PWM3S1P1H       equ	1162	;# 
  6078   00048B                     PWM3S1P2        equ	1163	;# 
  6079   00048B                     PWM3S1P2L       equ	1163	;# 
  6080   00048C                     PWM3S1P2H       equ	1164	;# 
  6081   00049C                     PWMLOAD         equ	1180	;# 
  6082   00049D                     PWMEN           equ	1181	;# 
  6083   00049E                     PIE0            equ	1182	;# 
  6084   00049F                     PIE1            equ	1183	;# 
  6085   0004A0                     PIE2            equ	1184	;# 
  6086   0004A1                     PIE3            equ	1185	;# 
  6087   0004A2                     PIE4            equ	1186	;# 
  6088   0004A3                     PIE5            equ	1187	;# 
  6089   0004A4                     PIE6            equ	1188	;# 
  6090   0004A5                     PIE7            equ	1189	;# 
  6091   0004A6                     PIE8            equ	1190	;# 
  6092   0004A7                     PIE9            equ	1191	;# 
  6093   0004A8                     PIE10           equ	1192	;# 
  6094   0004A9                     PIE11           equ	1193	;# 
  6095   0004AA                     PIE12           equ	1194	;# 
  6096   0004AB                     PIE13           equ	1195	;# 
  6097   0004AC                     PIE14           equ	1196	;# 
  6098   0004AD                     PIE15           equ	1197	;# 
  6099   0004AE                     PIR0            equ	1198	;# 
  6100   0004AF                     PIR1            equ	1199	;# 
  6101   0004B0                     PIR2            equ	1200	;# 
  6102   0004B1                     PIR3            equ	1201	;# 
  6103   0004B2                     PIR4            equ	1202	;# 
  6104   0004B3                     PIR5            equ	1203	;# 
  6105   0004B4                     PIR6            equ	1204	;# 
  6106   0004B5                     PIR7            equ	1205	;# 
  6107   0004B6                     PIR8            equ	1206	;# 
  6108   0004B7                     PIR9            equ	1207	;# 
  6109   0004B8                     PIR10           equ	1208	;# 
  6110   0004B9                     PIR11           equ	1209	;# 
  6111   0004BA                     PIR12           equ	1210	;# 
  6112   0004BB                     PIR13           equ	1211	;# 
  6113   0004BC                     PIR14           equ	1212	;# 
  6114   0004BD                     PIR15           equ	1213	;# 
  6115   0004BE                     LATA            equ	1214	;# 
  6116   0004BF                     LATB            equ	1215	;# 
  6117   0004C0                     LATC            equ	1216	;# 
  6118   0004C1                     LATD            equ	1217	;# 
  6119   0004C2                     LATE            equ	1218	;# 
  6120   0004C3                     LATF            equ	1219	;# 
  6121   0004C6                     TRISA           equ	1222	;# 
  6122   0004C7                     TRISB           equ	1223	;# 
  6123   0004C8                     TRISC           equ	1224	;# 
  6124   0004C9                     TRISD           equ	1225	;# 
  6125   0004CA                     TRISE           equ	1226	;# 
  6126   0004CB                     TRISF           equ	1227	;# 
  6127   0004CE                     PORTA           equ	1230	;# 
  6128   0004CF                     PORTB           equ	1231	;# 
  6129   0004D0                     PORTC           equ	1232	;# 
  6130   0004D1                     PORTD           equ	1233	;# 
  6131   0004D2                     PORTE           equ	1234	;# 
  6132   0004D3                     PORTF           equ	1235	;# 
  6133   0004D6                     INTCON0         equ	1238	;# 
  6134   0004D7                     INTCON1         equ	1239	;# 
  6135   0004D8                     STATUS          equ	1240	;# 
  6136   0004D9                     FSR2            equ	1241	;# 
  6137   0004D9                     FSR2L           equ	1241	;# 
  6138   0004DA                     FSR2H           equ	1242	;# 
  6139   0004DB                     PLUSW2          equ	1243	;# 
  6140   0004DC                     PREINC2         equ	1244	;# 
  6141   0004DD                     POSTDEC2        equ	1245	;# 
  6142   0004DE                     POSTINC2        equ	1246	;# 
  6143   0004DF                     INDF2           equ	1247	;# 
  6144   0004E0                     BSR             equ	1248	;# 
  6145   0004E1                     FSR1            equ	1249	;# 
  6146   0004E1                     FSR1L           equ	1249	;# 
  6147   0004E2                     FSR1H           equ	1250	;# 
  6148   0004E3                     PLUSW1          equ	1251	;# 
  6149   0004E4                     PREINC1         equ	1252	;# 
  6150   0004E5                     POSTDEC1        equ	1253	;# 
  6151   0004E6                     POSTINC1        equ	1254	;# 
  6152   0004E7                     INDF1           equ	1255	;# 
  6153   0004E8                     WREG            equ	1256	;# 
  6154   0004E9                     FSR0            equ	1257	;# 
  6155   0004E9                     FSR0L           equ	1257	;# 
  6156   0004EA                     FSR0H           equ	1258	;# 
  6157   0004EB                     PLUSW0          equ	1259	;# 
  6158   0004EC                     PREINC0         equ	1260	;# 
  6159   0004ED                     POSTDEC0        equ	1261	;# 
  6160   0004EE                     POSTINC0        equ	1262	;# 
  6161   0004EF                     INDF0           equ	1263	;# 
  6162   0004F0                     PCON0           equ	1264	;# 
  6163   0004F1                     PCON1           equ	1265	;# 
  6164   0004F2                     CPUDOZE         equ	1266	;# 
  6165   0004F3                     PROD            equ	1267	;# 
  6166   0004F3                     PRODL           equ	1267	;# 
  6167   0004F4                     PRODH           equ	1268	;# 
  6168   0004F5                     TABLAT          equ	1269	;# 
  6169   0004F6                     TBLPTR          equ	1270	;# 
  6170   0004F6                     TBLPTRL         equ	1270	;# 
  6171   0004F7                     TBLPTRH         equ	1271	;# 
  6172   0004F8                     TBLPTRU         equ	1272	;# 
  6173   0004F9                     PCLAT           equ	1273	;# 
  6174   0004F9                     PCL             equ	1273	;# 
  6175   0004FA                     PCLATH          equ	1274	;# 
  6176   0004FB                     PCLATU          equ	1275	;# 
  6177   0004FC                     STKPTR          equ	1276	;# 
  6178   0004FD                     TOS             equ	1277	;# 
  6179   0004FD                     TOSL            equ	1277	;# 
  6180   0004FE                     TOSH            equ	1278	;# 
  6181   0004FF                     TOSU            equ	1279	;# 
  6182   000039                     CLKRCON         equ	57	;# 
  6183   00003A                     CLKRCLK         equ	58	;# 
  6184   000040                     NVMCON0         equ	64	;# 
  6185   000041                     NVMCON1         equ	65	;# 
  6186   000042                     NVMLOCK         equ	66	;# 
  6187   000043                     NVMADR          equ	67	;# 
  6188   000043                     NVMADRL         equ	67	;# 
  6189   000044                     NVMADRH         equ	68	;# 
  6190   000045                     NVMADRU         equ	69	;# 
  6191   000046                     NVMDAT          equ	70	;# 
  6192   000046                     NVMDATL         equ	70	;# 
  6193   000047                     NVMDATH         equ	71	;# 
  6194   000048                     VREGCON         equ	72	;# 
  6195   000049                     BORCON          equ	73	;# 
  6196   00004A                     HLVDCON0        equ	74	;# 
  6197   00004B                     HLVDCON1        equ	75	;# 
  6198   00004C                     ZCDCON          equ	76	;# 
  6199   000060                     PMD0            equ	96	;# 
  6200   000061                     PMD1            equ	97	;# 
  6201   000063                     PMD3            equ	99	;# 
  6202   000064                     PMD4            equ	100	;# 
  6203   000065                     PMD5            equ	101	;# 
  6204   000066                     PMD6            equ	102	;# 
  6205   000067                     PMD7            equ	103	;# 
  6206   000068                     PMD8            equ	104	;# 
  6207   00006A                     MD1CON0         equ	106	;# 
  6208   00006B                     MD1CON1         equ	107	;# 
  6209   00006C                     MD1SRC          equ	108	;# 
  6210   00006D                     MD1CARL         equ	109	;# 
  6211   00006E                     MD1CARH         equ	110	;# 
  6212   00006F                     CMOUT           equ	111	;# 
  6213   000070                     CM1CON0         equ	112	;# 
  6214   000071                     CM1CON1         equ	113	;# 
  6215   000072                     CM1NCH          equ	114	;# 
  6216   000073                     CM1PCH          equ	115	;# 
  6217   000074                     CM2CON0         equ	116	;# 
  6218   000075                     CM2CON1         equ	117	;# 
  6219   000076                     CM2NCH          equ	118	;# 
  6220   000077                     CM2PCH          equ	119	;# 
  6221   000078                     WDTCON0         equ	120	;# 
  6222   000079                     WDTCON1         equ	121	;# 
  6223   00007A                     WDTPS           equ	122	;# 
  6224   00007A                     WDTPSL          equ	122	;# 
  6225   00007B                     WDTPSH          equ	123	;# 
  6226   00007C                     WDTTMR          equ	124	;# 
  6227   00007D                     DAC1DAT         equ	125	;# 
  6228   00007D                     DAC1DATL        equ	125	;# 
  6229   00007F                     DAC1CON         equ	127	;# 
  6230   000080                     SPI1RXB         equ	128	;# 
  6231   000081                     SPI1TXB         equ	129	;# 
  6232   000082                     SPI1TCNT        equ	130	;# 
  6233   000082                     SPI1TCNTL       equ	130	;# 
  6234   000083                     SPI1TCNTH       equ	131	;# 
  6235   000084                     SPI1CON0        equ	132	;# 
  6236   000085                     SPI1CON1        equ	133	;# 
  6237   000086                     SPI1CON2        equ	134	;# 
  6238   000087                     SPI1STATUS      equ	135	;# 
  6239   000088                     SPI1TWIDTH      equ	136	;# 
  6240   000089                     SPI1BAUD        equ	137	;# 
  6241   00008A                     SPI1INTF        equ	138	;# 
  6242   00008B                     SPI1INTE        equ	139	;# 
  6243   00008C                     SPI1CLK         equ	140	;# 
  6244   00008D                     SPI2RXB         equ	141	;# 
  6245   00008E                     SPI2TXB         equ	142	;# 
  6246   00008F                     SPI2TCNT        equ	143	;# 
  6247   00008F                     SPI2TCNTL       equ	143	;# 
  6248   000090                     SPI2TCNTH       equ	144	;# 
  6249   000091                     SPI2CON0        equ	145	;# 
  6250   000092                     SPI2CON1        equ	146	;# 
  6251   000093                     SPI2CON2        equ	147	;# 
  6252   000094                     SPI2STATUS      equ	148	;# 
  6253   000095                     SPI2TWIDTH      equ	149	;# 
  6254   000096                     SPI2BAUD        equ	150	;# 
  6255   000097                     SPI2INTF        equ	151	;# 
  6256   000098                     SPI2INTE        equ	152	;# 
  6257   000099                     SPI2CLK         equ	153	;# 
  6258   0000AC                     ACTCON          equ	172	;# 
  6259   0000AD                     OSCCON1         equ	173	;# 
  6260   0000AE                     OSCCON2         equ	174	;# 
  6261   0000AF                     OSCCON3         equ	175	;# 
  6262   0000B0                     OSCTUNE         equ	176	;# 
  6263   0000B1                     OSCFRQ          equ	177	;# 
  6264   0000B1                     OSCFREQ         equ	177	;# 
  6265   0000B2                     OSCSTAT         equ	178	;# 
  6266   0000B2                     OSCSTAT1        equ	178	;# 
  6267   0000B3                     OSCEN           equ	179	;# 
  6268   0000B4                     PRLOCK          equ	180	;# 
  6269   0000B5                     SCANPR          equ	181	;# 
  6270   0000B6                     DMA1PR          equ	182	;# 
  6271   0000B7                     DMA2PR          equ	183	;# 
  6272   0000B8                     DMA3PR          equ	184	;# 
  6273   0000B9                     DMA4PR          equ	185	;# 
  6274   0000BA                     DMA5PR          equ	186	;# 
  6275   0000BB                     DMA6PR          equ	187	;# 
  6276   0000BE                     MAINPR          equ	190	;# 
  6277   0000BF                     ISRPR           equ	191	;# 
  6278   0000D4                     CLCDATA         equ	212	;# 
  6279   0000D5                     CLCSELECT       equ	213	;# 
  6280   0000D6                     CLCnCON         equ	214	;# 
  6281   0000D7                     CLCnPOL         equ	215	;# 
  6282   0000D8                     CLCnSEL0        equ	216	;# 
  6283   0000D9                     CLCnSEL1        equ	217	;# 
  6284   0000DA                     CLCnSEL2        equ	218	;# 
  6285   0000DB                     CLCnSEL3        equ	219	;# 
  6286   0000DC                     CLCnGLS0        equ	220	;# 
  6287   0000DD                     CLCnGLS1        equ	221	;# 
  6288   0000DE                     CLCnGLS2        equ	222	;# 
  6289   0000DF                     CLCnGLS3        equ	223	;# 
  6290   0000E8                     DMASELECT       equ	232	;# 
  6291   0000E9                     DMAnBUF         equ	233	;# 
  6292   0000EA                     DMAnDCNT        equ	234	;# 
  6293   0000EA                     DMAnDCNTL       equ	234	;# 
  6294   0000EB                     DMAnDCNTH       equ	235	;# 
  6295   0000EC                     DMAnDPTR        equ	236	;# 
  6296   0000EC                     DMAnDPTRL       equ	236	;# 
  6297   0000ED                     DMAnDPTRH       equ	237	;# 
  6298   0000EE                     DMAnDSZ         equ	238	;# 
  6299   0000EE                     DMAnDSZL        equ	238	;# 
  6300   0000EF                     DMAnDSZH        equ	239	;# 
  6301   0000F0                     DMAnDSA         equ	240	;# 
  6302   0000F0                     DMAnDSAL        equ	240	;# 
  6303   0000F1                     DMAnDSAH        equ	241	;# 
  6304   0000F2                     DMAnSCNT        equ	242	;# 
  6305   0000F2                     DMAnSCNTL       equ	242	;# 
  6306   0000F3                     DMAnSCNTH       equ	243	;# 
  6307   0000F4                     DMAnSPTR        equ	244	;# 
  6308   0000F4                     DMAnSPTRL       equ	244	;# 
  6309   0000F5                     DMAnSPTRH       equ	245	;# 
  6310   0000F6                     DMAnSPTRU       equ	246	;# 
  6311   0000F7                     DMAnSSZ         equ	247	;# 
  6312   0000F7                     DMAnSSZL        equ	247	;# 
  6313   0000F8                     DMAnSSZH        equ	248	;# 
  6314   0000F9                     DMAnSSA         equ	249	;# 
  6315   0000F9                     DMAnSSAL        equ	249	;# 
  6316   0000FA                     DMAnSSAH        equ	250	;# 
  6317   0000FB                     DMAnSSAU        equ	251	;# 
  6318   0000FC                     DMAnCON0        equ	252	;# 
  6319   0000FD                     DMAnCON1        equ	253	;# 
  6320   0000FE                     DMAnAIRQ        equ	254	;# 
  6321   0000FF                     DMAnSIRQ        equ	255	;# 
  6322   000200                     PPSLOCK         equ	512	;# 
  6323   000201                     RA0PPS          equ	513	;# 
  6324   000202                     RA1PPS          equ	514	;# 
  6325   000203                     RA2PPS          equ	515	;# 
  6326   000204                     RA3PPS          equ	516	;# 
  6327   000205                     RA4PPS          equ	517	;# 
  6328   000206                     RA5PPS          equ	518	;# 
  6329   000207                     RA6PPS          equ	519	;# 
  6330   000208                     RA7PPS          equ	520	;# 
  6331   000209                     RB0PPS          equ	521	;# 
  6332   00020A                     RB1PPS          equ	522	;# 
  6333   00020B                     RB2PPS          equ	523	;# 
  6334   00020C                     RB3PPS          equ	524	;# 
  6335   00020D                     RB4PPS          equ	525	;# 
  6336   00020E                     RB5PPS          equ	526	;# 
  6337   00020F                     RB6PPS          equ	527	;# 
  6338   000210                     RB7PPS          equ	528	;# 
  6339   000211                     RC0PPS          equ	529	;# 
  6340   000212                     RC1PPS          equ	530	;# 
  6341   000213                     RC2PPS          equ	531	;# 
  6342   000214                     RC3PPS          equ	532	;# 
  6343   000215                     RC4PPS          equ	533	;# 
  6344   000216                     RC5PPS          equ	534	;# 
  6345   000217                     RC6PPS          equ	535	;# 
  6346   000218                     RC7PPS          equ	536	;# 
  6347   000219                     RD0PPS          equ	537	;# 
  6348   00021A                     RD1PPS          equ	538	;# 
  6349   00021B                     RD2PPS          equ	539	;# 
  6350   00021C                     RD3PPS          equ	540	;# 
  6351   00021D                     RD4PPS          equ	541	;# 
  6352   00021E                     RD5PPS          equ	542	;# 
  6353   00021F                     RD6PPS          equ	543	;# 
  6354   000220                     RD7PPS          equ	544	;# 
  6355   000221                     RE0PPS          equ	545	;# 
  6356   000222                     RE1PPS          equ	546	;# 
  6357   000223                     RE2PPS          equ	547	;# 
  6358   000229                     RF0PPS          equ	553	;# 
  6359   00022A                     RF1PPS          equ	554	;# 
  6360   00022B                     RF2PPS          equ	555	;# 
  6361   00022C                     RF3PPS          equ	556	;# 
  6362   00022D                     RF4PPS          equ	557	;# 
  6363   00022E                     RF5PPS          equ	558	;# 
  6364   00022F                     RF6PPS          equ	559	;# 
  6365   000230                     RF7PPS          equ	560	;# 
  6366   00023E                     INT0PPS         equ	574	;# 
  6367   00023F                     INT1PPS         equ	575	;# 
  6368   000240                     INT2PPS         equ	576	;# 
  6369   000241                     T0CKIPPS        equ	577	;# 
  6370   000242                     T1CKIPPS        equ	578	;# 
  6371   000243                     T1GPPS          equ	579	;# 
  6372   000244                     T3CKIPPS        equ	580	;# 
  6373   000245                     T3GPPS          equ	581	;# 
  6374   000246                     T5CKIPPS        equ	582	;# 
  6375   000247                     T5GPPS          equ	583	;# 
  6376   000248                     T2INPPS         equ	584	;# 
  6377   000249                     T4INPPS         equ	585	;# 
  6378   00024A                     T6INPPS         equ	586	;# 
  6379   00024F                     CCP1PPS         equ	591	;# 
  6380   000250                     CCP2PPS         equ	592	;# 
  6381   000251                     CCP3PPS         equ	593	;# 
  6382   000253                     PWM1ERSPPS      equ	595	;# 
  6383   000254                     PWM2ERSPPS      equ	596	;# 
  6384   000255                     PWM3ERSPPS      equ	597	;# 
  6385   000257                     PWMIN0PPS       equ	599	;# 
  6386   000258                     PWMIN1PPS       equ	600	;# 
  6387   000259                     SMT1WINPPS      equ	601	;# 
  6388   00025A                     SMT1SIGPPS      equ	602	;# 
  6389   00025B                     CWG1PPS         equ	603	;# 
  6390   00025B                     CWG1INPPS       equ	603	;# 
  6391   00025C                     CWG2PPS         equ	604	;# 
  6392   00025C                     CWG2INPPS       equ	604	;# 
  6393   00025D                     CWG3PPS         equ	605	;# 
  6394   00025D                     CWG3INPPS       equ	605	;# 
  6395   00025E                     MD1CARLPPS      equ	606	;# 
  6396   00025E                     MDCARLPPS       equ	606	;# 
  6397   00025F                     MD1CARHPPS      equ	607	;# 
  6398   00025F                     MDCARHPPS       equ	607	;# 
  6399   000260                     MD1SRCPPS       equ	608	;# 
  6400   000260                     MDSRCPPS        equ	608	;# 
  6401   000261                     CLCIN0PPS       equ	609	;# 
  6402   000262                     CLCIN1PPS       equ	610	;# 
  6403   000263                     CLCIN2PPS       equ	611	;# 
  6404   000264                     CLCIN3PPS       equ	612	;# 
  6405   000265                     CLCIN4PPS       equ	613	;# 
  6406   000266                     CLCIN5PPS       equ	614	;# 
  6407   000267                     CLCIN6PPS       equ	615	;# 
  6408   000268                     CLCIN7PPS       equ	616	;# 
  6409   000269                     ADACTPPS        equ	617	;# 
  6410   00026A                     SPI1SCKPPS      equ	618	;# 
  6411   00026B                     SPI1SDIPPS      equ	619	;# 
  6412   00026C                     SPI1SSPPS       equ	620	;# 
  6413   00026D                     SPI2SCKPPS      equ	621	;# 
  6414   00026E                     SPI2SDIPPS      equ	622	;# 
  6415   00026F                     SPI2SSPPS       equ	623	;# 
  6416   000270                     I2C1SDAPPS      equ	624	;# 
  6417   000271                     I2C1SCLPPS      equ	625	;# 
  6418   000272                     U1RXPPS         equ	626	;# 
  6419   000273                     U1CTSPPS        equ	627	;# 
  6420   000274                     U2RXPPS         equ	628	;# 
  6421   000275                     U2CTSPPS        equ	629	;# 
  6422   000276                     U3RXPPS         equ	630	;# 
  6423   000277                     U3CTSPPS        equ	631	;# 
  6424   000278                     U4RXPPS         equ	632	;# 
  6425   000279                     U4CTSPPS        equ	633	;# 
  6426   00027A                     U5RXPPS         equ	634	;# 
  6427   00027B                     U5CTSPPS        equ	635	;# 
  6428   000286                     RC4I2C          equ	646	;# 
  6429   000287                     RC3I2C          equ	647	;# 
  6430   000288                     RB2I2C          equ	648	;# 
  6431   000289                     RB1I2C          equ	649	;# 
  6432   00028B                     I2C1RXB         equ	651	;# 
  6433   00028C                     I2C1TXB         equ	652	;# 
  6434   00028D                     I2C1CNT         equ	653	;# 
  6435   00028E                     I2C1ADB0        equ	654	;# 
  6436   00028F                     I2C1ADB1        equ	655	;# 
  6437   000290                     I2C1ADR0        equ	656	;# 
  6438   000291                     I2C1ADR1        equ	657	;# 
  6439   000292                     I2C1ADR2        equ	658	;# 
  6440   000293                     I2C1ADR3        equ	659	;# 
  6441   000294                     I2C1CON0        equ	660	;# 
  6442   000295                     I2C1CON1        equ	661	;# 
  6443   000296                     I2C1CON2        equ	662	;# 
  6444   000297                     I2C1ERR         equ	663	;# 
  6445   000298                     I2C1STAT0       equ	664	;# 
  6446   000299                     I2C1STAT1       equ	665	;# 
  6447   00029A                     I2C1PIR         equ	666	;# 
  6448   00029B                     I2C1PIE         equ	667	;# 
  6449   00029C                     I2C1CLK         equ	668	;# 
  6450   00029D                     I2C1BTO         equ	669	;# 
  6451   0002A1                     U1RXB           equ	673	;# 
  6452   0002A1                     U1RXBL          equ	673	;# 
  6453   0002A2                     U1RXCHK         equ	674	;# 
  6454   0002A3                     U1TXB           equ	675	;# 
  6455   0002A3                     U1TXBL          equ	675	;# 
  6456   0002A4                     U1TXCHK         equ	676	;# 
  6457   0002A5                     U1P1            equ	677	;# 
  6458   0002A5                     U1P1L           equ	677	;# 
  6459   0002A6                     U1P1H           equ	678	;# 
  6460   0002A7                     U1P2            equ	679	;# 
  6461   0002A7                     U1P2L           equ	679	;# 
  6462   0002A8                     U1P2H           equ	680	;# 
  6463   0002A9                     U1P3            equ	681	;# 
  6464   0002A9                     U1P3L           equ	681	;# 
  6465   0002AA                     U1P3H           equ	682	;# 
  6466   0002AB                     U1CON0          equ	683	;# 
  6467   0002AC                     U1CON1          equ	684	;# 
  6468   0002AD                     U1CON2          equ	685	;# 
  6469   0002AE                     U1BRG           equ	686	;# 
  6470   0002AE                     U1BRGL          equ	686	;# 
  6471   0002AF                     U1BRGH          equ	687	;# 
  6472   0002B0                     U1FIFO          equ	688	;# 
  6473   0002B1                     U1UIR           equ	689	;# 
  6474   0002B2                     U1ERRIR         equ	690	;# 
  6475   0002B3                     U1ERRIE         equ	691	;# 
  6476   0002B4                     U2RXB           equ	692	;# 
  6477   0002B4                     U2RXBL          equ	692	;# 
  6478   0002B6                     U2TXB           equ	694	;# 
  6479   0002B6                     U2TXBL          equ	694	;# 
  6480   0002B8                     U2P1            equ	696	;# 
  6481   0002B8                     U2P1L           equ	696	;# 
  6482   0002BA                     U2P2            equ	698	;# 
  6483   0002BA                     U2P2L           equ	698	;# 
  6484   0002BC                     U2P3            equ	700	;# 
  6485   0002BC                     U2P3L           equ	700	;# 
  6486   0002BE                     U2CON0          equ	702	;# 
  6487   0002BF                     U2CON1          equ	703	;# 
  6488   0002C0                     U2CON2          equ	704	;# 
  6489   0002C1                     U2BRG           equ	705	;# 
  6490   0002C1                     U2BRGL          equ	705	;# 
  6491   0002C2                     U2BRGH          equ	706	;# 
  6492   0002C3                     U2FIFO          equ	707	;# 
  6493   0002C4                     U2UIR           equ	708	;# 
  6494   0002C5                     U2ERRIR         equ	709	;# 
  6495   0002C6                     U2ERRIE         equ	710	;# 
  6496   0002C7                     U3RXB           equ	711	;# 
  6497   0002C7                     U3RXBL          equ	711	;# 
  6498   0002C9                     U3TXB           equ	713	;# 
  6499   0002C9                     U3TXBL          equ	713	;# 
  6500   0002CB                     U3P1            equ	715	;# 
  6501   0002CB                     U3P1L           equ	715	;# 
  6502   0002CD                     U3P2            equ	717	;# 
  6503   0002CD                     U3P2L           equ	717	;# 
  6504   0002CF                     U3P3            equ	719	;# 
  6505   0002CF                     U3P3L           equ	719	;# 
  6506   0002D1                     U3CON0          equ	721	;# 
  6507   0002D2                     U3CON1          equ	722	;# 
  6508   0002D3                     U3CON2          equ	723	;# 
  6509   0002D4                     U3BRG           equ	724	;# 
  6510   0002D4                     U3BRGL          equ	724	;# 
  6511   0002D5                     U3BRGH          equ	725	;# 
  6512   0002D6                     U3FIFO          equ	726	;# 
  6513   0002D7                     U3UIR           equ	727	;# 
  6514   0002D8                     U3ERRIR         equ	728	;# 
  6515   0002D9                     U3ERRIE         equ	729	;# 
  6516   0002DA                     U4RXB           equ	730	;# 
  6517   0002DA                     U4RXBL          equ	730	;# 
  6518   0002DC                     U4TXB           equ	732	;# 
  6519   0002DC                     U4TXBL          equ	732	;# 
  6520   0002DE                     U4P1            equ	734	;# 
  6521   0002DE                     U4P1L           equ	734	;# 
  6522   0002E0                     U4P2            equ	736	;# 
  6523   0002E0                     U4P2L           equ	736	;# 
  6524   0002E2                     U4P3            equ	738	;# 
  6525   0002E2                     U4P3L           equ	738	;# 
  6526   0002E4                     U4CON0          equ	740	;# 
  6527   0002E5                     U4CON1          equ	741	;# 
  6528   0002E6                     U4CON2          equ	742	;# 
  6529   0002E7                     U4BRG           equ	743	;# 
  6530   0002E7                     U4BRGL          equ	743	;# 
  6531   0002E8                     U4BRGH          equ	744	;# 
  6532   0002E9                     U4FIFO          equ	745	;# 
  6533   0002EA                     U4UIR           equ	746	;# 
  6534   0002EB                     U4ERRIR         equ	747	;# 
  6535   0002EC                     U4ERRIE         equ	748	;# 
  6536   0002ED                     U5RXB           equ	749	;# 
  6537   0002ED                     U5RXBL          equ	749	;# 
  6538   0002EF                     U5TXB           equ	751	;# 
  6539   0002EF                     U5TXBL          equ	751	;# 
  6540   0002F1                     U5P1            equ	753	;# 
  6541   0002F1                     U5P1L           equ	753	;# 
  6542   0002F3                     U5P2            equ	755	;# 
  6543   0002F3                     U5P2L           equ	755	;# 
  6544   0002F5                     U5P3            equ	757	;# 
  6545   0002F5                     U5P3L           equ	757	;# 
  6546   0002F7                     U5CON0          equ	759	;# 
  6547   0002F8                     U5CON1          equ	760	;# 
  6548   0002F9                     U5CON2          equ	761	;# 
  6549   0002FA                     U5BRG           equ	762	;# 
  6550   0002FA                     U5BRGL          equ	762	;# 
  6551   0002FB                     U5BRGH          equ	763	;# 
  6552   0002FC                     U5FIFO          equ	764	;# 
  6553   0002FD                     U5UIR           equ	765	;# 
  6554   0002FE                     U5ERRIR         equ	766	;# 
  6555   0002FF                     U5ERRIE         equ	767	;# 
  6556   000300                     SMT1TMR         equ	768	;# 
  6557   000300                     SMT1TMRL        equ	768	;# 
  6558   000301                     SMT1TMRH        equ	769	;# 
  6559   000302                     SMT1TMRU        equ	770	;# 
  6560   000303                     SMT1CPR         equ	771	;# 
  6561   000303                     SMT1CPRL        equ	771	;# 
  6562   000304                     SMT1CPRH        equ	772	;# 
  6563   000305                     SMT1CPRU        equ	773	;# 
  6564   000306                     SMT1CPW         equ	774	;# 
  6565   000306                     SMT1CPWL        equ	774	;# 
  6566   000307                     SMT1CPWH        equ	775	;# 
  6567   000308                     SMT1CPWU        equ	776	;# 
  6568   000309                     SMT1PR          equ	777	;# 
  6569   000309                     SMT1PRL         equ	777	;# 
  6570   00030A                     SMT1PRH         equ	778	;# 
  6571   00030B                     SMT1PRU         equ	779	;# 
  6572   00030C                     SMT1CON0        equ	780	;# 
  6573   00030D                     SMT1CON1        equ	781	;# 
  6574   00030E                     SMT1STAT        equ	782	;# 
  6575   00030F                     SMT1CLK         equ	783	;# 
  6576   000310                     SMT1SIG         equ	784	;# 
  6577   000311                     SMT1WIN         equ	785	;# 
  6578   000318                     TMR0L           equ	792	;# 
  6579   000318                     TMR0            equ	792	;# 
  6580   000319                     TMR0H           equ	793	;# 
  6581   000319                     PR0             equ	793	;# 
  6582   00031A                     T0CON0          equ	794	;# 
  6583   00031B                     T0CON1          equ	795	;# 
  6584   00031C                     TMR1            equ	796	;# 
  6585   00031C                     TMR1L           equ	796	;# 
  6586   00031D                     TMR1H           equ	797	;# 
  6587   00031E                     T1CON           equ	798	;# 
  6588   00031E                     TMR1CON         equ	798	;# 
  6589   00031F                     T1GCON          equ	799	;# 
  6590   00031F                     TMR1GCON        equ	799	;# 
  6591   000320                     T1GATE          equ	800	;# 
  6592   000320                     TMR1GATE        equ	800	;# 
  6593   000321                     T1CLK           equ	801	;# 
  6594   000321                     TMR1CLK         equ	801	;# 
  6595   000321                     PR1             equ	801	;# 
  6596   000322                     T2TMR           equ	802	;# 
  6597   000322                     TMR2            equ	802	;# 
  6598   000323                     T2PR            equ	803	;# 
  6599   000323                     PR2             equ	803	;# 
  6600   000324                     T2CON           equ	804	;# 
  6601   000325                     T2HLT           equ	805	;# 
  6602   000326                     T2CLKCON        equ	806	;# 
  6603   000326                     T2CLK           equ	806	;# 
  6604   000327                     T2RST           equ	807	;# 
  6605   000328                     TMR3            equ	808	;# 
  6606   000328                     TMR3L           equ	808	;# 
  6607   000329                     TMR3H           equ	809	;# 
  6608   00032A                     T3CON           equ	810	;# 
  6609   00032A                     TMR3CON         equ	810	;# 
  6610   00032B                     T3GCON          equ	811	;# 
  6611   00032B                     TMR3GCON        equ	811	;# 
  6612   00032C                     T3GATE          equ	812	;# 
  6613   00032C                     TMR3GATE        equ	812	;# 
  6614   00032D                     T3CLK           equ	813	;# 
  6615   00032D                     TMR3CLK         equ	813	;# 
  6616   00032D                     PR3             equ	813	;# 
  6617   00032E                     T4TMR           equ	814	;# 
  6618   00032E                     TMR4            equ	814	;# 
  6619   00032F                     T4PR            equ	815	;# 
  6620   00032F                     PR4             equ	815	;# 
  6621   000330                     T4CON           equ	816	;# 
  6622   000331                     T4HLT           equ	817	;# 
  6623   000332                     T4CLKCON        equ	818	;# 
  6624   000332                     T4CLK           equ	818	;# 
  6625   000333                     T4RST           equ	819	;# 
  6626   000334                     TMR5            equ	820	;# 
  6627   000334                     TMR5L           equ	820	;# 
  6628   000335                     TMR5H           equ	821	;# 
  6629   000336                     T5CON           equ	822	;# 
  6630   000336                     TMR5CON         equ	822	;# 
  6631   000337                     T5GCON          equ	823	;# 
  6632   000337                     TMR5GCON        equ	823	;# 
  6633   000338                     T5GATE          equ	824	;# 
  6634   000338                     TMR5GATE        equ	824	;# 
  6635   000339                     T5CLK           equ	825	;# 
  6636   000339                     TMR5CLK         equ	825	;# 
  6637   000339                     PR5             equ	825	;# 
  6638   00033A                     T6TMR           equ	826	;# 
  6639   00033A                     TMR6            equ	826	;# 
  6640   00033B                     T6PR            equ	827	;# 
  6641   00033B                     PR6             equ	827	;# 
  6642   00033C                     T6CON           equ	828	;# 
  6643   00033D                     T6HLT           equ	829	;# 
  6644   00033E                     T6CLKCON        equ	830	;# 
  6645   00033E                     T6CLK           equ	830	;# 
  6646   00033F                     T6RST           equ	831	;# 
  6647   000340                     CCPR1           equ	832	;# 
  6648   000340                     CCPR1L          equ	832	;# 
  6649   000341                     CCPR1H          equ	833	;# 
  6650   000342                     CCP1CON         equ	834	;# 
  6651   000343                     CCP1CAP         equ	835	;# 
  6652   000344                     CCPR2           equ	836	;# 
  6653   000344                     CCPR2L          equ	836	;# 
  6654   000345                     CCPR2H          equ	837	;# 
  6655   000346                     CCP2CON         equ	838	;# 
  6656   000347                     CCP2CAP         equ	839	;# 
  6657   000348                     CCPR3           equ	840	;# 
  6658   000348                     CCPR3L          equ	840	;# 
  6659   000349                     CCPR3H          equ	841	;# 
  6660   00034A                     CCP3CON         equ	842	;# 
  6661   00034B                     CCP3CAP         equ	843	;# 
  6662   00034C                     CCPTMRS0        equ	844	;# 
  6663   00034F                     CRCDATA         equ	847	;# 
  6664   00034F                     CRCDATL         equ	847	;# 
  6665   000350                     CRCDATH         equ	848	;# 
  6666   000351                     CRCACC          equ	849	;# 
  6667   000351                     CRCACCL         equ	849	;# 
  6668   000352                     CRCACCH         equ	850	;# 
  6669   000353                     CRCSHFT         equ	851	;# 
  6670   000353                     CRCSHIFTL       equ	851	;# 
  6671   000354                     CRCSHIFTH       equ	852	;# 
  6672   000355                     CRCXOR          equ	853	;# 
  6673   000355                     CRCXORL         equ	853	;# 
  6674   000356                     CRCXORH         equ	854	;# 
  6675   000357                     CRCCON0         equ	855	;# 
  6676   000358                     CRCCON1         equ	856	;# 
  6677   00035A                     SCANLADR        equ	858	;# 
  6678   00035A                     SCANLADRL       equ	858	;# 
  6679   00035B                     SCANLADRH       equ	859	;# 
  6680   00035C                     SCANLADRU       equ	860	;# 
  6681   00035D                     SCANHADR        equ	861	;# 
  6682   00035D                     SCANHADRL       equ	861	;# 
  6683   00035E                     SCANHADRH       equ	862	;# 
  6684   00035F                     SCANHADRU       equ	863	;# 
  6685   000360                     SCANCON0        equ	864	;# 
  6686   000361                     SCANTRIG        equ	865	;# 
  6687   000362                     IPR0            equ	866	;# 
  6688   000363                     IPR1            equ	867	;# 
  6689   000364                     IPR2            equ	868	;# 
  6690   000365                     IPR3            equ	869	;# 
  6691   000366                     IPR4            equ	870	;# 
  6692   000367                     IPR5            equ	871	;# 
  6693   000368                     IPR6            equ	872	;# 
  6694   000369                     IPR7            equ	873	;# 
  6695   00036A                     IPR8            equ	874	;# 
  6696   00036B                     IPR9            equ	875	;# 
  6697   00036C                     IPR10           equ	876	;# 
  6698   00036D                     IPR11           equ	877	;# 
  6699   00036E                     IPR12           equ	878	;# 
  6700   00036F                     IPR13           equ	879	;# 
  6701   000370                     IPR14           equ	880	;# 
  6702   000371                     IPR15           equ	881	;# 
  6703   000373                     STATUS_CSHAD    equ	883	;# 
  6704   000374                     WREG_CSHAD      equ	884	;# 
  6705   000375                     BSR_CSHAD       equ	885	;# 
  6706   000376                     SHADCON         equ	886	;# 
  6707   000377                     STATUS_SHAD     equ	887	;# 
  6708   000378                     WREG_SHAD       equ	888	;# 
  6709   000379                     BSR_SHAD        equ	889	;# 
  6710   00037A                     PCLATH_SHAD     equ	890	;# 
  6711   00037B                     PCLATU_SHAD     equ	891	;# 
  6712   00037C                     FSR0SH          equ	892	;# 
  6713   00037C                     FSR0L_SHAD      equ	892	;# 
  6714   00037D                     FSR0H_SHAD      equ	893	;# 
  6715   00037E                     FSR1SH          equ	894	;# 
  6716   00037E                     FSR1L_SHAD      equ	894	;# 
  6717   00037F                     FSR1H_SHAD      equ	895	;# 
  6718   000380                     FSR2SH          equ	896	;# 
  6719   000380                     FSR2L_SHAD      equ	896	;# 
  6720   000381                     FSR2H_SHAD      equ	897	;# 
  6721   000382                     PRODSH          equ	898	;# 
  6722   000382                     PRODL_SHAD      equ	898	;# 
  6723   000383                     PRODH_SHAD      equ	899	;# 
  6724   0003BC                     CWG1CLK         equ	956	;# 
  6725   0003BC                     CWG1CLKCON      equ	956	;# 
  6726   0003BD                     CWG1ISM         equ	957	;# 
  6727   0003BD                     CWG1DAT         equ	957	;# 
  6728   0003BE                     CWG1DBR         equ	958	;# 
  6729   0003BF                     CWG1DBF         equ	959	;# 
  6730   0003C0                     CWG1CON0        equ	960	;# 
  6731   0003C1                     CWG1CON1        equ	961	;# 
  6732   0003C2                     CWG1AS0         equ	962	;# 
  6733   0003C3                     CWG1AS1         equ	963	;# 
  6734   0003C4                     CWG1STR         equ	964	;# 
  6735   0003C5                     CWG2CLK         equ	965	;# 
  6736   0003C5                     CWG2CLKCON      equ	965	;# 
  6737   0003C6                     CWG2ISM         equ	966	;# 
  6738   0003C6                     CWG2DAT         equ	966	;# 
  6739   0003C7                     CWG2DBR         equ	967	;# 
  6740   0003C8                     CWG2DBF         equ	968	;# 
  6741   0003C9                     CWG2CON0        equ	969	;# 
  6742   0003CA                     CWG2CON1        equ	970	;# 
  6743   0003CB                     CWG2AS0         equ	971	;# 
  6744   0003CC                     CWG2AS1         equ	972	;# 
  6745   0003CD                     CWG2STR         equ	973	;# 
  6746   0003CE                     CWG3CLK         equ	974	;# 
  6747   0003CE                     CWG3CLKCON      equ	974	;# 
  6748   0003CF                     CWG3ISM         equ	975	;# 
  6749   0003CF                     CWG3DAT         equ	975	;# 
  6750   0003D0                     CWG3DBR         equ	976	;# 
  6751   0003D1                     CWG3DBF         equ	977	;# 
  6752   0003D2                     CWG3CON0        equ	978	;# 
  6753   0003D3                     CWG3CON1        equ	979	;# 
  6754   0003D4                     CWG3AS0         equ	980	;# 
  6755   0003D5                     CWG3AS1         equ	981	;# 
  6756   0003D6                     CWG3STR         equ	982	;# 
  6757   0003D7                     FVRCON          equ	983	;# 
  6758   0003D8                     ADCPCON         equ	984	;# 
  6759   0003D8                     ADCP            equ	984	;# 
  6760   0003D9                     ADLTH           equ	985	;# 
  6761   0003D9                     ADLTHL          equ	985	;# 
  6762   0003DA                     ADLTHH          equ	986	;# 
  6763   0003DB                     ADUTH           equ	987	;# 
  6764   0003DB                     ADUTHL          equ	987	;# 
  6765   0003DC                     ADUTHH          equ	988	;# 
  6766   0003DD                     ADERR           equ	989	;# 
  6767   0003DD                     ADERRL          equ	989	;# 
  6768   0003DE                     ADERRH          equ	990	;# 
  6769   0003DF                     ADSTPT          equ	991	;# 
  6770   0003DF                     ADSTPTL         equ	991	;# 
  6771   0003E0                     ADSTPTH         equ	992	;# 
  6772   0003E1                     ADFLTR          equ	993	;# 
  6773   0003E1                     ADFLTRL         equ	993	;# 
  6774   0003E2                     ADFLTRH         equ	994	;# 
  6775   0003E3                     ADACC           equ	995	;# 
  6776   0003E3                     ADACCL          equ	995	;# 
  6777   0003E4                     ADACCH          equ	996	;# 
  6778   0003E5                     ADACCU          equ	997	;# 
  6779   0003E6                     ADCNT           equ	998	;# 
  6780   0003E7                     ADRPT           equ	999	;# 
  6781   0003E8                     ADPREV          equ	1000	;# 
  6782   0003E8                     ADPREVL         equ	1000	;# 
  6783   0003E9                     ADPREVH         equ	1001	;# 
  6784   0003EA                     ADRES           equ	1002	;# 
  6785   0003EA                     ADRESL          equ	1002	;# 
  6786   0003EB                     ADRESH          equ	1003	;# 
  6787   0003EC                     ADPCH           equ	1004	;# 
  6788   0003EE                     ADACQ           equ	1006	;# 
  6789   0003EE                     ADACQL          equ	1006	;# 
  6790   0003EF                     ADACQH          equ	1007	;# 
  6791   0003F0                     ADCAP           equ	1008	;# 
  6792   0003F1                     ADPRE           equ	1009	;# 
  6793   0003F1                     ADPREL          equ	1009	;# 
  6794   0003F2                     ADPREH          equ	1010	;# 
  6795   0003F3                     ADCON0          equ	1011	;# 
  6796   0003F4                     ADCON1          equ	1012	;# 
  6797   0003F5                     ADCON2          equ	1013	;# 
  6798   0003F6                     ADCON3          equ	1014	;# 
  6799   0003F7                     ADSTAT          equ	1015	;# 
  6800   0003F8                     ADREF           equ	1016	;# 
  6801   0003F9                     ADACT           equ	1017	;# 
  6802   0003FA                     ADCLK           equ	1018	;# 
  6803   000400                     ANSELA          equ	1024	;# 
  6804   000401                     WPUA            equ	1025	;# 
  6805   000402                     ODCONA          equ	1026	;# 
  6806   000403                     SLRCONA         equ	1027	;# 
  6807   000404                     INLVLA          equ	1028	;# 
  6808   000405                     IOCAP           equ	1029	;# 
  6809   000406                     IOCAN           equ	1030	;# 
  6810   000407                     IOCAF           equ	1031	;# 
  6811   000408                     ANSELB          equ	1032	;# 
  6812   000409                     WPUB            equ	1033	;# 
  6813   00040A                     ODCONB          equ	1034	;# 
  6814   00040B                     SLRCONB         equ	1035	;# 
  6815   00040C                     INLVLB          equ	1036	;# 
  6816   00040D                     IOCBP           equ	1037	;# 
  6817   00040E                     IOCBN           equ	1038	;# 
  6818   00040F                     IOCBF           equ	1039	;# 
  6819   000410                     ANSELC          equ	1040	;# 
  6820   000411                     WPUC            equ	1041	;# 
  6821   000412                     ODCONC          equ	1042	;# 
  6822   000413                     SLRCONC         equ	1043	;# 
  6823   000414                     INLVLC          equ	1044	;# 
  6824   000415                     IOCCP           equ	1045	;# 
  6825   000416                     IOCCN           equ	1046	;# 
  6826   000417                     IOCCF           equ	1047	;# 
  6827   000418                     ANSELD          equ	1048	;# 
  6828   000419                     WPUD            equ	1049	;# 
  6829   00041A                     ODCOND          equ	1050	;# 
  6830   00041B                     SLRCOND         equ	1051	;# 
  6831   00041C                     INLVLD          equ	1052	;# 
  6832   000420                     ANSELE          equ	1056	;# 
  6833   000421                     WPUE            equ	1057	;# 
  6834   000422                     ODCONE          equ	1058	;# 
  6835   000423                     SLRCONE         equ	1059	;# 
  6836   000424                     INLVLE          equ	1060	;# 
  6837   000425                     IOCEP           equ	1061	;# 
  6838   000426                     IOCEN           equ	1062	;# 
  6839   000427                     IOCEF           equ	1063	;# 
  6840   000428                     ANSELF          equ	1064	;# 
  6841   000429                     WPUF            equ	1065	;# 
  6842   00042A                     ODCONF          equ	1066	;# 
  6843   00042B                     SLRCONF         equ	1067	;# 
  6844   00042C                     INLVLF          equ	1068	;# 
  6845   000440                     NCO1ACC         equ	1088	;# 
  6846   000440                     NCO1ACCL        equ	1088	;# 
  6847   000441                     NCO1ACCH        equ	1089	;# 
  6848   000442                     NCO1ACCU        equ	1090	;# 
  6849   000443                     NCO1INC         equ	1091	;# 
  6850   000443                     NCO1INCL        equ	1091	;# 
  6851   000444                     NCO1INCH        equ	1092	;# 
  6852   000445                     NCO1INCU        equ	1093	;# 
  6853   000446                     NCO1CON         equ	1094	;# 
  6854   000447                     NCO1CLK         equ	1095	;# 
  6855   000448                     NCO2ACC         equ	1096	;# 
  6856   000448                     NCO2ACCL        equ	1096	;# 
  6857   000449                     NCO2ACCH        equ	1097	;# 
  6858   00044A                     NCO2ACCU        equ	1098	;# 
  6859   00044B                     NCO2INC         equ	1099	;# 
  6860   00044B                     NCO2INCL        equ	1099	;# 
  6861   00044C                     NCO2INCH        equ	1100	;# 
  6862   00044D                     NCO2INCU        equ	1101	;# 
  6863   00044E                     NCO2CON         equ	1102	;# 
  6864   00044F                     NCO2CLK         equ	1103	;# 
  6865   000450                     NCO3ACC         equ	1104	;# 
  6866   000450                     NCO3ACCL        equ	1104	;# 
  6867   000451                     NCO3ACCH        equ	1105	;# 
  6868   000452                     NCO3ACCU        equ	1106	;# 
  6869   000453                     NCO3INC         equ	1107	;# 
  6870   000453                     NCO3INCL        equ	1107	;# 
  6871   000454                     NCO3INCH        equ	1108	;# 
  6872   000455                     NCO3INCU        equ	1109	;# 
  6873   000456                     NCO3CON         equ	1110	;# 
  6874   000457                     NCO3CLK         equ	1111	;# 
  6875   000459                     IVTLOCK         equ	1113	;# 
  6876   00045A                     IVTAD           equ	1114	;# 
  6877   00045A                     IVTADL          equ	1114	;# 
  6878   00045B                     IVTADH          equ	1115	;# 
  6879   00045C                     IVTADU          equ	1116	;# 
  6880   00045D                     IVTBASE         equ	1117	;# 
  6881   00045D                     IVTBASEL        equ	1117	;# 
  6882   00045E                     IVTBASEH        equ	1118	;# 
  6883   00045F                     IVTBASEU        equ	1119	;# 
  6884   000460                     PWM1ERS         equ	1120	;# 
  6885   000461                     PWM1CLK         equ	1121	;# 
  6886   000462                     PWM1LDS         equ	1122	;# 
  6887   000463                     PWM1PR          equ	1123	;# 
  6888   000463                     PWM1PRL         equ	1123	;# 
  6889   000464                     PWM1PRH         equ	1124	;# 
  6890   000465                     PWM1CPRE        equ	1125	;# 
  6891   000466                     PWM1PIPOS       equ	1126	;# 
  6892   000467                     PWM1GIR         equ	1127	;# 
  6893   000468                     PWM1GIE         equ	1128	;# 
  6894   000469                     PWM1CON         equ	1129	;# 
  6895   00046A                     PWM1S1CFG       equ	1130	;# 
  6896   00046B                     PWM1S1P1        equ	1131	;# 
  6897   00046B                     PWM1S1P1L       equ	1131	;# 
  6898   00046C                     PWM1S1P1H       equ	1132	;# 
  6899   00046D                     PWM1S1P2        equ	1133	;# 
  6900   00046D                     PWM1S1P2L       equ	1133	;# 
  6901   00046E                     PWM1S1P2H       equ	1134	;# 
  6902   00046F                     PWM2ERS         equ	1135	;# 
  6903   000470                     PWM2CLK         equ	1136	;# 
  6904   000471                     PWM2LDS         equ	1137	;# 
  6905   000472                     PWM2PR          equ	1138	;# 
  6906   000472                     PWM2PRL         equ	1138	;# 
  6907   000473                     PWM2PRH         equ	1139	;# 
  6908   000474                     PWM2CPRE        equ	1140	;# 
  6909   000475                     PWM2PIPOS       equ	1141	;# 
  6910   000476                     PWM2GIR         equ	1142	;# 
  6911   000477                     PWM2GIE         equ	1143	;# 
  6912   000478                     PWM2CON         equ	1144	;# 
  6913   000479                     PWM2S1CFG       equ	1145	;# 
  6914   00047A                     PWM2S1P1        equ	1146	;# 
  6915   00047A                     PWM2S1P1L       equ	1146	;# 
  6916   00047B                     PWM2S1P1H       equ	1147	;# 
  6917   00047C                     PWM2S1P2        equ	1148	;# 
  6918   00047C                     PWM2S1P2L       equ	1148	;# 
  6919   00047D                     PWM2S1P2H       equ	1149	;# 
  6920   00047E                     PWM3ERS         equ	1150	;# 
  6921   00047F                     PWM3CLK         equ	1151	;# 
  6922   000480                     PWM3LDS         equ	1152	;# 
  6923   000481                     PWM3PR          equ	1153	;# 
  6924   000481                     PWM3PRL         equ	1153	;# 
  6925   000482                     PWM3PRH         equ	1154	;# 
  6926   000483                     PWM3CPRE        equ	1155	;# 
  6927   000484                     PWM3PIPOS       equ	1156	;# 
  6928   000485                     PWM3GIR         equ	1157	;# 
  6929   000486                     PWM3GIE         equ	1158	;# 
  6930   000487                     PWM3CON         equ	1159	;# 
  6931   000488                     PWM3S1CFG       equ	1160	;# 
  6932   000489                     PWM3S1P1        equ	1161	;# 
  6933   000489                     PWM3S1P1L       equ	1161	;# 
  6934   00048A                     PWM3S1P1H       equ	1162	;# 
  6935   00048B                     PWM3S1P2        equ	1163	;# 
  6936   00048B                     PWM3S1P2L       equ	1163	;# 
  6937   00048C                     PWM3S1P2H       equ	1164	;# 
  6938   00049C                     PWMLOAD         equ	1180	;# 
  6939   00049D                     PWMEN           equ	1181	;# 
  6940   00049E                     PIE0            equ	1182	;# 
  6941   00049F                     PIE1            equ	1183	;# 
  6942   0004A0                     PIE2            equ	1184	;# 
  6943   0004A1                     PIE3            equ	1185	;# 
  6944   0004A2                     PIE4            equ	1186	;# 
  6945   0004A3                     PIE5            equ	1187	;# 
  6946   0004A4                     PIE6            equ	1188	;# 
  6947   0004A5                     PIE7            equ	1189	;# 
  6948   0004A6                     PIE8            equ	1190	;# 
  6949   0004A7                     PIE9            equ	1191	;# 
  6950   0004A8                     PIE10           equ	1192	;# 
  6951   0004A9                     PIE11           equ	1193	;# 
  6952   0004AA                     PIE12           equ	1194	;# 
  6953   0004AB                     PIE13           equ	1195	;# 
  6954   0004AC                     PIE14           equ	1196	;# 
  6955   0004AD                     PIE15           equ	1197	;# 
  6956   0004AE                     PIR0            equ	1198	;# 
  6957   0004AF                     PIR1            equ	1199	;# 
  6958   0004B0                     PIR2            equ	1200	;# 
  6959   0004B1                     PIR3            equ	1201	;# 
  6960   0004B2                     PIR4            equ	1202	;# 
  6961   0004B3                     PIR5            equ	1203	;# 
  6962   0004B4                     PIR6            equ	1204	;# 
  6963   0004B5                     PIR7            equ	1205	;# 
  6964   0004B6                     PIR8            equ	1206	;# 
  6965   0004B7                     PIR9            equ	1207	;# 
  6966   0004B8                     PIR10           equ	1208	;# 
  6967   0004B9                     PIR11           equ	1209	;# 
  6968   0004BA                     PIR12           equ	1210	;# 
  6969   0004BB                     PIR13           equ	1211	;# 
  6970   0004BC                     PIR14           equ	1212	;# 
  6971   0004BD                     PIR15           equ	1213	;# 
  6972   0004BE                     LATA            equ	1214	;# 
  6973   0004BF                     LATB            equ	1215	;# 
  6974   0004C0                     LATC            equ	1216	;# 
  6975   0004C1                     LATD            equ	1217	;# 
  6976   0004C2                     LATE            equ	1218	;# 
  6977   0004C3                     LATF            equ	1219	;# 
  6978   0004C6                     TRISA           equ	1222	;# 
  6979   0004C7                     TRISB           equ	1223	;# 
  6980   0004C8                     TRISC           equ	1224	;# 
  6981   0004C9                     TRISD           equ	1225	;# 
  6982   0004CA                     TRISE           equ	1226	;# 
  6983   0004CB                     TRISF           equ	1227	;# 
  6984   0004CE                     PORTA           equ	1230	;# 
  6985   0004CF                     PORTB           equ	1231	;# 
  6986   0004D0                     PORTC           equ	1232	;# 
  6987   0004D1                     PORTD           equ	1233	;# 
  6988   0004D2                     PORTE           equ	1234	;# 
  6989   0004D3                     PORTF           equ	1235	;# 
  6990   0004D6                     INTCON0         equ	1238	;# 
  6991   0004D7                     INTCON1         equ	1239	;# 
  6992   0004D8                     STATUS          equ	1240	;# 
  6993   0004D9                     FSR2            equ	1241	;# 
  6994   0004D9                     FSR2L           equ	1241	;# 
  6995   0004DA                     FSR2H           equ	1242	;# 
  6996   0004DB                     PLUSW2          equ	1243	;# 
  6997   0004DC                     PREINC2         equ	1244	;# 
  6998   0004DD                     POSTDEC2        equ	1245	;# 
  6999   0004DE                     POSTINC2        equ	1246	;# 
  7000   0004DF                     INDF2           equ	1247	;# 
  7001   0004E0                     BSR             equ	1248	;# 
  7002   0004E1                     FSR1            equ	1249	;# 
  7003   0004E1                     FSR1L           equ	1249	;# 
  7004   0004E2                     FSR1H           equ	1250	;# 
  7005   0004E3                     PLUSW1          equ	1251	;# 
  7006   0004E4                     PREINC1         equ	1252	;# 
  7007   0004E5                     POSTDEC1        equ	1253	;# 
  7008   0004E6                     POSTINC1        equ	1254	;# 
  7009   0004E7                     INDF1           equ	1255	;# 
  7010   0004E8                     WREG            equ	1256	;# 
  7011   0004E9                     FSR0            equ	1257	;# 
  7012   0004E9                     FSR0L           equ	1257	;# 
  7013   0004EA                     FSR0H           equ	1258	;# 
  7014   0004EB                     PLUSW0          equ	1259	;# 
  7015   0004EC                     PREINC0         equ	1260	;# 
  7016   0004ED                     POSTDEC0        equ	1261	;# 
  7017   0004EE                     POSTINC0        equ	1262	;# 
  7018   0004EF                     INDF0           equ	1263	;# 
  7019   0004F0                     PCON0           equ	1264	;# 
  7020   0004F1                     PCON1           equ	1265	;# 
  7021   0004F2                     CPUDOZE         equ	1266	;# 
  7022   0004F3                     PROD            equ	1267	;# 
  7023   0004F3                     PRODL           equ	1267	;# 
  7024   0004F4                     PRODH           equ	1268	;# 
  7025   0004F5                     TABLAT          equ	1269	;# 
  7026   0004F6                     TBLPTR          equ	1270	;# 
  7027   0004F6                     TBLPTRL         equ	1270	;# 
  7028   0004F7                     TBLPTRH         equ	1271	;# 
  7029   0004F8                     TBLPTRU         equ	1272	;# 
  7030   0004F9                     PCLAT           equ	1273	;# 
  7031   0004F9                     PCL             equ	1273	;# 
  7032   0004FA                     PCLATH          equ	1274	;# 
  7033   0004FB                     PCLATU          equ	1275	;# 
  7034   0004FC                     STKPTR          equ	1276	;# 
  7035   0004FD                     TOS             equ	1277	;# 
  7036   0004FD                     TOSL            equ	1277	;# 
  7037   0004FE                     TOSH            equ	1278	;# 
  7038   0004FF                     TOSU            equ	1279	;# 
  7039   000039                     CLKRCON         equ	57	;# 
  7040   00003A                     CLKRCLK         equ	58	;# 
  7041   000040                     NVMCON0         equ	64	;# 
  7042   000041                     NVMCON1         equ	65	;# 
  7043   000042                     NVMLOCK         equ	66	;# 
  7044   000043                     NVMADR          equ	67	;# 
  7045   000043                     NVMADRL         equ	67	;# 
  7046   000044                     NVMADRH         equ	68	;# 
  7047   000045                     NVMADRU         equ	69	;# 
  7048   000046                     NVMDAT          equ	70	;# 
  7049   000046                     NVMDATL         equ	70	;# 
  7050   000047                     NVMDATH         equ	71	;# 
  7051   000048                     VREGCON         equ	72	;# 
  7052   000049                     BORCON          equ	73	;# 
  7053   00004A                     HLVDCON0        equ	74	;# 
  7054   00004B                     HLVDCON1        equ	75	;# 
  7055   00004C                     ZCDCON          equ	76	;# 
  7056   000060                     PMD0            equ	96	;# 
  7057   000061                     PMD1            equ	97	;# 
  7058   000063                     PMD3            equ	99	;# 
  7059   000064                     PMD4            equ	100	;# 
  7060   000065                     PMD5            equ	101	;# 
  7061   000066                     PMD6            equ	102	;# 
  7062   000067                     PMD7            equ	103	;# 
  7063   000068                     PMD8            equ	104	;# 
  7064   00006A                     MD1CON0         equ	106	;# 
  7065   00006B                     MD1CON1         equ	107	;# 
  7066   00006C                     MD1SRC          equ	108	;# 
  7067   00006D                     MD1CARL         equ	109	;# 
  7068   00006E                     MD1CARH         equ	110	;# 
  7069   00006F                     CMOUT           equ	111	;# 
  7070   000070                     CM1CON0         equ	112	;# 
  7071   000071                     CM1CON1         equ	113	;# 
  7072   000072                     CM1NCH          equ	114	;# 
  7073   000073                     CM1PCH          equ	115	;# 
  7074   000074                     CM2CON0         equ	116	;# 
  7075   000075                     CM2CON1         equ	117	;# 
  7076   000076                     CM2NCH          equ	118	;# 
  7077   000077                     CM2PCH          equ	119	;# 
  7078   000078                     WDTCON0         equ	120	;# 
  7079   000079                     WDTCON1         equ	121	;# 
  7080   00007A                     WDTPS           equ	122	;# 
  7081   00007A                     WDTPSL          equ	122	;# 
  7082   00007B                     WDTPSH          equ	123	;# 
  7083   00007C                     WDTTMR          equ	124	;# 
  7084   00007D                     DAC1DAT         equ	125	;# 
  7085   00007D                     DAC1DATL        equ	125	;# 
  7086   00007F                     DAC1CON         equ	127	;# 
  7087   000080                     SPI1RXB         equ	128	;# 
  7088   000081                     SPI1TXB         equ	129	;# 
  7089   000082                     SPI1TCNT        equ	130	;# 
  7090   000082                     SPI1TCNTL       equ	130	;# 
  7091   000083                     SPI1TCNTH       equ	131	;# 
  7092   000084                     SPI1CON0        equ	132	;# 
  7093   000085                     SPI1CON1        equ	133	;# 
  7094   000086                     SPI1CON2        equ	134	;# 
  7095   000087                     SPI1STATUS      equ	135	;# 
  7096   000088                     SPI1TWIDTH      equ	136	;# 
  7097   000089                     SPI1BAUD        equ	137	;# 
  7098   00008A                     SPI1INTF        equ	138	;# 
  7099   00008B                     SPI1INTE        equ	139	;# 
  7100   00008C                     SPI1CLK         equ	140	;# 
  7101   00008D                     SPI2RXB         equ	141	;# 
  7102   00008E                     SPI2TXB         equ	142	;# 
  7103   00008F                     SPI2TCNT        equ	143	;# 
  7104   00008F                     SPI2TCNTL       equ	143	;# 
  7105   000090                     SPI2TCNTH       equ	144	;# 
  7106   000091                     SPI2CON0        equ	145	;# 
  7107   000092                     SPI2CON1        equ	146	;# 
  7108   000093                     SPI2CON2        equ	147	;# 
  7109   000094                     SPI2STATUS      equ	148	;# 
  7110   000095                     SPI2TWIDTH      equ	149	;# 
  7111   000096                     SPI2BAUD        equ	150	;# 
  7112   000097                     SPI2INTF        equ	151	;# 
  7113   000098                     SPI2INTE        equ	152	;# 
  7114   000099                     SPI2CLK         equ	153	;# 
  7115   0000AC                     ACTCON          equ	172	;# 
  7116   0000AD                     OSCCON1         equ	173	;# 
  7117   0000AE                     OSCCON2         equ	174	;# 
  7118   0000AF                     OSCCON3         equ	175	;# 
  7119   0000B0                     OSCTUNE         equ	176	;# 
  7120   0000B1                     OSCFRQ          equ	177	;# 
  7121   0000B1                     OSCFREQ         equ	177	;# 
  7122   0000B2                     OSCSTAT         equ	178	;# 
  7123   0000B2                     OSCSTAT1        equ	178	;# 
  7124   0000B3                     OSCEN           equ	179	;# 
  7125   0000B4                     PRLOCK          equ	180	;# 
  7126   0000B5                     SCANPR          equ	181	;# 
  7127   0000B6                     DMA1PR          equ	182	;# 
  7128   0000B7                     DMA2PR          equ	183	;# 
  7129   0000B8                     DMA3PR          equ	184	;# 
  7130   0000B9                     DMA4PR          equ	185	;# 
  7131   0000BA                     DMA5PR          equ	186	;# 
  7132   0000BB                     DMA6PR          equ	187	;# 
  7133   0000BE                     MAINPR          equ	190	;# 
  7134   0000BF                     ISRPR           equ	191	;# 
  7135   0000D4                     CLCDATA         equ	212	;# 
  7136   0000D5                     CLCSELECT       equ	213	;# 
  7137   0000D6                     CLCnCON         equ	214	;# 
  7138   0000D7                     CLCnPOL         equ	215	;# 
  7139   0000D8                     CLCnSEL0        equ	216	;# 
  7140   0000D9                     CLCnSEL1        equ	217	;# 
  7141   0000DA                     CLCnSEL2        equ	218	;# 
  7142   0000DB                     CLCnSEL3        equ	219	;# 
  7143   0000DC                     CLCnGLS0        equ	220	;# 
  7144   0000DD                     CLCnGLS1        equ	221	;# 
  7145   0000DE                     CLCnGLS2        equ	222	;# 
  7146   0000DF                     CLCnGLS3        equ	223	;# 
  7147   0000E8                     DMASELECT       equ	232	;# 
  7148   0000E9                     DMAnBUF         equ	233	;# 
  7149   0000EA                     DMAnDCNT        equ	234	;# 
  7150   0000EA                     DMAnDCNTL       equ	234	;# 
  7151   0000EB                     DMAnDCNTH       equ	235	;# 
  7152   0000EC                     DMAnDPTR        equ	236	;# 
  7153   0000EC                     DMAnDPTRL       equ	236	;# 
  7154   0000ED                     DMAnDPTRH       equ	237	;# 
  7155   0000EE                     DMAnDSZ         equ	238	;# 
  7156   0000EE                     DMAnDSZL        equ	238	;# 
  7157   0000EF                     DMAnDSZH        equ	239	;# 
  7158   0000F0                     DMAnDSA         equ	240	;# 
  7159   0000F0                     DMAnDSAL        equ	240	;# 
  7160   0000F1                     DMAnDSAH        equ	241	;# 
  7161   0000F2                     DMAnSCNT        equ	242	;# 
  7162   0000F2                     DMAnSCNTL       equ	242	;# 
  7163   0000F3                     DMAnSCNTH       equ	243	;# 
  7164   0000F4                     DMAnSPTR        equ	244	;# 
  7165   0000F4                     DMAnSPTRL       equ	244	;# 
  7166   0000F5                     DMAnSPTRH       equ	245	;# 
  7167   0000F6                     DMAnSPTRU       equ	246	;# 
  7168   0000F7                     DMAnSSZ         equ	247	;# 
  7169   0000F7                     DMAnSSZL        equ	247	;# 
  7170   0000F8                     DMAnSSZH        equ	248	;# 
  7171   0000F9                     DMAnSSA         equ	249	;# 
  7172   0000F9                     DMAnSSAL        equ	249	;# 
  7173   0000FA                     DMAnSSAH        equ	250	;# 
  7174   0000FB                     DMAnSSAU        equ	251	;# 
  7175   0000FC                     DMAnCON0        equ	252	;# 
  7176   0000FD                     DMAnCON1        equ	253	;# 
  7177   0000FE                     DMAnAIRQ        equ	254	;# 
  7178   0000FF                     DMAnSIRQ        equ	255	;# 
  7179   000200                     PPSLOCK         equ	512	;# 
  7180   000201                     RA0PPS          equ	513	;# 
  7181   000202                     RA1PPS          equ	514	;# 
  7182   000203                     RA2PPS          equ	515	;# 
  7183   000204                     RA3PPS          equ	516	;# 
  7184   000205                     RA4PPS          equ	517	;# 
  7185   000206                     RA5PPS          equ	518	;# 
  7186   000207                     RA6PPS          equ	519	;# 
  7187   000208                     RA7PPS          equ	520	;# 
  7188   000209                     RB0PPS          equ	521	;# 
  7189   00020A                     RB1PPS          equ	522	;# 
  7190   00020B                     RB2PPS          equ	523	;# 
  7191   00020C                     RB3PPS          equ	524	;# 
  7192   00020D                     RB4PPS          equ	525	;# 
  7193   00020E                     RB5PPS          equ	526	;# 
  7194   00020F                     RB6PPS          equ	527	;# 
  7195   000210                     RB7PPS          equ	528	;# 
  7196   000211                     RC0PPS          equ	529	;# 
  7197   000212                     RC1PPS          equ	530	;# 
  7198   000213                     RC2PPS          equ	531	;# 
  7199   000214                     RC3PPS          equ	532	;# 
  7200   000215                     RC4PPS          equ	533	;# 
  7201   000216                     RC5PPS          equ	534	;# 
  7202   000217                     RC6PPS          equ	535	;# 
  7203   000218                     RC7PPS          equ	536	;# 
  7204   000219                     RD0PPS          equ	537	;# 
  7205   00021A                     RD1PPS          equ	538	;# 
  7206   00021B                     RD2PPS          equ	539	;# 
  7207   00021C                     RD3PPS          equ	540	;# 
  7208   00021D                     RD4PPS          equ	541	;# 
  7209   00021E                     RD5PPS          equ	542	;# 
  7210   00021F                     RD6PPS          equ	543	;# 
  7211   000220                     RD7PPS          equ	544	;# 
  7212   000221                     RE0PPS          equ	545	;# 
  7213   000222                     RE1PPS          equ	546	;# 
  7214   000223                     RE2PPS          equ	547	;# 
  7215   000229                     RF0PPS          equ	553	;# 
  7216   00022A                     RF1PPS          equ	554	;# 
  7217   00022B                     RF2PPS          equ	555	;# 
  7218   00022C                     RF3PPS          equ	556	;# 
  7219   00022D                     RF4PPS          equ	557	;# 
  7220   00022E                     RF5PPS          equ	558	;# 
  7221   00022F                     RF6PPS          equ	559	;# 
  7222   000230                     RF7PPS          equ	560	;# 
  7223   00023E                     INT0PPS         equ	574	;# 
  7224   00023F                     INT1PPS         equ	575	;# 
  7225   000240                     INT2PPS         equ	576	;# 
  7226   000241                     T0CKIPPS        equ	577	;# 
  7227   000242                     T1CKIPPS        equ	578	;# 
  7228   000243                     T1GPPS          equ	579	;# 
  7229   000244                     T3CKIPPS        equ	580	;# 
  7230   000245                     T3GPPS          equ	581	;# 
  7231   000246                     T5CKIPPS        equ	582	;# 
  7232   000247                     T5GPPS          equ	583	;# 
  7233   000248                     T2INPPS         equ	584	;# 
  7234   000249                     T4INPPS         equ	585	;# 
  7235   00024A                     T6INPPS         equ	586	;# 
  7236   00024F                     CCP1PPS         equ	591	;# 
  7237   000250                     CCP2PPS         equ	592	;# 
  7238   000251                     CCP3PPS         equ	593	;# 
  7239   000253                     PWM1ERSPPS      equ	595	;# 
  7240   000254                     PWM2ERSPPS      equ	596	;# 
  7241   000255                     PWM3ERSPPS      equ	597	;# 
  7242   000257                     PWMIN0PPS       equ	599	;# 
  7243   000258                     PWMIN1PPS       equ	600	;# 
  7244   000259                     SMT1WINPPS      equ	601	;# 
  7245   00025A                     SMT1SIGPPS      equ	602	;# 
  7246   00025B                     CWG1PPS         equ	603	;# 
  7247   00025B                     CWG1INPPS       equ	603	;# 
  7248   00025C                     CWG2PPS         equ	604	;# 
  7249   00025C                     CWG2INPPS       equ	604	;# 
  7250   00025D                     CWG3PPS         equ	605	;# 
  7251   00025D                     CWG3INPPS       equ	605	;# 
  7252   00025E                     MD1CARLPPS      equ	606	;# 
  7253   00025E                     MDCARLPPS       equ	606	;# 
  7254   00025F                     MD1CARHPPS      equ	607	;# 
  7255   00025F                     MDCARHPPS       equ	607	;# 
  7256   000260                     MD1SRCPPS       equ	608	;# 
  7257   000260                     MDSRCPPS        equ	608	;# 
  7258   000261                     CLCIN0PPS       equ	609	;# 
  7259   000262                     CLCIN1PPS       equ	610	;# 
  7260   000263                     CLCIN2PPS       equ	611	;# 
  7261   000264                     CLCIN3PPS       equ	612	;# 
  7262   000265                     CLCIN4PPS       equ	613	;# 
  7263   000266                     CLCIN5PPS       equ	614	;# 
  7264   000267                     CLCIN6PPS       equ	615	;# 
  7265   000268                     CLCIN7PPS       equ	616	;# 
  7266   000269                     ADACTPPS        equ	617	;# 
  7267   00026A                     SPI1SCKPPS      equ	618	;# 
  7268   00026B                     SPI1SDIPPS      equ	619	;# 
  7269   00026C                     SPI1SSPPS       equ	620	;# 
  7270   00026D                     SPI2SCKPPS      equ	621	;# 
  7271   00026E                     SPI2SDIPPS      equ	622	;# 
  7272   00026F                     SPI2SSPPS       equ	623	;# 
  7273   000270                     I2C1SDAPPS      equ	624	;# 
  7274   000271                     I2C1SCLPPS      equ	625	;# 
  7275   000272                     U1RXPPS         equ	626	;# 
  7276   000273                     U1CTSPPS        equ	627	;# 
  7277   000274                     U2RXPPS         equ	628	;# 
  7278   000275                     U2CTSPPS        equ	629	;# 
  7279   000276                     U3RXPPS         equ	630	;# 
  7280   000277                     U3CTSPPS        equ	631	;# 
  7281   000278                     U4RXPPS         equ	632	;# 
  7282   000279                     U4CTSPPS        equ	633	;# 
  7283   00027A                     U5RXPPS         equ	634	;# 
  7284   00027B                     U5CTSPPS        equ	635	;# 
  7285   000286                     RC4I2C          equ	646	;# 
  7286   000287                     RC3I2C          equ	647	;# 
  7287   000288                     RB2I2C          equ	648	;# 
  7288   000289                     RB1I2C          equ	649	;# 
  7289   00028B                     I2C1RXB         equ	651	;# 
  7290   00028C                     I2C1TXB         equ	652	;# 
  7291   00028D                     I2C1CNT         equ	653	;# 
  7292   00028E                     I2C1ADB0        equ	654	;# 
  7293   00028F                     I2C1ADB1        equ	655	;# 
  7294   000290                     I2C1ADR0        equ	656	;# 
  7295   000291                     I2C1ADR1        equ	657	;# 
  7296   000292                     I2C1ADR2        equ	658	;# 
  7297   000293                     I2C1ADR3        equ	659	;# 
  7298   000294                     I2C1CON0        equ	660	;# 
  7299   000295                     I2C1CON1        equ	661	;# 
  7300   000296                     I2C1CON2        equ	662	;# 
  7301   000297                     I2C1ERR         equ	663	;# 
  7302   000298                     I2C1STAT0       equ	664	;# 
  7303   000299                     I2C1STAT1       equ	665	;# 
  7304   00029A                     I2C1PIR         equ	666	;# 
  7305   00029B                     I2C1PIE         equ	667	;# 
  7306   00029C                     I2C1CLK         equ	668	;# 
  7307   00029D                     I2C1BTO         equ	669	;# 
  7308   0002A1                     U1RXB           equ	673	;# 
  7309   0002A1                     U1RXBL          equ	673	;# 
  7310   0002A2                     U1RXCHK         equ	674	;# 
  7311   0002A3                     U1TXB           equ	675	;# 
  7312   0002A3                     U1TXBL          equ	675	;# 
  7313   0002A4                     U1TXCHK         equ	676	;# 
  7314   0002A5                     U1P1            equ	677	;# 
  7315   0002A5                     U1P1L           equ	677	;# 
  7316   0002A6                     U1P1H           equ	678	;# 
  7317   0002A7                     U1P2            equ	679	;# 
  7318   0002A7                     U1P2L           equ	679	;# 
  7319   0002A8                     U1P2H           equ	680	;# 
  7320   0002A9                     U1P3            equ	681	;# 
  7321   0002A9                     U1P3L           equ	681	;# 
  7322   0002AA                     U1P3H           equ	682	;# 
  7323   0002AB                     U1CON0          equ	683	;# 
  7324   0002AC                     U1CON1          equ	684	;# 
  7325   0002AD                     U1CON2          equ	685	;# 
  7326   0002AE                     U1BRG           equ	686	;# 
  7327   0002AE                     U1BRGL          equ	686	;# 
  7328   0002AF                     U1BRGH          equ	687	;# 
  7329   0002B0                     U1FIFO          equ	688	;# 
  7330   0002B1                     U1UIR           equ	689	;# 
  7331   0002B2                     U1ERRIR         equ	690	;# 
  7332   0002B3                     U1ERRIE         equ	691	;# 
  7333   0002B4                     U2RXB           equ	692	;# 
  7334   0002B4                     U2RXBL          equ	692	;# 
  7335   0002B6                     U2TXB           equ	694	;# 
  7336   0002B6                     U2TXBL          equ	694	;# 
  7337   0002B8                     U2P1            equ	696	;# 
  7338   0002B8                     U2P1L           equ	696	;# 
  7339   0002BA                     U2P2            equ	698	;# 
  7340   0002BA                     U2P2L           equ	698	;# 
  7341   0002BC                     U2P3            equ	700	;# 
  7342   0002BC                     U2P3L           equ	700	;# 
  7343   0002BE                     U2CON0          equ	702	;# 
  7344   0002BF                     U2CON1          equ	703	;# 
  7345   0002C0                     U2CON2          equ	704	;# 
  7346   0002C1                     U2BRG           equ	705	;# 
  7347   0002C1                     U2BRGL          equ	705	;# 
  7348   0002C2                     U2BRGH          equ	706	;# 
  7349   0002C3                     U2FIFO          equ	707	;# 
  7350   0002C4                     U2UIR           equ	708	;# 
  7351   0002C5                     U2ERRIR         equ	709	;# 
  7352   0002C6                     U2ERRIE         equ	710	;# 
  7353   0002C7                     U3RXB           equ	711	;# 
  7354   0002C7                     U3RXBL          equ	711	;# 
  7355   0002C9                     U3TXB           equ	713	;# 
  7356   0002C9                     U3TXBL          equ	713	;# 
  7357   0002CB                     U3P1            equ	715	;# 
  7358   0002CB                     U3P1L           equ	715	;# 
  7359   0002CD                     U3P2            equ	717	;# 
  7360   0002CD                     U3P2L           equ	717	;# 
  7361   0002CF                     U3P3            equ	719	;# 
  7362   0002CF                     U3P3L           equ	719	;# 
  7363   0002D1                     U3CON0          equ	721	;# 
  7364   0002D2                     U3CON1          equ	722	;# 
  7365   0002D3                     U3CON2          equ	723	;# 
  7366   0002D4                     U3BRG           equ	724	;# 
  7367   0002D4                     U3BRGL          equ	724	;# 
  7368   0002D5                     U3BRGH          equ	725	;# 
  7369   0002D6                     U3FIFO          equ	726	;# 
  7370   0002D7                     U3UIR           equ	727	;# 
  7371   0002D8                     U3ERRIR         equ	728	;# 
  7372   0002D9                     U3ERRIE         equ	729	;# 
  7373   0002DA                     U4RXB           equ	730	;# 
  7374   0002DA                     U4RXBL          equ	730	;# 
  7375   0002DC                     U4TXB           equ	732	;# 
  7376   0002DC                     U4TXBL          equ	732	;# 
  7377   0002DE                     U4P1            equ	734	;# 
  7378   0002DE                     U4P1L           equ	734	;# 
  7379   0002E0                     U4P2            equ	736	;# 
  7380   0002E0                     U4P2L           equ	736	;# 
  7381   0002E2                     U4P3            equ	738	;# 
  7382   0002E2                     U4P3L           equ	738	;# 
  7383   0002E4                     U4CON0          equ	740	;# 
  7384   0002E5                     U4CON1          equ	741	;# 
  7385   0002E6                     U4CON2          equ	742	;# 
  7386   0002E7                     U4BRG           equ	743	;# 
  7387   0002E7                     U4BRGL          equ	743	;# 
  7388   0002E8                     U4BRGH          equ	744	;# 
  7389   0002E9                     U4FIFO          equ	745	;# 
  7390   0002EA                     U4UIR           equ	746	;# 
  7391   0002EB                     U4ERRIR         equ	747	;# 
  7392   0002EC                     U4ERRIE         equ	748	;# 
  7393   0002ED                     U5RXB           equ	749	;# 
  7394   0002ED                     U5RXBL          equ	749	;# 
  7395   0002EF                     U5TXB           equ	751	;# 
  7396   0002EF                     U5TXBL          equ	751	;# 
  7397   0002F1                     U5P1            equ	753	;# 
  7398   0002F1                     U5P1L           equ	753	;# 
  7399   0002F3                     U5P2            equ	755	;# 
  7400   0002F3                     U5P2L           equ	755	;# 
  7401   0002F5                     U5P3            equ	757	;# 
  7402   0002F5                     U5P3L           equ	757	;# 
  7403   0002F7                     U5CON0          equ	759	;# 
  7404   0002F8                     U5CON1          equ	760	;# 
  7405   0002F9                     U5CON2          equ	761	;# 
  7406   0002FA                     U5BRG           equ	762	;# 
  7407   0002FA                     U5BRGL          equ	762	;# 
  7408   0002FB                     U5BRGH          equ	763	;# 
  7409   0002FC                     U5FIFO          equ	764	;# 
  7410   0002FD                     U5UIR           equ	765	;# 
  7411   0002FE                     U5ERRIR         equ	766	;# 
  7412   0002FF                     U5ERRIE         equ	767	;# 
  7413   000300                     SMT1TMR         equ	768	;# 
  7414   000300                     SMT1TMRL        equ	768	;# 
  7415   000301                     SMT1TMRH        equ	769	;# 
  7416   000302                     SMT1TMRU        equ	770	;# 
  7417   000303                     SMT1CPR         equ	771	;# 
  7418   000303                     SMT1CPRL        equ	771	;# 
  7419   000304                     SMT1CPRH        equ	772	;# 
  7420   000305                     SMT1CPRU        equ	773	;# 
  7421   000306                     SMT1CPW         equ	774	;# 
  7422   000306                     SMT1CPWL        equ	774	;# 
  7423   000307                     SMT1CPWH        equ	775	;# 
  7424   000308                     SMT1CPWU        equ	776	;# 
  7425   000309                     SMT1PR          equ	777	;# 
  7426   000309                     SMT1PRL         equ	777	;# 
  7427   00030A                     SMT1PRH         equ	778	;# 
  7428   00030B                     SMT1PRU         equ	779	;# 
  7429   00030C                     SMT1CON0        equ	780	;# 
  7430   00030D                     SMT1CON1        equ	781	;# 
  7431   00030E                     SMT1STAT        equ	782	;# 
  7432   00030F                     SMT1CLK         equ	783	;# 
  7433   000310                     SMT1SIG         equ	784	;# 
  7434   000311                     SMT1WIN         equ	785	;# 
  7435   000318                     TMR0L           equ	792	;# 
  7436   000318                     TMR0            equ	792	;# 
  7437   000319                     TMR0H           equ	793	;# 
  7438   000319                     PR0             equ	793	;# 
  7439   00031A                     T0CON0          equ	794	;# 
  7440   00031B                     T0CON1          equ	795	;# 
  7441   00031C                     TMR1            equ	796	;# 
  7442   00031C                     TMR1L           equ	796	;# 
  7443   00031D                     TMR1H           equ	797	;# 
  7444   00031E                     T1CON           equ	798	;# 
  7445   00031E                     TMR1CON         equ	798	;# 
  7446   00031F                     T1GCON          equ	799	;# 
  7447   00031F                     TMR1GCON        equ	799	;# 
  7448   000320                     T1GATE          equ	800	;# 
  7449   000320                     TMR1GATE        equ	800	;# 
  7450   000321                     T1CLK           equ	801	;# 
  7451   000321                     TMR1CLK         equ	801	;# 
  7452   000321                     PR1             equ	801	;# 
  7453   000322                     T2TMR           equ	802	;# 
  7454   000322                     TMR2            equ	802	;# 
  7455   000323                     T2PR            equ	803	;# 
  7456   000323                     PR2             equ	803	;# 
  7457   000324                     T2CON           equ	804	;# 
  7458   000325                     T2HLT           equ	805	;# 
  7459   000326                     T2CLKCON        equ	806	;# 
  7460   000326                     T2CLK           equ	806	;# 
  7461   000327                     T2RST           equ	807	;# 
  7462   000328                     TMR3            equ	808	;# 
  7463   000328                     TMR3L           equ	808	;# 
  7464   000329                     TMR3H           equ	809	;# 
  7465   00032A                     T3CON           equ	810	;# 
  7466   00032A                     TMR3CON         equ	810	;# 
  7467   00032B                     T3GCON          equ	811	;# 
  7468   00032B                     TMR3GCON        equ	811	;# 
  7469   00032C                     T3GATE          equ	812	;# 
  7470   00032C                     TMR3GATE        equ	812	;# 
  7471   00032D                     T3CLK           equ	813	;# 
  7472   00032D                     TMR3CLK         equ	813	;# 
  7473   00032D                     PR3             equ	813	;# 
  7474   00032E                     T4TMR           equ	814	;# 
  7475   00032E                     TMR4            equ	814	;# 
  7476   00032F                     T4PR            equ	815	;# 
  7477   00032F                     PR4             equ	815	;# 
  7478   000330                     T4CON           equ	816	;# 
  7479   000331                     T4HLT           equ	817	;# 
  7480   000332                     T4CLKCON        equ	818	;# 
  7481   000332                     T4CLK           equ	818	;# 
  7482   000333                     T4RST           equ	819	;# 
  7483   000334                     TMR5            equ	820	;# 
  7484   000334                     TMR5L           equ	820	;# 
  7485   000335                     TMR5H           equ	821	;# 
  7486   000336                     T5CON           equ	822	;# 
  7487   000336                     TMR5CON         equ	822	;# 
  7488   000337                     T5GCON          equ	823	;# 
  7489   000337                     TMR5GCON        equ	823	;# 
  7490   000338                     T5GATE          equ	824	;# 
  7491   000338                     TMR5GATE        equ	824	;# 
  7492   000339                     T5CLK           equ	825	;# 
  7493   000339                     TMR5CLK         equ	825	;# 
  7494   000339                     PR5             equ	825	;# 
  7495   00033A                     T6TMR           equ	826	;# 
  7496   00033A                     TMR6            equ	826	;# 
  7497   00033B                     T6PR            equ	827	;# 
  7498   00033B                     PR6             equ	827	;# 
  7499   00033C                     T6CON           equ	828	;# 
  7500   00033D                     T6HLT           equ	829	;# 
  7501   00033E                     T6CLKCON        equ	830	;# 
  7502   00033E                     T6CLK           equ	830	;# 
  7503   00033F                     T6RST           equ	831	;# 
  7504   000340                     CCPR1           equ	832	;# 
  7505   000340                     CCPR1L          equ	832	;# 
  7506   000341                     CCPR1H          equ	833	;# 
  7507   000342                     CCP1CON         equ	834	;# 
  7508   000343                     CCP1CAP         equ	835	;# 
  7509   000344                     CCPR2           equ	836	;# 
  7510   000344                     CCPR2L          equ	836	;# 
  7511   000345                     CCPR2H          equ	837	;# 
  7512   000346                     CCP2CON         equ	838	;# 
  7513   000347                     CCP2CAP         equ	839	;# 
  7514   000348                     CCPR3           equ	840	;# 
  7515   000348                     CCPR3L          equ	840	;# 
  7516   000349                     CCPR3H          equ	841	;# 
  7517   00034A                     CCP3CON         equ	842	;# 
  7518   00034B                     CCP3CAP         equ	843	;# 
  7519   00034C                     CCPTMRS0        equ	844	;# 
  7520   00034F                     CRCDATA         equ	847	;# 
  7521   00034F                     CRCDATL         equ	847	;# 
  7522   000350                     CRCDATH         equ	848	;# 
  7523   000351                     CRCACC          equ	849	;# 
  7524   000351                     CRCACCL         equ	849	;# 
  7525   000352                     CRCACCH         equ	850	;# 
  7526   000353                     CRCSHFT         equ	851	;# 
  7527   000353                     CRCSHIFTL       equ	851	;# 
  7528   000354                     CRCSHIFTH       equ	852	;# 
  7529   000355                     CRCXOR          equ	853	;# 
  7530   000355                     CRCXORL         equ	853	;# 
  7531   000356                     CRCXORH         equ	854	;# 
  7532   000357                     CRCCON0         equ	855	;# 
  7533   000358                     CRCCON1         equ	856	;# 
  7534   00035A                     SCANLADR        equ	858	;# 
  7535   00035A                     SCANLADRL       equ	858	;# 
  7536   00035B                     SCANLADRH       equ	859	;# 
  7537   00035C                     SCANLADRU       equ	860	;# 
  7538   00035D                     SCANHADR        equ	861	;# 
  7539   00035D                     SCANHADRL       equ	861	;# 
  7540   00035E                     SCANHADRH       equ	862	;# 
  7541   00035F                     SCANHADRU       equ	863	;# 
  7542   000360                     SCANCON0        equ	864	;# 
  7543   000361                     SCANTRIG        equ	865	;# 
  7544   000362                     IPR0            equ	866	;# 
  7545   000363                     IPR1            equ	867	;# 
  7546   000364                     IPR2            equ	868	;# 
  7547   000365                     IPR3            equ	869	;# 
  7548   000366                     IPR4            equ	870	;# 
  7549   000367                     IPR5            equ	871	;# 
  7550   000368                     IPR6            equ	872	;# 
  7551   000369                     IPR7            equ	873	;# 
  7552   00036A                     IPR8            equ	874	;# 
  7553   00036B                     IPR9            equ	875	;# 
  7554   00036C                     IPR10           equ	876	;# 
  7555   00036D                     IPR11           equ	877	;# 
  7556   00036E                     IPR12           equ	878	;# 
  7557   00036F                     IPR13           equ	879	;# 
  7558   000370                     IPR14           equ	880	;# 
  7559   000371                     IPR15           equ	881	;# 
  7560   000373                     STATUS_CSHAD    equ	883	;# 
  7561   000374                     WREG_CSHAD      equ	884	;# 
  7562   000375                     BSR_CSHAD       equ	885	;# 
  7563   000376                     SHADCON         equ	886	;# 
  7564   000377                     STATUS_SHAD     equ	887	;# 
  7565   000378                     WREG_SHAD       equ	888	;# 
  7566   000379                     BSR_SHAD        equ	889	;# 
  7567   00037A                     PCLATH_SHAD     equ	890	;# 
  7568   00037B                     PCLATU_SHAD     equ	891	;# 
  7569   00037C                     FSR0SH          equ	892	;# 
  7570   00037C                     FSR0L_SHAD      equ	892	;# 
  7571   00037D                     FSR0H_SHAD      equ	893	;# 
  7572   00037E                     FSR1SH          equ	894	;# 
  7573   00037E                     FSR1L_SHAD      equ	894	;# 
  7574   00037F                     FSR1H_SHAD      equ	895	;# 
  7575   000380                     FSR2SH          equ	896	;# 
  7576   000380                     FSR2L_SHAD      equ	896	;# 
  7577   000381                     FSR2H_SHAD      equ	897	;# 
  7578   000382                     PRODSH          equ	898	;# 
  7579   000382                     PRODL_SHAD      equ	898	;# 
  7580   000383                     PRODH_SHAD      equ	899	;# 
  7581   0003BC                     CWG1CLK         equ	956	;# 
  7582   0003BC                     CWG1CLKCON      equ	956	;# 
  7583   0003BD                     CWG1ISM         equ	957	;# 
  7584   0003BD                     CWG1DAT         equ	957	;# 
  7585   0003BE                     CWG1DBR         equ	958	;# 
  7586   0003BF                     CWG1DBF         equ	959	;# 
  7587   0003C0                     CWG1CON0        equ	960	;# 
  7588   0003C1                     CWG1CON1        equ	961	;# 
  7589   0003C2                     CWG1AS0         equ	962	;# 
  7590   0003C3                     CWG1AS1         equ	963	;# 
  7591   0003C4                     CWG1STR         equ	964	;# 
  7592   0003C5                     CWG2CLK         equ	965	;# 
  7593   0003C5                     CWG2CLKCON      equ	965	;# 
  7594   0003C6                     CWG2ISM         equ	966	;# 
  7595   0003C6                     CWG2DAT         equ	966	;# 
  7596   0003C7                     CWG2DBR         equ	967	;# 
  7597   0003C8                     CWG2DBF         equ	968	;# 
  7598   0003C9                     CWG2CON0        equ	969	;# 
  7599   0003CA                     CWG2CON1        equ	970	;# 
  7600   0003CB                     CWG2AS0         equ	971	;# 
  7601   0003CC                     CWG2AS1         equ	972	;# 
  7602   0003CD                     CWG2STR         equ	973	;# 
  7603   0003CE                     CWG3CLK         equ	974	;# 
  7604   0003CE                     CWG3CLKCON      equ	974	;# 
  7605   0003CF                     CWG3ISM         equ	975	;# 
  7606   0003CF                     CWG3DAT         equ	975	;# 
  7607   0003D0                     CWG3DBR         equ	976	;# 
  7608   0003D1                     CWG3DBF         equ	977	;# 
  7609   0003D2                     CWG3CON0        equ	978	;# 
  7610   0003D3                     CWG3CON1        equ	979	;# 
  7611   0003D4                     CWG3AS0         equ	980	;# 
  7612   0003D5                     CWG3AS1         equ	981	;# 
  7613   0003D6                     CWG3STR         equ	982	;# 
  7614   0003D7                     FVRCON          equ	983	;# 
  7615   0003D8                     ADCPCON         equ	984	;# 
  7616   0003D8                     ADCP            equ	984	;# 
  7617   0003D9                     ADLTH           equ	985	;# 
  7618   0003D9                     ADLTHL          equ	985	;# 
  7619   0003DA                     ADLTHH          equ	986	;# 
  7620   0003DB                     ADUTH           equ	987	;# 
  7621   0003DB                     ADUTHL          equ	987	;# 
  7622   0003DC                     ADUTHH          equ	988	;# 
  7623   0003DD                     ADERR           equ	989	;# 
  7624   0003DD                     ADERRL          equ	989	;# 
  7625   0003DE                     ADERRH          equ	990	;# 
  7626   0003DF                     ADSTPT          equ	991	;# 
  7627   0003DF                     ADSTPTL         equ	991	;# 
  7628   0003E0                     ADSTPTH         equ	992	;# 
  7629   0003E1                     ADFLTR          equ	993	;# 
  7630   0003E1                     ADFLTRL         equ	993	;# 
  7631   0003E2                     ADFLTRH         equ	994	;# 
  7632   0003E3                     ADACC           equ	995	;# 
  7633   0003E3                     ADACCL          equ	995	;# 
  7634   0003E4                     ADACCH          equ	996	;# 
  7635   0003E5                     ADACCU          equ	997	;# 
  7636   0003E6                     ADCNT           equ	998	;# 
  7637   0003E7                     ADRPT           equ	999	;# 
  7638   0003E8                     ADPREV          equ	1000	;# 
  7639   0003E8                     ADPREVL         equ	1000	;# 
  7640   0003E9                     ADPREVH         equ	1001	;# 
  7641   0003EA                     ADRES           equ	1002	;# 
  7642   0003EA                     ADRESL          equ	1002	;# 
  7643   0003EB                     ADRESH          equ	1003	;# 
  7644   0003EC                     ADPCH           equ	1004	;# 
  7645   0003EE                     ADACQ           equ	1006	;# 
  7646   0003EE                     ADACQL          equ	1006	;# 
  7647   0003EF                     ADACQH          equ	1007	;# 
  7648   0003F0                     ADCAP           equ	1008	;# 
  7649   0003F1                     ADPRE           equ	1009	;# 
  7650   0003F1                     ADPREL          equ	1009	;# 
  7651   0003F2                     ADPREH          equ	1010	;# 
  7652   0003F3                     ADCON0          equ	1011	;# 
  7653   0003F4                     ADCON1          equ	1012	;# 
  7654   0003F5                     ADCON2          equ	1013	;# 
  7655   0003F6                     ADCON3          equ	1014	;# 
  7656   0003F7                     ADSTAT          equ	1015	;# 
  7657   0003F8                     ADREF           equ	1016	;# 
  7658   0003F9                     ADACT           equ	1017	;# 
  7659   0003FA                     ADCLK           equ	1018	;# 
  7660   000400                     ANSELA          equ	1024	;# 
  7661   000401                     WPUA            equ	1025	;# 
  7662   000402                     ODCONA          equ	1026	;# 
  7663   000403                     SLRCONA         equ	1027	;# 
  7664   000404                     INLVLA          equ	1028	;# 
  7665   000405                     IOCAP           equ	1029	;# 
  7666   000406                     IOCAN           equ	1030	;# 
  7667   000407                     IOCAF           equ	1031	;# 
  7668   000408                     ANSELB          equ	1032	;# 
  7669   000409                     WPUB            equ	1033	;# 
  7670   00040A                     ODCONB          equ	1034	;# 
  7671   00040B                     SLRCONB         equ	1035	;# 
  7672   00040C                     INLVLB          equ	1036	;# 
  7673   00040D                     IOCBP           equ	1037	;# 
  7674   00040E                     IOCBN           equ	1038	;# 
  7675   00040F                     IOCBF           equ	1039	;# 
  7676   000410                     ANSELC          equ	1040	;# 
  7677   000411                     WPUC            equ	1041	;# 
  7678   000412                     ODCONC          equ	1042	;# 
  7679   000413                     SLRCONC         equ	1043	;# 
  7680   000414                     INLVLC          equ	1044	;# 
  7681   000415                     IOCCP           equ	1045	;# 
  7682   000416                     IOCCN           equ	1046	;# 
  7683   000417                     IOCCF           equ	1047	;# 
  7684   000418                     ANSELD          equ	1048	;# 
  7685   000419                     WPUD            equ	1049	;# 
  7686   00041A                     ODCOND          equ	1050	;# 
  7687   00041B                     SLRCOND         equ	1051	;# 
  7688   00041C                     INLVLD          equ	1052	;# 
  7689   000420                     ANSELE          equ	1056	;# 
  7690   000421                     WPUE            equ	1057	;# 
  7691   000422                     ODCONE          equ	1058	;# 
  7692   000423                     SLRCONE         equ	1059	;# 
  7693   000424                     INLVLE          equ	1060	;# 
  7694   000425                     IOCEP           equ	1061	;# 
  7695   000426                     IOCEN           equ	1062	;# 
  7696   000427                     IOCEF           equ	1063	;# 
  7697   000428                     ANSELF          equ	1064	;# 
  7698   000429                     WPUF            equ	1065	;# 
  7699   00042A                     ODCONF          equ	1066	;# 
  7700   00042B                     SLRCONF         equ	1067	;# 
  7701   00042C                     INLVLF          equ	1068	;# 
  7702   000440                     NCO1ACC         equ	1088	;# 
  7703   000440                     NCO1ACCL        equ	1088	;# 
  7704   000441                     NCO1ACCH        equ	1089	;# 
  7705   000442                     NCO1ACCU        equ	1090	;# 
  7706   000443                     NCO1INC         equ	1091	;# 
  7707   000443                     NCO1INCL        equ	1091	;# 
  7708   000444                     NCO1INCH        equ	1092	;# 
  7709   000445                     NCO1INCU        equ	1093	;# 
  7710   000446                     NCO1CON         equ	1094	;# 
  7711   000447                     NCO1CLK         equ	1095	;# 
  7712   000448                     NCO2ACC         equ	1096	;# 
  7713   000448                     NCO2ACCL        equ	1096	;# 
  7714   000449                     NCO2ACCH        equ	1097	;# 
  7715   00044A                     NCO2ACCU        equ	1098	;# 
  7716   00044B                     NCO2INC         equ	1099	;# 
  7717   00044B                     NCO2INCL        equ	1099	;# 
  7718   00044C                     NCO2INCH        equ	1100	;# 
  7719   00044D                     NCO2INCU        equ	1101	;# 
  7720   00044E                     NCO2CON         equ	1102	;# 
  7721   00044F                     NCO2CLK         equ	1103	;# 
  7722   000450                     NCO3ACC         equ	1104	;# 
  7723   000450                     NCO3ACCL        equ	1104	;# 
  7724   000451                     NCO3ACCH        equ	1105	;# 
  7725   000452                     NCO3ACCU        equ	1106	;# 
  7726   000453                     NCO3INC         equ	1107	;# 
  7727   000453                     NCO3INCL        equ	1107	;# 
  7728   000454                     NCO3INCH        equ	1108	;# 
  7729   000455                     NCO3INCU        equ	1109	;# 
  7730   000456                     NCO3CON         equ	1110	;# 
  7731   000457                     NCO3CLK         equ	1111	;# 
  7732   000459                     IVTLOCK         equ	1113	;# 
  7733   00045A                     IVTAD           equ	1114	;# 
  7734   00045A                     IVTADL          equ	1114	;# 
  7735   00045B                     IVTADH          equ	1115	;# 
  7736   00045C                     IVTADU          equ	1116	;# 
  7737   00045D                     IVTBASE         equ	1117	;# 
  7738   00045D                     IVTBASEL        equ	1117	;# 
  7739   00045E                     IVTBASEH        equ	1118	;# 
  7740   00045F                     IVTBASEU        equ	1119	;# 
  7741   000460                     PWM1ERS         equ	1120	;# 
  7742   000461                     PWM1CLK         equ	1121	;# 
  7743   000462                     PWM1LDS         equ	1122	;# 
  7744   000463                     PWM1PR          equ	1123	;# 
  7745   000463                     PWM1PRL         equ	1123	;# 
  7746   000464                     PWM1PRH         equ	1124	;# 
  7747   000465                     PWM1CPRE        equ	1125	;# 
  7748   000466                     PWM1PIPOS       equ	1126	;# 
  7749   000467                     PWM1GIR         equ	1127	;# 
  7750   000468                     PWM1GIE         equ	1128	;# 
  7751   000469                     PWM1CON         equ	1129	;# 
  7752   00046A                     PWM1S1CFG       equ	1130	;# 
  7753   00046B                     PWM1S1P1        equ	1131	;# 
  7754   00046B                     PWM1S1P1L       equ	1131	;# 
  7755   00046C                     PWM1S1P1H       equ	1132	;# 
  7756   00046D                     PWM1S1P2        equ	1133	;# 
  7757   00046D                     PWM1S1P2L       equ	1133	;# 
  7758   00046E                     PWM1S1P2H       equ	1134	;# 
  7759   00046F                     PWM2ERS         equ	1135	;# 
  7760   000470                     PWM2CLK         equ	1136	;# 
  7761   000471                     PWM2LDS         equ	1137	;# 
  7762   000472                     PWM2PR          equ	1138	;# 
  7763   000472                     PWM2PRL         equ	1138	;# 
  7764   000473                     PWM2PRH         equ	1139	;# 
  7765   000474                     PWM2CPRE        equ	1140	;# 
  7766   000475                     PWM2PIPOS       equ	1141	;# 
  7767   000476                     PWM2GIR         equ	1142	;# 
  7768   000477                     PWM2GIE         equ	1143	;# 
  7769   000478                     PWM2CON         equ	1144	;# 
  7770   000479                     PWM2S1CFG       equ	1145	;# 
  7771   00047A                     PWM2S1P1        equ	1146	;# 
  7772   00047A                     PWM2S1P1L       equ	1146	;# 
  7773   00047B                     PWM2S1P1H       equ	1147	;# 
  7774   00047C                     PWM2S1P2        equ	1148	;# 
  7775   00047C                     PWM2S1P2L       equ	1148	;# 
  7776   00047D                     PWM2S1P2H       equ	1149	;# 
  7777   00047E                     PWM3ERS         equ	1150	;# 
  7778   00047F                     PWM3CLK         equ	1151	;# 
  7779   000480                     PWM3LDS         equ	1152	;# 
  7780   000481                     PWM3PR          equ	1153	;# 
  7781   000481                     PWM3PRL         equ	1153	;# 
  7782   000482                     PWM3PRH         equ	1154	;# 
  7783   000483                     PWM3CPRE        equ	1155	;# 
  7784   000484                     PWM3PIPOS       equ	1156	;# 
  7785   000485                     PWM3GIR         equ	1157	;# 
  7786   000486                     PWM3GIE         equ	1158	;# 
  7787   000487                     PWM3CON         equ	1159	;# 
  7788   000488                     PWM3S1CFG       equ	1160	;# 
  7789   000489                     PWM3S1P1        equ	1161	;# 
  7790   000489                     PWM3S1P1L       equ	1161	;# 
  7791   00048A                     PWM3S1P1H       equ	1162	;# 
  7792   00048B                     PWM3S1P2        equ	1163	;# 
  7793   00048B                     PWM3S1P2L       equ	1163	;# 
  7794   00048C                     PWM3S1P2H       equ	1164	;# 
  7795   00049C                     PWMLOAD         equ	1180	;# 
  7796   00049D                     PWMEN           equ	1181	;# 
  7797   00049E                     PIE0            equ	1182	;# 
  7798   00049F                     PIE1            equ	1183	;# 
  7799   0004A0                     PIE2            equ	1184	;# 
  7800   0004A1                     PIE3            equ	1185	;# 
  7801   0004A2                     PIE4            equ	1186	;# 
  7802   0004A3                     PIE5            equ	1187	;# 
  7803   0004A4                     PIE6            equ	1188	;# 
  7804   0004A5                     PIE7            equ	1189	;# 
  7805   0004A6                     PIE8            equ	1190	;# 
  7806   0004A7                     PIE9            equ	1191	;# 
  7807   0004A8                     PIE10           equ	1192	;# 
  7808   0004A9                     PIE11           equ	1193	;# 
  7809   0004AA                     PIE12           equ	1194	;# 
  7810   0004AB                     PIE13           equ	1195	;# 
  7811   0004AC                     PIE14           equ	1196	;# 
  7812   0004AD                     PIE15           equ	1197	;# 
  7813   0004AE                     PIR0            equ	1198	;# 
  7814   0004AF                     PIR1            equ	1199	;# 
  7815   0004B0                     PIR2            equ	1200	;# 
  7816   0004B1                     PIR3            equ	1201	;# 
  7817   0004B2                     PIR4            equ	1202	;# 
  7818   0004B3                     PIR5            equ	1203	;# 
  7819   0004B4                     PIR6            equ	1204	;# 
  7820   0004B5                     PIR7            equ	1205	;# 
  7821   0004B6                     PIR8            equ	1206	;# 
  7822   0004B7                     PIR9            equ	1207	;# 
  7823   0004B8                     PIR10           equ	1208	;# 
  7824   0004B9                     PIR11           equ	1209	;# 
  7825   0004BA                     PIR12           equ	1210	;# 
  7826   0004BB                     PIR13           equ	1211	;# 
  7827   0004BC                     PIR14           equ	1212	;# 
  7828   0004BD                     PIR15           equ	1213	;# 
  7829   0004BE                     LATA            equ	1214	;# 
  7830   0004BF                     LATB            equ	1215	;# 
  7831   0004C0                     LATC            equ	1216	;# 
  7832   0004C1                     LATD            equ	1217	;# 
  7833   0004C2                     LATE            equ	1218	;# 
  7834   0004C3                     LATF            equ	1219	;# 
  7835   0004C6                     TRISA           equ	1222	;# 
  7836   0004C7                     TRISB           equ	1223	;# 
  7837   0004C8                     TRISC           equ	1224	;# 
  7838   0004C9                     TRISD           equ	1225	;# 
  7839   0004CA                     TRISE           equ	1226	;# 
  7840   0004CB                     TRISF           equ	1227	;# 
  7841   0004CE                     PORTA           equ	1230	;# 
  7842   0004CF                     PORTB           equ	1231	;# 
  7843   0004D0                     PORTC           equ	1232	;# 
  7844   0004D1                     PORTD           equ	1233	;# 
  7845   0004D2                     PORTE           equ	1234	;# 
  7846   0004D3                     PORTF           equ	1235	;# 
  7847   0004D6                     INTCON0         equ	1238	;# 
  7848   0004D7                     INTCON1         equ	1239	;# 
  7849   0004D8                     STATUS          equ	1240	;# 
  7850   0004D9                     FSR2            equ	1241	;# 
  7851   0004D9                     FSR2L           equ	1241	;# 
  7852   0004DA                     FSR2H           equ	1242	;# 
  7853   0004DB                     PLUSW2          equ	1243	;# 
  7854   0004DC                     PREINC2         equ	1244	;# 
  7855   0004DD                     POSTDEC2        equ	1245	;# 
  7856   0004DE                     POSTINC2        equ	1246	;# 
  7857   0004DF                     INDF2           equ	1247	;# 
  7858   0004E0                     BSR             equ	1248	;# 
  7859   0004E1                     FSR1            equ	1249	;# 
  7860   0004E1                     FSR1L           equ	1249	;# 
  7861   0004E2                     FSR1H           equ	1250	;# 
  7862   0004E3                     PLUSW1          equ	1251	;# 
  7863   0004E4                     PREINC1         equ	1252	;# 
  7864   0004E5                     POSTDEC1        equ	1253	;# 
  7865   0004E6                     POSTINC1        equ	1254	;# 
  7866   0004E7                     INDF1           equ	1255	;# 
  7867   0004E8                     WREG            equ	1256	;# 
  7868   0004E9                     FSR0            equ	1257	;# 
  7869   0004E9                     FSR0L           equ	1257	;# 
  7870   0004EA                     FSR0H           equ	1258	;# 
  7871   0004EB                     PLUSW0          equ	1259	;# 
  7872   0004EC                     PREINC0         equ	1260	;# 
  7873   0004ED                     POSTDEC0        equ	1261	;# 
  7874   0004EE                     POSTINC0        equ	1262	;# 
  7875   0004EF                     INDF0           equ	1263	;# 
  7876   0004F0                     PCON0           equ	1264	;# 
  7877   0004F1                     PCON1           equ	1265	;# 
  7878   0004F2                     CPUDOZE         equ	1266	;# 
  7879   0004F3                     PROD            equ	1267	;# 
  7880   0004F3                     PRODL           equ	1267	;# 
  7881   0004F4                     PRODH           equ	1268	;# 
  7882   0004F5                     TABLAT          equ	1269	;# 
  7883   0004F6                     TBLPTR          equ	1270	;# 
  7884   0004F6                     TBLPTRL         equ	1270	;# 
  7885   0004F7                     TBLPTRH         equ	1271	;# 
  7886   0004F8                     TBLPTRU         equ	1272	;# 
  7887   0004F9                     PCLAT           equ	1273	;# 
  7888   0004F9                     PCL             equ	1273	;# 
  7889   0004FA                     PCLATH          equ	1274	;# 
  7890   0004FB                     PCLATU          equ	1275	;# 
  7891   0004FC                     STKPTR          equ	1276	;# 
  7892   0004FD                     TOS             equ	1277	;# 
  7893   0004FD                     TOSL            equ	1277	;# 
  7894   0004FE                     TOSH            equ	1278	;# 
  7895   0004FF                     TOSU            equ	1279	;# 
  7896                           
  7897 ;; Function _SPI1_Deinitialize is unused but had its address taken
  7898   000000                     _SPI1_Deinitialize equ	0
  7899                           
  7900 ;; Function _SPI1_Close is unused but had its address taken
  7901   000000                     _SPI1_Close     equ	0
  7902                           
  7903 ;; Function _SPI1_BufferExchange is unused but had its address taken
  7904   000000                     _SPI1_BufferExchange equ	0
  7905                           
  7906 ;; Function _SPI1_BufferWrite is unused but had its address taken
  7907   000000                     _SPI1_BufferWrite equ	0
  7908                           
  7909 ;; Function _SPI1_BufferRead is unused but had its address taken
  7910   000000                     _SPI1_BufferRead equ	0
  7911                           
  7912 ;; Function _SPI1_ByteWrite is unused but had its address taken
  7913   000000                     _SPI1_ByteWrite equ	0
  7914                           
  7915 ;; Function _SPI1_ByteRead is unused but had its address taken
  7916   000000                     _SPI1_ByteRead  equ	0
  7917                           
  7918 ;; Function _SPI1_IsTxReady is unused but had its address taken
  7919   000000                     _SPI1_IsTxReady equ	0
  7920                           
  7921 ;; Function _SPI1_IsRxReady is unused but had its address taken
  7922   000000                     _SPI1_IsRxReady equ	0
  7923                           
  7924 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
  7925   000000                     _INT1_DefaultInterruptHandler equ	0
  7926                           
  7927 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
  7928   000000                     _INT2_DefaultInterruptHandler equ	0
  7929                           
  7930 ;; Function _TMR0_Initialize is unused but had its address taken
  7931   000000                     _TMR0_Initialize equ	0
  7932                           
  7933 ;; Function _TMR0_Start is unused but had its address taken
  7934   000000                     _TMR0_Start     equ	0
  7935                           
  7936 ;; Function _TMR0_Stop is unused but had its address taken
  7937   000000                     _TMR0_Stop      equ	0
  7938                           
  7939 ;; Function _TMR0_Reload is unused but had its address taken
  7940   000000                     _TMR0_Reload    equ	0
  7941                           
  7942 ;; Function _TMR0_OverflowCallbackRegister is unused but had its address taken
  7943   000000                     _TMR0_OverflowCallbackRegister equ	0
  7944                           
  7945                           	psect	idataBANK6
  7946   012708                     __pidataBANK6:
  7947                           	callstack 0
  7948                           
  7949                           ;initializer for _rf24_datarates
  7950   012708  31                 	db	49
  7951   012709  4D                 	db	77
  7952   01270A  62                 	db	98
  7953   01270B  70                 	db	112
  7954   01270C  73                 	db	115
  7955   01270D  00                 	db	0
  7956   01270E  00                 	db	0
  7957   01270F  00                 	db	0
  7958   012710  32                 	db	50
  7959   012711  4D                 	db	77
  7960   012712  62                 	db	98
  7961   012713  70                 	db	112
  7962   012714  73                 	db	115
  7963   012715  00                 	db	0
  7964   012716  00                 	db	0
  7965   012717  00                 	db	0
  7966   012718  32                 	db	50
  7967   012719  35                 	db	53
  7968   01271A  30                 	db	48
  7969   01271B  4B                 	db	75
  7970   01271C  62                 	db	98
  7971   01271D  70                 	db	112
  7972   01271E  73                 	db	115
  7973   01271F  00                 	db	0
  7974                           
  7975                           	psect	idataBANK8
  7976   012656                     __pidataBANK8:
  7977                           	callstack 0
  7978                           
  7979                           ;initializer for main@F17924
  7980   012656  77                 	db	119
  7981   012657  61                 	db	97
  7982   012658  73                 	db	115
  7983   012659  73                 	db	115
  7984   01265A  75                 	db	117
  7985   01265B  70                 	db	112
  7986   01265C  00                 	db	0
  7987   01265D  00                 	db	0
  7988   01265E  00                 	db	0
  7989   01265F  00                 	db	0
  7990   012660  00                 	db	0
  7991   012661  00                 	db	0
  7992   012662  00                 	db	0
  7993   012663  00                 	db	0
  7994   012664  00                 	db	0
  7995   012665  00                 	db	0
  7996   012666  00                 	db	0
  7997   012667  00                 	db	0
  7998   012668  00                 	db	0
  7999   012669  00                 	db	0
  8000   01266A  00                 	db	0
  8001   01266B  00                 	db	0
  8002   01266C  00                 	db	0
  8003   01266D  00                 	db	0
  8004   01266E  00                 	db	0
  8005   01266F  00                 	db	0
  8006   012670  00                 	db	0
  8007   012671  00                 	db	0
  8008   012672  00                 	db	0
  8009   012673  00                 	db	0
  8010   012674  00                 	db	0
  8011   012675  00                 	db	0
  8012                           
  8013                           	psect	idataBANK9
  8014   012676                     __pidataBANK9:
  8015                           	callstack 0
  8016                           
  8017                           ;initializer for _rf24_pa_dbm
  8018   012676  50                 	db	80
  8019   012677  41                 	db	65
  8020   012678  5F                 	db	95
  8021   012679  4D                 	db	77
  8022   01267A  49                 	db	73
  8023   01267B  4E                 	db	78
  8024   01267C  00                 	db	0
  8025   01267D  00                 	db	0
  8026   01267E  50                 	db	80
  8027   01267F  41                 	db	65
  8028   012680  5F                 	db	95
  8029   012681  4C                 	db	76
  8030   012682  4F                 	db	79
  8031   012683  57                 	db	87
  8032   012684  00                 	db	0
  8033   012685  00                 	db	0
  8034   012686  50                 	db	80
  8035   012687  41                 	db	65
  8036   012688  5F                 	db	95
  8037   012689  48                 	db	72
  8038   01268A  49                 	db	73
  8039   01268B  47                 	db	71
  8040   01268C  48                 	db	72
  8041   01268D  00                 	db	0
  8042   01268E  50                 	db	80
  8043   01268F  41                 	db	65
  8044   012690  5F                 	db	95
  8045   012691  4D                 	db	77
  8046   012692  41                 	db	65
  8047   012693  58                 	db	88
  8048   012694  00                 	db	0
  8049   012695  00                 	db	0
  8050                           
  8051                           	psect	idataBANK11
  8052   0114D0                     __pidataBANK11:
  8053                           	callstack 0
  8054                           
  8055                           ;initializer for main@F17918
  8056   0114D0  01                 	db	1
  8057   0114D1  01                 	db	1
  8058   0114D2  01                 	db	1
  8059   0114D3  01                 	db	1
  8060   0114D4  01                 	db	1
  8061   0114D5  01                 	db	1
  8062   0114D6  01                 	db	1
  8063   0114D7  01                 	db	1
  8064   0114D8  01                 	db	1
  8065   0114D9  01                 	db	1
  8066   0114DA  01                 	db	1
  8067   0114DB  01                 	db	1
  8068   0114DC  01                 	db	1
  8069   0114DD  01                 	db	1
  8070   0114DE  01                 	db	1
  8071   0114DF  01                 	db	1
  8072   0114E0  01                 	db	1
  8073   0114E1  01                 	db	1
  8074   0114E2  01                 	db	1
  8075   0114E3  01                 	db	1
  8076   0114E4  01                 	db	1
  8077   0114E5  01                 	db	1
  8078   0114E6  01                 	db	1
  8079   0114E7  01                 	db	1
  8080   0114E8  01                 	db	1
  8081   0114E9  01                 	db	1
  8082   0114EA  01                 	db	1
  8083   0114EB  01                 	db	1
  8084   0114EC  01                 	db	1
  8085   0114ED  01                 	db	1
  8086   0114EE  01                 	db	1
  8087   0114EF  01                 	db	1
  8088   0114F0  01                 	db	1
  8089   0114F1  01                 	db	1
  8090   0114F2  01                 	db	1
  8091   0114F3  01                 	db	1
  8092   0114F4  01                 	db	1
  8093   0114F5  01                 	db	1
  8094   0114F6  01                 	db	1
  8095   0114F7  01                 	db	1
  8096   0114F8  01                 	db	1
  8097   0114F9  01                 	db	1
  8098   0114FA  01                 	db	1
  8099   0114FB  01                 	db	1
  8100   0114FC  01                 	db	1
  8101   0114FD  01                 	db	1
  8102   0114FE  01                 	db	1
  8103   0114FF  01                 	db	1
  8104   011500  01                 	db	1
  8105   011501  01                 	db	1
  8106   011502  01                 	db	1
  8107   011503  01                 	db	1
  8108   011504  01                 	db	1
  8109   011505  01                 	db	1
  8110   011506  01                 	db	1
  8111   011507  01                 	db	1
  8112   011508  01                 	db	1
  8113   011509  01                 	db	1
  8114   01150A  01                 	db	1
  8115   01150B  01                 	db	1
  8116   01150C  01                 	db	1
  8117   01150D  01                 	db	1
  8118   01150E  01                 	db	1
  8119   01150F  01                 	db	1
  8120   011510  01                 	db	1
  8121   011511  01                 	db	1
  8122   011512  01                 	db	1
  8123   011513  01                 	db	1
  8124   011514  01                 	db	1
  8125   011515  01                 	db	1
  8126   011516  01                 	db	1
  8127   011517  01                 	db	1
  8128   011518  01                 	db	1
  8129   011519  01                 	db	1
  8130   01151A  01                 	db	1
  8131   01151B  01                 	db	1
  8132   01151C  01                 	db	1
  8133   01151D  01                 	db	1
  8134   01151E  01                 	db	1
  8135   01151F  01                 	db	1
  8136   011520  01                 	db	1
  8137   011521  01                 	db	1
  8138   011522  01                 	db	1
  8139   011523  01                 	db	1
  8140   011524  01                 	db	1
  8141   011525  01                 	db	1
  8142   011526  01                 	db	1
  8143   011527  01                 	db	1
  8144   011528  01                 	db	1
  8145   011529  01                 	db	1
  8146   01152A  01                 	db	1
  8147   01152B  01                 	db	1
  8148   01152C  01                 	db	1
  8149   01152D  01                 	db	1
  8150   01152E  01                 	db	1
  8151   01152F  01                 	db	1
  8152   011530  01                 	db	1
  8153   011531  01                 	db	1
  8154   011532  01                 	db	1
  8155   011533  01                 	db	1
  8156   011534  01                 	db	1
  8157   011535  01                 	db	1
  8158   011536  01                 	db	1
  8159   011537  01                 	db	1
  8160   011538  01                 	db	1
  8161   011539  01                 	db	1
  8162   01153A  01                 	db	1
  8163   01153B  01                 	db	1
  8164   01153C  01                 	db	1
  8165   01153D  01                 	db	1
  8166   01153E  01                 	db	1
  8167   01153F  01                 	db	1
  8168   011540  01                 	db	1
  8169   011541  01                 	db	1
  8170   011542  01                 	db	1
  8171   011543  01                 	db	1
  8172   011544  01                 	db	1
  8173   011545  01                 	db	1
  8174   011546  01                 	db	1
  8175   011547  01                 	db	1
  8176   011548  01                 	db	1
  8177   011549  01                 	db	1
  8178   01154A  01                 	db	1
  8179   01154B  01                 	db	1
  8180   01154C  01                 	db	1
  8181   01154D  01                 	db	1
  8182   01154E  01                 	db	1
  8183   01154F  01                 	db	1
  8184   011550  01                 	db	1
  8185   011551  01                 	db	1
  8186   011552  01                 	db	1
  8187   011553  01                 	db	1
  8188   011554  01                 	db	1
  8189   011555  01                 	db	1
  8190   011556  01                 	db	1
  8191   011557  01                 	db	1
  8192   011558  01                 	db	1
  8193   011559  01                 	db	1
  8194   01155A  01                 	db	1
  8195   01155B  01                 	db	1
  8196   01155C  01                 	db	1
  8197   01155D  01                 	db	1
  8198   01155E  01                 	db	1
  8199   01155F  01                 	db	1
  8200   011560  01                 	db	1
  8201   011561  01                 	db	1
  8202   011562  01                 	db	1
  8203   011563  01                 	db	1
  8204   011564  01                 	db	1
  8205   011565  01                 	db	1
  8206   011566  01                 	db	1
  8207   011567  01                 	db	1
  8208   011568  01                 	db	1
  8209   011569  01                 	db	1
  8210   01156A  01                 	db	1
  8211   01156B  01                 	db	1
  8212   01156C  01                 	db	1
  8213   01156D  01                 	db	1
  8214   01156E  01                 	db	1
  8215   01156F  01                 	db	1
  8216   011570  01                 	db	1
  8217   011571  01                 	db	1
  8218   011572  01                 	db	1
  8219   011573  01                 	db	1
  8220   011574  01                 	db	1
  8221   011575  01                 	db	1
  8222   011576  01                 	db	1
  8223   011577  01                 	db	1
  8224   011578  01                 	db	1
  8225   011579  01                 	db	1
  8226   01157A  01                 	db	1
  8227   01157B  01                 	db	1
  8228   01157C  01                 	db	1
  8229   01157D  01                 	db	1
  8230   01157E  01                 	db	1
  8231   01157F  01                 	db	1
  8232   011580  01                 	db	1
  8233   011581  01                 	db	1
  8234   011582  01                 	db	1
  8235   011583  01                 	db	1
  8236   011584  01                 	db	1
  8237   011585  01                 	db	1
  8238   011586  01                 	db	1
  8239   011587  01                 	db	1
  8240   011588  01                 	db	1
  8241   011589  01                 	db	1
  8242   01158A  01                 	db	1
  8243   01158B  01                 	db	1
  8244   01158C  01                 	db	1
  8245   01158D  01                 	db	1
  8246   01158E  01                 	db	1
  8247   01158F  01                 	db	1
  8248   011590  01                 	db	1
  8249   011591  01                 	db	1
  8250   011592  01                 	db	1
  8251   011593  01                 	db	1
  8252   011594  01                 	db	1
  8253   011595  01                 	db	1
  8254   011596  01                 	db	1
  8255   011597  01                 	db	1
  8256                           
  8257                           	psect	idataBANK12
  8258   011598                     __pidataBANK12:
  8259                           	callstack 0
  8260                           
  8261                           ;initializer for main@F17920
  8262   011598  02                 	db	2
  8263   011599  02                 	db	2
  8264   01159A  02                 	db	2
  8265   01159B  02                 	db	2
  8266   01159C  02                 	db	2
  8267   01159D  02                 	db	2
  8268   01159E  02                 	db	2
  8269   01159F  02                 	db	2
  8270   0115A0  02                 	db	2
  8271   0115A1  02                 	db	2
  8272   0115A2  02                 	db	2
  8273   0115A3  02                 	db	2
  8274   0115A4  02                 	db	2
  8275   0115A5  02                 	db	2
  8276   0115A6  02                 	db	2
  8277   0115A7  02                 	db	2
  8278   0115A8  02                 	db	2
  8279   0115A9  02                 	db	2
  8280   0115AA  02                 	db	2
  8281   0115AB  02                 	db	2
  8282   0115AC  02                 	db	2
  8283   0115AD  02                 	db	2
  8284   0115AE  02                 	db	2
  8285   0115AF  02                 	db	2
  8286   0115B0  02                 	db	2
  8287   0115B1  02                 	db	2
  8288   0115B2  02                 	db	2
  8289   0115B3  02                 	db	2
  8290   0115B4  02                 	db	2
  8291   0115B5  02                 	db	2
  8292   0115B6  02                 	db	2
  8293   0115B7  02                 	db	2
  8294   0115B8  02                 	db	2
  8295   0115B9  02                 	db	2
  8296   0115BA  02                 	db	2
  8297   0115BB  02                 	db	2
  8298   0115BC  02                 	db	2
  8299   0115BD  02                 	db	2
  8300   0115BE  02                 	db	2
  8301   0115BF  02                 	db	2
  8302   0115C0  02                 	db	2
  8303   0115C1  02                 	db	2
  8304   0115C2  02                 	db	2
  8305   0115C3  02                 	db	2
  8306   0115C4  02                 	db	2
  8307   0115C5  02                 	db	2
  8308   0115C6  02                 	db	2
  8309   0115C7  02                 	db	2
  8310   0115C8  02                 	db	2
  8311   0115C9  02                 	db	2
  8312   0115CA  02                 	db	2
  8313   0115CB  02                 	db	2
  8314   0115CC  02                 	db	2
  8315   0115CD  02                 	db	2
  8316   0115CE  02                 	db	2
  8317   0115CF  02                 	db	2
  8318   0115D0  02                 	db	2
  8319   0115D1  02                 	db	2
  8320   0115D2  02                 	db	2
  8321   0115D3  02                 	db	2
  8322   0115D4  02                 	db	2
  8323   0115D5  02                 	db	2
  8324   0115D6  02                 	db	2
  8325   0115D7  02                 	db	2
  8326   0115D8  02                 	db	2
  8327   0115D9  02                 	db	2
  8328   0115DA  02                 	db	2
  8329   0115DB  02                 	db	2
  8330   0115DC  02                 	db	2
  8331   0115DD  02                 	db	2
  8332   0115DE  02                 	db	2
  8333   0115DF  02                 	db	2
  8334   0115E0  02                 	db	2
  8335   0115E1  02                 	db	2
  8336   0115E2  02                 	db	2
  8337   0115E3  02                 	db	2
  8338   0115E4  02                 	db	2
  8339   0115E5  02                 	db	2
  8340   0115E6  02                 	db	2
  8341   0115E7  02                 	db	2
  8342   0115E8  02                 	db	2
  8343   0115E9  02                 	db	2
  8344   0115EA  02                 	db	2
  8345   0115EB  02                 	db	2
  8346   0115EC  02                 	db	2
  8347   0115ED  02                 	db	2
  8348   0115EE  02                 	db	2
  8349   0115EF  02                 	db	2
  8350   0115F0  02                 	db	2
  8351   0115F1  02                 	db	2
  8352   0115F2  02                 	db	2
  8353   0115F3  02                 	db	2
  8354   0115F4  02                 	db	2
  8355   0115F5  02                 	db	2
  8356   0115F6  02                 	db	2
  8357   0115F7  02                 	db	2
  8358   0115F8  02                 	db	2
  8359   0115F9  02                 	db	2
  8360   0115FA  02                 	db	2
  8361   0115FB  02                 	db	2
  8362   0115FC  02                 	db	2
  8363   0115FD  02                 	db	2
  8364   0115FE  02                 	db	2
  8365   0115FF  02                 	db	2
  8366   011600  02                 	db	2
  8367   011601  02                 	db	2
  8368   011602  02                 	db	2
  8369   011603  02                 	db	2
  8370   011604  02                 	db	2
  8371   011605  02                 	db	2
  8372   011606  02                 	db	2
  8373   011607  02                 	db	2
  8374   011608  02                 	db	2
  8375   011609  02                 	db	2
  8376   01160A  02                 	db	2
  8377   01160B  02                 	db	2
  8378   01160C  02                 	db	2
  8379   01160D  02                 	db	2
  8380   01160E  02                 	db	2
  8381   01160F  02                 	db	2
  8382   011610  02                 	db	2
  8383   011611  02                 	db	2
  8384   011612  02                 	db	2
  8385   011613  02                 	db	2
  8386   011614  02                 	db	2
  8387   011615  02                 	db	2
  8388   011616  02                 	db	2
  8389   011617  02                 	db	2
  8390   011618  02                 	db	2
  8391   011619  02                 	db	2
  8392   01161A  02                 	db	2
  8393   01161B  02                 	db	2
  8394   01161C  02                 	db	2
  8395   01161D  02                 	db	2
  8396   01161E  02                 	db	2
  8397   01161F  02                 	db	2
  8398   011620  02                 	db	2
  8399   011621  02                 	db	2
  8400   011622  02                 	db	2
  8401   011623  02                 	db	2
  8402   011624  02                 	db	2
  8403   011625  02                 	db	2
  8404   011626  02                 	db	2
  8405   011627  02                 	db	2
  8406   011628  02                 	db	2
  8407   011629  02                 	db	2
  8408   01162A  02                 	db	2
  8409   01162B  02                 	db	2
  8410   01162C  02                 	db	2
  8411   01162D  02                 	db	2
  8412   01162E  02                 	db	2
  8413   01162F  02                 	db	2
  8414   011630  02                 	db	2
  8415   011631  02                 	db	2
  8416   011632  02                 	db	2
  8417   011633  02                 	db	2
  8418   011634  02                 	db	2
  8419   011635  02                 	db	2
  8420   011636  02                 	db	2
  8421   011637  02                 	db	2
  8422   011638  02                 	db	2
  8423   011639  02                 	db	2
  8424   01163A  02                 	db	2
  8425   01163B  02                 	db	2
  8426   01163C  02                 	db	2
  8427   01163D  02                 	db	2
  8428   01163E  02                 	db	2
  8429   01163F  02                 	db	2
  8430   011640  02                 	db	2
  8431   011641  02                 	db	2
  8432   011642  02                 	db	2
  8433   011643  02                 	db	2
  8434   011644  02                 	db	2
  8435   011645  02                 	db	2
  8436   011646  02                 	db	2
  8437   011647  02                 	db	2
  8438   011648  02                 	db	2
  8439   011649  02                 	db	2
  8440   01164A  02                 	db	2
  8441   01164B  02                 	db	2
  8442   01164C  02                 	db	2
  8443   01164D  02                 	db	2
  8444   01164E  02                 	db	2
  8445   01164F  02                 	db	2
  8446   011650  02                 	db	2
  8447   011651  02                 	db	2
  8448   011652  02                 	db	2
  8449   011653  02                 	db	2
  8450   011654  02                 	db	2
  8451   011655  02                 	db	2
  8452   011656  02                 	db	2
  8453   011657  02                 	db	2
  8454   011658  02                 	db	2
  8455   011659  02                 	db	2
  8456   01165A  02                 	db	2
  8457   01165B  02                 	db	2
  8458   01165C  02                 	db	2
  8459   01165D  02                 	db	2
  8460   01165E  02                 	db	2
  8461   01165F  02                 	db	2
  8462                           
  8463                           	psect	idataBANK13
  8464   011660                     __pidataBANK13:
  8465                           	callstack 0
  8466                           
  8467                           ;initializer for main@F17922
  8468   011660  03                 	db	3
  8469   011661  03                 	db	3
  8470   011662  03                 	db	3
  8471   011663  03                 	db	3
  8472   011664  03                 	db	3
  8473   011665  03                 	db	3
  8474   011666  03                 	db	3
  8475   011667  03                 	db	3
  8476   011668  03                 	db	3
  8477   011669  03                 	db	3
  8478   01166A  03                 	db	3
  8479   01166B  03                 	db	3
  8480   01166C  03                 	db	3
  8481   01166D  03                 	db	3
  8482   01166E  03                 	db	3
  8483   01166F  03                 	db	3
  8484   011670  03                 	db	3
  8485   011671  03                 	db	3
  8486   011672  03                 	db	3
  8487   011673  03                 	db	3
  8488   011674  03                 	db	3
  8489   011675  03                 	db	3
  8490   011676  03                 	db	3
  8491   011677  03                 	db	3
  8492   011678  03                 	db	3
  8493   011679  03                 	db	3
  8494   01167A  03                 	db	3
  8495   01167B  03                 	db	3
  8496   01167C  03                 	db	3
  8497   01167D  03                 	db	3
  8498   01167E  03                 	db	3
  8499   01167F  03                 	db	3
  8500   011680  03                 	db	3
  8501   011681  03                 	db	3
  8502   011682  03                 	db	3
  8503   011683  03                 	db	3
  8504   011684  03                 	db	3
  8505   011685  03                 	db	3
  8506   011686  03                 	db	3
  8507   011687  03                 	db	3
  8508   011688  03                 	db	3
  8509   011689  03                 	db	3
  8510   01168A  03                 	db	3
  8511   01168B  03                 	db	3
  8512   01168C  03                 	db	3
  8513   01168D  03                 	db	3
  8514   01168E  03                 	db	3
  8515   01168F  03                 	db	3
  8516   011690  03                 	db	3
  8517   011691  03                 	db	3
  8518   011692  03                 	db	3
  8519   011693  03                 	db	3
  8520   011694  03                 	db	3
  8521   011695  03                 	db	3
  8522   011696  03                 	db	3
  8523   011697  03                 	db	3
  8524   011698  03                 	db	3
  8525   011699  03                 	db	3
  8526   01169A  03                 	db	3
  8527   01169B  03                 	db	3
  8528   01169C  03                 	db	3
  8529   01169D  03                 	db	3
  8530   01169E  03                 	db	3
  8531   01169F  03                 	db	3
  8532   0116A0  03                 	db	3
  8533   0116A1  03                 	db	3
  8534   0116A2  03                 	db	3
  8535   0116A3  03                 	db	3
  8536   0116A4  03                 	db	3
  8537   0116A5  03                 	db	3
  8538   0116A6  03                 	db	3
  8539   0116A7  03                 	db	3
  8540   0116A8  03                 	db	3
  8541   0116A9  03                 	db	3
  8542   0116AA  03                 	db	3
  8543   0116AB  03                 	db	3
  8544   0116AC  03                 	db	3
  8545   0116AD  03                 	db	3
  8546   0116AE  03                 	db	3
  8547   0116AF  03                 	db	3
  8548   0116B0  03                 	db	3
  8549   0116B1  03                 	db	3
  8550   0116B2  03                 	db	3
  8551   0116B3  03                 	db	3
  8552   0116B4  03                 	db	3
  8553   0116B5  03                 	db	3
  8554   0116B6  03                 	db	3
  8555   0116B7  03                 	db	3
  8556   0116B8  03                 	db	3
  8557   0116B9  03                 	db	3
  8558   0116BA  03                 	db	3
  8559   0116BB  03                 	db	3
  8560   0116BC  03                 	db	3
  8561   0116BD  03                 	db	3
  8562   0116BE  03                 	db	3
  8563   0116BF  03                 	db	3
  8564   0116C0  03                 	db	3
  8565   0116C1  03                 	db	3
  8566   0116C2  03                 	db	3
  8567   0116C3  03                 	db	3
  8568   0116C4  03                 	db	3
  8569   0116C5  03                 	db	3
  8570   0116C6  03                 	db	3
  8571   0116C7  03                 	db	3
  8572   0116C8  03                 	db	3
  8573   0116C9  03                 	db	3
  8574   0116CA  03                 	db	3
  8575   0116CB  03                 	db	3
  8576   0116CC  03                 	db	3
  8577   0116CD  03                 	db	3
  8578   0116CE  03                 	db	3
  8579   0116CF  03                 	db	3
  8580   0116D0  03                 	db	3
  8581   0116D1  03                 	db	3
  8582   0116D2  03                 	db	3
  8583   0116D3  03                 	db	3
  8584   0116D4  03                 	db	3
  8585   0116D5  03                 	db	3
  8586   0116D6  03                 	db	3
  8587   0116D7  03                 	db	3
  8588   0116D8  03                 	db	3
  8589   0116D9  03                 	db	3
  8590   0116DA  03                 	db	3
  8591   0116DB  03                 	db	3
  8592   0116DC  03                 	db	3
  8593   0116DD  03                 	db	3
  8594   0116DE  03                 	db	3
  8595   0116DF  03                 	db	3
  8596   0116E0  03                 	db	3
  8597   0116E1  03                 	db	3
  8598   0116E2  03                 	db	3
  8599   0116E3  03                 	db	3
  8600   0116E4  03                 	db	3
  8601   0116E5  03                 	db	3
  8602   0116E6  03                 	db	3
  8603   0116E7  03                 	db	3
  8604   0116E8  03                 	db	3
  8605   0116E9  03                 	db	3
  8606   0116EA  03                 	db	3
  8607   0116EB  03                 	db	3
  8608   0116EC  03                 	db	3
  8609   0116ED  03                 	db	3
  8610   0116EE  03                 	db	3
  8611   0116EF  03                 	db	3
  8612   0116F0  03                 	db	3
  8613   0116F1  03                 	db	3
  8614   0116F2  03                 	db	3
  8615   0116F3  03                 	db	3
  8616   0116F4  03                 	db	3
  8617   0116F5  03                 	db	3
  8618   0116F6  03                 	db	3
  8619   0116F7  03                 	db	3
  8620   0116F8  03                 	db	3
  8621   0116F9  03                 	db	3
  8622   0116FA  03                 	db	3
  8623   0116FB  03                 	db	3
  8624   0116FC  03                 	db	3
  8625   0116FD  03                 	db	3
  8626   0116FE  03                 	db	3
  8627   0116FF  03                 	db	3
  8628   011700  03                 	db	3
  8629   011701  03                 	db	3
  8630   011702  03                 	db	3
  8631   011703  03                 	db	3
  8632   011704  03                 	db	3
  8633   011705  03                 	db	3
  8634   011706  03                 	db	3
  8635   011707  03                 	db	3
  8636   011708  03                 	db	3
  8637   011709  03                 	db	3
  8638   01170A  03                 	db	3
  8639   01170B  03                 	db	3
  8640   01170C  03                 	db	3
  8641   01170D  03                 	db	3
  8642   01170E  03                 	db	3
  8643   01170F  03                 	db	3
  8644   011710  03                 	db	3
  8645   011711  03                 	db	3
  8646   011712  03                 	db	3
  8647   011713  03                 	db	3
  8648   011714  03                 	db	3
  8649   011715  03                 	db	3
  8650   011716  03                 	db	3
  8651   011717  03                 	db	3
  8652   011718  03                 	db	3
  8653   011719  03                 	db	3
  8654   01171A  03                 	db	3
  8655   01171B  03                 	db	3
  8656   01171C  03                 	db	3
  8657   01171D  03                 	db	3
  8658   01171E  03                 	db	3
  8659   01171F  03                 	db	3
  8660   011720  03                 	db	3
  8661   011721  03                 	db	3
  8662   011722  03                 	db	3
  8663   011723  03                 	db	3
  8664   011724  03                 	db	3
  8665   011725  03                 	db	3
  8666   011726  03                 	db	3
  8667   011727  03                 	db	3
  8668                           
  8669                           	psect	mediumconst
  8670   00FE52                     __pmediumconst:
  8671                           	callstack 0
  8672   00FE52  00                 	db	0
  8673   00FE53                     _SPI1_nrf24:
  8674                           	callstack 0
  8675   00FE53  20                 	db	low _SPI1_Initialize
  8676   00FE54  27                 	db	high _SPI1_Initialize
  8677   00FE55  01                 	db	low (_SPI1_Initialize shr (0+16))
  8678   00FE56  00                 	db	0
  8679   00FE57  00                 	db	0
  8680   00FE58  00                 	db	0
  8681   00FE59  62                 	db	low _SPI1_Open
  8682   00FE5A  12                 	db	high _SPI1_Open
  8683   00FE5B  01                 	db	low (_SPI1_Open shr (0+16))
  8684   00FE5C  00                 	db	0
  8685   00FE5D  00                 	db	0
  8686   00FE5E  00                 	db	0
  8687   00FE5F  00                 	db	0
  8688   00FE60  00                 	db	0
  8689   00FE61  00                 	db	0
  8690   00FE62  00                 	db	0
  8691   00FE63  00                 	db	0
  8692   00FE64  00                 	db	0
  8693   00FE65  00                 	db	0
  8694   00FE66  00                 	db	0
  8695   00FE67  00                 	db	0
  8696   00FE68  92                 	db	low _SPI1_ByteExchange
  8697   00FE69  22                 	db	high _SPI1_ByteExchange
  8698   00FE6A  01                 	db	low (_SPI1_ByteExchange shr (0+16))
  8699   00FE6B  00                 	db	0
  8700   00FE6C  00                 	db	0
  8701   00FE6D  00                 	db	0
  8702   00FE6E  00                 	db	0
  8703   00FE6F  00                 	db	0
  8704   00FE70  00                 	db	0
  8705   00FE71  00                 	db	0
  8706   00FE72  00                 	db	0
  8707   00FE73  00                 	db	0
  8708   00FE74  00                 	db	0
  8709   00FE75  00                 	db	0
  8710   00FE76  00                 	db	0
  8711   00FE77  00                 	db	0
  8712   00FE78  00                 	db	0
  8713   00FE79  00                 	db	0
  8714   00FE7A  00                 	db	0
  8715   00FE7B  00                 	db	0
  8716   00FE7C  00                 	db	0
  8717   00FE7D                     __end_of_SPI1_nrf24:
  8718                           	callstack 0
  8719   00FE7D                     _Timer0:
  8720                           	callstack 0
  8721   00FE7D  00                 	db	0
  8722   00FE7E  00                 	db	0
  8723   00FE7F  00                 	db	0
  8724   00FE80  00                 	db	0
  8725   00FE81  00                 	db	0
  8726   00FE82  00                 	db	0
  8727   00FE83  00                 	db	0
  8728   00FE84  00                 	db	0
  8729   00FE85  00                 	db	0
  8730   00FE86  00                 	db	0
  8731   00FE87  00                 	db	0
  8732   00FE88  00                 	db	0
  8733   00FE89  00                 	db	0
  8734   00FE8A  00                 	db	0
  8735   00FE8B  00                 	db	0
  8736   00FE8C  00                 	db	0
  8737   00FE8D  00                 	db	0
  8738   00FE8E  00                 	db	0
  8739   00FE8F                     __end_of_Timer0:
  8740                           	callstack 0
  8741   00FE8F                     _spi1_configuration:
  8742                           	callstack 0
  8743   00FE8F  02                 	db	2
  8744   00FE90  40                 	db	64
  8745   00FE91  00                 	db	0
  8746   00FE92  4F                 	db	79
  8747   00FE93  00                 	db	0
  8748   00FE94  02                 	db	2
  8749   00FE95  40                 	db	64
  8750   00FE96  00                 	db	0
  8751   00FE97  00                 	db	0
  8752   00FE98  00                 	db	0
  8753   00FE99                     __end_of_spi1_configuration:
  8754                           	callstack 0
  8755   00FE99                     _rf24_crclength:
  8756                           	callstack 0
  8757   00FE99  44                 	db	68
  8758   00FE9A  69                 	db	105
  8759   00FE9B  73                 	db	115
  8760   00FE9C  61                 	db	97
  8761   00FE9D  62                 	db	98
  8762   00FE9E  6C                 	db	108
  8763   00FE9F  65                 	db	101
  8764   00FEA0  64                 	db	100
  8765   00FEA1  00                 	db	0
  8766   00FEA2  00                 	db	0
  8767   00FEA3  38                 	db	56
  8768   00FEA4  20                 	db	32
  8769   00FEA5  62                 	db	98
  8770   00FEA6  69                 	db	105
  8771   00FEA7  74                 	db	116
  8772   00FEA8  73                 	db	115
  8773   00FEA9  00                 	db	0
  8774   00FEAA  00                 	db	0
  8775   00FEAB  00                 	db	0
  8776   00FEAC  00                 	db	0
  8777   00FEAD  31                 	db	49
  8778   00FEAE  36                 	db	54
  8779   00FEAF  20                 	db	32
  8780   00FEB0  62                 	db	98
  8781   00FEB1  69                 	db	105
  8782   00FEB2  74                 	db	116
  8783   00FEB3  73                 	db	115
  8784   00FEB4  00                 	db	0
  8785   00FEB5  00                 	db	0
  8786   00FEB6  00                 	db	0
  8787   00FEB7                     __end_of_rf24_crclength:
  8788                           	callstack 0
  8789   00FEB7                     STR_18:
  8790   00FEB7  53                 	db	83	;'S'
  8791   00FEB8  54                 	db	84	;'T'
  8792   00FEB9  41                 	db	65	;'A'
  8793   00FEBA  54                 	db	84	;'T'
  8794   00FEBB  55                 	db	85	;'U'
  8795   00FEBC  53                 	db	83	;'S'
  8796   00FEBD  09                 	db	9
  8797   00FEBE  09                 	db	9
  8798   00FEBF  20                 	db	32
  8799   00FEC0  3D                 	db	61	;'='
  8800   00FEC1  20                 	db	32
  8801   00FEC2  30                 	db	48	;'0'
  8802   00FEC3  78                 	db	120	;'x'
  8803   00FEC4  25                 	db	37
  8804   00FEC5  30                 	db	48	;'0'
  8805   00FEC6  32                 	db	50	;'2'
  8806   00FEC7  78                 	db	120	;'x'
  8807   00FEC8  20                 	db	32
  8808   00FEC9  52                 	db	82	;'R'
  8809   00FECA  58                 	db	88	;'X'
  8810   00FECB  5F                 	db	95	;'_'
  8811   00FECC  44                 	db	68	;'D'
  8812   00FECD  52                 	db	82	;'R'
  8813   00FECE  3D                 	db	61	;'='
  8814   00FECF  25                 	db	37
  8815   00FED0  78                 	db	120	;'x'
  8816   00FED1  20                 	db	32
  8817   00FED2  54                 	db	84	;'T'
  8818   00FED3  58                 	db	88	;'X'
  8819   00FED4  5F                 	db	95	;'_'
  8820   00FED5  44                 	db	68	;'D'
  8821   00FED6  53                 	db	83	;'S'
  8822   00FED7  3D                 	db	61	;'='
  8823   00FED8  25                 	db	37
  8824   00FED9  78                 	db	120	;'x'
  8825   00FEDA  20                 	db	32
  8826   00FEDB  4D                 	db	77	;'M'
  8827   00FEDC  41                 	db	65	;'A'
  8828   00FEDD  58                 	db	88	;'X'
  8829   00FEDE  5F                 	db	95	;'_'
  8830   00FEDF  52                 	db	82	;'R'
  8831   00FEE0  54                 	db	84	;'T'
  8832   00FEE1  3D                 	db	61	;'='
  8833   00FEE2  25                 	db	37
  8834   00FEE3  78                 	db	120	;'x'
  8835   00FEE4  20                 	db	32
  8836   00FEE5  52                 	db	82	;'R'
  8837   00FEE6  58                 	db	88	;'X'
  8838   00FEE7  5F                 	db	95	;'_'
  8839   00FEE8  50                 	db	80	;'P'
  8840   00FEE9  5F                 	db	95	;'_'
  8841   00FEEA  4E                 	db	78	;'N'
  8842   00FEEB  4F                 	db	79	;'O'
  8843   00FEEC  3D                 	db	61	;'='
  8844   00FEED  25                 	db	37
  8845   00FEEE  78                 	db	120	;'x'
  8846   00FEEF  20                 	db	32
  8847   00FEF0  54                 	db	84	;'T'
  8848   00FEF1  58                 	db	88	;'X'
  8849   00FEF2  5F                 	db	95	;'_'
  8850   00FEF3  46                 	db	70	;'F'
  8851   00FEF4  55                 	db	85	;'U'
  8852   00FEF5  4C                 	db	76	;'L'
  8853   00FEF6  4C                 	db	76	;'L'
  8854   00FEF7  3D                 	db	61	;'='
  8855   00FEF8  25                 	db	37
  8856   00FEF9  78                 	db	120	;'x'
  8857   00FEFA  0D                 	db	13
  8858   00FEFB  0A                 	db	10
  8859   00FEFC  00                 	db	0
  8860   00FEFD                     STR_3:
  8861   00FEFD  3D                 	db	61	;'='
  8862   00FEFE  3D                 	db	61	;'='
  8863   00FEFF  3D                 	db	61	;'='
  8864   00FF00  3D                 	db	61	;'='
  8865   00FF01  3D                 	db	61	;'='
  8866   00FF02  3D                 	db	61	;'='
  8867   00FF03  3D                 	db	61	;'='
  8868   00FF04  3D                 	db	61	;'='
  8869   00FF05  3D                 	db	61	;'='
  8870   00FF06  3D                 	db	61	;'='
  8871   00FF07  3D                 	db	61	;'='
  8872   00FF08  3D                 	db	61	;'='
  8873   00FF09  3D                 	db	61	;'='
  8874   00FF0A  3D                 	db	61	;'='
  8875   00FF0B  3D                 	db	61	;'='
  8876   00FF0C  3D                 	db	61	;'='
  8877   00FF0D  20                 	db	32
  8878   00FF0E  4E                 	db	78	;'N'
  8879   00FF0F  52                 	db	82	;'R'
  8880   00FF10  46                 	db	70	;'F'
  8881   00FF11  20                 	db	32
  8882   00FF12  43                 	db	67	;'C'
  8883   00FF13  6F                 	db	111	;'o'
  8884   00FF14  6E                 	db	110	;'n'
  8885   00FF15  66                 	db	102	;'f'
  8886   00FF16  69                 	db	105	;'i'
  8887   00FF17  67                 	db	103	;'g'
  8888   00FF18  75                 	db	117	;'u'
  8889   00FF19  72                 	db	114	;'r'
  8890   00FF1A  61                 	db	97	;'a'
  8891   00FF1B  74                 	db	116	;'t'
  8892   00FF1C  69                 	db	105	;'i'
  8893   00FF1D  6F                 	db	111	;'o'
  8894   00FF1E  6E                 	db	110	;'n'
  8895   00FF1F  20                 	db	32
  8896   00FF20  3D                 	db	61	;'='
  8897   00FF21  3D                 	db	61	;'='
  8898   00FF22  3D                 	db	61	;'='
  8899   00FF23  3D                 	db	61	;'='
  8900   00FF24  3D                 	db	61	;'='
  8901   00FF25  3D                 	db	61	;'='
  8902   00FF26  3D                 	db	61	;'='
  8903   00FF27  3D                 	db	61	;'='
  8904   00FF28  3D                 	db	61	;'='
  8905   00FF29  3D                 	db	61	;'='
  8906   00FF2A  3D                 	db	61	;'='
  8907   00FF2B  3D                 	db	61	;'='
  8908   00FF2C  3D                 	db	61	;'='
  8909   00FF2D  3D                 	db	61	;'='
  8910   00FF2E  3D                 	db	61	;'='
  8911   00FF2F  3D                 	db	61	;'='
  8912   00FF30  0A                 	db	10
  8913   00FF31  00                 	db	0
  8914   00FF32                     STR_17:
  8915   00FF32  52                 	db	82	;'R'
  8916   00FF33  65                 	db	101	;'e'
  8917   00FF34  74                 	db	116	;'t'
  8918   00FF35  72                 	db	114	;'r'
  8919   00FF36  61                 	db	97	;'a'
  8920   00FF37  6E                 	db	110	;'n'
  8921   00FF38  73                 	db	115	;'s'
  8922   00FF39  6D                 	db	109	;'m'
  8923   00FF3A  69                 	db	105	;'i'
  8924   00FF3B  74                 	db	116	;'t'
  8925   00FF3C  09                 	db	9
  8926   00FF3D  20                 	db	32
  8927   00FF3E  3D                 	db	61	;'='
  8928   00FF3F  20                 	db	32
  8929   00FF40  25                 	db	37
  8930   00FF41  64                 	db	100	;'d'
  8931   00FF42  20                 	db	32
  8932   00FF43  75                 	db	117	;'u'
  8933   00FF44  73                 	db	115	;'s'
  8934   00FF45  0A                 	db	10
  8935   00FF46  00                 	db	0
  8936   00FF47                     STR_15:
  8937   00FF47  43                 	db	67	;'C'
  8938   00FF48  52                 	db	82	;'R'
  8939   00FF49  43                 	db	67	;'C'
  8940   00FF4A  20                 	db	32
  8941   00FF4B  4C                 	db	76	;'L'
  8942   00FF4C  65                 	db	101	;'e'
  8943   00FF4D  6E                 	db	110	;'n'
  8944   00FF4E  67                 	db	103	;'g'
  8945   00FF4F  74                 	db	116	;'t'
  8946   00FF50  68                 	db	104	;'h'
  8947   00FF51  09                 	db	9
  8948   00FF52  20                 	db	32
  8949   00FF53  3D                 	db	61	;'='
  8950   00FF54  20                 	db	32
  8951   00FF55  25                 	db	37
  8952   00FF56  73                 	db	115	;'s'
  8953   00FF57  0A                 	db	10
  8954   00FF58  00                 	db	0
  8955   00FF59                     STR_14:
  8956   00FF59  44                 	db	68	;'D'
  8957   00FF5A  61                 	db	97	;'a'
  8958   00FF5B  74                 	db	116	;'t'
  8959   00FF5C  61                 	db	97	;'a'
  8960   00FF5D  20                 	db	32
  8961   00FF5E  52                 	db	82	;'R'
  8962   00FF5F  61                 	db	97	;'a'
  8963   00FF60  74                 	db	116	;'t'
  8964   00FF61  65                 	db	101	;'e'
  8965   00FF62  09                 	db	9
  8966   00FF63  20                 	db	32
  8967   00FF64  3D                 	db	61	;'='
  8968   00FF65  20                 	db	32
  8969   00FF66  25                 	db	37
  8970   00FF67  73                 	db	115	;'s'
  8971   00FF68  0A                 	db	10
  8972   00FF69  00                 	db	0
  8973   00FF6A                     STR_16:
  8974   00FF6A  50                 	db	80	;'P'
  8975   00FF6B  41                 	db	65	;'A'
  8976   00FF6C  20                 	db	32
  8977   00FF6D  50                 	db	80	;'P'
  8978   00FF6E  6F                 	db	111	;'o'
  8979   00FF6F  77                 	db	119	;'w'
  8980   00FF70  65                 	db	101	;'e'
  8981   00FF71  72                 	db	114	;'r'
  8982   00FF72  09                 	db	9
  8983   00FF73  20                 	db	32
  8984   00FF74  3D                 	db	61	;'='
  8985   00FF75  20                 	db	32
  8986   00FF76  25                 	db	37
  8987   00FF77  73                 	db	115	;'s'
  8988   00FF78  0A                 	db	10
  8989   00FF79  00                 	db	0
  8990   00FF7A                     STR_13:
  8991   00FF7A  44                 	db	68	;'D'
  8992   00FF7B  59                 	db	89	;'Y'
  8993   00FF7C  4E                 	db	78	;'N'
  8994   00FF7D  50                 	db	80	;'P'
  8995   00FF7E  44                 	db	68	;'D'
  8996   00FF7F  2F                 	db	47
  8997   00FF80  46                 	db	70	;'F'
  8998   00FF81  45                 	db	69	;'E'
  8999   00FF82  41                 	db	65	;'A'
  9000   00FF83  54                 	db	84	;'T'
  9001   00FF84  55                 	db	85	;'U'
  9002   00FF85  52                 	db	82	;'R'
  9003   00FF86  45                 	db	69	;'E'
  9004   00FF87  00                 	db	0
  9005   00FF88                     STR_4:
  9006   00FF88  52                 	db	82	;'R'
  9007   00FF89  58                 	db	88	;'X'
  9008   00FF8A  5F                 	db	95	;'_'
  9009   00FF8B  41                 	db	65	;'A'
  9010   00FF8C  44                 	db	68	;'D'
  9011   00FF8D  44                 	db	68	;'D'
  9012   00FF8E  52                 	db	82	;'R'
  9013   00FF8F  5F                 	db	95	;'_'
  9014   00FF90  50                 	db	80	;'P'
  9015   00FF91  30                 	db	48	;'0'
  9016   00FF92  2D                 	db	45
  9017   00FF93  31                 	db	49	;'1'
  9018   00FF94  00                 	db	0
  9019   00FF95                     STR_5:
  9020   00FF95  52                 	db	82	;'R'
  9021   00FF96  58                 	db	88	;'X'
  9022   00FF97  5F                 	db	95	;'_'
  9023   00FF98  41                 	db	65	;'A'
  9024   00FF99  44                 	db	68	;'D'
  9025   00FF9A  44                 	db	68	;'D'
  9026   00FF9B  52                 	db	82	;'R'
  9027   00FF9C  5F                 	db	95	;'_'
  9028   00FF9D  50                 	db	80	;'P'
  9029   00FF9E  32                 	db	50	;'2'
  9030   00FF9F  2D                 	db	45
  9031   00FFA0  35                 	db	53	;'5'
  9032   00FFA1  00                 	db	0
  9033   00FFA2                     STR_7:
  9034   00FFA2  52                 	db	82	;'R'
  9035   00FFA3  58                 	db	88	;'X'
  9036   00FFA4  5F                 	db	95	;'_'
  9037   00FFA5  50                 	db	80	;'P'
  9038   00FFA6  57                 	db	87	;'W'
  9039   00FFA7  5F                 	db	95	;'_'
  9040   00FFA8  50                 	db	80	;'P'
  9041   00FFA9  30                 	db	48	;'0'
  9042   00FFAA  2D                 	db	45
  9043   00FFAB  36                 	db	54	;'6'
  9044   00FFAC  00                 	db	0
  9045   00FFAD                     STR_9:
  9046   00FFAD  45                 	db	69	;'E'
  9047   00FFAE  4E                 	db	78	;'N'
  9048   00FFAF  5F                 	db	95	;'_'
  9049   00FFB0  52                 	db	82	;'R'
  9050   00FFB1  58                 	db	88	;'X'
  9051   00FFB2  41                 	db	65	;'A'
  9052   00FFB3  44                 	db	68	;'D'
  9053   00FFB4  44                 	db	68	;'D'
  9054   00FFB5  52                 	db	82	;'R'
  9055   00FFB6  00                 	db	0
  9056   00FFB7                     STR_6:
  9057   00FFB7  54                 	db	84	;'T'
  9058   00FFB8  58                 	db	88	;'X'
  9059   00FFB9  5F                 	db	95	;'_'
  9060   00FFBA  41                 	db	65	;'A'
  9061   00FFBB  44                 	db	68	;'D'
  9062   00FFBC  44                 	db	68	;'D'
  9063   00FFBD  52                 	db	82	;'R'
  9064   00FFBE  09                 	db	9
  9065   00FFBF  00                 	db	0
  9066   00FFC0                     STR_11:
  9067   00FFC0  52                 	db	82	;'R'
  9068   00FFC1  46                 	db	70	;'F'
  9069   00FFC2  5F                 	db	95	;'_'
  9070   00FFC3  53                 	db	83	;'S'
  9071   00FFC4  45                 	db	69	;'E'
  9072   00FFC5  54                 	db	84	;'T'
  9073   00FFC6  55                 	db	85	;'U'
  9074   00FFC7  50                 	db	80	;'P'
  9075   00FFC8  00                 	db	0
  9076   00FFC9                     STR_12:
  9077   00FFC9  43                 	db	67	;'C'
  9078   00FFCA  4F                 	db	79	;'O'
  9079   00FFCB  4E                 	db	78	;'N'
  9080   00FFCC  46                 	db	70	;'F'
  9081   00FFCD  49                 	db	73	;'I'
  9082   00FFCE  47                 	db	71	;'G'
  9083   00FFCF  09                 	db	9
  9084   00FFD0  00                 	db	0
  9085   00FFD1                     STR_24:
  9086   00FFD1  20                 	db	32
  9087   00FFD2  30                 	db	48	;'0'
  9088   00FFD3  78                 	db	120	;'x'
  9089   00FFD4  25                 	db	37
  9090   00FFD5  30                 	db	48	;'0'
  9091   00FFD6  32                 	db	50	;'2'
  9092   00FFD7  78                 	db	120	;'x'
  9093   00FFD8  00                 	db	0
  9094   00FFD9                     STR_26:
  9095   00FFD9  28                 	db	40
  9096   00FFDA  6E                 	db	110	;'n'
  9097   00FFDB  75                 	db	117	;'u'
  9098   00FFDC  6C                 	db	108	;'l'
  9099   00FFDD  6C                 	db	108	;'l'
  9100   00FFDE  29                 	db	41
  9101   00FFDF  00                 	db	0
  9102   00FFE0                     STR_8:
  9103   00FFE0  45                 	db	69	;'E'
  9104   00FFE1  4E                 	db	78	;'N'
  9105   00FFE2  5F                 	db	95	;'_'
  9106   00FFE3  41                 	db	65	;'A'
  9107   00FFE4  41                 	db	65	;'A'
  9108   00FFE5  09                 	db	9
  9109   00FFE6  00                 	db	0
  9110   00FFE7                     STR_10:
  9111   00FFE7  52                 	db	82	;'R'
  9112   00FFE8  46                 	db	70	;'F'
  9113   00FFE9  5F                 	db	95	;'_'
  9114   00FFEA  43                 	db	67	;'C'
  9115   00FFEB  48                 	db	72	;'H'
  9116   00FFEC  09                 	db	9
  9117   00FFED  00                 	db	0
  9118   00FFEE                     STR_19:
  9119   00FFEE  25                 	db	37
  9120   00FFEF  73                 	db	115	;'s'
  9121   00FFF0  09                 	db	9
  9122   00FFF1  20                 	db	32
  9123   00FFF2  3D                 	db	61	;'='
  9124   00FFF3  00                 	db	0
  9125   00FFF4                     STR_1:
  9126   00FFF4  47                 	db	71	;'G'
  9127   00FFF5  41                 	db	65	;'A'
  9128   00FFF6  4D                 	db	77	;'M'
  9129   00FFF7  45                 	db	69	;'E'
  9130   00FFF8  34                 	db	52	;'4'
  9131   00FFF9  00                 	db	0
  9132   00FFFA                     STR_20:
  9133   00FFFA  20                 	db	32
  9134   00FFFB  30                 	db	48	;'0'
  9135   00FFFC  78                 	db	120	;'x'
  9136   00FFFD  00                 	db	0
  9137   00FFD4                     STR_21          equ	STR_24+3
  9138   00FFEE                     STR_23          equ	STR_19
  9139   00FFF4                     STR_2           equ	STR_1
  9140   00FEFA                     STR_22          equ	STR_18+67
  9141   00FEFA                     STR_25          equ	STR_18+67
  9142   00FFFE  00                 	db	0	; dummy byte at the end
  9143   000003                     __activetblptr  equ	3
  9144                           
  9145                           	psect	nvCOMRAM
  9146   000542                     __pnvCOMRAM:
  9147                           	callstack 0
  9148   000542                     _INT2_InterruptHandler:
  9149                           	callstack 0
  9150   000542                     	ds	3
  9151   000545                     _INT1_InterruptHandler:
  9152                           	callstack 0
  9153   000545                     	ds	3
  9154   000548                     _RC6_InterruptHandler:
  9155                           	callstack 0
  9156   000548                     	ds	3
  9157   0000AC                     _ACTCON         set	172
  9158   0000B0                     _OSCTUNE        set	176
  9159   0000B1                     _OSCFRQ         set	177
  9160   0000B3                     _OSCEN          set	179
  9161   0000AF                     _OSCCON3        set	175
  9162   0000AD                     _OSCCON1        set	173
  9163   000080                     _SPI1RXB        set	128
  9164   000081                     _SPI1TXB        set	129
  9165   000082                     _SPI1TCNTL      set	130
  9166   000083                     _SPI1TCNTH      set	131
  9167   00008A                     _SPI1INTFbits   set	138
  9168   000084                     _SPI1CON0bits   set	132
  9169   000087                     _SPI1STATUSbits set	135
  9170   00008C                     _SPI1CLK        set	140
  9171   000089                     _SPI1BAUD       set	137
  9172   000086                     _SPI1CON2       set	134
  9173   000085                     _SPI1CON1       set	133
  9174   000084                     _SPI1CON0       set	132
  9175   000214                     _RC3PPS         set	532
  9176   00026A                     _SPI1SCKPPS     set	618
  9177   000215                     _RC4PPS         set	533
  9178   00026B                     _SPI1SDIPPS     set	619
  9179   000286                     _RC4I2C         set	646
  9180   000287                     _RC3I2C         set	647
  9181   000288                     _RB2I2C         set	648
  9182   000289                     _RB1I2C         set	649
  9183   00031A                     _T0CON0bits     set	794
  9184   00031A                     _T0CON0         set	794
  9185   00031B                     _T0CON1         set	795
  9186   000318                     _TMR0L          set	792
  9187   000319                     _TMR0H          set	793
  9188   000416                     _IOCCNbits      set	1046
  9189   000417                     _IOCCFbits      set	1047
  9190   000427                     _IOCEF          set	1063
  9191   000426                     _IOCEN          set	1062
  9192   000425                     _IOCEP          set	1061
  9193   000417                     _IOCCF          set	1047
  9194   000416                     _IOCCN          set	1046
  9195   000415                     _IOCCP          set	1045
  9196   00040F                     _IOCBF          set	1039
  9197   00040E                     _IOCBN          set	1038
  9198   00040D                     _IOCBP          set	1037
  9199   000407                     _IOCAF          set	1031
  9200   000406                     _IOCAN          set	1030
  9201   000405                     _IOCAP          set	1029
  9202   00042C                     _INLVLF         set	1068
  9203   000424                     _INLVLE         set	1060
  9204   00041C                     _INLVLD         set	1052
  9205   000414                     _INLVLC         set	1044
  9206   00040C                     _INLVLB         set	1036
  9207   000404                     _INLVLA         set	1028
  9208   00042B                     _SLRCONF        set	1067
  9209   000423                     _SLRCONE        set	1059
  9210   00041B                     _SLRCOND        set	1051
  9211   000413                     _SLRCONC        set	1043
  9212   00040B                     _SLRCONB        set	1035
  9213   000403                     _SLRCONA        set	1027
  9214   000429                     _WPUF           set	1065
  9215   000421                     _WPUE           set	1057
  9216   000419                     _WPUD           set	1049
  9217   000411                     _WPUC           set	1041
  9218   000409                     _WPUB           set	1033
  9219   000401                     _WPUA           set	1025
  9220   000428                     _ANSELF         set	1064
  9221   000420                     _ANSELE         set	1056
  9222   000418                     _ANSELD         set	1048
  9223   000410                     _ANSELC         set	1040
  9224   000408                     _ANSELB         set	1032
  9225   000400                     _ANSELA         set	1024
  9226   00042A                     _ODCONF         set	1066
  9227   000422                     _ODCONE         set	1058
  9228   00041A                     _ODCOND         set	1050
  9229   000412                     _ODCONC         set	1042
  9230   00040A                     _ODCONB         set	1034
  9231   000402                     _ODCONA         set	1026
  9232   0004C0                     _LATCbits       set	1216
  9233   0004BE                     _LATAbits       set	1214
  9234   0004AE                     _PIR0bits       set	1198
  9235   00049E                     _PIE0bits       set	1182
  9236   0004B8                     _PIR10bits      set	1208
  9237   0004B4                     _PIR6bits       set	1204
  9238   00049F                     _PIE1bits       set	1183
  9239   0004AF                     _PIR1bits       set	1199
  9240   0004D6                     _INTCON0bits    set	1238
  9241   0004CB                     _TRISF          set	1227
  9242   0004CA                     _TRISE          set	1226
  9243   0004C9                     _TRISD          set	1225
  9244   0004C8                     _TRISC          set	1224
  9245   0004C7                     _TRISB          set	1223
  9246   0004C6                     _TRISA          set	1222
  9247   0004C3                     _LATF           set	1219
  9248   0004C2                     _LATE           set	1218
  9249   0004C1                     _LATD           set	1217
  9250   0004C0                     _LATC           set	1216
  9251   0004BF                     _LATB           set	1215
  9252   0004BE                     _LATA           set	1214
  9253   0004B1                     _PIR3bits       set	1201
  9254   0004C8                     _TRISCbits      set	1224
  9255   0004A1                     _PIE3bits       set	1185
  9256                           
  9257                           ; #config settings
  9258                           
  9259                           	psect	cinit
  9260   010E48                     __pcinit:
  9261                           	callstack 0
  9262   010E48                     start_initialization:
  9263                           	callstack 0
  9264   010E48                     __initialization:
  9265                           	callstack 0
  9266                           
  9267                           ; Initialize objects allocated to BANK13 (200 bytes)
  9268                           ; load TBLPTR registers with __pidataBANK13
  9269   010E48  0E60               	movlw	low __pidataBANK13
  9270   010E4A  6EF6               	movwf	tblptrl,c
  9271   010E4C  0E16               	movlw	high __pidataBANK13
  9272   010E4E  6EF7               	movwf	tblptrh,c
  9273   010E50  0E01               	movlw	low (__pidataBANK13 shr (0+16))
  9274   010E52  6EF8               	movwf	tblptru,c
  9275   010E54  EE03  F100         	lfsr	0,__pdataBANK13
  9276   010E58  EE10 F0C8          	lfsr	1,200
  9277   010E5C                     copy_data0:
  9278   010E5C  0009               	tblrd		*+
  9279   010E5E  C4F5 F4EE          	movff	tablat,postinc0
  9280   010E62  50E5               	movf	postdec1,w,c
  9281   010E64  50E1               	movf	fsr1l,w,c
  9282   010E66  E1FA               	bnz	copy_data0
  9283                           
  9284                           ; Initialize objects allocated to BANK12 (200 bytes)
  9285                           ; load TBLPTR registers with __pidataBANK12
  9286   010E68  0E98               	movlw	low __pidataBANK12
  9287   010E6A  6EF6               	movwf	tblptrl,c
  9288   010E6C  0E15               	movlw	high __pidataBANK12
  9289   010E6E  6EF7               	movwf	tblptrh,c
  9290   010E70  0E01               	movlw	low (__pidataBANK12 shr (0+16))
  9291   010E72  6EF8               	movwf	tblptru,c
  9292   010E74  EE03  F000         	lfsr	0,__pdataBANK12
  9293   010E78  EE10 F0C8          	lfsr	1,200
  9294   010E7C                     copy_data1:
  9295   010E7C  0009               	tblrd		*+
  9296   010E7E  C4F5 F4EE          	movff	tablat,postinc0
  9297   010E82  50E5               	movf	postdec1,w,c
  9298   010E84  50E1               	movf	fsr1l,w,c
  9299   010E86  E1FA               	bnz	copy_data1
  9300                           
  9301                           ; Initialize objects allocated to BANK11 (200 bytes)
  9302                           ; load TBLPTR registers with __pidataBANK11
  9303   010E88  0ED0               	movlw	low __pidataBANK11
  9304   010E8A  6EF6               	movwf	tblptrl,c
  9305   010E8C  0E14               	movlw	high __pidataBANK11
  9306   010E8E  6EF7               	movwf	tblptrh,c
  9307   010E90  0E01               	movlw	low (__pidataBANK11 shr (0+16))
  9308   010E92  6EF8               	movwf	tblptru,c
  9309   010E94  EE02  F300         	lfsr	0,__pdataBANK11
  9310   010E98  EE10 F0C8          	lfsr	1,200
  9311   010E9C                     copy_data2:
  9312   010E9C  0009               	tblrd		*+
  9313   010E9E  C4F5 F4EE          	movff	tablat,postinc0
  9314   010EA2  50E5               	movf	postdec1,w,c
  9315   010EA4  50E1               	movf	fsr1l,w,c
  9316   010EA6  E1FA               	bnz	copy_data2
  9317                           
  9318                           ; Initialize objects allocated to BANK9 (32 bytes)
  9319                           ; load TBLPTR registers with __pidataBANK9
  9320   010EA8  0E76               	movlw	low __pidataBANK9
  9321   010EAA  6EF6               	movwf	tblptrl,c
  9322   010EAC  0E26               	movlw	high __pidataBANK9
  9323   010EAE  6EF7               	movwf	tblptrh,c
  9324   010EB0  0E01               	movlw	low (__pidataBANK9 shr (0+16))
  9325   010EB2  6EF8               	movwf	tblptru,c
  9326   010EB4  EE02  F1C8         	lfsr	0,__pdataBANK9
  9327   010EB8  EE10 F020          	lfsr	1,32
  9328   010EBC                     copy_data3:
  9329   010EBC  0009               	tblrd		*+
  9330   010EBE  C4F5 F4EE          	movff	tablat,postinc0
  9331   010EC2  50E5               	movf	postdec1,w,c
  9332   010EC4  50E1               	movf	fsr1l,w,c
  9333   010EC6  E1FA               	bnz	copy_data3
  9334                           
  9335                           ; Initialize objects allocated to BANK8 (32 bytes)
  9336                           ; load TBLPTR registers with __pidataBANK8
  9337   010EC8  0E56               	movlw	low __pidataBANK8
  9338   010ECA  6EF6               	movwf	tblptrl,c
  9339   010ECC  0E26               	movlw	high __pidataBANK8
  9340   010ECE  6EF7               	movwf	tblptrh,c
  9341   010ED0  0E01               	movlw	low (__pidataBANK8 shr (0+16))
  9342   010ED2  6EF8               	movwf	tblptru,c
  9343   010ED4  EE02  F0C8         	lfsr	0,__pdataBANK8
  9344   010ED8  EE10 F020          	lfsr	1,32
  9345   010EDC                     copy_data4:
  9346   010EDC  0009               	tblrd		*+
  9347   010EDE  C4F5 F4EE          	movff	tablat,postinc0
  9348   010EE2  50E5               	movf	postdec1,w,c
  9349   010EE4  50E1               	movf	fsr1l,w,c
  9350   010EE6  E1FA               	bnz	copy_data4
  9351                           
  9352                           ; Initialize objects allocated to BANK6 (24 bytes)
  9353                           ; load TBLPTR registers with __pidataBANK6
  9354   010EE8  0E08               	movlw	low __pidataBANK6
  9355   010EEA  6EF6               	movwf	tblptrl,c
  9356   010EEC  0E27               	movlw	high __pidataBANK6
  9357   010EEE  6EF7               	movwf	tblptrh,c
  9358   010EF0  0E01               	movlw	low (__pidataBANK6 shr (0+16))
  9359   010EF2  6EF8               	movwf	tblptru,c
  9360   010EF4  EE01  F2E8         	lfsr	0,__pdataBANK6
  9361   010EF8  EE10 F018          	lfsr	1,24
  9362   010EFC                     copy_data5:
  9363   010EFC  0009               	tblrd		*+
  9364   010EFE  C4F5 F4EE          	movff	tablat,postinc0
  9365   010F02  50E5               	movf	postdec1,w,c
  9366   010F04  50E1               	movf	fsr1l,w,c
  9367   010F06  E1FA               	bnz	copy_data5
  9368                           
  9369                           ; Clear objects allocated to BANK14 (200 bytes)
  9370   010F08  EE03  F200         	lfsr	0,__pbssBANK14
  9371   010F0C  0EC8               	movlw	200
  9372   010F0E                     clear_0:
  9373   010F0E  6AEE               	clrf	postinc0,c
  9374   010F10  06E8               	decf	wreg,f,c
  9375   010F12  E1FD               	bnz	clear_0
  9376                           
  9377                           ; Clear objects allocated to BANK10 (200 bytes)
  9378   010F14  EE02  F200         	lfsr	0,__pbssBANK10
  9379   010F18  0EC8               	movlw	200
  9380   010F1A                     clear_1:
  9381   010F1A  6AEE               	clrf	postinc0,c
  9382   010F1C  06E8               	decf	wreg,f,c
  9383   010F1E  E1FD               	bnz	clear_1
  9384                           
  9385                           ; Clear objects allocated to BANK7 (32 bytes)
  9386   010F20  EE01  F3C8         	lfsr	0,__pbssBANK7
  9387   010F24  0E20               	movlw	32
  9388   010F26                     clear_2:
  9389   010F26  6AEE               	clrf	postinc0,c
  9390   010F28  06E8               	decf	wreg,f,c
  9391   010F2A  E1FD               	bnz	clear_2
  9392                           
  9393                           ; Clear objects allocated to BANK5 (5 bytes)
  9394   010F2C  0105               	movlb	5
  9395   010F2E  6BEA               	clrf	(__pbssBANK5+4)& (0+255),b
  9396   010F30  6BE9               	clrf	(__pbssBANK5+3)& (0+255),b
  9397   010F32  6BE8               	clrf	(__pbssBANK5+2)& (0+255),b
  9398   010F34  6BE7               	clrf	(__pbssBANK5+1)& (0+255),b
  9399   010F36  6BE6               	clrf	__pbssBANK5& (0+255),b
  9400                           
  9401                           ; Clear objects allocated to COMRAM (11 bytes)
  9402   010F38  EE01  F137         	lfsr	0,__pbssCOMRAM
  9403   010F3C  0E0B               	movlw	11
  9404   010F3E                     clear_3:
  9405   010F3E  6AEE               	clrf	postinc0,c
  9406   010F40  06E8               	decf	wreg,f,c
  9407   010F42  E1FD               	bnz	clear_3
  9408                           
  9409                           ;
  9410                           ; Setup IVTBASE
  9411                           ;
  9412   00045D                     IVTBASEL        equ	1117
  9413   00045E                     IVTBASEH        equ	1118
  9414   00045F                     IVTBASEU        equ	1119
  9415   010F44  0104               	movlb	4
  9416   010F46  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  9417   010F48  6F5D               	movwf	93,b
  9418   010F4A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  9419   010F4C  6F5E               	movwf	94,b
  9420   010F4E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  9421   010F50  6F5F               	movwf	95,b
  9422   010F52                     end_of_initialization:
  9423                           	callstack 0
  9424   010F52                     __end_of__initialization:
  9425                           	callstack 0
  9426   010F52  0100               	movlb	0
  9427   010F54  EF53  F08E         	goto	_main	;jump to C main() function
  9428                           
  9429                           	psect	bssCOMRAM
  9430   000537                     __pbssCOMRAM:
  9431                           	callstack 0
  9432   000537                     _TMR0_OverflowCallback:
  9433                           	callstack 0
  9434   000537                     	ds	3
  9435   00053A                     _INT0_InterruptHandler:
  9436                           	callstack 0
  9437   00053A                     	ds	3
  9438   00053D                     _received_index:
  9439                           	callstack 0
  9440   00053D                     	ds	2
  9441   00053F                     _dev:
  9442                           	callstack 0
  9443   00053F                     	ds	3
  9444                           
  9445                           	psect	bssBANK5
  9446   0005E6                     __pbssBANK5:
  9447                           	callstack 0
  9448   0005E6                     _width:
  9449                           	callstack 0
  9450   0005E6                     	ds	2
  9451   0005E8                     _prec:
  9452                           	callstack 0
  9453   0005E8                     	ds	2
  9454   0005EA                     _flags:
  9455                           	callstack 0
  9456   0005EA                     	ds	1
  9457                           
  9458                           	psect	dataBANK6
  9459   0006E8                     __pdataBANK6:
  9460                           	callstack 0
  9461   0006E8                     _rf24_datarates:
  9462                           	callstack 0
  9463   0006E8                     	ds	24
  9464                           
  9465                           	psect	bssBANK7
  9466   0007C8                     __pbssBANK7:
  9467                           	callstack 0
  9468   0007C8                     _dbuf:
  9469                           	callstack 0
  9470   0007C8                     	ds	32
  9471                           
  9472                           	psect	dataBANK8
  9473   0008C8                     __pdataBANK8:
  9474                           	callstack 0
  9475   0008C8                     main@F17924:
  9476                           	callstack 0
  9477   0008C8                     	ds	32
  9478                           
  9479                           	psect	dataBANK9
  9480   0009C8                     __pdataBANK9:
  9481                           	callstack 0
  9482   0009C8                     _rf24_pa_dbm:
  9483                           	callstack 0
  9484   0009C8                     	ds	32
  9485                           
  9486                           	psect	bssBANK10
  9487   000A00                     __pbssBANK10:
  9488                           	callstack 0
  9489   000A00                     _received_data:
  9490                           	callstack 0
  9491   000A00                     	ds	200
  9492                           
  9493                           	psect	dataBANK11
  9494   000B00                     __pdataBANK11:
  9495                           	callstack 0
  9496   000B00                     main@F17918:
  9497                           	callstack 0
  9498   000B00                     	ds	200
  9499                           
  9500                           	psect	dataBANK12
  9501   000C00                     __pdataBANK12:
  9502                           	callstack 0
  9503   000C00                     main@F17920:
  9504                           	callstack 0
  9505   000C00                     	ds	200
  9506                           
  9507                           	psect	dataBANK13
  9508   000D00                     __pdataBANK13:
  9509                           	callstack 0
  9510   000D00                     main@F17922:
  9511                           	callstack 0
  9512   000D00                     	ds	200
  9513                           
  9514                           	psect	bssBANK14
  9515   000E00                     __pbssBANK14:
  9516                           	callstack 0
  9517   000E00                     	ds	200
  9518                           
  9519                           	psect	cstackBANK9
  9520   000900                     __pcstackBANK9:
  9521                           	callstack 0
  9522   000900                     main@gridB:
  9523                           	callstack 0
  9524                           
  9525                           ; 200 bytes @ 0x0
  9526   000900                     	ds	200
  9527                           
  9528                           	psect	cstackBANK8
  9529   000800                     __pcstackBANK8:
  9530                           	callstack 0
  9531   000800                     main@gridG:
  9532                           	callstack 0
  9533                           
  9534                           ; 200 bytes @ 0x0
  9535   000800                     	ds	200
  9536                           
  9537                           	psect	cstackBANK7
  9538   000700                     __pcstackBANK7:
  9539                           	callstack 0
  9540   000700                     main@gridR:
  9541                           	callstack 0
  9542                           
  9543                           ; 200 bytes @ 0x0
  9544   000700                     	ds	200
  9545                           
  9546                           	psect	cstackBANK6
  9547   000600                     __pcstackBANK6:
  9548                           	callstack 0
  9549   000600                     main@gridE:
  9550                           	callstack 0
  9551                           
  9552                           ; 200 bytes @ 0x0
  9553   000600                     	ds	200
  9554   0006C8                     main@buf:
  9555                           	callstack 0
  9556                           
  9557                           ; 32 bytes @ 0xC8
  9558   0006C8                     	ds	32
  9559                           
  9560                           	psect	cstackBANK5
  9561   000560                     __pcstackBANK5:
  9562                           	callstack 0
  9563   000560                     ?___awdiv:
  9564                           	callstack 0
  9565   000560                     ?___awmod:
  9566                           	callstack 0
  9567   000560                     ?_read_prec_or_width:
  9568                           	callstack 0
  9569   000560                     SPI1_Open@spiConfigIndex:
  9570                           	callstack 0
  9571   000560                     SPI1_ByteExchange@byteData:
  9572                           	callstack 0
  9573   000560                     sendByte@byte:
  9574                           	callstack 0
  9575   000560                     DELAY_milliseconds@milliseconds:
  9576                           	callstack 0
  9577   000560                     DELAY_microseconds@microseconds:
  9578                           	callstack 0
  9579   000560                     ___awdiv@dividend:
  9580                           	callstack 0
  9581   000560                     ___awmod@dividend:
  9582                           	callstack 0
  9583   000560                     read_prec_or_width@fmt:
  9584                           	callstack 0
  9585   000560                     fputc@c:
  9586                           	callstack 0
  9587   000560                     RC6_SetInterruptHandler@InterruptHandler:
  9588                           	callstack 0
  9589   000560                     INT1_SetInterruptHandler@InterruptHandler:
  9590                           	callstack 0
  9591   000560                     INT2_SetInterruptHandler@InterruptHandler:
  9592                           	callstack 0
  9593   000560                     
  9594                           ; 1 bytes @ 0x0
  9595   000560                     	ds	1
  9596   000561                     SPI1_ByteExchange@returnValue:
  9597                           	callstack 0
  9598   000561                     sendRGB@g:
  9599                           	callstack 0
  9600   000561                     Nrf24_init@dev:
  9601                           	callstack 0
  9602                           
  9603                           ; 2 bytes @ 0x1
  9604   000561                     	ds	1
  9605   000562                     sendRGB@b:
  9606                           	callstack 0
  9607   000562                     Nrf24_configRegister@value:
  9608                           	callstack 0
  9609   000562                     SPI_read_buff@buffer:
  9610                           	callstack 0
  9611   000562                     SPI_write_buff@buffer:
  9612                           	callstack 0
  9613   000562                     Nrf24_flushRx@dev:
  9614                           	callstack 0
  9615   000562                     ___awdiv@divisor:
  9616                           	callstack 0
  9617   000562                     ___awmod@divisor:
  9618                           	callstack 0
  9619   000562                     read_prec_or_width@ap:
  9620                           	callstack 0
  9621   000562                     fputc@fp:
  9622                           	callstack 0
  9623   000562                     ??_DELAY_milliseconds:
  9624   000562                     
  9625                           ; 1 bytes @ 0x2
  9626   000562                     	ds	1
  9627   000563                     sendRGB@r:
  9628                           	callstack 0
  9629   000563                     Nrf24_configRegister@reg:
  9630                           	callstack 0
  9631   000563                     
  9632                           ; 1 bytes @ 0x3
  9633   000563                     	ds	1
  9634   000564                     sendCell@cell:
  9635                           	callstack 0
  9636   000564                     SPI_read_buff@bytes:
  9637                           	callstack 0
  9638   000564                     SPI_write_buff@bytes:
  9639                           	callstack 0
  9640   000564                     ___awdiv@counter:
  9641                           	callstack 0
  9642   000564                     ___awmod@counter:
  9643                           	callstack 0
  9644   000564                     Nrf24_powerUpRx@dev:
  9645                           	callstack 0
  9646   000564                     ??_fputc:
  9647   000564                     ??_read_prec_or_width:
  9648                           
  9649                           ; 1 bytes @ 0x4
  9650   000564                     	ds	1
  9651   000565                     SPI_read_buff@i:
  9652                           	callstack 0
  9653   000565                     SPI_write_buff@i:
  9654                           	callstack 0
  9655   000565                     ___awdiv@sign:
  9656                           	callstack 0
  9657   000565                     ___awmod@sign:
  9658                           	callstack 0
  9659   000565                     sendGrid@grid:
  9660                           	callstack 0
  9661   000565                     
  9662                           ; 1 bytes @ 0x5
  9663   000565                     	ds	1
  9664   000566                     ?_abs:
  9665                           	callstack 0
  9666   000566                     read_prec_or_width@c:
  9667                           	callstack 0
  9668   000566                     Nrf24_getData@dev:
  9669                           	callstack 0
  9670   000566                     Nrf24_readRegister@value:
  9671                           	callstack 0
  9672   000566                     Nrf24_writeRegister@value:
  9673                           	callstack 0
  9674   000566                     ___awdiv@quotient:
  9675                           	callstack 0
  9676   000566                     abs@a:
  9677                           	callstack 0
  9678   000566                     
  9679                           ; 1 bytes @ 0x6
  9680   000566                     	ds	1
  9681   000567                     read_prec_or_width@n:
  9682                           	callstack 0
  9683   000567                     ??_sendGrid:
  9684                           
  9685                           ; 1 bytes @ 0x7
  9686   000567                     	ds	1
  9687   000568                     Nrf24_readRegister@len:
  9688                           	callstack 0
  9689   000568                     Nrf24_writeRegister@len:
  9690                           	callstack 0
  9691   000568                     Nrf24_getData@data:
  9692                           	callstack 0
  9693   000568                     ??_abs:
  9694                           
  9695                           ; 1 bytes @ 0x8
  9696   000568                     	ds	1
  9697   000569                     Nrf24_readRegister@reg:
  9698                           	callstack 0
  9699   000569                     Nrf24_writeRegister@reg:
  9700                           	callstack 0
  9701   000569                     stoa@fp:
  9702                           	callstack 0
  9703   000569                     fputs@s:
  9704                           	callstack 0
  9705   000569                     
  9706                           ; 1 bytes @ 0x9
  9707   000569                     	ds	1
  9708   00056A                     ?_Nrf24_setRADDR:
  9709                           	callstack 0
  9710   00056A                     ?_Nrf24_setTADDR:
  9711                           	callstack 0
  9712   00056A                     sendGrid@index:
  9713                           	callstack 0
  9714   00056A                     Nrf24_setRADDR@dev:
  9715                           	callstack 0
  9716   00056A                     Nrf24_setTADDR@dev:
  9717                           	callstack 0
  9718   00056A                     Nrf24_getStatus@dev:
  9719                           	callstack 0
  9720   00056A                     Nrf24_SetSpeedDataRates@dev:
  9721                           	callstack 0
  9722   00056A                     Nrf24_setRetransmitDelay@dev:
  9723                           	callstack 0
  9724   00056A                     Nrf24_getDataRate@dev:
  9725                           	callstack 0
  9726   00056A                     Nrf24_getCRCLength@dev:
  9727                           	callstack 0
  9728   00056A                     Nrf24_getPALevel@dev:
  9729                           	callstack 0
  9730   00056A                     Nrf24_getRetransmitDelay@dev:
  9731                           	callstack 0
  9732   00056A                     
  9733                           ; 1 bytes @ 0xA
  9734   00056A                     	ds	1
  9735   00056B                     stoa@s:
  9736                           	callstack 0
  9737   00056B                     fputs@fp:
  9738                           	callstack 0
  9739                           
  9740                           ; 2 bytes @ 0xB
  9741   00056B                     	ds	1
  9742   00056C                     Nrf24_getStatus@rv:
  9743                           	callstack 0
  9744   00056C                     Nrf24_SetSpeedDataRates@val:
  9745                           	callstack 0
  9746   00056C                     Nrf24_setRetransmitDelay@val:
  9747                           	callstack 0
  9748   00056C                     Nrf24_getDataRate@result:
  9749                           	callstack 0
  9750   00056C                     Nrf24_getCRCLength@result:
  9751                           	callstack 0
  9752   00056C                     Nrf24_getPALevel@level:
  9753                           	callstack 0
  9754   00056C                     Nrf24_getRetransmitDelay@value:
  9755                           	callstack 0
  9756   00056C                     sendGrid@col:
  9757                           	callstack 0
  9758   00056C                     Nrf24_setRADDR@adr:
  9759                           	callstack 0
  9760   00056C                     Nrf24_setTADDR@adr:
  9761                           	callstack 0
  9762   00056C                     
  9763                           ; 1 bytes @ 0xC
  9764   00056C                     	ds	1
  9765   00056D                     Nrf24_SetSpeedDataRates@value:
  9766                           	callstack 0
  9767   00056D                     Nrf24_setRetransmitDelay@value:
  9768                           	callstack 0
  9769   00056D                     Nrf24_getDataRate@dr:
  9770                           	callstack 0
  9771   00056D                     Nrf24_getCRCLength@AA:
  9772                           	callstack 0
  9773   00056D                     fputs@c:
  9774                           	callstack 0
  9775   00056D                     Nrf24_config@dev:
  9776                           	callstack 0
  9777   00056D                     Nrf24_dataReady@dev:
  9778                           	callstack 0
  9779   00056D                     ??_stoa:
  9780                           
  9781                           ; 1 bytes @ 0xD
  9782   00056D                     	ds	1
  9783   00056E                     Nrf24_getCRCLength@config:
  9784                           	callstack 0
  9785   00056E                     sendGrid@row:
  9786                           	callstack 0
  9787   00056E                     fputs@i:
  9788                           	callstack 0
  9789   00056E                     ??_Nrf24_setRADDR:
  9790   00056E                     ??_Nrf24_setTADDR:
  9791                           
  9792                           ; 1 bytes @ 0xE
  9793   00056E                     	ds	1
  9794   00056F                     Nrf24_config@channel:
  9795                           	callstack 0
  9796   00056F                     Nrf24_dataReady@status:
  9797                           	callstack 0
  9798   00056F                     stoa@p:
  9799                           	callstack 0
  9800   00056F                     
  9801                           ; 1 bytes @ 0xF
  9802   00056F                     	ds	1
  9803   000570                     Nrf24_config@payload:
  9804                           	callstack 0
  9805   000570                     sendGrid@gridSize:
  9806                           	callstack 0
  9807   000570                     pad@fp:
  9808                           	callstack 0
  9809                           
  9810                           ; 2 bytes @ 0x10
  9811   000570                     	ds	1
  9812   000571                     stoa@w:
  9813                           	callstack 0
  9814   000571                     Nrf24_setRADDR@buffer:
  9815                           	callstack 0
  9816   000571                     Nrf24_setTADDR@buffer:
  9817                           	callstack 0
  9818   000571                     
  9819                           ; 1 bytes @ 0x11
  9820   000571                     	ds	1
  9821   000572                     pad@buf:
  9822                           	callstack 0
  9823                           
  9824                           ; 2 bytes @ 0x12
  9825   000572                     	ds	1
  9826   000573                     stoa@cp:
  9827                           	callstack 0
  9828                           
  9829                           ; 2 bytes @ 0x13
  9830   000573                     	ds	1
  9831   000574                     pad@p:
  9832                           	callstack 0
  9833                           
  9834                           ; 2 bytes @ 0x14
  9835   000574                     	ds	1
  9836   000575                     stoa@l:
  9837                           	callstack 0
  9838                           
  9839                           ; 2 bytes @ 0x15
  9840   000575                     	ds	1
  9841   000576                     Nrf24_setRADDR@ret:
  9842                           	callstack 0
  9843   000576                     Nrf24_setTADDR@ret:
  9844                           	callstack 0
  9845   000576                     ??_pad:
  9846                           
  9847                           ; 1 bytes @ 0x16
  9848   000576                     	ds	1
  9849   000577                     pad@i:
  9850                           	callstack 0
  9851                           
  9852                           ; 2 bytes @ 0x17
  9853   000577                     	ds	1
  9854   000578                     Nrf24_setRADDR@i:
  9855                           	callstack 0
  9856   000578                     Nrf24_setTADDR@i:
  9857                           	callstack 0
  9858                           
  9859                           ; 2 bytes @ 0x18
  9860   000578                     	ds	1
  9861   000579                     dtoa@fp:
  9862                           	callstack 0
  9863   000579                     xtoa@fp:
  9864                           	callstack 0
  9865                           
  9866                           ; 2 bytes @ 0x19
  9867   000579                     	ds	2
  9868   00057B                     dtoa@d:
  9869                           	callstack 0
  9870   00057B                     xtoa@d:
  9871                           	callstack 0
  9872                           
  9873                           ; 2 bytes @ 0x1B
  9874   00057B                     	ds	2
  9875   00057D                     _dtoa$2107:
  9876                           	callstack 0
  9877   00057D                     ??_xtoa:
  9878                           
  9879                           ; 1 bytes @ 0x1D
  9880   00057D                     	ds	2
  9881   00057F                     dtoa@p:
  9882                           	callstack 0
  9883                           
  9884                           ; 1 bytes @ 0x1F
  9885   00057F                     	ds	1
  9886   000580                     xtoa@p:
  9887                           	callstack 0
  9888   000580                     dtoa@w:
  9889                           	callstack 0
  9890                           
  9891                           ; 2 bytes @ 0x20
  9892   000580                     	ds	1
  9893   000581                     xtoa@w:
  9894                           	callstack 0
  9895                           
  9896                           ; 2 bytes @ 0x21
  9897   000581                     	ds	1
  9898   000582                     dtoa@s:
  9899                           	callstack 0
  9900                           
  9901                           ; 1 bytes @ 0x22
  9902   000582                     	ds	1
  9903   000583                     xtoa@c:
  9904                           	callstack 0
  9905   000583                     dtoa@i:
  9906                           	callstack 0
  9907                           
  9908                           ; 2 bytes @ 0x23
  9909   000583                     	ds	1
  9910   000584                     xtoa@i:
  9911                           	callstack 0
  9912                           
  9913                           ; 2 bytes @ 0x24
  9914   000584                     	ds	2
  9915   000586                     vfpfcnvrt@fp:
  9916                           	callstack 0
  9917                           
  9918                           ; 2 bytes @ 0x26
  9919   000586                     	ds	2
  9920   000588                     vfpfcnvrt@fmt:
  9921                           	callstack 0
  9922                           
  9923                           ; 2 bytes @ 0x28
  9924   000588                     	ds	2
  9925   00058A                     vfpfcnvrt@ap:
  9926                           	callstack 0
  9927                           
  9928                           ; 2 bytes @ 0x2A
  9929   00058A                     	ds	2
  9930   00058C                     ??_vfpfcnvrt:
  9931                           
  9932                           ; 1 bytes @ 0x2C
  9933   00058C                     	ds	2
  9934   00058E                     vfpfcnvrt@convarg:
  9935                           	callstack 0
  9936                           
  9937                           ; 4 bytes @ 0x2E
  9938   00058E                     	ds	4
  9939   000592                     vfpfcnvrt@done:
  9940                           	callstack 0
  9941                           
  9942                           ; 1 bytes @ 0x32
  9943   000592                     	ds	1
  9944   000593                     vfpfcnvrt@cp:
  9945                           	callstack 0
  9946                           
  9947                           ; 2 bytes @ 0x33
  9948   000593                     	ds	2
  9949   000595                     ?_vfprintf:
  9950                           	callstack 0
  9951   000595                     vfprintf@fp:
  9952                           	callstack 0
  9953                           
  9954                           ; 2 bytes @ 0x35
  9955   000595                     	ds	2
  9956   000597                     vfprintf@fmt:
  9957                           	callstack 0
  9958                           
  9959                           ; 2 bytes @ 0x37
  9960   000597                     	ds	2
  9961   000599                     vfprintf@ap:
  9962                           	callstack 0
  9963                           
  9964                           ; 2 bytes @ 0x39
  9965   000599                     	ds	2
  9966   00059B                     vfprintf@cfmt:
  9967                           	callstack 0
  9968   00059B                     
  9969                           ; 1 bytes @ 0x3B
  9970   00059B                     	ds	2
  9971   00059D                     ?_printf:
  9972                           	callstack 0
  9973   00059D                     printf@fmt:
  9974                           	callstack 0
  9975                           
  9976                           ; 2 bytes @ 0x3D
  9977   00059D                     	ds	14
  9978   0005AB                     printf@ap:
  9979                           	callstack 0
  9980   0005AB                     
  9981                           ; 1 bytes @ 0x4B
  9982   0005AB                     	ds	2
  9983   0005AD                     Nrf24_print_address_register@dev:
  9984                           	callstack 0
  9985   0005AD                     Nrf24_print_byte_register@dev:
  9986                           	callstack 0
  9987   0005AD                     ??_Nrf24_print_status:
  9988                           
  9989                           ; 1 bytes @ 0x4D
  9990   0005AD                     	ds	1
  9991   0005AE                     Nrf24_print_status@status:
  9992                           	callstack 0
  9993                           
  9994                           ; 1 bytes @ 0x4E
  9995   0005AE                     	ds	1
  9996   0005AF                     Nrf24_print_address_register@name:
  9997                           	callstack 0
  9998   0005AF                     Nrf24_print_byte_register@name:
  9999                           	callstack 0
 10000                           
 10001                           ; 2 bytes @ 0x4F
 10002   0005AF                     	ds	2
 10003   0005B1                     Nrf24_print_address_register@reg:
 10004                           	callstack 0
 10005   0005B1                     Nrf24_print_byte_register@reg:
 10006                           	callstack 0
 10007                           
 10008                           ; 1 bytes @ 0x51
 10009   0005B1                     	ds	1
 10010   0005B2                     Nrf24_print_address_register@qty:
 10011                           	callstack 0
 10012   0005B2                     Nrf24_print_byte_register@qty:
 10013                           	callstack 0
 10014                           
 10015                           ; 1 bytes @ 0x52
 10016   0005B2                     	ds	1
 10017   0005B3                     Nrf24_print_byte_register@buffer:
 10018                           	callstack 0
 10019   0005B3                     ??_Nrf24_print_address_register:
 10020   0005B3                     
 10021                           ; 1 bytes @ 0x53
 10022   0005B3                     	ds	1
 10023   0005B4                     Nrf24_print_address_register@buffer:
 10024                           	callstack 0
 10025                           
 10026                           ; 5 bytes @ 0x54
 10027   0005B4                     	ds	5
 10028   0005B9                     Nrf24_print_address_register@i:
 10029                           	callstack 0
 10030                           
 10031                           ; 2 bytes @ 0x59
 10032   0005B9                     	ds	2
 10033   0005BB                     Nrf24_printDetails@dev:
 10034                           	callstack 0
 10035                           
 10036                           ; 2 bytes @ 0x5B
 10037   0005BB                     	ds	2
 10038   0005BD                     ??_Nrf24_printDetails:
 10039                           
 10040                           ; 1 bytes @ 0x5D
 10041   0005BD                     	ds	4
 10042   0005C1                     Nrf24_printDetails@delay:
 10043                           	callstack 0
 10044                           
 10045                           ; 2 bytes @ 0x61
 10046   0005C1                     	ds	2
 10047   0005C3                     Nrf24_printDetails@retransmit:
 10048                           	callstack 0
 10049                           
 10050                           ; 1 bytes @ 0x63
 10051   0005C3                     	ds	1
 10052   0005C4                     init_nrf@buf:
 10053                           	callstack 0
 10054   0005C4                     
 10055                           ; 1 bytes @ 0x64
 10056   0005C4                     	ds	32
 10057   0005E4                     init_nrf@ret:
 10058                           	callstack 0
 10059                           
 10060                           ; 2 bytes @ 0x84
 10061   0005E4                     	ds	2
 10062   0005E6                     
 10063                           ; 1 bytes @ 0x86
 10064                           
 10065                           	psect	cstackCOMRAM
 10066   000501                     __pcstackCOMRAM:
 10067                           	callstack 0
 10068   000501                     i2SPI1_ByteExchange@byteData:
 10069                           	callstack 0
 10070   000501                     i2sendByte@byte:
 10071                           	callstack 0
 10072   000501                     
 10073                           ; 1 bytes @ 0x0
 10074   000501                     	ds	1
 10075   000502                     i2SPI1_ByteExchange@returnValue:
 10076                           	callstack 0
 10077   000502                     i2sendRGB@g:
 10078                           	callstack 0
 10079                           
 10080                           ; 1 bytes @ 0x1
 10081   000502                     	ds	1
 10082   000503                     i2sendRGB@b:
 10083                           	callstack 0
 10084   000503                     i2Nrf24_configRegister@value:
 10085                           	callstack 0
 10086   000503                     i2SPI_read_buff@buffer:
 10087                           	callstack 0
 10088                           
 10089                           ; 2 bytes @ 0x2
 10090   000503                     	ds	1
 10091   000504                     i2sendRGB@r:
 10092                           	callstack 0
 10093   000504                     i2Nrf24_configRegister@reg:
 10094                           	callstack 0
 10095   000504                     
 10096                           ; 1 bytes @ 0x3
 10097   000504                     	ds	1
 10098   000505                     i2sendCell@cell:
 10099                           	callstack 0
 10100   000505                     i2SPI_read_buff@bytes:
 10101                           	callstack 0
 10102   000505                     
 10103                           ; 1 bytes @ 0x4
 10104   000505                     	ds	1
 10105   000506                     i2SPI_read_buff@i:
 10106                           	callstack 0
 10107   000506                     i2sendGrid@grid:
 10108                           	callstack 0
 10109   000506                     
 10110                           ; 1 bytes @ 0x5
 10111   000506                     	ds	1
 10112   000507                     i2Nrf24_getData@dev:
 10113                           	callstack 0
 10114   000507                     i2Nrf24_readRegister@value:
 10115                           	callstack 0
 10116                           
 10117                           ; 2 bytes @ 0x6
 10118   000507                     	ds	1
 10119   000508                     ??i2_sendGrid:
 10120                           
 10121                           ; 1 bytes @ 0x7
 10122   000508                     	ds	1
 10123   000509                     i2Nrf24_readRegister@len:
 10124                           	callstack 0
 10125   000509                     i2Nrf24_getData@data:
 10126                           	callstack 0
 10127                           
 10128                           ; 2 bytes @ 0x8
 10129   000509                     	ds	1
 10130   00050A                     i2Nrf24_readRegister@reg:
 10131                           	callstack 0
 10132   00050A                     
 10133                           ; 1 bytes @ 0x9
 10134   00050A                     	ds	1
 10135   00050B                     i2sendGrid@index:
 10136                           	callstack 0
 10137   00050B                     i2Nrf24_getStatus@dev:
 10138                           	callstack 0
 10139   00050B                     
 10140                           ; 1 bytes @ 0xA
 10141   00050B                     	ds	2
 10142   00050D                     i2Nrf24_getStatus@rv:
 10143                           	callstack 0
 10144   00050D                     i2sendGrid@col:
 10145                           	callstack 0
 10146   00050D                     
 10147                           ; 1 bytes @ 0xC
 10148   00050D                     	ds	1
 10149   00050E                     i2Nrf24_dataReady@dev:
 10150                           	callstack 0
 10151                           
 10152                           ; 2 bytes @ 0xD
 10153   00050E                     	ds	1
 10154   00050F                     i2sendGrid@row:
 10155                           	callstack 0
 10156                           
 10157                           ; 2 bytes @ 0xE
 10158   00050F                     	ds	1
 10159   000510                     i2Nrf24_dataReady@status:
 10160                           	callstack 0
 10161   000510                     
 10162                           ; 1 bytes @ 0xF
 10163   000510                     	ds	1
 10164   000511                     i2sendGrid@gridSize:
 10165                           	callstack 0
 10166                           
 10167                           ; 2 bytes @ 0x10
 10168   000511                     	ds	2
 10169   000513                     nrf_interrupt@buf:
 10170                           	callstack 0
 10171   000513                     
 10172                           ; 1 bytes @ 0x12
 10173   000513                     	ds	32
 10174   000533                     nrf_interrupt@i:
 10175                           	callstack 0
 10176                           
 10177                           ; 2 bytes @ 0x32
 10178   000533                     	ds	2
 10179   000535                     ??_INTERRUPT_InterruptManager:
 10180                           
 10181                           ; 1 bytes @ 0x34
 10182   000535                     	ds	2
 10183                           
 10184 ;;
 10185 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 10186 ;;
 10187 ;; *************** function _main *****************
 10188 ;; Defined at:
 10189 ;;		line 137 in file "main.c"
 10190 ;; Parameters:    Size  Location     Type
 10191 ;;		None
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;  gridB         200    0[BANK9 ] unsigned char [200]
 10194 ;;  gridG         200    0[BANK8 ] unsigned char [200]
 10195 ;;  gridR         200    0[BANK7 ] unsigned char [200]
 10196 ;;  gridE         200    0[BANK6 ] unsigned char [200]
 10197 ;;  buf            32  200[BANK6 ] unsigned char [32]
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  1    wreg      void 
 10200 ;; Registers used:
 10201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10202 ;; Tracked objects:
 10203 ;;		On entry : 0/0
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10208 ;;      Locals:         0       0     232     200     200     200       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10210 ;;      Totals:         0       0     232     200     200     200       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10211 ;;Total ram usage:      832 bytes
 10212 ;; Hardware stack levels required when called: 18
 10213 ;; This function calls:
 10214 ;;		_RC6_SetInterruptHandler
 10215 ;;		_SYSTEM_Initialize
 10216 ;;		_init_nrf
 10217 ;;		_sendGrid
 10218 ;; This function is called by:
 10219 ;;		Startup code after reset
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223                           	psect	text0
 10224   011CA6                     __ptext0:
 10225                           	callstack 0
 10226   011CA6                     _main:
 10227                           	callstack 109
 10228   011CA6                     
 10229                           ;main.c: 139:     SYSTEM_Initialize();
 10230   011CA6  ECC8  F093         	call	_SYSTEM_Initialize	;wreg free
 10231   011CAA                     
 10232                           ;main.c: 141:     (INTCON0bits.GIE = 1);
 10233   011CAA  8ED6               	bsf	214,7,c	;volatile
 10234   011CAC                     
 10235                           ;main.c: 142:     (IOCCNbits.IOCCN6 = 1);
 10236   011CAC  0104               	movlb	4	; () banked
 10237   011CAE  8D16               	bsf	22,6,b	;volatile
 10238   011CB0                     
 10239                           ; BSR set to: 4
 10240                           ;main.c: 143:     (PIE0bits.IOCIE = 1);
 10241   011CB0  8E9E               	bsf	158,7,c	;volatile
 10242                           
 10243                           ;main.c: 144:     RC6_SetInterruptHandler(nrf_interrupt);
 10244   011CB2  0E28               	movlw	low _nrf_interrupt
 10245   011CB4  0105               	movlb	5	; () banked
 10246   011CB6  6F60               	movwf	RC6_SetInterruptHandler@InterruptHandler& (0+255),b
 10247   011CB8  0E17               	movlw	high _nrf_interrupt
 10248   011CBA  6F61               	movwf	(RC6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10249   011CBC  0E01               	movlw	low (_nrf_interrupt shr (0+16))
 10250   011CBE  6F62               	movwf	(RC6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 10251   011CC0  ECDF  F093         	call	_RC6_SetInterruptHandler	;wreg free
 10252   011CC4                     
 10253                           ;main.c: 146:     init_nrf();
 10254   011CC4  EC91  F086         	call	_init_nrf	;wreg free
 10255   011CC8                     
 10256                           ;main.c: 149:     uint8_t gridE[200] = { [0 ... (200 -1)] = 0 };
 10257   011CC8  EE21  F200         	lfsr	2,main@gridE
 10258   011CCC  0EC7               	movlw	199
 10259   011CCE                     u3011:
 10260   011CCE  6ADE               	clrf	postinc2,c
 10261   011CD0  06E8               	decf	wreg,f,c
 10262   011CD2  E2FD               	bc	u3011
 10263   011CD4                     
 10264                           ;main.c: 150:     uint8_t gridR[200] = { [0 ... (200 -1)] = 1 };
 10265   011CD4  EE22  F300         	lfsr	2,main@F17918
 10266   011CD8  EE11  F300         	lfsr	1,main@gridR
 10267   011CDC  0EC7               	movlw	199
 10268   011CDE                     u3021:
 10269   011CDE  C4DE F4E6          	movff	postinc2,postinc1
 10270   011CE2  06E8               	decf	wreg,f,c
 10271   011CE4  E2FC               	bc	u3021
 10272   011CE6  0EC8               	movlw	200
 10273   011CE8  5ED9               	subwf	fsr2l,f,c
 10274   011CEA  5EE1               	subwf	fsr1l,f,c
 10275   011CEC                     
 10276                           ;main.c: 151:     uint8_t gridG[200] = { [0 ... (200 -1)] = 2 };
 10277   011CEC  EE23  F000         	lfsr	2,main@F17920
 10278   011CF0  EE12  F000         	lfsr	1,main@gridG
 10279   011CF4  0EC7               	movlw	199
 10280   011CF6                     u3031:
 10281   011CF6  C4DE F4E6          	movff	postinc2,postinc1
 10282   011CFA  06E8               	decf	wreg,f,c
 10283   011CFC  E2FC               	bc	u3031
 10284   011CFE  0EC8               	movlw	200
 10285   011D00  5ED9               	subwf	fsr2l,f,c
 10286   011D02  5EE1               	subwf	fsr1l,f,c
 10287   011D04                     
 10288                           ;main.c: 152:     uint8_t gridB[200] = { [0 ... (200 -1)] = 3 };
 10289   011D04  EE23  F100         	lfsr	2,main@F17922
 10290   011D08  EE12  F100         	lfsr	1,main@gridB
 10291   011D0C  0EC7               	movlw	199
 10292   011D0E                     u3041:
 10293   011D0E  C4DE F4E6          	movff	postinc2,postinc1
 10294   011D12  06E8               	decf	wreg,f,c
 10295   011D14  E2FC               	bc	u3041
 10296   011D16  0EC8               	movlw	200
 10297   011D18  5ED9               	subwf	fsr2l,f,c
 10298   011D1A  5EE1               	subwf	fsr1l,f,c
 10299   011D1C                     
 10300                           ;main.c: 153:     sendGrid(gridB);
 10301   011D1C  0E00               	movlw	low main@gridB
 10302   011D1E  0105               	movlb	5	; () banked
 10303   011D20  6F65               	movwf	sendGrid@grid& (0+255),b
 10304   011D22  0E09               	movlw	high main@gridB
 10305   011D24  6F66               	movwf	(sendGrid@grid+1)& (0+255),b
 10306   011D26  EC30  F088         	call	_sendGrid	;wreg free
 10307   011D2A                     
 10308                           ;main.c: 155:     uint8_t buf[32] = "wassup";
 10309   011D2A  EE22  F0C8         	lfsr	2,main@F17924
 10310   011D2E  EE11  F2C8         	lfsr	1,main@buf
 10311   011D32  0E1F               	movlw	31
 10312   011D34                     u3051:
 10313   011D34  C4DB F4E3          	movff	plusw2,plusw1
 10314   011D38  06E8               	decf	wreg,f,c
 10315   011D3A  E2FC               	bc	u3051
 10316   011D3C                     l640:
 10317   011D3C  EF9E  F08E         	goto	l640
 10318   011D40  EF0D  F000         	goto	start
 10319   011D44                     __end_of_main:
 10320                           	callstack 0
 10321                           
 10322 ;; *************** function _sendGrid *****************
 10323 ;; Defined at:
 10324 ;;		line 100 in file "main.c"
 10325 ;; Parameters:    Size  Location     Type
 10326 ;;  grid            2    5[BANK5 ] PTR unsigned char 
 10327 ;;		 -> main@gridB(200), received_data(200), 
 10328 ;; Auto vars:     Size  Location     Type
 10329 ;;  index           2   10[BANK5 ] int 
 10330 ;;  col             2   12[BANK5 ] int 
 10331 ;;  row             2   14[BANK5 ] int 
 10332 ;;  gridSize        2   16[BANK5 ] int 
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      void 
 10335 ;; Registers used:
 10336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10343 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10344 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10345 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10346 ;;Total ram usage:       13 bytes
 10347 ;; Hardware stack levels used: 1
 10348 ;; Hardware stack levels required when called: 10
 10349 ;; This function calls:
 10350 ;;		_sendCell
 10351 ;; This function is called by:
 10352 ;;		_main
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           
 10356                           	psect	text1
 10357   011060                     __ptext1:
 10358                           	callstack 0
 10359   011060                     _sendGrid:
 10360                           	callstack 116
 10361   011060                     
 10362                           ;main.c: 101:     int gridSize = 10;
 10363   011060  0E00               	movlw	0
 10364   011062  0105               	movlb	5	; () banked
 10365   011064  6F71               	movwf	(sendGrid@gridSize+1)& (0+255),b
 10366   011066  0E0A               	movlw	10
 10367   011068  6F70               	movwf	sendGrid@gridSize& (0+255),b
 10368   01106A                     
 10369                           ; BSR set to: 5
 10370                           ;main.c: 104:     sendCell(grid[0]);
 10371   01106A  C565  F4D9         	movff	sendGrid@grid,fsr2l
 10372   01106E  C566  F4DA         	movff	sendGrid@grid+1,fsr2h
 10373   011072  50DF               	movf	indf2,w,c
 10374   011074  EC6C  F08F         	call	_sendCell
 10375   011078                     
 10376                           ;main.c: 105:     for (int row = 0; row < gridSize*2; row++) {
 10377   011078  0E00               	movlw	0
 10378   01107A  0105               	movlb	5	; () banked
 10379   01107C  6F6F               	movwf	(sendGrid@row+1)& (0+255),b
 10380   01107E  0E00               	movlw	0
 10381   011080  6F6E               	movwf	sendGrid@row& (0+255),b
 10382   011082  EF9B  F088         	goto	l4034
 10383   011086                     l4018:
 10384                           
 10385                           ; BSR set to: 5
 10386                           ;main.c: 106:         for (int col = 0; col < gridSize; col++) {
 10387   011086  0E00               	movlw	0
 10388   011088  6F6D               	movwf	(sendGrid@col+1)& (0+255),b
 10389   01108A  0E00               	movlw	0
 10390   01108C  6F6C               	movwf	sendGrid@col& (0+255),b
 10391   01108E  EF8A  F088         	goto	l4030
 10392   011092                     l4020:
 10393                           
 10394                           ; BSR set to: 5
 10395                           ;main.c: 107:             int index = row * gridSize + col + 1;
 10396   011092  5170               	movf	sendGrid@gridSize& (0+255),w,b
 10397   011094  036E               	mulwf	sendGrid@row& (0+255),b
 10398   011096  C4F3 F567          	movff	prodl,??_sendGrid
 10399   01109A  C4F4 F568          	movff	prodh,??_sendGrid+1
 10400   01109E  036F               	mulwf	(sendGrid@row+1)& (0+255),b
 10401   0110A0  50F3               	movf	prodl,w,c
 10402   0110A2  2768               	addwf	(??_sendGrid+1)& (0+255),f,b
 10403   0110A4  5171               	movf	(sendGrid@gridSize+1)& (0+255),w,b
 10404   0110A6  036E               	mulwf	sendGrid@row& (0+255),b
 10405   0110A8  50F3               	movf	prodl,w,c
 10406   0110AA  2768               	addwf	(??_sendGrid+1)& (0+255),f,b
 10407   0110AC  516C               	movf	sendGrid@col& (0+255),w,b
 10408   0110AE  2767               	addwf	??_sendGrid& (0+255),f,b
 10409   0110B0  516D               	movf	(sendGrid@col+1)& (0+255),w,b
 10410   0110B2  2368               	addwfc	(??_sendGrid+1)& (0+255),f,b
 10411   0110B4  0E01               	movlw	1
 10412   0110B6  2567               	addwf	??_sendGrid& (0+255),w,b
 10413   0110B8  6F6A               	movwf	sendGrid@index& (0+255),b
 10414   0110BA  0E00               	movlw	0
 10415   0110BC  2168               	addwfc	(??_sendGrid+1)& (0+255),w,b
 10416   0110BE  6F6B               	movwf	(sendGrid@index+1)& (0+255),b
 10417   0110C0                     
 10418                           ; BSR set to: 5
 10419                           ;main.c: 108:             if (row % 2 == 1) {
 10420   0110C0  A16E               	btfss	sendGrid@row& (0+255),0,b
 10421   0110C2  EF65  F088         	goto	u2871
 10422   0110C6  EF67  F088         	goto	u2870
 10423   0110CA                     u2871:
 10424   0110CA  EF7E  F088         	goto	l4026
 10425   0110CE                     u2870:
 10426   0110CE                     
 10427                           ; BSR set to: 5
 10428                           ;main.c: 109:                 index = row * gridSize + (gridSize - 1 - col) + 1;
 10429   0110CE  5170               	movf	sendGrid@gridSize& (0+255),w,b
 10430   0110D0  036E               	mulwf	sendGrid@row& (0+255),b
 10431   0110D2  C4F3 F567          	movff	prodl,??_sendGrid
 10432   0110D6  C4F4 F568          	movff	prodh,??_sendGrid+1
 10433   0110DA  036F               	mulwf	(sendGrid@row+1)& (0+255),b
 10434   0110DC  50F3               	movf	prodl,w,c
 10435   0110DE  2768               	addwf	(??_sendGrid+1)& (0+255),f,b
 10436   0110E0  5171               	movf	(sendGrid@gridSize+1)& (0+255),w,b
 10437   0110E2  036E               	mulwf	sendGrid@row& (0+255),b
 10438   0110E4  50F3               	movf	prodl,w,c
 10439   0110E6  2768               	addwf	(??_sendGrid+1)& (0+255),f,b
 10440   0110E8  516C               	movf	sendGrid@col& (0+255),w,b
 10441   0110EA  5F67               	subwf	??_sendGrid& (0+255),f,b
 10442   0110EC  516D               	movf	(sendGrid@col+1)& (0+255),w,b
 10443   0110EE  5B68               	subwfb	(??_sendGrid+1)& (0+255),f,b
 10444   0110F0  5170               	movf	sendGrid@gridSize& (0+255),w,b
 10445   0110F2  2567               	addwf	??_sendGrid& (0+255),w,b
 10446   0110F4  6F6A               	movwf	sendGrid@index& (0+255),b
 10447   0110F6  5171               	movf	(sendGrid@gridSize+1)& (0+255),w,b
 10448   0110F8  2168               	addwfc	(??_sendGrid+1)& (0+255),w,b
 10449   0110FA  6F6B               	movwf	(sendGrid@index+1)& (0+255),b
 10450   0110FC                     l4026:
 10451                           
 10452                           ; BSR set to: 5
 10453                           ;main.c: 111:             sendCell(grid[index]);
 10454   0110FC  516A               	movf	sendGrid@index& (0+255),w,b
 10455   0110FE  2565               	addwf	sendGrid@grid& (0+255),w,b
 10456   011100  6ED9               	movwf	fsr2l,c
 10457   011102  516B               	movf	(sendGrid@index+1)& (0+255),w,b
 10458   011104  2166               	addwfc	(sendGrid@grid+1)& (0+255),w,b
 10459   011106  6EDA               	movwf	fsr2h,c
 10460   011108  50DF               	movf	indf2,w,c
 10461   01110A  EC6C  F08F         	call	_sendCell
 10462   01110E                     
 10463                           ;main.c: 112:         }
 10464   01110E  0105               	movlb	5	; () banked
 10465   011110  4B6C               	infsnz	sendGrid@col& (0+255),f,b
 10466   011112  2B6D               	incf	(sendGrid@col+1)& (0+255),f,b
 10467   011114                     l4030:
 10468                           
 10469                           ; BSR set to: 5
 10470   011114  5170               	movf	sendGrid@gridSize& (0+255),w,b
 10471   011116  5D6C               	subwf	sendGrid@col& (0+255),w,b
 10472   011118  516D               	movf	(sendGrid@col+1)& (0+255),w,b
 10473   01111A  0A80               	xorlw	128
 10474   01111C  6F67               	movwf	??_sendGrid& (0+255),b
 10475   01111E  5171               	movf	(sendGrid@gridSize+1)& (0+255),w,b
 10476   011120  0A80               	xorlw	128
 10477   011122  5967               	subwfb	??_sendGrid& (0+255),w,b
 10478   011124  A0D8               	btfss	status,0,c
 10479   011126  EF97  F088         	goto	u2881
 10480   01112A  EF99  F088         	goto	u2880
 10481   01112E                     u2881:
 10482   01112E  EF49  F088         	goto	l4020
 10483   011132                     u2880:
 10484   011132                     
 10485                           ; BSR set to: 5
 10486                           ;main.c: 113:     }
 10487   011132  4B6E               	infsnz	sendGrid@row& (0+255),f,b
 10488   011134  2B6F               	incf	(sendGrid@row+1)& (0+255),f,b
 10489   011136                     l4034:
 10490                           
 10491                           ; BSR set to: 5
 10492   011136  C570  F567         	movff	sendGrid@gridSize,??_sendGrid
 10493   01113A  C571  F568         	movff	sendGrid@gridSize+1,??_sendGrid+1
 10494   01113E  90D8               	bcf	status,0,c
 10495   011140  3767               	rlcf	??_sendGrid& (0+255),f,b
 10496   011142  3768               	rlcf	(??_sendGrid+1)& (0+255),f,b
 10497   011144  5167               	movf	??_sendGrid& (0+255),w,b
 10498   011146  5D6E               	subwf	sendGrid@row& (0+255),w,b
 10499   011148  516F               	movf	(sendGrid@row+1)& (0+255),w,b
 10500   01114A  0A80               	xorlw	128
 10501   01114C  6F69               	movwf	(??_sendGrid+2)& (0+255),b
 10502   01114E  5168               	movf	(??_sendGrid+1)& (0+255),w,b
 10503   011150  0A80               	xorlw	128
 10504   011152  5969               	subwfb	(??_sendGrid+2)& (0+255),w,b
 10505   011154  A0D8               	btfss	status,0,c
 10506   011156  EFAF  F088         	goto	u2891
 10507   01115A  EFB1  F088         	goto	u2890
 10508   01115E                     u2891:
 10509   01115E  EF43  F088         	goto	l4018
 10510   011162                     u2890:
 10511   011162                     
 10512                           ; BSR set to: 5
 10513   011162  0012               	return		;funcret
 10514   011164                     __end_of_sendGrid:
 10515                           	callstack 0
 10516                           
 10517 ;; *************** function _sendCell *****************
 10518 ;; Defined at:
 10519 ;;		line 82 in file "main.c"
 10520 ;; Parameters:    Size  Location     Type
 10521 ;;  cell            1    wreg     unsigned char 
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;  cell            1    4[BANK5 ] unsigned char 
 10524 ;;  bright          1    0        unsigned char 
 10525 ;; Return value:  Size  Location     Type
 10526 ;;                  1    wreg      void 
 10527 ;; Registers used:
 10528 ;;		wreg, status,2, status,0, cstack
 10529 ;; Tracked objects:
 10530 ;;		On entry : 0/0
 10531 ;;		On exit  : 0/0
 10532 ;;		Unchanged: 0/0
 10533 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10535 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10537 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10538 ;;Total ram usage:        1 bytes
 10539 ;; Hardware stack levels used: 1
 10540 ;; Hardware stack levels required when called: 9
 10541 ;; This function calls:
 10542 ;;		_sendRGB
 10543 ;; This function is called by:
 10544 ;;		_sendGrid
 10545 ;; This function uses a non-reentrant model
 10546 ;;
 10547                           
 10548                           	psect	text2
 10549   011ED8                     __ptext2:
 10550                           	callstack 0
 10551   011ED8                     _sendCell:
 10552                           	callstack 116
 10553                           
 10554                           ; BSR set to: 5
 10555                           ;incstack = 0
 10556                           ;sendCell@cell stored from wreg
 10557   011ED8  0105               	movlb	5	; () banked
 10558   011EDA  6F64               	movwf	sendCell@cell& (0+255),b
 10559   011EDC                     
 10560                           ;main.c: 84:     switch (cell) {
 10561   011EDC  EF94  F08F         	goto	l3932
 10562   011EE0                     l3922:
 10563                           
 10564                           ; BSR set to: 5
 10565                           ;main.c: 86:             sendRGB(0, 0, 0);
 10566   011EE0  0E00               	movlw	0
 10567   011EE2  6F61               	movwf	sendRGB@g& (0+255),b
 10568   011EE4  0E00               	movlw	0
 10569   011EE6  6F62               	movwf	sendRGB@b& (0+255),b
 10570   011EE8  0E00               	movlw	0
 10571   011EEA  EC4B  F093         	call	_sendRGB
 10572                           
 10573                           ;main.c: 87:             break;
 10574   011EEE  EFA4  F08F         	goto	l607
 10575   011EF2                     l3924:
 10576                           
 10577                           ; BSR set to: 5
 10578                           ;main.c: 89:             sendRGB(bright, 0, 0);
 10579   011EF2  0E00               	movlw	0
 10580   011EF4  6F61               	movwf	sendRGB@g& (0+255),b
 10581   011EF6  0E00               	movlw	0
 10582   011EF8  6F62               	movwf	sendRGB@b& (0+255),b
 10583   011EFA  0E14               	movlw	20
 10584   011EFC  EC4B  F093         	call	_sendRGB
 10585                           
 10586                           ;main.c: 90:             break;
 10587   011F00  EFA4  F08F         	goto	l607
 10588   011F04                     l3926:
 10589                           
 10590                           ; BSR set to: 5
 10591                           ;main.c: 92:             sendRGB(0, bright, 0);
 10592   011F04  0E14               	movlw	20
 10593   011F06  6F61               	movwf	sendRGB@g& (0+255),b
 10594   011F08  0E00               	movlw	0
 10595   011F0A  6F62               	movwf	sendRGB@b& (0+255),b
 10596   011F0C  0E00               	movlw	0
 10597   011F0E  EC4B  F093         	call	_sendRGB
 10598                           
 10599                           ;main.c: 93:             break;
 10600   011F12  EFA4  F08F         	goto	l607
 10601   011F16                     l3928:
 10602                           
 10603                           ; BSR set to: 5
 10604                           ;main.c: 95:             sendRGB(0, 0, bright);
 10605   011F16  0E00               	movlw	0
 10606   011F18  6F61               	movwf	sendRGB@g& (0+255),b
 10607   011F1A  0E14               	movlw	20
 10608   011F1C  6F62               	movwf	sendRGB@b& (0+255),b
 10609   011F1E  0E00               	movlw	0
 10610   011F20  EC4B  F093         	call	_sendRGB
 10611                           
 10612                           ;main.c: 96:             break;
 10613   011F24  EFA4  F08F         	goto	l607
 10614   011F28                     l3932:
 10615   011F28  0105               	movlb	5	; () banked
 10616   011F2A  5164               	movf	sendCell@cell& (0+255),w,b
 10617                           
 10618                           ; Switch size 1, requested type "simple"
 10619                           ; Number of cases is 3, Range of values is 0 to 2
 10620                           ; switch strategies available:
 10621                           ; Name         Instructions Cycles
 10622                           ; simple_byte           10     6 (average)
 10623                           ;	Chosen strategy is simple_byte
 10624   011F2C  0A00               	xorlw	0	; case 0
 10625   011F2E  B4D8               	btfsc	status,2,c
 10626   011F30  EF70  F08F         	goto	l3922
 10627   011F34  0A01               	xorlw	1	; case 1
 10628   011F36  B4D8               	btfsc	status,2,c
 10629   011F38  EF79  F08F         	goto	l3924
 10630   011F3C  0A03               	xorlw	3	; case 2
 10631   011F3E  B4D8               	btfsc	status,2,c
 10632   011F40  EF82  F08F         	goto	l3926
 10633   011F44  EF8B  F08F         	goto	l3928
 10634   011F48                     l607:
 10635   011F48  0012               	return		;funcret
 10636   011F4A                     __end_of_sendCell:
 10637                           	callstack 0
 10638                           
 10639 ;; *************** function _sendRGB *****************
 10640 ;; Defined at:
 10641 ;;		line 76 in file "main.c"
 10642 ;; Parameters:    Size  Location     Type
 10643 ;;  r               1    wreg     unsigned char 
 10644 ;;  g               1    1[BANK5 ] unsigned char 
 10645 ;;  b               1    2[BANK5 ] unsigned char 
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;  r               1    3[BANK5 ] unsigned char 
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  1    wreg      void 
 10650 ;; Registers used:
 10651 ;;		wreg, status,2, cstack
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10657 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10660 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10661 ;;Total ram usage:        3 bytes
 10662 ;; Hardware stack levels used: 1
 10663 ;; Hardware stack levels required when called: 8
 10664 ;; This function calls:
 10665 ;;		_sendByte
 10666 ;; This function is called by:
 10667 ;;		_sendCell
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           	psect	text3
 10672   012696                     __ptext3:
 10673                           	callstack 0
 10674   012696                     _sendRGB:
 10675                           	callstack 116
 10676                           
 10677                           ;incstack = 0
 10678                           ;sendRGB@r stored from wreg
 10679   012696  0105               	movlb	5	; () banked
 10680   012698  6F63               	movwf	sendRGB@r& (0+255),b
 10681   01269A                     
 10682                           ;main.c: 77:     sendByte(g);
 10683   01269A  0105               	movlb	5	; () banked
 10684   01269C  5161               	movf	sendRGB@g& (0+255),w,b
 10685   01269E  ECC9  F081         	call	_sendByte
 10686                           
 10687                           ;main.c: 78:     sendByte(r);
 10688   0126A2  0105               	movlb	5	; () banked
 10689   0126A4  5163               	movf	sendRGB@r& (0+255),w,b
 10690   0126A6  ECC9  F081         	call	_sendByte
 10691                           
 10692                           ;main.c: 79:     sendByte(b);
 10693   0126AA  0105               	movlb	5	; () banked
 10694   0126AC  5162               	movf	sendRGB@b& (0+255),w,b
 10695   0126AE  ECC9  F081         	call	_sendByte
 10696   0126B2  0012               	return		;funcret
 10697   0126B4                     __end_of_sendRGB:
 10698                           	callstack 0
 10699                           
 10700 ;; *************** function _sendByte *****************
 10701 ;; Defined at:
 10702 ;;		line 65 in file "main.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  byte            1    wreg     unsigned char 
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;  byte            1    0[BANK5 ] unsigned char 
 10707 ;; Return value:  Size  Location     Type
 10708 ;;                  1    wreg      void 
 10709 ;; Registers used:
 10710 ;;		wreg
 10711 ;; Tracked objects:
 10712 ;;		On entry : 0/0
 10713 ;;		On exit  : 0/0
 10714 ;;		Unchanged: 0/0
 10715 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10717 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10719 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10720 ;;Total ram usage:        1 bytes
 10721 ;; Hardware stack levels used: 1
 10722 ;; Hardware stack levels required when called: 7
 10723 ;; This function calls:
 10724 ;;		Nothing
 10725 ;; This function is called by:
 10726 ;;		_sendRGB
 10727 ;; This function uses a non-reentrant model
 10728 ;;
 10729                           
 10730                           	psect	text4
 10731   010392                     __ptext4:
 10732                           	callstack 0
 10733   010392                     _sendByte:
 10734                           	callstack 116
 10735                           
 10736                           ;incstack = 0
 10737                           ;sendByte@byte stored from wreg
 10738   010392  0105               	movlb	5	; () banked
 10739   010394  6F60               	movwf	sendByte@byte& (0+255),b
 10740   010396                     
 10741                           ;main.c: 66:     if (byte & 0b10000000) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 10742   010396  0105               	movlb	5	; () banked
 10743   010398  AF60               	btfss	sendByte@byte& (0+255),7,b
 10744   01039A  EFD1  F081         	goto	u2431
 10745   01039E  EFD3  F081         	goto	u2430
 10746   0103A2                     u2431:
 10747   0103A2  EFE3  F081         	goto	l521
 10748   0103A6                     u2430:
 10749   0103A6                     
 10750                           ; BSR set to: 5
 10751   0103A6  80BE               	bsf	190,0,c	;volatile
 10752   0103A8                     
 10753                           ; BSR set to: 5
 10754   0103A8  0000               	nop	
 10755   0103AA  0000               	nop	
 10756   0103AC  0000               	nop	
 10757   0103AE  80BE               	bsf	190,0,c	;volatile
 10758   0103B0  0000               	nop	
 10759   0103B2  0000               	nop	
 10760   0103B4  0000               	nop	
 10761   0103B6  0000               	nop	
 10762   0103B8  90BE               	bcf	190,0,c	;volatile
 10763   0103BA                     l519:
 10764   0103BA  0000               	nop	
 10765   0103BC  0000               	nop	
 10766   0103BE  0000               	nop	
 10767   0103C0  0000               	nop	
 10768   0103C2  EFEF  F081         	goto	l3484
 10769   0103C6                     l521:
 10770                           
 10771                           ; BSR set to: 5
 10772   0103C6  80BE               	bsf	190,0,c	;volatile
 10773   0103C8                     
 10774                           ; BSR set to: 5
 10775   0103C8  0000               	nop	
 10776   0103CA  0000               	nop	
 10777   0103CC  0000               	nop	
 10778   0103CE  90BE               	bcf	190,0,c	;volatile
 10779   0103D0  0000               	nop	
 10780   0103D2  0000               	nop	
 10781   0103D4  0000               	nop	
 10782   0103D6  0000               	nop	
 10783   0103D8  90BE               	bcf	190,0,c	;volatile
 10784   0103DA  EFDD  F081         	goto	l519
 10785   0103DE                     l3484:
 10786                           
 10787                           ;main.c: 67:     if (byte & 0b01000000) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 10788   0103DE  0105               	movlb	5	; () banked
 10789   0103E0  AD60               	btfss	sendByte@byte& (0+255),6,b
 10790   0103E2  EFF5  F081         	goto	u2441
 10791   0103E6  EFF7  F081         	goto	u2440
 10792   0103EA                     u2441:
 10793   0103EA  EF07  F082         	goto	l531
 10794   0103EE                     u2440:
 10795   0103EE                     
 10796                           ; BSR set to: 5
 10797   0103EE  80BE               	bsf	190,0,c	;volatile
 10798   0103F0                     
 10799                           ; BSR set to: 5
 10800   0103F0  0000               	nop	
 10801   0103F2  0000               	nop	
 10802   0103F4  0000               	nop	
 10803   0103F6  80BE               	bsf	190,0,c	;volatile
 10804   0103F8  0000               	nop	
 10805   0103FA  0000               	nop	
 10806   0103FC  0000               	nop	
 10807   0103FE  0000               	nop	
 10808   010400  90BE               	bcf	190,0,c	;volatile
 10809   010402                     l529:
 10810   010402  0000               	nop	
 10811   010404  0000               	nop	
 10812   010406  0000               	nop	
 10813   010408  0000               	nop	
 10814   01040A  EF13  F082         	goto	l3486
 10815   01040E                     l531:
 10816                           
 10817                           ; BSR set to: 5
 10818   01040E  80BE               	bsf	190,0,c	;volatile
 10819   010410                     
 10820                           ; BSR set to: 5
 10821   010410  0000               	nop	
 10822   010412  0000               	nop	
 10823   010414  0000               	nop	
 10824   010416  90BE               	bcf	190,0,c	;volatile
 10825   010418  0000               	nop	
 10826   01041A  0000               	nop	
 10827   01041C  0000               	nop	
 10828   01041E  0000               	nop	
 10829   010420  90BE               	bcf	190,0,c	;volatile
 10830   010422  EF01  F082         	goto	l529
 10831   010426                     l3486:
 10832                           
 10833                           ;main.c: 68:     if (byte & 0b00100000) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 10834   010426  0105               	movlb	5	; () banked
 10835   010428  AB60               	btfss	sendByte@byte& (0+255),5,b
 10836   01042A  EF19  F082         	goto	u2451
 10837   01042E  EF1B  F082         	goto	u2450
 10838   010432                     u2451:
 10839   010432  EF2B  F082         	goto	l541
 10840   010436                     u2450:
 10841   010436                     
 10842                           ; BSR set to: 5
 10843   010436  80BE               	bsf	190,0,c	;volatile
 10844   010438                     
 10845                           ; BSR set to: 5
 10846   010438  0000               	nop	
 10847   01043A  0000               	nop	
 10848   01043C  0000               	nop	
 10849   01043E  80BE               	bsf	190,0,c	;volatile
 10850   010440  0000               	nop	
 10851   010442  0000               	nop	
 10852   010444  0000               	nop	
 10853   010446  0000               	nop	
 10854   010448  90BE               	bcf	190,0,c	;volatile
 10855   01044A                     l539:
 10856   01044A  0000               	nop	
 10857   01044C  0000               	nop	
 10858   01044E  0000               	nop	
 10859   010450  0000               	nop	
 10860   010452  EF37  F082         	goto	l3488
 10861   010456                     l541:
 10862                           
 10863                           ; BSR set to: 5
 10864   010456  80BE               	bsf	190,0,c	;volatile
 10865   010458                     
 10866                           ; BSR set to: 5
 10867   010458  0000               	nop	
 10868   01045A  0000               	nop	
 10869   01045C  0000               	nop	
 10870   01045E  90BE               	bcf	190,0,c	;volatile
 10871   010460  0000               	nop	
 10872   010462  0000               	nop	
 10873   010464  0000               	nop	
 10874   010466  0000               	nop	
 10875   010468  90BE               	bcf	190,0,c	;volatile
 10876   01046A  EF25  F082         	goto	l539
 10877   01046E                     l3488:
 10878                           
 10879                           ;main.c: 69:     if (byte & 0b00010000) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 10880   01046E  0105               	movlb	5	; () banked
 10881   010470  A960               	btfss	sendByte@byte& (0+255),4,b
 10882   010472  EF3D  F082         	goto	u2461
 10883   010476  EF3F  F082         	goto	u2460
 10884   01047A                     u2461:
 10885   01047A  EF4F  F082         	goto	l551
 10886   01047E                     u2460:
 10887   01047E                     
 10888                           ; BSR set to: 5
 10889   01047E  80BE               	bsf	190,0,c	;volatile
 10890   010480                     
 10891                           ; BSR set to: 5
 10892   010480  0000               	nop	
 10893   010482  0000               	nop	
 10894   010484  0000               	nop	
 10895   010486  80BE               	bsf	190,0,c	;volatile
 10896   010488  0000               	nop	
 10897   01048A  0000               	nop	
 10898   01048C  0000               	nop	
 10899   01048E  0000               	nop	
 10900   010490  90BE               	bcf	190,0,c	;volatile
 10901   010492                     l549:
 10902   010492  0000               	nop	
 10903   010494  0000               	nop	
 10904   010496  0000               	nop	
 10905   010498  0000               	nop	
 10906   01049A  EF5B  F082         	goto	l3490
 10907   01049E                     l551:
 10908                           
 10909                           ; BSR set to: 5
 10910   01049E  80BE               	bsf	190,0,c	;volatile
 10911   0104A0                     
 10912                           ; BSR set to: 5
 10913   0104A0  0000               	nop	
 10914   0104A2  0000               	nop	
 10915   0104A4  0000               	nop	
 10916   0104A6  90BE               	bcf	190,0,c	;volatile
 10917   0104A8  0000               	nop	
 10918   0104AA  0000               	nop	
 10919   0104AC  0000               	nop	
 10920   0104AE  0000               	nop	
 10921   0104B0  90BE               	bcf	190,0,c	;volatile
 10922   0104B2  EF49  F082         	goto	l549
 10923   0104B6                     l3490:
 10924                           
 10925                           ;main.c: 70:     if (byte & 0b00001000) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 10926   0104B6  0105               	movlb	5	; () banked
 10927   0104B8  A760               	btfss	sendByte@byte& (0+255),3,b
 10928   0104BA  EF61  F082         	goto	u2471
 10929   0104BE  EF63  F082         	goto	u2470
 10930   0104C2                     u2471:
 10931   0104C2  EF73  F082         	goto	l561
 10932   0104C6                     u2470:
 10933   0104C6                     
 10934                           ; BSR set to: 5
 10935   0104C6  80BE               	bsf	190,0,c	;volatile
 10936   0104C8                     
 10937                           ; BSR set to: 5
 10938   0104C8  0000               	nop	
 10939   0104CA  0000               	nop	
 10940   0104CC  0000               	nop	
 10941   0104CE  80BE               	bsf	190,0,c	;volatile
 10942   0104D0  0000               	nop	
 10943   0104D2  0000               	nop	
 10944   0104D4  0000               	nop	
 10945   0104D6  0000               	nop	
 10946   0104D8  90BE               	bcf	190,0,c	;volatile
 10947   0104DA                     l559:
 10948   0104DA  0000               	nop	
 10949   0104DC  0000               	nop	
 10950   0104DE  0000               	nop	
 10951   0104E0  0000               	nop	
 10952   0104E2  EF7F  F082         	goto	l3492
 10953   0104E6                     l561:
 10954                           
 10955                           ; BSR set to: 5
 10956   0104E6  80BE               	bsf	190,0,c	;volatile
 10957   0104E8                     
 10958                           ; BSR set to: 5
 10959   0104E8  0000               	nop	
 10960   0104EA  0000               	nop	
 10961   0104EC  0000               	nop	
 10962   0104EE  90BE               	bcf	190,0,c	;volatile
 10963   0104F0  0000               	nop	
 10964   0104F2  0000               	nop	
 10965   0104F4  0000               	nop	
 10966   0104F6  0000               	nop	
 10967   0104F8  90BE               	bcf	190,0,c	;volatile
 10968   0104FA  EF6D  F082         	goto	l559
 10969   0104FE                     l3492:
 10970                           
 10971                           ;main.c: 71:     if (byte & 0b00000100) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 10972   0104FE  0105               	movlb	5	; () banked
 10973   010500  A560               	btfss	sendByte@byte& (0+255),2,b
 10974   010502  EF85  F082         	goto	u2481
 10975   010506  EF87  F082         	goto	u2480
 10976   01050A                     u2481:
 10977   01050A  EF97  F082         	goto	l571
 10978   01050E                     u2480:
 10979   01050E                     
 10980                           ; BSR set to: 5
 10981   01050E  80BE               	bsf	190,0,c	;volatile
 10982   010510                     
 10983                           ; BSR set to: 5
 10984   010510  0000               	nop	
 10985   010512  0000               	nop	
 10986   010514  0000               	nop	
 10987   010516  80BE               	bsf	190,0,c	;volatile
 10988   010518  0000               	nop	
 10989   01051A  0000               	nop	
 10990   01051C  0000               	nop	
 10991   01051E  0000               	nop	
 10992   010520  90BE               	bcf	190,0,c	;volatile
 10993   010522                     l569:
 10994   010522  0000               	nop	
 10995   010524  0000               	nop	
 10996   010526  0000               	nop	
 10997   010528  0000               	nop	
 10998   01052A  EFA3  F082         	goto	l3494
 10999   01052E                     l571:
 11000                           
 11001                           ; BSR set to: 5
 11002   01052E  80BE               	bsf	190,0,c	;volatile
 11003   010530                     
 11004                           ; BSR set to: 5
 11005   010530  0000               	nop	
 11006   010532  0000               	nop	
 11007   010534  0000               	nop	
 11008   010536  90BE               	bcf	190,0,c	;volatile
 11009   010538  0000               	nop	
 11010   01053A  0000               	nop	
 11011   01053C  0000               	nop	
 11012   01053E  0000               	nop	
 11013   010540  90BE               	bcf	190,0,c	;volatile
 11014   010542  EF91  F082         	goto	l569
 11015   010546                     l3494:
 11016                           
 11017                           ;main.c: 72:     if (byte & 0b00000010) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 11018   010546  0105               	movlb	5	; () banked
 11019   010548  A360               	btfss	sendByte@byte& (0+255),1,b
 11020   01054A  EFA9  F082         	goto	u2491
 11021   01054E  EFAB  F082         	goto	u2490
 11022   010552                     u2491:
 11023   010552  EFBB  F082         	goto	l581
 11024   010556                     u2490:
 11025   010556                     
 11026                           ; BSR set to: 5
 11027   010556  80BE               	bsf	190,0,c	;volatile
 11028   010558                     
 11029                           ; BSR set to: 5
 11030   010558  0000               	nop	
 11031   01055A  0000               	nop	
 11032   01055C  0000               	nop	
 11033   01055E  80BE               	bsf	190,0,c	;volatile
 11034   010560  0000               	nop	
 11035   010562  0000               	nop	
 11036   010564  0000               	nop	
 11037   010566  0000               	nop	
 11038   010568  90BE               	bcf	190,0,c	;volatile
 11039   01056A                     l579:
 11040   01056A  0000               	nop	
 11041   01056C  0000               	nop	
 11042   01056E  0000               	nop	
 11043   010570  0000               	nop	
 11044   010572  EFC7  F082         	goto	l3496
 11045   010576                     l581:
 11046                           
 11047                           ; BSR set to: 5
 11048   010576  80BE               	bsf	190,0,c	;volatile
 11049   010578                     
 11050                           ; BSR set to: 5
 11051   010578  0000               	nop	
 11052   01057A  0000               	nop	
 11053   01057C  0000               	nop	
 11054   01057E  90BE               	bcf	190,0,c	;volatile
 11055   010580  0000               	nop	
 11056   010582  0000               	nop	
 11057   010584  0000               	nop	
 11058   010586  0000               	nop	
 11059   010588  90BE               	bcf	190,0,c	;volatile
 11060   01058A  EFB5  F082         	goto	l579
 11061   01058E                     l3496:
 11062                           
 11063                           ;main.c: 73:     if (byte & 0b00000001) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 11064   01058E  0105               	movlb	5	; () banked
 11065   010590  A160               	btfss	sendByte@byte& (0+255),0,b
 11066   010592  EFCD  F082         	goto	u2501
 11067   010596  EFCF  F082         	goto	u2500
 11068   01059A                     u2501:
 11069   01059A  EFDF  F082         	goto	l591
 11070   01059E                     u2500:
 11071   01059E                     
 11072                           ; BSR set to: 5
 11073   01059E  80BE               	bsf	190,0,c	;volatile
 11074   0105A0                     
 11075                           ; BSR set to: 5
 11076   0105A0  0000               	nop	
 11077   0105A2  0000               	nop	
 11078   0105A4  0000               	nop	
 11079   0105A6  80BE               	bsf	190,0,c	;volatile
 11080   0105A8  0000               	nop	
 11081   0105AA  0000               	nop	
 11082   0105AC  0000               	nop	
 11083   0105AE  0000               	nop	
 11084   0105B0  90BE               	bcf	190,0,c	;volatile
 11085   0105B2                     l589:
 11086   0105B2  0000               	nop	
 11087   0105B4  0000               	nop	
 11088   0105B6  0000               	nop	
 11089   0105B8  0000               	nop	
 11090   0105BA  EFEB  F082         	goto	l595
 11091   0105BE                     l591:
 11092                           
 11093                           ; BSR set to: 5
 11094   0105BE  80BE               	bsf	190,0,c	;volatile
 11095   0105C0                     
 11096                           ; BSR set to: 5
 11097   0105C0  0000               	nop	
 11098   0105C2  0000               	nop	
 11099   0105C4  0000               	nop	
 11100   0105C6  90BE               	bcf	190,0,c	;volatile
 11101   0105C8  0000               	nop	
 11102   0105CA  0000               	nop	
 11103   0105CC  0000               	nop	
 11104   0105CE  0000               	nop	
 11105   0105D0  90BE               	bcf	190,0,c	;volatile
 11106   0105D2  EFD9  F082         	goto	l589
 11107   0105D6                     l595:
 11108   0105D6  0012               	return		;funcret
 11109   0105D8                     __end_of_sendByte:
 11110                           	callstack 0
 11111                           
 11112 ;; *************** function _init_nrf *****************
 11113 ;; Defined at:
 11114 ;;		line 26 in file "main.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;		None
 11117 ;; Auto vars:     Size  Location     Type
 11118 ;;  buf            32  100[BANK5 ] unsigned char [32]
 11119 ;;  ret             2  132[BANK5 ] int 
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  1    wreg      void 
 11122 ;; Registers used:
 11123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11130 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11132 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11133 ;;Total ram usage:       34 bytes
 11134 ;; Hardware stack levels used: 1
 11135 ;; Hardware stack levels required when called: 17
 11136 ;; This function calls:
 11137 ;;		_DELAY_milliseconds
 11138 ;;		_Nrf24_SetSpeedDataRates
 11139 ;;		_Nrf24_config
 11140 ;;		_Nrf24_dataReady
 11141 ;;		_Nrf24_getData
 11142 ;;		_Nrf24_init
 11143 ;;		_Nrf24_printDetails
 11144 ;;		_Nrf24_setRADDR
 11145 ;;		_Nrf24_setRetransmitDelay
 11146 ;;		_Nrf24_setTADDR
 11147 ;; This function is called by:
 11148 ;;		_main
 11149 ;; This function uses a non-reentrant model
 11150 ;;
 11151                           
 11152                           	psect	text5
 11153   010D22                     __ptext5:
 11154                           	callstack 0
 11155   010D22                     _init_nrf:
 11156                           	callstack 109
 11157   010D22                     
 11158                           ;main.c: 27:     DELAY_milliseconds(100);
 11159   010D22  0E00               	movlw	0
 11160   010D24  0105               	movlb	5	; () banked
 11161   010D26  6F61               	movwf	(DELAY_milliseconds@milliseconds+1)& (0+255),b
 11162   010D28  0E64               	movlw	100
 11163   010D2A  6F60               	movwf	DELAY_milliseconds@milliseconds& (0+255),b
 11164   010D2C  EC08  F092         	call	_DELAY_milliseconds	;wreg free
 11165   010D30                     
 11166                           ;main.c: 29:     Nrf24_init(&dev);
 11167   010D30  0E3F               	movlw	low _dev
 11168   010D32  0105               	movlb	5	; () banked
 11169   010D34  6F61               	movwf	Nrf24_init@dev& (0+255),b
 11170   010D36  0E05               	movlw	high _dev
 11171   010D38  6F62               	movwf	(Nrf24_init@dev+1)& (0+255),b
 11172   010D3A  EC9E  F092         	call	_Nrf24_init	;wreg free
 11173   010D3E                     
 11174                           ;main.c: 30:  Nrf24_config(&dev, 99, 32);
 11175   010D3E  0E3F               	movlw	low _dev
 11176   010D40  0105               	movlb	5	; () banked
 11177   010D42  6F6D               	movwf	Nrf24_config@dev& (0+255),b
 11178   010D44  0E05               	movlw	high _dev
 11179   010D46  6F6E               	movwf	(Nrf24_config@dev+1)& (0+255),b
 11180   010D48  0E63               	movlw	99
 11181   010D4A  6F6F               	movwf	Nrf24_config@channel& (0+255),b
 11182   010D4C  0E20               	movlw	32
 11183   010D4E  6F70               	movwf	Nrf24_config@payload& (0+255),b
 11184   010D50  EC2B  F08F         	call	_Nrf24_config	;wreg free
 11185   010D54                     
 11186                           ;main.c: 33:  int ret = Nrf24_setRADDR(&dev, (uint8_t *) "GAME4");
 11187   010D54  0E3F               	movlw	low _dev
 11188   010D56  0105               	movlb	5	; () banked
 11189   010D58  6F6A               	movwf	Nrf24_setRADDR@dev& (0+255),b
 11190   010D5A  0E05               	movlw	high _dev
 11191   010D5C  6F6B               	movwf	(Nrf24_setRADDR@dev+1)& (0+255),b
 11192   010D5E  0EF4               	movlw	low STR_1
 11193   010D60  6F6C               	movwf	Nrf24_setRADDR@adr& (0+255),b
 11194   010D62  0EFF               	movlw	high STR_1
 11195   010D64  6F6D               	movwf	(Nrf24_setRADDR@adr+1)& (0+255),b
 11196   010D66  ECB3  F08D         	call	_Nrf24_setRADDR	;wreg free
 11197   010D6A  C56A  F5E4         	movff	?_Nrf24_setRADDR,init_nrf@ret
 11198   010D6E  C56B  F5E5         	movff	?_Nrf24_setRADDR+1,init_nrf@ret+1
 11199   010D72                     
 11200                           ;main.c: 34:  if (ret != 0) {
 11201   010D72  0105               	movlb	5	; () banked
 11202   010D74  51E4               	movf	init_nrf@ret& (0+255),w,b
 11203   010D76  11E5               	iorwf	(init_nrf@ret+1)& (0+255),w,b
 11204   010D78  B4D8               	btfsc	status,2,c
 11205   010D7A  EFC1  F086         	goto	u2841
 11206   010D7E  EFC3  F086         	goto	u2840
 11207   010D82                     u2841:
 11208   010D82  EFCC  F086         	goto	l3996
 11209   010D86                     u2840:
 11210   010D86                     l3994:
 11211   010D86  0E00               	movlw	0
 11212   010D88  0105               	movlb	5	; () banked
 11213   010D8A  6F61               	movwf	(DELAY_milliseconds@milliseconds+1)& (0+255),b
 11214   010D8C  0E01               	movlw	1
 11215   010D8E  6F60               	movwf	DELAY_milliseconds@milliseconds& (0+255),b
 11216   010D90  EC08  F092         	call	_DELAY_milliseconds	;wreg free
 11217   010D94  EFC3  F086         	goto	l3994
 11218   010D98                     l3996:
 11219                           
 11220                           ; BSR set to: 5
 11221                           ;main.c: 37:     ret = Nrf24_setTADDR(&dev, (uint8_t *) "GAME4");
 11222   010D98  0E3F               	movlw	low _dev
 11223   010D9A  6F6A               	movwf	Nrf24_setTADDR@dev& (0+255),b
 11224   010D9C  0E05               	movlw	high _dev
 11225   010D9E  6F6B               	movwf	(Nrf24_setTADDR@dev+1)& (0+255),b
 11226   010DA0  0EF4               	movlw	low STR_1
 11227   010DA2  6F6C               	movwf	Nrf24_setTADDR@adr& (0+255),b
 11228   010DA4  0EFF               	movlw	high STR_1
 11229   010DA6  6F6D               	movwf	(Nrf24_setTADDR@adr+1)& (0+255),b
 11230   010DA8  EC59  F08C         	call	_Nrf24_setTADDR	;wreg free
 11231   010DAC  C56A  F5E4         	movff	?_Nrf24_setTADDR,init_nrf@ret
 11232   010DB0  C56B  F5E5         	movff	?_Nrf24_setTADDR+1,init_nrf@ret+1
 11233   010DB4                     
 11234                           ;main.c: 38:  if (ret != 0) {
 11235   010DB4  0105               	movlb	5	; () banked
 11236   010DB6  51E4               	movf	init_nrf@ret& (0+255),w,b
 11237   010DB8  11E5               	iorwf	(init_nrf@ret+1)& (0+255),w,b
 11238   010DBA  B4D8               	btfsc	status,2,c
 11239   010DBC  EFE2  F086         	goto	u2851
 11240   010DC0  EFE4  F086         	goto	u2850
 11241   010DC4                     u2851:
 11242   010DC4  EFED  F086         	goto	l4002
 11243   010DC8                     u2850:
 11244   010DC8                     l4000:
 11245   010DC8  0E00               	movlw	0
 11246   010DCA  0105               	movlb	5	; () banked
 11247   010DCC  6F61               	movwf	(DELAY_milliseconds@milliseconds+1)& (0+255),b
 11248   010DCE  0E01               	movlw	1
 11249   010DD0  6F60               	movwf	DELAY_milliseconds@milliseconds& (0+255),b
 11250   010DD2  EC08  F092         	call	_DELAY_milliseconds	;wreg free
 11251   010DD6  EFE4  F086         	goto	l4000
 11252   010DDA                     l4002:
 11253                           
 11254                           ; BSR set to: 5
 11255                           ;main.c: 42:     Nrf24_SetSpeedDataRates(&dev, 0);
 11256   010DDA  0E3F               	movlw	low _dev
 11257   010DDC  6F6A               	movwf	Nrf24_SetSpeedDataRates@dev& (0+255),b
 11258   010DDE  0E05               	movlw	high _dev
 11259   010DE0  6F6B               	movwf	(Nrf24_SetSpeedDataRates@dev+1)& (0+255),b
 11260   010DE2  0E00               	movlw	0
 11261   010DE4  6F6C               	movwf	Nrf24_SetSpeedDataRates@val& (0+255),b
 11262   010DE6  ECA5  F08F         	call	_Nrf24_SetSpeedDataRates	;wreg free
 11263                           
 11264                           ;main.c: 43:  Nrf24_setRetransmitDelay(&dev, 100);
 11265   010DEA  0E3F               	movlw	low _dev
 11266   010DEC  0105               	movlb	5	; () banked
 11267   010DEE  6F6A               	movwf	Nrf24_setRetransmitDelay@dev& (0+255),b
 11268   010DF0  0E05               	movlw	high _dev
 11269   010DF2  6F6B               	movwf	(Nrf24_setRetransmitDelay@dev+1)& (0+255),b
 11270   010DF4  0E64               	movlw	100
 11271   010DF6  6F6C               	movwf	Nrf24_setRetransmitDelay@val& (0+255),b
 11272   010DF8  EC6E  F092         	call	_Nrf24_setRetransmitDelay	;wreg free
 11273   010DFC                     
 11274                           ;main.c: 46:  Nrf24_printDetails(&dev);
 11275   010DFC  0E3F               	movlw	low _dev
 11276   010DFE  0105               	movlb	5	; () banked
 11277   010E00  6FBB               	movwf	Nrf24_printDetails@dev& (0+255),b
 11278   010E02  0E05               	movlw	high _dev
 11279   010E04  6FBC               	movwf	(Nrf24_printDetails@dev+1)& (0+255),b
 11280   010E06  EC06  F084         	call	_Nrf24_printDetails	;wreg free
 11281   010E0A                     l4006:
 11282                           
 11283                           ;main.c: 49:   if (Nrf24_dataReady(&dev) == 0) break;
 11284   010E0A  0E3F               	movlw	low _dev
 11285   010E0C  0105               	movlb	5	; () banked
 11286   010E0E  6F6D               	movwf	Nrf24_dataReady@dev& (0+255),b
 11287   010E10  0E05               	movlw	high _dev
 11288   010E12  6F6E               	movwf	(Nrf24_dataReady@dev+1)& (0+255),b
 11289   010E14  ECDF  F092         	call	_Nrf24_dataReady	;wreg free
 11290   010E18  0900               	iorlw	0
 11291   010E1A  A4D8               	btfss	status,2,c
 11292   010E1C  EF12  F087         	goto	u2861
 11293   010E20  EF14  F087         	goto	u2860
 11294   010E24                     u2861:
 11295   010E24  EF16  F087         	goto	l4010
 11296   010E28                     u2860:
 11297   010E28  EF23  F087         	goto	l512
 11298   010E2C                     l4010:
 11299                           
 11300                           ;main.c: 50:   Nrf24_getData(&dev, buf);
 11301   010E2C  0E3F               	movlw	low _dev
 11302   010E2E  0105               	movlb	5	; () banked
 11303   010E30  6F66               	movwf	Nrf24_getData@dev& (0+255),b
 11304   010E32  0E05               	movlw	high _dev
 11305   010E34  6F67               	movwf	(Nrf24_getData@dev+1)& (0+255),b
 11306   010E36  0EC4               	movlw	low init_nrf@buf
 11307   010E38  6F68               	movwf	Nrf24_getData@data& (0+255),b
 11308   010E3A  0E05               	movlw	high init_nrf@buf
 11309   010E3C  6F69               	movwf	(Nrf24_getData@data+1)& (0+255),b
 11310   010E3E  ECB8  F091         	call	_Nrf24_getData	;wreg free
 11311   010E42  EF05  F087         	goto	l4006
 11312   010E46                     l512:
 11313   010E46  0012               	return		;funcret
 11314   010E48                     __end_of_init_nrf:
 11315                           	callstack 0
 11316                           
 11317 ;; *************** function _Nrf24_setTADDR *****************
 11318 ;; Defined at:
 11319 ;;		line 115 in file "mirf.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;  dev             2   10[BANK5 ] PTR struct .
 11322 ;;		 -> dev(3), 
 11323 ;;  adr             2   12[BANK5 ] PTR unsigned char 
 11324 ;;		 -> STR_2(6), 
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;  i               2   24[BANK5 ] int 
 11327 ;;  buffer          5   17[BANK5 ] unsigned char [5]
 11328 ;;  ret             2   22[BANK5 ] int 
 11329 ;; Return value:  Size  Location     Type
 11330 ;;                  2   10[BANK5 ] int 
 11331 ;; Registers used:
 11332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11333 ;; Tracked objects:
 11334 ;;		On entry : 0/0
 11335 ;;		On exit  : 0/0
 11336 ;;		Unchanged: 0/0
 11337 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11338 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11339 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11340 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11341 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11342 ;;Total ram usage:       16 bytes
 11343 ;; Hardware stack levels used: 1
 11344 ;; Hardware stack levels required when called: 10
 11345 ;; This function calls:
 11346 ;;		_Nrf24_readRegister
 11347 ;;		_Nrf24_writeRegister
 11348 ;; This function is called by:
 11349 ;;		_init_nrf
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           	psect	text6
 11354   0118B2                     __ptext6:
 11355                           	callstack 0
 11356   0118B2                     _Nrf24_setTADDR:
 11357                           	callstack 115
 11358   0118B2                     
 11359                           ;mirf.c: 115: int Nrf24_setTADDR(NRF24_t * dev, uint8_t * adr);mirf.c: 116: {;mirf.c: 11
      +                          7:  int ret = 0;
 11360   0118B2  0E00               	movlw	0
 11361   0118B4  0105               	movlb	5	; () banked
 11362   0118B6  6F77               	movwf	(Nrf24_setTADDR@ret+1)& (0+255),b
 11363   0118B8  0E00               	movlw	0
 11364   0118BA  6F76               	movwf	Nrf24_setTADDR@ret& (0+255),b
 11365   0118BC                     
 11366                           ; BSR set to: 5
 11367                           ;mirf.c: 118:  Nrf24_writeRegister(0x0A, adr, 5);
 11368   0118BC  C56C  F566         	movff	Nrf24_setTADDR@adr,Nrf24_writeRegister@value
 11369   0118C0  C56D  F567         	movff	Nrf24_setTADDR@adr+1,Nrf24_writeRegister@value+1
 11370   0118C4  0E05               	movlw	5
 11371   0118C6  6F68               	movwf	Nrf24_writeRegister@len& (0+255),b
 11372   0118C8  0E0A               	movlw	10
 11373   0118CA  EC82  F091         	call	_Nrf24_writeRegister
 11374   0118CE                     
 11375                           ;mirf.c: 119:  Nrf24_writeRegister(0x10, adr, 5);
 11376   0118CE  C56C  F566         	movff	Nrf24_setTADDR@adr,Nrf24_writeRegister@value
 11377   0118D2  C56D  F567         	movff	Nrf24_setTADDR@adr+1,Nrf24_writeRegister@value+1
 11378   0118D6  0E05               	movlw	5
 11379   0118D8  0105               	movlb	5	; () banked
 11380   0118DA  6F68               	movwf	Nrf24_writeRegister@len& (0+255),b
 11381   0118DC  0E10               	movlw	16
 11382   0118DE  EC82  F091         	call	_Nrf24_writeRegister
 11383   0118E2                     
 11384                           ;mirf.c: 120:  uint8_t buffer[5];;mirf.c: 121:  Nrf24_readRegister(0x0A, buffer, sizeof(
      +                          buffer));
 11385   0118E2  0E71               	movlw	low Nrf24_setTADDR@buffer
 11386   0118E4  0105               	movlb	5	; () banked
 11387   0118E6  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 11388   0118E8  0E05               	movlw	high Nrf24_setTADDR@buffer
 11389   0118EA  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 11390   0118EC  0E05               	movlw	5
 11391   0118EE  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 11392   0118F0  0E0A               	movlw	10
 11393   0118F2  ECEE  F091         	call	_Nrf24_readRegister
 11394   0118F6                     
 11395                           ;mirf.c: 122:  for (int i=0;i<5;i++) {
 11396   0118F6  0E00               	movlw	0
 11397   0118F8  0105               	movlb	5	; () banked
 11398   0118FA  6F79               	movwf	(Nrf24_setTADDR@i+1)& (0+255),b
 11399   0118FC  0E00               	movlw	0
 11400   0118FE  6F78               	movwf	Nrf24_setTADDR@i& (0+255),b
 11401   011900                     l3860:
 11402                           
 11403                           ; BSR set to: 5
 11404                           ;mirf.c: 123:   if (adr[i] != buffer[i]) ret = -1;
 11405   011900  0E71               	movlw	low Nrf24_setTADDR@buffer
 11406   011902  2578               	addwf	Nrf24_setTADDR@i& (0+255),w,b
 11407   011904  6ED9               	movwf	fsr2l,c
 11408   011906  0E05               	movlw	high Nrf24_setTADDR@buffer
 11409   011908  2179               	addwfc	(Nrf24_setTADDR@i+1)& (0+255),w,b
 11410   01190A  6EDA               	movwf	fsr2h,c
 11411   01190C  5178               	movf	Nrf24_setTADDR@i& (0+255),w,b
 11412   01190E  256C               	addwf	Nrf24_setTADDR@adr& (0+255),w,b
 11413   011910  6F6F               	movwf	(??_Nrf24_setTADDR+1)& (0+255),b
 11414   011912  5179               	movf	(Nrf24_setTADDR@i+1)& (0+255),w,b
 11415   011914  216D               	addwfc	(Nrf24_setTADDR@adr+1)& (0+255),w,b
 11416   011916  6F70               	movwf	(??_Nrf24_setTADDR+2)& (0+255),b
 11417   011918  C56F  F4F6         	movff	??_Nrf24_setTADDR+1,tblptrl
 11418   01191C  C570  F4F7         	movff	??_Nrf24_setTADDR+2,tblptrh
 11419   011920                     	if	0	;tblptru may be non-zero
 11420   011920                     	endif
 11421   011920                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11422   011920  0E00               	movlw	low (__mediumconst shr (0+16))
 11423   011922  6EF8               	movwf	tblptru,c
 11424   011924                     	endif
 11425   011924  50DE               	movf	postinc2,w,c
 11426   011926  0009               	tblrd		*+
 11427   011928  18F5               	xorwf	tablat,w,c
 11428   01192A  B4D8               	btfsc	status,2,c
 11429   01192C  EF9A  F08C         	goto	u2751
 11430   011930  EF9C  F08C         	goto	u2750
 11431   011934                     u2751:
 11432   011934  EF9E  F08C         	goto	l3864
 11433   011938                     u2750:
 11434   011938                     
 11435                           ; BSR set to: 5
 11436   011938  6976               	setf	Nrf24_setTADDR@ret& (0+255),b
 11437   01193A  6977               	setf	(Nrf24_setTADDR@ret+1)& (0+255),b
 11438   01193C                     l3864:
 11439                           
 11440                           ; BSR set to: 5
 11441                           ;mirf.c: 124:  }
 11442   01193C  4B78               	infsnz	Nrf24_setTADDR@i& (0+255),f,b
 11443   01193E  2B79               	incf	(Nrf24_setTADDR@i+1)& (0+255),f,b
 11444   011940                     
 11445                           ; BSR set to: 5
 11446   011940  BF79               	btfsc	(Nrf24_setTADDR@i+1)& (0+255),7,b
 11447   011942  EFAC  F08C         	goto	u2761
 11448   011946  5179               	movf	(Nrf24_setTADDR@i+1)& (0+255),w,b
 11449   011948  E109               	bnz	u2760
 11450   01194A  0E05               	movlw	5
 11451   01194C  5D78               	subwf	Nrf24_setTADDR@i& (0+255),w,b
 11452   01194E  A0D8               	btfss	status,0,c
 11453   011950  EFAC  F08C         	goto	u2761
 11454   011954  EFAE  F08C         	goto	u2760
 11455   011958                     u2761:
 11456   011958  EF80  F08C         	goto	l3860
 11457   01195C                     u2760:
 11458   01195C                     
 11459                           ; BSR set to: 5
 11460                           ;mirf.c: 125:  return ret;
 11461   01195C  C576  F56A         	movff	Nrf24_setTADDR@ret,?_Nrf24_setTADDR
 11462   011960  C577  F56B         	movff	Nrf24_setTADDR@ret+1,?_Nrf24_setTADDR+1
 11463   011964                     
 11464                           ; BSR set to: 5
 11465   011964  0012               	return		;funcret
 11466   011966                     __end_of_Nrf24_setTADDR:
 11467                           	callstack 0
 11468                           
 11469 ;; *************** function _Nrf24_setRetransmitDelay *****************
 11470 ;; Defined at:
 11471 ;;		line 364 in file "mirf.c"
 11472 ;; Parameters:    Size  Location     Type
 11473 ;;  dev             2   10[BANK5 ] PTR struct .
 11474 ;;		 -> dev(3), 
 11475 ;;  val             1   12[BANK5 ] unsigned char 
 11476 ;; Auto vars:     Size  Location     Type
 11477 ;;  value           1   13[BANK5 ] unsigned char 
 11478 ;; Return value:  Size  Location     Type
 11479 ;;                  1    wreg      void 
 11480 ;; Registers used:
 11481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11482 ;; Tracked objects:
 11483 ;;		On entry : 0/0
 11484 ;;		On exit  : 0/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11487 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11488 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11490 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11491 ;;Total ram usage:        4 bytes
 11492 ;; Hardware stack levels used: 1
 11493 ;; Hardware stack levels required when called: 10
 11494 ;; This function calls:
 11495 ;;		_Nrf24_configRegister
 11496 ;;		_Nrf24_readRegister
 11497 ;; This function is called by:
 11498 ;;		_init_nrf
 11499 ;; This function uses a non-reentrant model
 11500 ;;
 11501                           
 11502                           	psect	text7
 11503   0124DC                     __ptext7:
 11504                           	callstack 0
 11505   0124DC                     _Nrf24_setRetransmitDelay:
 11506                           	callstack 115
 11507   0124DC                     
 11508                           ;mirf.c: 364: void Nrf24_setRetransmitDelay(NRF24_t * dev, uint8_t val);mirf.c: 365: {;m
      +                          irf.c: 366:  uint8_t value;;mirf.c: 367:  Nrf24_readRegister(0x04, &value, 1);
 11509   0124DC  0E6D               	movlw	low Nrf24_setRetransmitDelay@value
 11510   0124DE  0105               	movlb	5	; () banked
 11511   0124E0  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 11512   0124E2  0E05               	movlw	high Nrf24_setRetransmitDelay@value
 11513   0124E4  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 11514   0124E6  0E01               	movlw	1
 11515   0124E8  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 11516   0124EA  0E04               	movlw	4
 11517   0124EC  ECEE  F091         	call	_Nrf24_readRegister
 11518   0124F0                     
 11519                           ;mirf.c: 368:  value = value & 0x0F;
 11520   0124F0  0105               	movlb	5	; () banked
 11521   0124F2  516D               	movf	Nrf24_setRetransmitDelay@value& (0+255),w,b
 11522   0124F4  0B0F               	andlw	15
 11523   0124F6  6F6D               	movwf	Nrf24_setRetransmitDelay@value& (0+255),b
 11524   0124F8                     
 11525                           ; BSR set to: 5
 11526                           ;mirf.c: 369:  value = value | (val << 4);
 11527   0124F8  396C               	swapf	Nrf24_setRetransmitDelay@val& (0+255),w,b
 11528   0124FA  0BF0               	andlw	240
 11529   0124FC  116D               	iorwf	Nrf24_setRetransmitDelay@value& (0+255),w,b
 11530   0124FE  6F6D               	movwf	Nrf24_setRetransmitDelay@value& (0+255),b
 11531   012500                     
 11532                           ; BSR set to: 5
 11533                           ;mirf.c: 370:  Nrf24_configRegister(0x04, value);
 11534   012500  C56D  F562         	movff	Nrf24_setRetransmitDelay@value,Nrf24_configRegister@value
 11535   012504  0E04               	movlw	4
 11536   012506  EC5A  F093         	call	_Nrf24_configRegister
 11537   01250A  0012               	return		;funcret
 11538   01250C                     __end_of_Nrf24_setRetransmitDelay:
 11539                           	callstack 0
 11540                           
 11541 ;; *************** function _Nrf24_setRADDR *****************
 11542 ;; Defined at:
 11543 ;;		line 102 in file "mirf.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;  dev             2   10[BANK5 ] PTR struct .
 11546 ;;		 -> dev(3), 
 11547 ;;  adr             2   12[BANK5 ] PTR unsigned char 
 11548 ;;		 -> STR_1(6), 
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;  i               2   24[BANK5 ] int 
 11551 ;;  buffer          5   17[BANK5 ] unsigned char [5]
 11552 ;;  ret             2   22[BANK5 ] int 
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  2   10[BANK5 ] int 
 11555 ;; Registers used:
 11556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11562 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11563 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11564 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11565 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11566 ;;Total ram usage:       16 bytes
 11567 ;; Hardware stack levels used: 1
 11568 ;; Hardware stack levels required when called: 10
 11569 ;; This function calls:
 11570 ;;		_Nrf24_readRegister
 11571 ;;		_Nrf24_writeRegister
 11572 ;; This function is called by:
 11573 ;;		_init_nrf
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           	psect	text8
 11578   011B66                     __ptext8:
 11579                           	callstack 0
 11580   011B66                     _Nrf24_setRADDR:
 11581                           	callstack 115
 11582   011B66                     
 11583                           ;mirf.c: 102: int Nrf24_setRADDR(NRF24_t * dev, uint8_t * adr);mirf.c: 103: {;mirf.c: 10
      +                          4:  int ret = 0;
 11584   011B66  0E00               	movlw	0
 11585   011B68  0105               	movlb	5	; () banked
 11586   011B6A  6F77               	movwf	(Nrf24_setRADDR@ret+1)& (0+255),b
 11587   011B6C  0E00               	movlw	0
 11588   011B6E  6F76               	movwf	Nrf24_setRADDR@ret& (0+255),b
 11589   011B70                     
 11590                           ; BSR set to: 5
 11591                           ;mirf.c: 105:  Nrf24_writeRegister(0x0B, adr, 5);
 11592   011B70  C56C  F566         	movff	Nrf24_setRADDR@adr,Nrf24_writeRegister@value
 11593   011B74  C56D  F567         	movff	Nrf24_setRADDR@adr+1,Nrf24_writeRegister@value+1
 11594   011B78  0E05               	movlw	5
 11595   011B7A  6F68               	movwf	Nrf24_writeRegister@len& (0+255),b
 11596   011B7C  0E0B               	movlw	11
 11597   011B7E  EC82  F091         	call	_Nrf24_writeRegister
 11598   011B82                     
 11599                           ;mirf.c: 106:  uint8_t buffer[5];;mirf.c: 107:  Nrf24_readRegister(0x0B, buffer, sizeof(
      +                          buffer));
 11600   011B82  0E71               	movlw	low Nrf24_setRADDR@buffer
 11601   011B84  0105               	movlb	5	; () banked
 11602   011B86  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 11603   011B88  0E05               	movlw	high Nrf24_setRADDR@buffer
 11604   011B8A  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 11605   011B8C  0E05               	movlw	5
 11606   011B8E  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 11607   011B90  0E0B               	movlw	11
 11608   011B92  ECEE  F091         	call	_Nrf24_readRegister
 11609   011B96                     
 11610                           ;mirf.c: 108:  for (int i=0;i<5;i++) {
 11611   011B96  0E00               	movlw	0
 11612   011B98  0105               	movlb	5	; () banked
 11613   011B9A  6F79               	movwf	(Nrf24_setRADDR@i+1)& (0+255),b
 11614   011B9C  0E00               	movlw	0
 11615   011B9E  6F78               	movwf	Nrf24_setRADDR@i& (0+255),b
 11616   011BA0                     l3838:
 11617                           
 11618                           ; BSR set to: 5
 11619                           ;mirf.c: 109:   if (adr[i] != buffer[i]) ret = -1;
 11620   011BA0  0E71               	movlw	low Nrf24_setRADDR@buffer
 11621   011BA2  2578               	addwf	Nrf24_setRADDR@i& (0+255),w,b
 11622   011BA4  6ED9               	movwf	fsr2l,c
 11623   011BA6  0E05               	movlw	high Nrf24_setRADDR@buffer
 11624   011BA8  2179               	addwfc	(Nrf24_setRADDR@i+1)& (0+255),w,b
 11625   011BAA  6EDA               	movwf	fsr2h,c
 11626   011BAC  5178               	movf	Nrf24_setRADDR@i& (0+255),w,b
 11627   011BAE  256C               	addwf	Nrf24_setRADDR@adr& (0+255),w,b
 11628   011BB0  6F6F               	movwf	(??_Nrf24_setRADDR+1)& (0+255),b
 11629   011BB2  5179               	movf	(Nrf24_setRADDR@i+1)& (0+255),w,b
 11630   011BB4  216D               	addwfc	(Nrf24_setRADDR@adr+1)& (0+255),w,b
 11631   011BB6  6F70               	movwf	(??_Nrf24_setRADDR+2)& (0+255),b
 11632   011BB8  C56F  F4F6         	movff	??_Nrf24_setRADDR+1,tblptrl
 11633   011BBC  C570  F4F7         	movff	??_Nrf24_setRADDR+2,tblptrh
 11634   011BC0                     	if	0	;tblptru may be non-zero
 11635   011BC0                     	endif
 11636   011BC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11637   011BC0  0E00               	movlw	low (__mediumconst shr (0+16))
 11638   011BC2  6EF8               	movwf	tblptru,c
 11639   011BC4                     	endif
 11640   011BC4  50DE               	movf	postinc2,w,c
 11641   011BC6  0009               	tblrd		*+
 11642   011BC8  18F5               	xorwf	tablat,w,c
 11643   011BCA  B4D8               	btfsc	status,2,c
 11644   011BCC  EFEA  F08D         	goto	u2731
 11645   011BD0  EFEC  F08D         	goto	u2730
 11646   011BD4                     u2731:
 11647   011BD4  EFEE  F08D         	goto	l3842
 11648   011BD8                     u2730:
 11649   011BD8                     
 11650                           ; BSR set to: 5
 11651   011BD8  6976               	setf	Nrf24_setRADDR@ret& (0+255),b
 11652   011BDA  6977               	setf	(Nrf24_setRADDR@ret+1)& (0+255),b
 11653   011BDC                     l3842:
 11654                           
 11655                           ; BSR set to: 5
 11656                           ;mirf.c: 110:  }
 11657   011BDC  4B78               	infsnz	Nrf24_setRADDR@i& (0+255),f,b
 11658   011BDE  2B79               	incf	(Nrf24_setRADDR@i+1)& (0+255),f,b
 11659   011BE0                     
 11660                           ; BSR set to: 5
 11661   011BE0  BF79               	btfsc	(Nrf24_setRADDR@i+1)& (0+255),7,b
 11662   011BE2  EFFC  F08D         	goto	u2741
 11663   011BE6  5179               	movf	(Nrf24_setRADDR@i+1)& (0+255),w,b
 11664   011BE8  E109               	bnz	u2740
 11665   011BEA  0E05               	movlw	5
 11666   011BEC  5D78               	subwf	Nrf24_setRADDR@i& (0+255),w,b
 11667   011BEE  A0D8               	btfss	status,0,c
 11668   011BF0  EFFC  F08D         	goto	u2741
 11669   011BF4  EFFE  F08D         	goto	u2740
 11670   011BF8                     u2741:
 11671   011BF8  EFD0  F08D         	goto	l3838
 11672   011BFC                     u2740:
 11673   011BFC                     
 11674                           ; BSR set to: 5
 11675                           ;mirf.c: 111:  return ret;
 11676   011BFC  C576  F56A         	movff	Nrf24_setRADDR@ret,?_Nrf24_setRADDR
 11677   011C00  C577  F56B         	movff	Nrf24_setRADDR@ret+1,?_Nrf24_setRADDR+1
 11678   011C04                     
 11679                           ; BSR set to: 5
 11680   011C04  0012               	return		;funcret
 11681   011C06                     __end_of_Nrf24_setRADDR:
 11682                           	callstack 0
 11683                           
 11684 ;; *************** function _Nrf24_writeRegister *****************
 11685 ;; Defined at:
 11686 ;;		line 218 in file "mirf.c"
 11687 ;; Parameters:    Size  Location     Type
 11688 ;;  reg             1    wreg     unsigned char 
 11689 ;;  value           2    6[BANK5 ] PTR unsigned char 
 11690 ;;		 -> STR_2(6), STR_1(6), 
 11691 ;;  len             1    8[BANK5 ] unsigned char 
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;  reg             1    9[BANK5 ] unsigned char 
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  1    wreg      void 
 11696 ;; Registers used:
 11697 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11703 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11704 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11706 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11707 ;;Total ram usage:        4 bytes
 11708 ;; Hardware stack levels used: 1
 11709 ;; Hardware stack levels required when called: 9
 11710 ;; This function calls:
 11711 ;;		_SPI1_ByteExchange
 11712 ;;		_SPI_write_buff
 11713 ;; This function is called by:
 11714 ;;		_Nrf24_setRADDR
 11715 ;;		_Nrf24_setTADDR
 11716 ;; This function uses a non-reentrant model
 11717 ;;
 11718                           
 11719                           	psect	text9
 11720   012304                     __ptext9:
 11721                           	callstack 0
 11722   012304                     _Nrf24_writeRegister:
 11723                           	callstack 115
 11724                           
 11725                           ; BSR set to: 5
 11726                           ;incstack = 0
 11727                           ;Nrf24_writeRegister@reg stored from wreg
 11728   012304  0105               	movlb	5	; () banked
 11729   012306  6F69               	movwf	Nrf24_writeRegister@reg& (0+255),b
 11730   012308                     
 11731                           ;mirf.c: 218: void Nrf24_writeRegister(uint8_t reg, uint8_t * value, uint8_t len);mirf.c
      +                          : 219: {;mirf.c: 220:     if(len) {
 11732   012308  0105               	movlb	5	; () banked
 11733   01230A  5168               	movf	Nrf24_writeRegister@len& (0+255),w,b
 11734   01230C  B4D8               	btfsc	status,2,c
 11735   01230E  EF8B  F091         	goto	u2551
 11736   012312  EF8D  F091         	goto	u2550
 11737   012316                     u2551:
 11738   012316  EF9C  F091         	goto	l792
 11739   01231A                     u2550:
 11740   01231A                     
 11741                           ; BSR set to: 5
 11742   01231A  9EC0               	bcf	192,7,c	;volatile
 11743   01231C                     
 11744                           ; BSR set to: 5
 11745                           ;mirf.c: 222:         SPI1_ByteExchange(0x20 | (0x1F & reg));
 11746   01231C  5169               	movf	Nrf24_writeRegister@reg& (0+255),w,b
 11747   01231E  0B1F               	andlw	31
 11748   012320  0920               	iorlw	32
 11749   012322  EC49  F091         	call	_SPI1_ByteExchange
 11750   012326                     
 11751                           ;mirf.c: 223:         SPI_write_buff(value, len);
 11752   012326  C566  F562         	movff	Nrf24_writeRegister@value,SPI_write_buff@buffer
 11753   01232A  C567  F563         	movff	Nrf24_writeRegister@value+1,SPI_write_buff@buffer+1
 11754   01232E  C568  F564         	movff	Nrf24_writeRegister@len,SPI_write_buff@bytes
 11755   012332  EC00  F091         	call	_SPI_write_buff	;wreg free
 11756   012336  8EC0               	bsf	192,7,c	;volatile
 11757   012338                     l792:
 11758   012338  0012               	return		;funcret
 11759   01233A                     __end_of_Nrf24_writeRegister:
 11760                           	callstack 0
 11761                           
 11762 ;; *************** function _SPI_write_buff *****************
 11763 ;; Defined at:
 11764 ;;		line 54 in file "mirf.c"
 11765 ;; Parameters:    Size  Location     Type
 11766 ;;  buffer          2    2[BANK5 ] PTR unsigned char 
 11767 ;;		 -> STR_2(6), STR_1(6), 
 11768 ;;  bytes           1    4[BANK5 ] unsigned char 
 11769 ;; Auto vars:     Size  Location     Type
 11770 ;;  i               1    5[BANK5 ] unsigned char 
 11771 ;; Return value:  Size  Location     Type
 11772 ;;                  1    wreg      void 
 11773 ;; Registers used:
 11774 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11775 ;; Tracked objects:
 11776 ;;		On entry : 0/0
 11777 ;;		On exit  : 0/0
 11778 ;;		Unchanged: 0/0
 11779 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11780 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11781 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11783 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11784 ;;Total ram usage:        4 bytes
 11785 ;; Hardware stack levels used: 1
 11786 ;; Hardware stack levels required when called: 8
 11787 ;; This function calls:
 11788 ;;		_DELAY_microseconds
 11789 ;;		_SPI1_ByteExchange
 11790 ;; This function is called by:
 11791 ;;		_Nrf24_writeRegister
 11792 ;;		_Nrf24_send
 11793 ;; This function uses a non-reentrant model
 11794 ;;
 11795                           
 11796                           	psect	text10
 11797   012200                     __ptext10:
 11798                           	callstack 0
 11799   012200                     _SPI_write_buff:
 11800                           	callstack 115
 11801   012200  9EC0               	bcf	192,7,c	;volatile
 11802   012202                     
 11803                           ;mirf.c: 56:     unsigned char i;;mirf.c: 57:     for (i = 0; i < bytes; i++) {
 11804   012202  0105               	movlb	5	; () banked
 11805   012204  6B65               	clrf	SPI_write_buff@i& (0+255),b
 11806   012206  EF1A  F091         	goto	l3506
 11807   01220A                     l3498:
 11808                           
 11809                           ; BSR set to: 5
 11810                           ;mirf.c: 58:         SPI1_ByteExchange(*buffer);
 11811   01220A  C562  F4F6         	movff	SPI_write_buff@buffer,tblptrl
 11812   01220E  C563  F4F7         	movff	SPI_write_buff@buffer+1,tblptrh
 11813   012212                     	if	0	;tblptru may be non-zero
 11814   012212                     	endif
 11815   012212                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11816   012212  0E00               	movlw	low (__mediumconst shr (0+16))
 11817   012214  6EF8               	movwf	tblptru,c
 11818   012216                     	endif
 11819   012216  0008               	tblrd		*
 11820   012218  50F5               	movf	tablat,w,c
 11821   01221A  EC49  F091         	call	_SPI1_ByteExchange
 11822   01221E                     
 11823                           ;mirf.c: 59:         buffer++;
 11824   01221E  0105               	movlb	5	; () banked
 11825   012220  4B62               	infsnz	SPI_write_buff@buffer& (0+255),f,b
 11826   012222  2B63               	incf	(SPI_write_buff@buffer+1)& (0+255),f,b
 11827   012224                     
 11828                           ; BSR set to: 5
 11829                           ;mirf.c: 60:         DELAY_microseconds(10);
 11830   012224  0E00               	movlw	0
 11831   012226  6F61               	movwf	(DELAY_microseconds@microseconds+1)& (0+255),b
 11832   012228  0E0A               	movlw	10
 11833   01222A  6F60               	movwf	DELAY_microseconds@microseconds& (0+255),b
 11834   01222C  EC7E  F090         	call	_DELAY_microseconds	;wreg free
 11835   012230                     
 11836                           ;mirf.c: 61:     }
 11837   012230  0105               	movlb	5	; () banked
 11838   012232  2B65               	incf	SPI_write_buff@i& (0+255),f,b
 11839   012234                     l3506:
 11840                           
 11841                           ; BSR set to: 5
 11842   012234  5164               	movf	SPI_write_buff@bytes& (0+255),w,b
 11843   012236  5D65               	subwf	SPI_write_buff@i& (0+255),w,b
 11844   012238  A0D8               	btfss	status,0,c
 11845   01223A  EF21  F091         	goto	u2511
 11846   01223E  EF23  F091         	goto	u2510
 11847   012242                     u2511:
 11848   012242  EF05  F091         	goto	l3498
 11849   012246                     u2510:
 11850   012246                     
 11851                           ; BSR set to: 5
 11852   012246  8EC0               	bsf	192,7,c	;volatile
 11853   012248                     
 11854                           ; BSR set to: 5
 11855   012248  0012               	return		;funcret
 11856   01224A                     __end_of_SPI_write_buff:
 11857                           	callstack 0
 11858                           
 11859 ;; *************** function _DELAY_microseconds *****************
 11860 ;; Defined at:
 11861 ;;		line 43 in file "mcc_generated_files/timer/src/delay.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;  microseconds    2    0[BANK5 ] unsigned short 
 11864 ;; Auto vars:     Size  Location     Type
 11865 ;;		None
 11866 ;; Return value:  Size  Location     Type
 11867 ;;                  1    wreg      void 
 11868 ;; Registers used:
 11869 ;;		wreg, status,2, status,0
 11870 ;; Tracked objects:
 11871 ;;		On entry : 0/0
 11872 ;;		On exit  : 0/0
 11873 ;;		Unchanged: 0/0
 11874 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11878 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11879 ;;Total ram usage:        2 bytes
 11880 ;; Hardware stack levels used: 1
 11881 ;; Hardware stack levels required when called: 7
 11882 ;; This function calls:
 11883 ;;		Nothing
 11884 ;; This function is called by:
 11885 ;;		_SPI_write_buff
 11886 ;; This function uses a non-reentrant model
 11887 ;;
 11888                           
 11889                           	psect	text11
 11890   0120FC                     __ptext11:
 11891                           	callstack 0
 11892   0120FC                     _DELAY_microseconds:
 11893                           	callstack 115
 11894   0120FC                     
 11895                           ;mcc_generated_files/timer/src/delay.c: 44:     while( microseconds >= 32)
 11896   0120FC  EF89  F090         	goto	l3434
 11897   012100                     l3430:
 11898                           
 11899                           ; BSR set to: 5
 11900                           ;mcc_generated_files/timer/src/delay.c: 45:     {;mcc_generated_files/timer/src/delay.c:
      +                           46:         _delay((unsigned long)((32)*(64000000U/4000000.0)));
 11901   012100  0EAA               	movlw	170
 11902   012102                     u3197:
 11903   012102  2EE8               	decfsz	wreg,f,c
 11904   012104  D7FE               	bra	u3197
 11905   012106  D000               	nop2	
 11906   012108                     
 11907                           ;mcc_generated_files/timer/src/delay.c: 47:         microseconds -= 32;
 11908   012108  0E20               	movlw	32
 11909   01210A  0105               	movlb	5	; () banked
 11910   01210C  5F60               	subwf	DELAY_microseconds@microseconds& (0+255),f,b
 11911   01210E  0E00               	movlw	0
 11912   012110  5B61               	subwfb	(DELAY_microseconds@microseconds+1)& (0+255),f,b
 11913   012112                     l3434:
 11914                           
 11915                           ;mcc_generated_files/timer/src/delay.c: 44:     while( microseconds >= 32)
 11916   012112  0105               	movlb	5	; () banked
 11917   012114  5161               	movf	(DELAY_microseconds@microseconds+1)& (0+255),w,b
 11918   012116  E107               	bnz	u2301
 11919   012118  0E20               	movlw	32
 11920   01211A  5D60               	subwf	DELAY_microseconds@microseconds& (0+255),w,b
 11921   01211C  B0D8               	btfsc	status,0,c
 11922   01211E  EF93  F090         	goto	u2301
 11923   012122  EF95  F090         	goto	u2300
 11924   012126                     u2301:
 11925   012126  EF80  F090         	goto	l3430
 11926   01212A                     u2300:
 11927   01212A  EF9B  F090         	goto	l3438
 11928   01212E                     l3436:
 11929                           
 11930                           ; BSR set to: 5
 11931                           ;mcc_generated_files/timer/src/delay.c: 51:     {;mcc_generated_files/timer/src/delay.c:
      +                           52:         _delay((unsigned long)((1)*(64000000U/4000000.0)));
 11932   01212E  0E05               	movlw	5
 11933   012130                     u3207:
 11934   012130  2EE8               	decfsz	wreg,f,c
 11935   012132  D7FE               	bra	u3207
 11936   012134  0000               	nop	
 11937   012136                     l3438:
 11938                           
 11939                           ;mcc_generated_files/timer/src/delay.c: 50:     while(microseconds--)
 11940   012136  0105               	movlb	5	; () banked
 11941   012138  0760               	decf	DELAY_microseconds@microseconds& (0+255),f,b
 11942   01213A  A0D8               	btfss	status,0,c
 11943   01213C  0761               	decf	(DELAY_microseconds@microseconds+1)& (0+255),f,b
 11944   01213E  2960               	incf	DELAY_microseconds@microseconds& (0+255),w,b
 11945   012140  E106               	bnz	u2311
 11946   012142  2961               	incf	(DELAY_microseconds@microseconds+1)& (0+255),w,b
 11947   012144  A4D8               	btfss	status,2,c
 11948   012146  EFA7  F090         	goto	u2311
 11949   01214A  EFA9  F090         	goto	u2310
 11950   01214E                     u2311:
 11951   01214E  EF97  F090         	goto	l3436
 11952   012152                     u2310:
 11953   012152                     
 11954                           ; BSR set to: 5
 11955   012152  0012               	return		;funcret
 11956   012154                     __end_of_DELAY_microseconds:
 11957                           	callstack 0
 11958                           
 11959 ;; *************** function _Nrf24_printDetails *****************
 11960 ;; Defined at:
 11961 ;;		line 374 in file "mirf.c"
 11962 ;; Parameters:    Size  Location     Type
 11963 ;;  dev             2   91[BANK5 ] PTR struct .
 11964 ;;		 -> dev(3), 
 11965 ;; Auto vars:     Size  Location     Type
 11966 ;;  delay           2   97[BANK5 ] short 
 11967 ;;  retransmit      1   99[BANK5 ] unsigned char 
 11968 ;; Return value:  Size  Location     Type
 11969 ;;                  1    wreg      void 
 11970 ;; Registers used:
 11971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11972 ;; Tracked objects:
 11973 ;;		On entry : 0/0
 11974 ;;		On exit  : 0/0
 11975 ;;		Unchanged: 0/0
 11976 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11977 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11978 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11979 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11980 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11981 ;;Total ram usage:        9 bytes
 11982 ;; Hardware stack levels used: 1
 11983 ;; Hardware stack levels required when called: 16
 11984 ;; This function calls:
 11985 ;;		_Nrf24_getCRCLength
 11986 ;;		_Nrf24_getDataRate
 11987 ;;		_Nrf24_getPALevel
 11988 ;;		_Nrf24_getRetransmitDelay
 11989 ;;		_Nrf24_getStatus
 11990 ;;		_Nrf24_print_address_register
 11991 ;;		_Nrf24_print_byte_register
 11992 ;;		_Nrf24_print_status
 11993 ;;		_printf
 11994 ;; This function is called by:
 11995 ;;		_init_nrf
 11996 ;; This function uses a non-reentrant model
 11997 ;;
 11998                           
 11999                           	psect	text12
 12000   01080C                     __ptext12:
 12001                           	callstack 0
 12002   01080C                     _Nrf24_printDetails:
 12003                           	callstack 109
 12004   01080C                     
 12005                           ;mirf.c: 374: void Nrf24_printDetails(NRF24_t * dev);mirf.c: 375: {;mirf.c: 376:  printf
      +                          ("================ NRF Configuration ================\n");
 12006   01080C  0EFD               	movlw	low STR_3
 12007   01080E  0105               	movlb	5	; () banked
 12008   010810  6F9D               	movwf	printf@fmt& (0+255),b
 12009   010812  0EFE               	movlw	high STR_3
 12010   010814  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12011   010816  ECCB  F092         	call	_printf	;wreg free
 12012                           
 12013                           ;mirf.c: 378:  Nrf24_print_status(Nrf24_getStatus(dev));
 12014   01081A  C5BB  F56A         	movff	Nrf24_printDetails@dev,Nrf24_getStatus@dev
 12015   01081E  C5BC  F56B         	movff	Nrf24_printDetails@dev+1,Nrf24_getStatus@dev+1
 12016   010822  EC77  F093         	call	_Nrf24_getStatus	;wreg free
 12017   010826  ECE9  F08E         	call	_Nrf24_print_status
 12018                           
 12019                           ;mirf.c: 380:  Nrf24_print_address_register(dev, "RX_ADDR_P0-1", 0x0A, 2);
 12020   01082A  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_address_register@dev
 12021   01082E  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_address_register@dev+1
 12022   010832  0E88               	movlw	low STR_4
 12023   010834  0105               	movlb	5	; () banked
 12024   010836  6FAF               	movwf	Nrf24_print_address_register@name& (0+255),b
 12025   010838  0EFF               	movlw	high STR_4
 12026   01083A  6FB0               	movwf	(Nrf24_print_address_register@name+1)& (0+255),b
 12027   01083C  0E0A               	movlw	10
 12028   01083E  6FB1               	movwf	Nrf24_print_address_register@reg& (0+255),b
 12029   010840  0E02               	movlw	2
 12030   010842  6FB2               	movwf	Nrf24_print_address_register@qty& (0+255),b
 12031   010844  EC0B  F08D         	call	_Nrf24_print_address_register	;wreg free
 12032                           
 12033                           ;mirf.c: 381:  Nrf24_print_byte_register(dev, "RX_ADDR_P2-5", 0x0C, 4);
 12034   010848  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 12035   01084C  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 12036   010850  0E95               	movlw	low STR_5
 12037   010852  0105               	movlb	5	; () banked
 12038   010854  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 12039   010856  0EFF               	movlw	high STR_5
 12040   010858  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 12041   01085A  0E0C               	movlw	12
 12042   01085C  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 12043   01085E  0E04               	movlw	4
 12044   010860  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 12045   010862  EC4C  F090         	call	_Nrf24_print_byte_register	;wreg free
 12046                           
 12047                           ;mirf.c: 382:  Nrf24_print_address_register(dev, "TX_ADDR\t", 0x10, 1);
 12048   010866  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_address_register@dev
 12049   01086A  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_address_register@dev+1
 12050   01086E  0EB7               	movlw	low STR_6
 12051   010870  0105               	movlb	5	; () banked
 12052   010872  6FAF               	movwf	Nrf24_print_address_register@name& (0+255),b
 12053   010874  0EFF               	movlw	high STR_6
 12054   010876  6FB0               	movwf	(Nrf24_print_address_register@name+1)& (0+255),b
 12055   010878  0E10               	movlw	16
 12056   01087A  6FB1               	movwf	Nrf24_print_address_register@reg& (0+255),b
 12057   01087C  0E01               	movlw	1
 12058   01087E  6FB2               	movwf	Nrf24_print_address_register@qty& (0+255),b
 12059   010880  EC0B  F08D         	call	_Nrf24_print_address_register	;wreg free
 12060                           
 12061                           ;mirf.c: 384:  Nrf24_print_byte_register(dev, "RX_PW_P0-6", 0x11, 6);
 12062   010884  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 12063   010888  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 12064   01088C  0EA2               	movlw	low STR_7
 12065   01088E  0105               	movlb	5	; () banked
 12066   010890  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 12067   010892  0EFF               	movlw	high STR_7
 12068   010894  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 12069   010896  0E11               	movlw	17
 12070   010898  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 12071   01089A  0E06               	movlw	6
 12072   01089C  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 12073   01089E  EC4C  F090         	call	_Nrf24_print_byte_register	;wreg free
 12074                           
 12075                           ;mirf.c: 385:  Nrf24_print_byte_register(dev, "EN_AA\t", 0x01, 1);
 12076   0108A2  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 12077   0108A6  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 12078   0108AA  0EE0               	movlw	low STR_8
 12079   0108AC  0105               	movlb	5	; () banked
 12080   0108AE  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 12081   0108B0  0EFF               	movlw	high STR_8
 12082   0108B2  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 12083   0108B4  0E01               	movlw	1
 12084   0108B6  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 12085   0108B8  0E01               	movlw	1
 12086   0108BA  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 12087   0108BC  EC4C  F090         	call	_Nrf24_print_byte_register	;wreg free
 12088                           
 12089                           ;mirf.c: 386:  Nrf24_print_byte_register(dev, "EN_RXADDR", 0x02, 1);
 12090   0108C0  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 12091   0108C4  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 12092   0108C8  0EAD               	movlw	low STR_9
 12093   0108CA  0105               	movlb	5	; () banked
 12094   0108CC  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 12095   0108CE  0EFF               	movlw	high STR_9
 12096   0108D0  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 12097   0108D2  0E02               	movlw	2
 12098   0108D4  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 12099   0108D6  0E01               	movlw	1
 12100   0108D8  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 12101   0108DA  EC4C  F090         	call	_Nrf24_print_byte_register	;wreg free
 12102                           
 12103                           ;mirf.c: 387:  Nrf24_print_byte_register(dev, "RF_CH\t", 0x05, 1);
 12104   0108DE  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 12105   0108E2  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 12106   0108E6  0EE7               	movlw	low STR_10
 12107   0108E8  0105               	movlb	5	; () banked
 12108   0108EA  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 12109   0108EC  0EFF               	movlw	high STR_10
 12110   0108EE  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 12111   0108F0  0E05               	movlw	5
 12112   0108F2  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 12113   0108F4  0E01               	movlw	1
 12114   0108F6  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 12115   0108F8  EC4C  F090         	call	_Nrf24_print_byte_register	;wreg free
 12116                           
 12117                           ;mirf.c: 388:  Nrf24_print_byte_register(dev, "RF_SETUP", 0x06, 1);
 12118   0108FC  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 12119   010900  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 12120   010904  0EC0               	movlw	low STR_11
 12121   010906  0105               	movlb	5	; () banked
 12122   010908  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 12123   01090A  0EFF               	movlw	high STR_11
 12124   01090C  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 12125   01090E  0E06               	movlw	6
 12126   010910  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 12127   010912  0E01               	movlw	1
 12128   010914  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 12129   010916  EC4C  F090         	call	_Nrf24_print_byte_register	;wreg free
 12130                           
 12131                           ;mirf.c: 389:  Nrf24_print_byte_register(dev, "CONFIG\t", 0x00, 1);
 12132   01091A  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 12133   01091E  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 12134   010922  0EC9               	movlw	low STR_12
 12135   010924  0105               	movlb	5	; () banked
 12136   010926  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 12137   010928  0EFF               	movlw	high STR_12
 12138   01092A  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 12139   01092C  0E00               	movlw	0
 12140   01092E  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 12141   010930  0E01               	movlw	1
 12142   010932  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 12143   010934  EC4C  F090         	call	_Nrf24_print_byte_register	;wreg free
 12144                           
 12145                           ;mirf.c: 390:  Nrf24_print_byte_register(dev, "DYNPD/FEATURE", 0x1C, 2);
 12146   010938  C5BB  F5AD         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 12147   01093C  C5BC  F5AE         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 12148   010940  0E7A               	movlw	low STR_13
 12149   010942  0105               	movlb	5	; () banked
 12150   010944  6FAF               	movwf	Nrf24_print_byte_register@name& (0+255),b
 12151   010946  0EFF               	movlw	high STR_13
 12152   010948  6FB0               	movwf	(Nrf24_print_byte_register@name+1)& (0+255),b
 12153   01094A  0E1C               	movlw	28
 12154   01094C  6FB1               	movwf	Nrf24_print_byte_register@reg& (0+255),b
 12155   01094E  0E02               	movlw	2
 12156   010950  6FB2               	movwf	Nrf24_print_byte_register@qty& (0+255),b
 12157   010952  EC4C  F090         	call	_Nrf24_print_byte_register	;wreg free
 12158                           
 12159                           ;mirf.c: 391:  printf("Data Rate\t = %s\n",rf24_datarates[Nrf24_getDataRate(dev)]);
 12160   010956  0E59               	movlw	low STR_14
 12161   010958  0105               	movlb	5	; () banked
 12162   01095A  6F9D               	movwf	printf@fmt& (0+255),b
 12163   01095C  0EFF               	movlw	high STR_14
 12164   01095E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12165   010960  C5BB  F56A         	movff	Nrf24_printDetails@dev,Nrf24_getDataRate@dev
 12166   010964  C5BC  F56B         	movff	Nrf24_printDetails@dev+1,Nrf24_getDataRate@dev+1
 12167   010968  ECD5  F090         	call	_Nrf24_getDataRate	;wreg free
 12168   01096C  0105               	movlb	5	; () banked
 12169   01096E  6FBD               	movwf	??_Nrf24_printDetails& (0+255),b
 12170   010970  51BD               	movf	??_Nrf24_printDetails& (0+255),w,b
 12171   010972  0D08               	mullw	8
 12172   010974  0EE8               	movlw	low _rf24_datarates
 12173   010976  24F3               	addwf	243,w,c
 12174   010978  6F9F               	movwf	(?_printf+2)& (0+255),b
 12175   01097A  0E06               	movlw	high _rf24_datarates
 12176   01097C  20F4               	addwfc	prodh,w,c
 12177   01097E  6FA0               	movwf	(?_printf+3)& (0+255),b
 12178   010980  ECCB  F092         	call	_printf	;wreg free
 12179                           
 12180                           ;mirf.c: 392:  printf("CRC Length\t = %s\n", rf24_crclength[Nrf24_getCRCLength(dev)]);
 12181   010984  0E47               	movlw	low STR_15
 12182   010986  0105               	movlb	5	; () banked
 12183   010988  6F9D               	movwf	printf@fmt& (0+255),b
 12184   01098A  0EFF               	movlw	high STR_15
 12185   01098C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12186   01098E  C5BB  F56A         	movff	Nrf24_printDetails@dev,Nrf24_getCRCLength@dev
 12187   010992  C5BC  F56B         	movff	Nrf24_printDetails@dev+1,Nrf24_getCRCLength@dev+1
 12188   010996  ECDE  F08F         	call	_Nrf24_getCRCLength	;wreg free
 12189   01099A  0105               	movlb	5	; () banked
 12190   01099C  6FBD               	movwf	??_Nrf24_printDetails& (0+255),b
 12191   01099E  51BD               	movf	??_Nrf24_printDetails& (0+255),w,b
 12192   0109A0  0D0A               	mullw	10
 12193   0109A2  0E99               	movlw	low _rf24_crclength
 12194   0109A4  24F3               	addwf	243,w,c
 12195   0109A6  6F9F               	movwf	(?_printf+2)& (0+255),b
 12196   0109A8  0EFE               	movlw	high _rf24_crclength
 12197   0109AA  20F4               	addwfc	prodh,w,c
 12198   0109AC  6FA0               	movwf	(?_printf+3)& (0+255),b
 12199   0109AE  ECCB  F092         	call	_printf	;wreg free
 12200                           
 12201                           ;mirf.c: 393:  printf("PA Power\t = %s\n", rf24_pa_dbm[Nrf24_getPALevel(dev)]);
 12202   0109B2  0E6A               	movlw	low STR_16
 12203   0109B4  0105               	movlb	5	; () banked
 12204   0109B6  6F9D               	movwf	printf@fmt& (0+255),b
 12205   0109B8  0EFF               	movlw	high STR_16
 12206   0109BA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12207   0109BC  C5BB  F56A         	movff	Nrf24_printDetails@dev,Nrf24_getPALevel@dev
 12208   0109C0  C5BC  F56B         	movff	Nrf24_printDetails@dev+1,Nrf24_getPALevel@dev+1
 12209   0109C4  EC1A  F093         	call	_Nrf24_getPALevel	;wreg free
 12210   0109C8  0105               	movlb	5	; () banked
 12211   0109CA  6FBD               	movwf	??_Nrf24_printDetails& (0+255),b
 12212   0109CC  51BD               	movf	??_Nrf24_printDetails& (0+255),w,b
 12213   0109CE  0D08               	mullw	8
 12214   0109D0  0EC8               	movlw	low _rf24_pa_dbm
 12215   0109D2  24F3               	addwf	243,w,c
 12216   0109D4  6F9F               	movwf	(?_printf+2)& (0+255),b
 12217   0109D6  0E09               	movlw	high _rf24_pa_dbm
 12218   0109D8  20F4               	addwfc	prodh,w,c
 12219   0109DA  6FA0               	movwf	(?_printf+3)& (0+255),b
 12220   0109DC  ECCB  F092         	call	_printf	;wreg free
 12221   0109E0                     
 12222                           ;mirf.c: 394:  uint8_t retransmit = Nrf24_getRetransmitDelay(dev);
 12223   0109E0  C5BB  F56A         	movff	Nrf24_printDetails@dev,Nrf24_getRetransmitDelay@dev
 12224   0109E4  C5BC  F56B         	movff	Nrf24_printDetails@dev+1,Nrf24_getRetransmitDelay@dev+1
 12225   0109E8  EC69  F093         	call	_Nrf24_getRetransmitDelay	;wreg free
 12226   0109EC  0105               	movlb	5	; () banked
 12227   0109EE  6FC3               	movwf	Nrf24_printDetails@retransmit& (0+255),b
 12228   0109F0                     
 12229                           ; BSR set to: 5
 12230                           ;mirf.c: 395:  int16_t delay = (retransmit+1)*250;
 12231   0109F0  51C3               	movf	Nrf24_printDetails@retransmit& (0+255),w,b
 12232   0109F2  6FBD               	movwf	??_Nrf24_printDetails& (0+255),b
 12233   0109F4  6BBE               	clrf	(??_Nrf24_printDetails+1)& (0+255),b
 12234   0109F6  0E01               	movlw	1
 12235   0109F8  27BD               	addwf	??_Nrf24_printDetails& (0+255),f,b
 12236   0109FA  0E00               	movlw	0
 12237   0109FC  23BE               	addwfc	(??_Nrf24_printDetails+1)& (0+255),f,b
 12238   0109FE  0EFA               	movlw	250
 12239   010A00  03BD               	mulwf	??_Nrf24_printDetails& (0+255),b
 12240   010A02  C4F3 F5BF          	movff	prodl,??_Nrf24_printDetails+2
 12241   010A06  C4F4 F5C0          	movff	prodh,??_Nrf24_printDetails+3
 12242   010A0A  03BE               	mulwf	(??_Nrf24_printDetails+1)& (0+255),b
 12243   010A0C  50F3               	movf	prodl,w,c
 12244   010A0E  27C0               	addwf	(??_Nrf24_printDetails+3)& (0+255),f,b
 12245   010A10  C5BF  F5C1         	movff	??_Nrf24_printDetails+2,Nrf24_printDetails@delay
 12246   010A14  C5C0  F5C2         	movff	??_Nrf24_printDetails+3,Nrf24_printDetails@delay+1
 12247   010A18                     
 12248                           ; BSR set to: 5
 12249                           ;mirf.c: 396:  printf("Retransmit\t = %d us\n", delay);
 12250   010A18  0E32               	movlw	low STR_17
 12251   010A1A  6F9D               	movwf	printf@fmt& (0+255),b
 12252   010A1C  0EFF               	movlw	high STR_17
 12253   010A1E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12254   010A20  C5C1  F59F         	movff	Nrf24_printDetails@delay,?_printf+2
 12255   010A24  C5C2  F5A0         	movff	Nrf24_printDetails@delay+1,?_printf+3
 12256   010A28  ECCB  F092         	call	_printf	;wreg free
 12257   010A2C  0012               	return		;funcret
 12258   010A2E                     __end_of_Nrf24_printDetails:
 12259                           	callstack 0
 12260                           
 12261 ;; *************** function _Nrf24_print_status *****************
 12262 ;; Defined at:
 12263 ;;		line 401 in file "mirf.c"
 12264 ;; Parameters:    Size  Location     Type
 12265 ;;  status          1    wreg     unsigned char 
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;  status          1   78[BANK5 ] unsigned char 
 12268 ;; Return value:  Size  Location     Type
 12269 ;;                  1    wreg      void 
 12270 ;; Registers used:
 12271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12272 ;; Tracked objects:
 12273 ;;		On entry : 0/0
 12274 ;;		On exit  : 0/0
 12275 ;;		Unchanged: 0/0
 12276 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12278 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12279 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12280 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12281 ;;Total ram usage:        2 bytes
 12282 ;; Hardware stack levels used: 1
 12283 ;; Hardware stack levels required when called: 15
 12284 ;; This function calls:
 12285 ;;		_printf
 12286 ;; This function is called by:
 12287 ;;		_Nrf24_printDetails
 12288 ;; This function uses a non-reentrant model
 12289 ;;
 12290                           
 12291                           	psect	text13
 12292   011DD2                     __ptext13:
 12293                           	callstack 0
 12294   011DD2                     _Nrf24_print_status:
 12295                           	callstack 109
 12296                           
 12297                           ;incstack = 0
 12298                           ;Nrf24_print_status@status stored from wreg
 12299   011DD2  0105               	movlb	5	; () banked
 12300   011DD4  6FAE               	movwf	Nrf24_print_status@status& (0+255),b
 12301   011DD6                     
 12302                           ;mirf.c: 401: void Nrf24_print_status(uint8_t status);mirf.c: 402: {;mirf.c: 403:  print
      +                          f("STATUS\t\t = 0x%02x RX_DR=%x TX_DS=%x MAX_RT=%x RX_P_NO=%x TX_FULL=%x\r\n", status, (
      +                          status & (1<<(6))) ? 1 : 0,
 12303   011DD6  0EB7               	movlw	low STR_18
 12304   011DD8  0105               	movlb	5	; () banked
 12305   011DDA  6F9D               	movwf	printf@fmt& (0+255),b
 12306   011DDC  0EFE               	movlw	high STR_18
 12307   011DDE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12308   011DE0  C5AE  F59F         	movff	Nrf24_print_status@status,?_printf+2
 12309   011DE4  6BA0               	clrf	(?_printf+3)& (0+255),b
 12310   011DE6  BDAE               	btfsc	Nrf24_print_status@status& (0+255),6,b
 12311   011DE8  EFF8  F08E         	goto	u2561
 12312   011DEC  EFFB  F08E         	goto	u2560
 12313   011DF0                     u2561:
 12314   011DF0  0E01               	movlw	1
 12315   011DF2  EFFC  F08E         	goto	u2570
 12316   011DF6                     u2560:
 12317   011DF6  0E00               	movlw	0
 12318   011DF8                     u2570:
 12319   011DF8  6FA1               	movwf	(?_printf+4)& (0+255),b
 12320   011DFA  6BA2               	clrf	(?_printf+5)& (0+255),b
 12321   011DFC  BBAE               	btfsc	Nrf24_print_status@status& (0+255),5,b
 12322   011DFE  EF03  F08F         	goto	u2581
 12323   011E02  EF06  F08F         	goto	u2580
 12324   011E06                     u2581:
 12325   011E06  0E01               	movlw	1
 12326   011E08  EF07  F08F         	goto	u2590
 12327   011E0C                     u2580:
 12328   011E0C  0E00               	movlw	0
 12329   011E0E                     u2590:
 12330   011E0E  6FA3               	movwf	(?_printf+6)& (0+255),b
 12331   011E10  6BA4               	clrf	(?_printf+7)& (0+255),b
 12332   011E12  B9AE               	btfsc	Nrf24_print_status@status& (0+255),4,b
 12333   011E14  EF0E  F08F         	goto	u2601
 12334   011E18  EF11  F08F         	goto	u2600
 12335   011E1C                     u2601:
 12336   011E1C  0E01               	movlw	1
 12337   011E1E  EF12  F08F         	goto	u2610
 12338   011E22                     u2600:
 12339   011E22  0E00               	movlw	0
 12340   011E24                     u2610:
 12341   011E24  6FA5               	movwf	(?_printf+8)& (0+255),b
 12342   011E26  6BA6               	clrf	(?_printf+9)& (0+255),b
 12343   011E28  C5AE  F5AD         	movff	Nrf24_print_status@status,??_Nrf24_print_status
 12344   011E2C  90D8               	bcf	status,0,c
 12345   011E2E  33AD               	rrcf	??_Nrf24_print_status& (0+255),f,b
 12346   011E30  0E07               	movlw	7
 12347   011E32  17AD               	andwf	??_Nrf24_print_status& (0+255),f,b
 12348   011E34  51AD               	movf	??_Nrf24_print_status& (0+255),w,b
 12349   011E36  6FA7               	movwf	(?_printf+10)& (0+255),b
 12350   011E38  6BA8               	clrf	(?_printf+11)& (0+255),b
 12351   011E3A  B1AE               	btfsc	Nrf24_print_status@status& (0+255),0,b
 12352   011E3C  EF22  F08F         	goto	u2621
 12353   011E40  EF25  F08F         	goto	u2620
 12354   011E44                     u2621:
 12355   011E44  0E01               	movlw	1
 12356   011E46  EF26  F08F         	goto	u2630
 12357   011E4A                     u2620:
 12358   011E4A  0E00               	movlw	0
 12359   011E4C                     u2630:
 12360   011E4C  6FA9               	movwf	(?_printf+12)& (0+255),b
 12361   011E4E  6BAA               	clrf	(?_printf+13)& (0+255),b
 12362   011E50  ECCB  F092         	call	_printf	;wreg free
 12363   011E54  0012               	return		;funcret
 12364   011E56                     __end_of_Nrf24_print_status:
 12365                           	callstack 0
 12366                           
 12367 ;; *************** function _Nrf24_print_byte_register *****************
 12368 ;; Defined at:
 12369 ;;		line 423 in file "mirf.c"
 12370 ;; Parameters:    Size  Location     Type
 12371 ;;  dev             2   77[BANK5 ] PTR struct .
 12372 ;;		 -> dev(3), 
 12373 ;;  name            2   79[BANK5 ] PTR const unsigned char 
 12374 ;;		 -> STR_13(14), STR_12(8), STR_11(9), STR_10(7), 
 12375 ;;		 -> STR_9(10), STR_8(7), STR_7(11), STR_5(13), 
 12376 ;;  reg             1   81[BANK5 ] unsigned char 
 12377 ;;  qty             1   82[BANK5 ] unsigned char 
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;  buffer          1   83[BANK5 ] unsigned char [1]
 12380 ;; Return value:  Size  Location     Type
 12381 ;;                  1    wreg      void 
 12382 ;; Registers used:
 12383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12384 ;; Tracked objects:
 12385 ;;		On entry : 0/0
 12386 ;;		On exit  : 0/0
 12387 ;;		Unchanged: 0/0
 12388 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12389 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12392 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12393 ;;Total ram usage:        7 bytes
 12394 ;; Hardware stack levels used: 1
 12395 ;; Hardware stack levels required when called: 15
 12396 ;; This function calls:
 12397 ;;		_Nrf24_readRegister
 12398 ;;		_printf
 12399 ;; This function is called by:
 12400 ;;		_Nrf24_printDetails
 12401 ;; This function uses a non-reentrant model
 12402 ;;
 12403                           
 12404                           	psect	text14
 12405   012098                     __ptext14:
 12406                           	callstack 0
 12407   012098                     _Nrf24_print_byte_register:
 12408                           	callstack 109
 12409   012098                     
 12410                           ;mirf.c: 423: void Nrf24_print_byte_register(NRF24_t * dev, const char* name, uint8_t re
      +                          g, uint8_t qty);mirf.c: 424: {;mirf.c: 425:  printf("%s\t =", name);
 12411   012098  0EEE               	movlw	low STR_19
 12412   01209A  0105               	movlb	5	; () banked
 12413   01209C  6F9D               	movwf	printf@fmt& (0+255),b
 12414   01209E  0EFF               	movlw	high STR_19
 12415   0120A0  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12416   0120A2  C5AF  F59F         	movff	Nrf24_print_byte_register@name,?_printf+2
 12417   0120A6  C5B0  F5A0         	movff	Nrf24_print_byte_register@name+1,?_printf+3
 12418   0120AA  ECCB  F092         	call	_printf	;wreg free
 12419                           
 12420                           ;mirf.c: 426:  while (qty--) {
 12421   0120AE  EF6D  F090         	goto	l3614
 12422   0120B2                     l3608:
 12423                           
 12424                           ; BSR set to: 5
 12425                           ;mirf.c: 427:   uint8_t buffer[1];;mirf.c: 428:   Nrf24_readRegister(reg++, buffer, 1);
 12426   0120B2  0EB3               	movlw	low Nrf24_print_byte_register@buffer
 12427   0120B4  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 12428   0120B6  0E05               	movlw	high Nrf24_print_byte_register@buffer
 12429   0120B8  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 12430   0120BA  0E01               	movlw	1
 12431   0120BC  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 12432   0120BE  51B1               	movf	Nrf24_print_byte_register@reg& (0+255),w,b
 12433   0120C0  ECEE  F091         	call	_Nrf24_readRegister
 12434   0120C4  0105               	movlb	5	; () banked
 12435   0120C6  2BB1               	incf	Nrf24_print_byte_register@reg& (0+255),f,b
 12436   0120C8                     
 12437                           ; BSR set to: 5
 12438                           ;mirf.c: 429:   printf(" 0x%02x", buffer[0]);
 12439   0120C8  0ED1               	movlw	low STR_24
 12440   0120CA  6F9D               	movwf	printf@fmt& (0+255),b
 12441   0120CC  0EFF               	movlw	high STR_24
 12442   0120CE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12443   0120D0  C5B3  F59F         	movff	Nrf24_print_byte_register@buffer,?_printf+2
 12444   0120D4  6BA0               	clrf	(?_printf+3)& (0+255),b
 12445   0120D6  ECCB  F092         	call	_printf	;wreg free
 12446   0120DA                     l3614:
 12447                           
 12448                           ;mirf.c: 426:  while (qty--) {
 12449   0120DA  0105               	movlb	5	; () banked
 12450   0120DC  07B2               	decf	Nrf24_print_byte_register@qty& (0+255),f,b
 12451   0120DE  29B2               	incf	Nrf24_print_byte_register@qty& (0+255),w,b
 12452   0120E0  A4D8               	btfss	status,2,c
 12453   0120E2  EF75  F090         	goto	u2661
 12454   0120E6  EF77  F090         	goto	u2660
 12455   0120EA                     u2661:
 12456   0120EA  EF59  F090         	goto	l3608
 12457   0120EE                     u2660:
 12458   0120EE                     
 12459                           ; BSR set to: 5
 12460                           ;mirf.c: 431:  printf("\r\n");
 12461   0120EE  0EFA               	movlw	low (STR_18+67)
 12462   0120F0  6F9D               	movwf	printf@fmt& (0+255),b
 12463   0120F2  0EFE               	movlw	high (STR_18+67)
 12464   0120F4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12465   0120F6  ECCB  F092         	call	_printf	;wreg free
 12466   0120FA  0012               	return		;funcret
 12467   0120FC                     __end_of_Nrf24_print_byte_register:
 12468                           	callstack 0
 12469                           
 12470 ;; *************** function _Nrf24_print_address_register *****************
 12471 ;; Defined at:
 12472 ;;		line 407 in file "mirf.c"
 12473 ;; Parameters:    Size  Location     Type
 12474 ;;  dev             2   77[BANK5 ] PTR struct .
 12475 ;;		 -> dev(3), 
 12476 ;;  name            2   79[BANK5 ] PTR const unsigned char 
 12477 ;;		 -> STR_6(9), STR_4(13), 
 12478 ;;  reg             1   81[BANK5 ] unsigned char 
 12479 ;;  qty             1   82[BANK5 ] unsigned char 
 12480 ;; Auto vars:     Size  Location     Type
 12481 ;;  i               2   89[BANK5 ] int 
 12482 ;;  buffer          5   84[BANK5 ] unsigned char [5]
 12483 ;; Return value:  Size  Location     Type
 12484 ;;                  1    wreg      void 
 12485 ;; Registers used:
 12486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12487 ;; Tracked objects:
 12488 ;;		On entry : 0/0
 12489 ;;		On exit  : 0/0
 12490 ;;		Unchanged: 0/0
 12491 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12492 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12493 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12495 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12496 ;;Total ram usage:       14 bytes
 12497 ;; Hardware stack levels used: 1
 12498 ;; Hardware stack levels required when called: 15
 12499 ;; This function calls:
 12500 ;;		_Nrf24_readRegister
 12501 ;;		_printf
 12502 ;; This function is called by:
 12503 ;;		_Nrf24_printDetails
 12504 ;; This function uses a non-reentrant model
 12505 ;;
 12506                           
 12507                           	psect	text15
 12508   011A16                     __ptext15:
 12509                           	callstack 0
 12510   011A16                     _Nrf24_print_address_register:
 12511                           	callstack 109
 12512   011A16                     
 12513                           ;mirf.c: 407: void Nrf24_print_address_register(NRF24_t * dev, const char* name, uint8_t
      +                           reg, uint8_t qty);mirf.c: 408: {;mirf.c: 409:  printf("%s\t =",name);
 12514   011A16  0EEE               	movlw	low STR_19
 12515   011A18  0105               	movlb	5	; () banked
 12516   011A1A  6F9D               	movwf	printf@fmt& (0+255),b
 12517   011A1C  0EFF               	movlw	high STR_19
 12518   011A1E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12519   011A20  C5AF  F59F         	movff	Nrf24_print_address_register@name,?_printf+2
 12520   011A24  C5B0  F5A0         	movff	Nrf24_print_address_register@name+1,?_printf+3
 12521   011A28  ECCB  F092         	call	_printf	;wreg free
 12522                           
 12523                           ;mirf.c: 410:  while (qty--) {
 12524   011A2C  EF50  F08D         	goto	l3602
 12525   011A30                     l3584:
 12526                           
 12527                           ; BSR set to: 5
 12528                           ;mirf.c: 411:   uint8_t buffer[5];;mirf.c: 412:   Nrf24_readRegister(reg++, buffer, size
      +                          of(buffer));
 12529   011A30  0EB4               	movlw	low Nrf24_print_address_register@buffer
 12530   011A32  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 12531   011A34  0E05               	movlw	high Nrf24_print_address_register@buffer
 12532   011A36  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 12533   011A38  0E05               	movlw	5
 12534   011A3A  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 12535   011A3C  51B1               	movf	Nrf24_print_address_register@reg& (0+255),w,b
 12536   011A3E  ECEE  F091         	call	_Nrf24_readRegister
 12537   011A42  0105               	movlb	5	; () banked
 12538   011A44  2BB1               	incf	Nrf24_print_address_register@reg& (0+255),f,b
 12539   011A46                     
 12540                           ; BSR set to: 5
 12541                           ;mirf.c: 414:   printf(" 0x");
 12542   011A46  0EFA               	movlw	low STR_20
 12543   011A48  6F9D               	movwf	printf@fmt& (0+255),b
 12544   011A4A  0EFF               	movlw	high STR_20
 12545   011A4C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12546   011A4E  ECCB  F092         	call	_printf	;wreg free
 12547   011A52                     
 12548                           ;mirf.c: 416:   for(int i=0;i<5;i++) {
 12549   011A52  0E00               	movlw	0
 12550   011A54  0105               	movlb	5	; () banked
 12551   011A56  6FBA               	movwf	(Nrf24_print_address_register@i+1)& (0+255),b
 12552   011A58  0E00               	movlw	0
 12553   011A5A  6FB9               	movwf	Nrf24_print_address_register@i& (0+255),b
 12554   011A5C                     l3596:
 12555                           
 12556                           ; BSR set to: 5
 12557                           ;mirf.c: 417:    printf("%02x", buffer[i]);
 12558   011A5C  0ED4               	movlw	low (STR_24+3)
 12559   011A5E  6F9D               	movwf	printf@fmt& (0+255),b
 12560   011A60  0EFF               	movlw	high (STR_24+3)
 12561   011A62  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12562   011A64  0EB4               	movlw	low Nrf24_print_address_register@buffer
 12563   011A66  25B9               	addwf	Nrf24_print_address_register@i& (0+255),w,b
 12564   011A68  6ED9               	movwf	fsr2l,c
 12565   011A6A  0E05               	movlw	high Nrf24_print_address_register@buffer
 12566   011A6C  21BA               	addwfc	(Nrf24_print_address_register@i+1)& (0+255),w,b
 12567   011A6E  6EDA               	movwf	fsr2h,c
 12568   011A70  50DF               	movf	indf2,w,c
 12569   011A72  6FB3               	movwf	??_Nrf24_print_address_register& (0+255),b
 12570   011A74  51B3               	movf	??_Nrf24_print_address_register& (0+255),w,b
 12571   011A76  6F9F               	movwf	(?_printf+2)& (0+255),b
 12572   011A78  6BA0               	clrf	(?_printf+3)& (0+255),b
 12573   011A7A  ECCB  F092         	call	_printf	;wreg free
 12574   011A7E                     
 12575                           ;mirf.c: 418:   }
 12576   011A7E  0105               	movlb	5	; () banked
 12577   011A80  4BB9               	infsnz	Nrf24_print_address_register@i& (0+255),f,b
 12578   011A82  2BBA               	incf	(Nrf24_print_address_register@i+1)& (0+255),f,b
 12579   011A84                     
 12580                           ; BSR set to: 5
 12581   011A84  BFBA               	btfsc	(Nrf24_print_address_register@i+1)& (0+255),7,b
 12582   011A86  EF4E  F08D         	goto	u2641
 12583   011A8A  51BA               	movf	(Nrf24_print_address_register@i+1)& (0+255),w,b
 12584   011A8C  E109               	bnz	u2640
 12585   011A8E  0E05               	movlw	5
 12586   011A90  5DB9               	subwf	Nrf24_print_address_register@i& (0+255),w,b
 12587   011A92  A0D8               	btfss	status,0,c
 12588   011A94  EF4E  F08D         	goto	u2641
 12589   011A98  EF50  F08D         	goto	u2640
 12590   011A9C                     u2641:
 12591   011A9C  EF2E  F08D         	goto	l3596
 12592   011AA0                     u2640:
 12593   011AA0                     l3602:
 12594                           
 12595                           ;mirf.c: 410:  while (qty--) {
 12596   011AA0  0105               	movlb	5	; () banked
 12597   011AA2  07B2               	decf	Nrf24_print_address_register@qty& (0+255),f,b
 12598   011AA4  29B2               	incf	Nrf24_print_address_register@qty& (0+255),w,b
 12599   011AA6  A4D8               	btfss	status,2,c
 12600   011AA8  EF58  F08D         	goto	u2651
 12601   011AAC  EF5A  F08D         	goto	u2650
 12602   011AB0                     u2651:
 12603   011AB0  EF18  F08D         	goto	l3584
 12604   011AB4                     u2650:
 12605   011AB4                     
 12606                           ; BSR set to: 5
 12607                           ;mirf.c: 420:  printf("\r\n");
 12608   011AB4  0EFA               	movlw	low (STR_18+67)
 12609   011AB6  6F9D               	movwf	printf@fmt& (0+255),b
 12610   011AB8  0EFE               	movlw	high (STR_18+67)
 12611   011ABA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 12612   011ABC  ECCB  F092         	call	_printf	;wreg free
 12613   011AC0  0012               	return		;funcret
 12614   011AC2                     __end_of_Nrf24_print_address_register:
 12615                           	callstack 0
 12616                           
 12617 ;; *************** function _printf *****************
 12618 ;; Defined at:
 12619 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
 12620 ;; Parameters:    Size  Location     Type
 12621 ;;  fmt             2   61[BANK5 ] PTR const unsigned char 
 12622 ;;		 -> STR_25(3), STR_24(8), STR_23(6), STR_22(3), 
 12623 ;;		 -> STR_21(5), STR_20(4), STR_19(6), STR_18(70), 
 12624 ;;		 -> STR_17(21), STR_16(16), STR_15(18), STR_14(17), 
 12625 ;;		 -> STR_3(53), 
 12626 ;; Auto vars:     Size  Location     Type
 12627 ;;  ap              2   75[BANK5 ] PTR void [1]
 12628 ;;		 -> ?_printf(2), 
 12629 ;;  ret             2    0        int 
 12630 ;; Return value:  Size  Location     Type
 12631 ;;                  2   61[BANK5 ] int 
 12632 ;; Registers used:
 12633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12634 ;; Tracked objects:
 12635 ;;		On entry : 0/0
 12636 ;;		On exit  : 0/0
 12637 ;;		Unchanged: 0/0
 12638 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12639 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12640 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12642 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12643 ;;Total ram usage:       16 bytes
 12644 ;; Hardware stack levels used: 1
 12645 ;; Hardware stack levels required when called: 14
 12646 ;; This function calls:
 12647 ;;		_vfprintf
 12648 ;; This function is called by:
 12649 ;;		_Nrf24_printDetails
 12650 ;;		_Nrf24_print_status
 12651 ;;		_Nrf24_print_address_register
 12652 ;;		_Nrf24_print_byte_register
 12653 ;; This function uses a non-reentrant model
 12654 ;;
 12655                           
 12656                           	psect	text16
 12657   012596                     __ptext16:
 12658                           	callstack 0
 12659   012596                     _printf:
 12660                           	callstack 110
 12661   012596  0E9F               	movlw	low (?_printf+2)
 12662   012598  0105               	movlb	5	; () banked
 12663   01259A  6FAB               	movwf	printf@ap& (0+255),b
 12664   01259C  0E05               	movlw	high (?_printf+2)
 12665   01259E  6FAC               	movwf	(printf@ap+1)& (0+255),b
 12666   0125A0                     
 12667                           ; BSR set to: 5
 12668   0125A0  0E00               	movlw	0
 12669   0125A2  6F95               	movwf	vfprintf@fp& (0+255),b
 12670   0125A4  0E00               	movlw	0
 12671   0125A6  6F96               	movwf	(vfprintf@fp+1)& (0+255),b
 12672   0125A8  C59D  F597         	movff	printf@fmt,vfprintf@fmt
 12673   0125AC  C59E  F598         	movff	printf@fmt+1,vfprintf@fmt+1
 12674   0125B0  0EAB               	movlw	low printf@ap
 12675   0125B2  6F99               	movwf	vfprintf@ap& (0+255),b
 12676   0125B4  0E05               	movlw	high printf@ap
 12677   0125B6  6F9A               	movwf	(vfprintf@ap+1)& (0+255),b
 12678   0125B8  ECAA  F090         	call	_vfprintf	;wreg free
 12679   0125BC  0012               	return		;funcret
 12680   0125BE                     __end_of_printf:
 12681                           	callstack 0
 12682                           
 12683 ;; *************** function _vfprintf *****************
 12684 ;; Defined at:
 12685 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 12686 ;; Parameters:    Size  Location     Type
 12687 ;;  fp              2   53[BANK5 ] PTR struct _IO_FILE
 12688 ;;		 -> NULL(0), 
 12689 ;;  fmt             2   55[BANK5 ] PTR const unsigned char 
 12690 ;;		 -> STR_25(3), STR_24(8), STR_23(6), STR_22(3), 
 12691 ;;		 -> STR_21(5), STR_20(4), STR_19(6), STR_18(70), 
 12692 ;;		 -> STR_17(21), STR_16(16), STR_15(18), STR_14(17), 
 12693 ;;		 -> STR_3(53), 
 12694 ;;  ap              2   57[BANK5 ] PTR PTR void 
 12695 ;;		 -> printf@ap(2), 
 12696 ;; Auto vars:     Size  Location     Type
 12697 ;;  cfmt            2   59[BANK5 ] PTR unsigned char 
 12698 ;;		 -> STR_25(3), STR_24(8), STR_23(6), STR_22(3), 
 12699 ;;		 -> STR_21(5), STR_20(4), STR_19(6), STR_18(70), 
 12700 ;;		 -> STR_17(21), STR_16(16), STR_15(18), STR_14(17), 
 12701 ;;		 -> STR_3(53), 
 12702 ;; Return value:  Size  Location     Type
 12703 ;;                  2   53[BANK5 ] int 
 12704 ;; Registers used:
 12705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12706 ;; Tracked objects:
 12707 ;;		On entry : 0/0
 12708 ;;		On exit  : 0/0
 12709 ;;		Unchanged: 0/0
 12710 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12711 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12712 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12714 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12715 ;;Total ram usage:        8 bytes
 12716 ;; Hardware stack levels used: 1
 12717 ;; Hardware stack levels required when called: 13
 12718 ;; This function calls:
 12719 ;;		_vfpfcnvrt
 12720 ;; This function is called by:
 12721 ;;		_printf
 12722 ;; This function uses a non-reentrant model
 12723 ;;
 12724                           
 12725                           	psect	text17
 12726   012154                     __ptext17:
 12727                           	callstack 0
 12728   012154                     _vfprintf:
 12729                           	callstack 110
 12730   012154                     
 12731                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 12732   012154  C597  F59B         	movff	vfprintf@fmt,vfprintf@cfmt
 12733   012158  C598  F59C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 12734                           
 12735                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12736   01215C  EFBF  F090         	goto	l3452
 12737   012160                     l3450:
 12738                           
 12739                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 12740   012160  C595  F586         	movff	vfprintf@fp,vfpfcnvrt@fp
 12741   012164  C596  F587         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 12742   012168  0E9B               	movlw	low vfprintf@cfmt
 12743   01216A  0105               	movlb	5	; () banked
 12744   01216C  6F88               	movwf	vfpfcnvrt@fmt& (0+255),b
 12745   01216E  0E05               	movlw	high vfprintf@cfmt
 12746   012170  6F89               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
 12747   012172  C599  F58A         	movff	vfprintf@ap,vfpfcnvrt@ap
 12748   012176  C59A  F58B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 12749   01217A  EC00  F080         	call	_vfpfcnvrt	;wreg free
 12750   01217E                     l3452:
 12751                           
 12752                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12753   01217E  C59B  F4F6         	movff	vfprintf@cfmt,tblptrl
 12754   012182  C59C  F4F7         	movff	vfprintf@cfmt+1,tblptrh
 12755   012186                     	if	0	;tblptru may be non-zero
 12756   012186                     	endif
 12757   012186                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12758   012186  0E00               	movlw	low (__mediumconst shr (0+16))
 12759   012188  6EF8               	movwf	tblptru,c
 12760   01218A                     	endif
 12761   01218A  0008               	tblrd		*
 12762   01218C  50F5               	movf	tablat,w,c
 12763   01218E  0900               	iorlw	0
 12764   012190  A4D8               	btfss	status,2,c
 12765   012192  EFCD  F090         	goto	u2331
 12766   012196  EFCF  F090         	goto	u2330
 12767   01219A                     u2331:
 12768   01219A  EFB0  F090         	goto	l3450
 12769   01219E                     u2330:
 12770   01219E                     
 12771                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 12772   01219E  0E00               	movlw	0
 12773   0121A0  0105               	movlb	5	; () banked
 12774   0121A2  6F96               	movwf	(?_vfprintf+1)& (0+255),b
 12775   0121A4  0E00               	movlw	0
 12776   0121A6  6F95               	movwf	?_vfprintf& (0+255),b
 12777   0121A8                     
 12778                           ; BSR set to: 5
 12779   0121A8  0012               	return		;funcret
 12780   0121AA                     __end_of_vfprintf:
 12781                           	callstack 0
 12782                           
 12783 ;; *************** function _vfpfcnvrt *****************
 12784 ;; Defined at:
 12785 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 12786 ;; Parameters:    Size  Location     Type
 12787 ;;  fp              2   38[BANK5 ] PTR struct _IO_FILE
 12788 ;;		 -> NULL(0), 
 12789 ;;  fmt             2   40[BANK5 ] PTR PTR unsigned char 
 12790 ;;		 -> vfprintf@cfmt(2), 
 12791 ;;  ap              2   42[BANK5 ] PTR PTR void 
 12792 ;;		 -> printf@ap(2), 
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;  convarg         4   46[BANK5 ] struct .
 12795 ;;  cp              2   51[BANK5 ] PTR unsigned char 
 12796 ;;		 -> STR_25(3), STR_24(8), STR_23(6), STR_22(3), 
 12797 ;;		 -> STR_21(5), STR_20(4), STR_19(6), STR_18(70), 
 12798 ;;		 -> STR_17(21), STR_16(16), STR_15(18), STR_14(17), 
 12799 ;;		 -> STR_3(53), 
 12800 ;;  done            1   50[BANK5 ] _Bool 
 12801 ;;  c               1    0        unsigned char 
 12802 ;; Return value:  Size  Location     Type
 12803 ;;                  1    wreg      void 
 12804 ;; Registers used:
 12805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12806 ;; Tracked objects:
 12807 ;;		On entry : 0/0
 12808 ;;		On exit  : 0/0
 12809 ;;		Unchanged: 0/0
 12810 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12811 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12812 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12813 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12814 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12815 ;;Total ram usage:       15 bytes
 12816 ;; Hardware stack levels used: 1
 12817 ;; Hardware stack levels required when called: 12
 12818 ;; This function calls:
 12819 ;;		_dtoa
 12820 ;;		_fputc
 12821 ;;		_read_prec_or_width
 12822 ;;		_stoa
 12823 ;;		_xtoa
 12824 ;; This function is called by:
 12825 ;;		_vfprintf
 12826 ;; This function uses a non-reentrant model
 12827 ;;
 12828                           
 12829                           	psect	text18
 12830   010000                     __ptext18:
 12831                           	callstack 0
 12832   010000                     _vfpfcnvrt:
 12833                           	callstack 110
 12834   010000                     
 12835                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 12836   010000  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 12837   010004  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12838   010008  C4DE F4F6          	movff	postinc2,tblptrl
 12839   01000C  C4DD F4F7          	movff	postdec2,tblptrh
 12840   010010                     	if	0	;tblptru may be non-zero
 12841   010010                     	endif
 12842   010010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12843   010010  0E00               	movlw	low (__mediumconst shr (0+16))
 12844   010012  6EF8               	movwf	tblptru,c
 12845   010014                     	endif
 12846   010014  0008               	tblrd		*
 12847   010016  50F5               	movf	tablat,w,c
 12848   010018  0A25               	xorlw	37
 12849   01001A  A4D8               	btfss	status,2,c
 12850   01001C  EF12  F080         	goto	u2181
 12851   010020  EF14  F080         	goto	u2180
 12852   010024                     u2181:
 12853   010024  EFB1  F081         	goto	l3408
 12854   010028                     u2180:
 12855   010028                     
 12856                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 12857   010028  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 12858   01002C  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12859   010030  2ADE               	incf	postinc2,f,c
 12860   010032  0E00               	movlw	0
 12861   010034  22DD               	addwfc	postdec2,f,c
 12862   010036                     
 12863                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 12864   010036  0E00               	movlw	0
 12865   010038  0105               	movlb	5	; () banked
 12866   01003A  6FE7               	movwf	(_width+1)& (0+255),b
 12867   01003C  0E00               	movlw	0
 12868   01003E  6FE6               	movwf	_width& (0+255),b
 12869   010040  C5E6  F5EA         	movff	_width,_flags
 12870   010044                     
 12871                           ; BSR set to: 5
 12872                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 12873   010044  69E8               	setf	_prec& (0+255),b
 12874   010046  69E9               	setf	(_prec+1)& (0+255),b
 12875   010048                     
 12876                           ; BSR set to: 5
 12877                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 12878   010048  6B92               	clrf	vfpfcnvrt@done& (0+255),b
 12879                           
 12880                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 12881   01004A  EF47  F080         	goto	l3350
 12882   01004E                     l3340:
 12883                           
 12884                           ; BSR set to: 5
 12885                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 12886   01004E  83EA               	bsf	_flags& (0+255),1,b
 12887   010050                     
 12888                           ; BSR set to: 5
 12889                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 12890   010050  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 12891   010054  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12892   010058  2ADE               	incf	postinc2,f,c
 12893   01005A  0E00               	movlw	0
 12894   01005C  22DD               	addwfc	postdec2,f,c
 12895                           
 12896                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 12897   01005E  EF47  F080         	goto	l3350
 12898   010062                     l3344:
 12899                           
 12900                           ; BSR set to: 5
 12901                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 12902   010062  0E01               	movlw	1
 12903   010064  6F92               	movwf	vfpfcnvrt@done& (0+255),b
 12904                           
 12905                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 12906   010066  EF47  F080         	goto	l3350
 12907   01006A                     l3348:
 12908                           
 12909                           ; BSR set to: 5
 12910   01006A  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 12911   01006E  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12912   010072  C4DE F4F6          	movff	postinc2,tblptrl
 12913   010076  C4DD F4F7          	movff	postdec2,tblptrh
 12914   01007A                     	if	0	;tblptru may be non-zero
 12915   01007A                     	endif
 12916   01007A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12917   01007A  0E00               	movlw	low (__mediumconst shr (0+16))
 12918   01007C  6EF8               	movwf	tblptru,c
 12919   01007E                     	endif
 12920   01007E  0008               	tblrd		*
 12921   010080  50F5               	movf	tablat,w,c
 12922                           
 12923                           ; Switch size 1, requested type "simple"
 12924                           ; Number of cases is 1, Range of values is 48 to 48
 12925                           ; switch strategies available:
 12926                           ; Name         Instructions Cycles
 12927                           ; simple_byte            4     3 (average)
 12928                           ;	Chosen strategy is simple_byte
 12929   010082  0A30               	xorlw	48	; case 48
 12930   010084  B4D8               	btfsc	status,2,c
 12931   010086  EF27  F080         	goto	l3340
 12932   01008A  EF31  F080         	goto	l3344
 12933   01008E                     l3350:
 12934                           
 12935                           ; BSR set to: 5
 12936                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 12937   01008E  5192               	movf	vfpfcnvrt@done& (0+255),w,b
 12938   010090  B4D8               	btfsc	status,2,c
 12939   010092  EF4D  F080         	goto	u2191
 12940   010096  EF4F  F080         	goto	u2190
 12941   01009A                     u2191:
 12942   01009A  EF35  F080         	goto	l3348
 12943   01009E                     u2190:
 12944   01009E                     
 12945                           ; BSR set to: 5
 12946                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 12947   01009E  C588  F560         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 12948   0100A2  C589  F561         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 12949   0100A6  C58A  F562         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 12950   0100AA  C58B  F563         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 12951   0100AE  EC9B  F089         	call	_read_prec_or_width	;wreg free
 12952   0100B2  C560  F5E6         	movff	?_read_prec_or_width,_width
 12953   0100B6  C561  F5E7         	movff	?_read_prec_or_width+1,_width+1
 12954   0100BA                     
 12955                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 12956   0100BA  0105               	movlb	5	; () banked
 12957   0100BC  BFE7               	btfsc	(_width+1)& (0+255),7,b
 12958   0100BE  EF65  F080         	goto	u2200
 12959   0100C2  EF63  F080         	goto	u2201
 12960   0100C6                     u2201:
 12961   0100C6  EF6A  F080         	goto	l3358
 12962   0100CA                     u2200:
 12963   0100CA                     
 12964                           ; BSR set to: 5
 12965                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 12966   0100CA  81EA               	bsf	_flags& (0+255),0,b
 12967                           
 12968                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 12969   0100CC  6DE6               	negf	_width& (0+255),b
 12970   0100CE  1FE7               	comf	(_width+1)& (0+255),f,b
 12971   0100D0  B0D8               	btfsc	status,0,c
 12972   0100D2  2BE7               	incf	(_width+1)& (0+255),f,b
 12973   0100D4                     l3358:
 12974                           
 12975                           ; BSR set to: 5
 12976                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 12977   0100D4  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 12978   0100D8  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12979   0100DC  C4DE F593          	movff	postinc2,vfpfcnvrt@cp
 12980   0100E0  C4DD F594          	movff	postdec2,vfpfcnvrt@cp+1
 12981   0100E4                     
 12982                           ; BSR set to: 5
 12983                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 12984   0100E4  C593  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 12985   0100E8  C594  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 12986   0100EC                     	if	0	;tblptru may be non-zero
 12987   0100EC                     	endif
 12988   0100EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12989   0100EC  0E00               	movlw	low (__mediumconst shr (0+16))
 12990   0100EE  6EF8               	movwf	tblptru,c
 12991   0100F0                     	endif
 12992   0100F0  0008               	tblrd		*
 12993   0100F2  50F5               	movf	tablat,w,c
 12994   0100F4  0A64               	xorlw	100
 12995   0100F6  B4D8               	btfsc	status,2,c
 12996   0100F8  EF80  F080         	goto	u2211
 12997   0100FC  EF82  F080         	goto	u2210
 12998   010100                     u2211:
 12999   010100  EF92  F080         	goto	l3364
 13000   010104                     u2210:
 13001   010104                     
 13002                           ; BSR set to: 5
 13003   010104  C593  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 13004   010108  C594  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 13005   01010C                     	if	0	;tblptru may be non-zero
 13006   01010C                     	endif
 13007   01010C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13008   01010C  0E00               	movlw	low (__mediumconst shr (0+16))
 13009   01010E  6EF8               	movwf	tblptru,c
 13010   010110                     	endif
 13011   010110  0008               	tblrd		*
 13012   010112  50F5               	movf	tablat,w,c
 13013   010114  0A69               	xorlw	105
 13014   010116  A4D8               	btfss	status,2,c
 13015   010118  EF90  F080         	goto	u2221
 13016   01011C  EF92  F080         	goto	u2220
 13017   010120                     u2221:
 13018   010120  EFC0  F080         	goto	l3370
 13019   010124                     u2220:
 13020   010124                     l3364:
 13021                           
 13022                           ; BSR set to: 5
 13023                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 13024   010124  C58A  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 13025   010128  C58B  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 13026   01012C  C4DF F58C          	movff	indf2,??_vfpfcnvrt
 13027   010130  0E02               	movlw	2
 13028   010132  26DE               	addwf	postinc2,f,c
 13029   010134  C4DF F58D          	movff	indf2,??_vfpfcnvrt+1
 13030   010138  0E00               	movlw	0
 13031   01013A  22DD               	addwfc	postdec2,f,c
 13032   01013C  C58C  F4D9         	movff	??_vfpfcnvrt,fsr2l
 13033   010140  C58D  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 13034   010144  C4DE F58E          	movff	postinc2,vfpfcnvrt@convarg
 13035   010148  C4DD F58F          	movff	postdec2,vfpfcnvrt@convarg+1
 13036                           
 13037                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 13038   01014C  0E01               	movlw	1
 13039   01014E  2593               	addwf	vfpfcnvrt@cp& (0+255),w,b
 13040   010150  6F8C               	movwf	??_vfpfcnvrt& (0+255),b
 13041   010152  0E00               	movlw	0
 13042   010154  2194               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 13043   010156  6F8D               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 13044   010158  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13045   01015C  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13046   010160  C58C  F4DE         	movff	??_vfpfcnvrt,postinc2
 13047   010164  C58D  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 13048   010168                     
 13049                           ; BSR set to: 5
 13050                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 13051   010168  C586  F579         	movff	vfpfcnvrt@fp,dtoa@fp
 13052   01016C  C587  F57A         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 13053   010170  C58E  F57B         	movff	vfpfcnvrt@convarg,dtoa@d
 13054   010174  C58F  F57C         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 13055   010178  EC17  F085         	call	_dtoa	;wreg free
 13056   01017C  EFC8  F081         	goto	l1698
 13057   010180                     l3370:
 13058                           
 13059                           ; BSR set to: 5
 13060   010180  C593  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 13061   010184  C594  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 13062   010188                     	if	0	;tblptru may be non-zero
 13063   010188                     	endif
 13064   010188                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13065   010188  0E00               	movlw	low (__mediumconst shr (0+16))
 13066   01018A  6EF8               	movwf	tblptru,c
 13067   01018C                     	endif
 13068   01018C  0008               	tblrd		*
 13069   01018E  50F5               	movf	tablat,w,c
 13070   010190  0A78               	xorlw	120
 13071   010192  A4D8               	btfss	status,2,c
 13072   010194  EFCE  F080         	goto	u2231
 13073   010198  EFD0  F080         	goto	u2230
 13074   01019C                     u2231:
 13075   01019C  EF0E  F081         	goto	l1699
 13076   0101A0                     u2230:
 13077   0101A0                     
 13078                           ; BSR set to: 5
 13079                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 13080   0101A0  C58A  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 13081   0101A4  C58B  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 13082   0101A8  C4DF F58C          	movff	indf2,??_vfpfcnvrt
 13083   0101AC  0E02               	movlw	2
 13084   0101AE  26DE               	addwf	postinc2,f,c
 13085   0101B0  C4DF F58D          	movff	indf2,??_vfpfcnvrt+1
 13086   0101B4  0E00               	movlw	0
 13087   0101B6  22DD               	addwfc	postdec2,f,c
 13088   0101B8  C58C  F4D9         	movff	??_vfpfcnvrt,fsr2l
 13089   0101BC  C58D  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 13090   0101C0  C4DE F58E          	movff	postinc2,vfpfcnvrt@convarg
 13091   0101C4  C4DD F58F          	movff	postdec2,vfpfcnvrt@convarg+1
 13092                           
 13093                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 13094   0101C8  0E01               	movlw	1
 13095   0101CA  2593               	addwf	vfpfcnvrt@cp& (0+255),w,b
 13096   0101CC  6F8C               	movwf	??_vfpfcnvrt& (0+255),b
 13097   0101CE  0E00               	movlw	0
 13098   0101D0  2194               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 13099   0101D2  6F8D               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 13100   0101D4  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13101   0101D8  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13102   0101DC  C58C  F4DE         	movff	??_vfpfcnvrt,postinc2
 13103   0101E0  C58D  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 13104                           
 13105                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 13106   0101E4  EF00  F081         	goto	l3380
 13107   0101E8                     l3374:
 13108                           
 13109                           ; BSR set to: 5
 13110                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
 13111   0101E8  C586  F579         	movff	vfpfcnvrt@fp,xtoa@fp
 13112   0101EC  C587  F57A         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 13113   0101F0  C58E  F57B         	movff	vfpfcnvrt@convarg,xtoa@d
 13114   0101F4  C58F  F57C         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
 13115   0101F8  ECAC  F087         	call	_xtoa	;wreg free
 13116   0101FC  EFC8  F081         	goto	l1698
 13117   010200                     l3380:
 13118                           
 13119                           ; BSR set to: 5
 13120   010200  C593  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 13121   010204  C594  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 13122   010208                     	if	0	;tblptru may be non-zero
 13123   010208                     	endif
 13124   010208                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13125   010208  0E00               	movlw	low (__mediumconst shr (0+16))
 13126   01020A  6EF8               	movwf	tblptru,c
 13127   01020C                     	endif
 13128   01020C  0008               	tblrd		*
 13129   01020E  50F5               	movf	tablat,w,c
 13130                           
 13131                           ; Switch size 1, requested type "simple"
 13132                           ; Number of cases is 1, Range of values is 120 to 120
 13133                           ; switch strategies available:
 13134                           ; Name         Instructions Cycles
 13135                           ; simple_byte            4     3 (average)
 13136                           ;	Chosen strategy is simple_byte
 13137   010210  0A78               	xorlw	120	; case 120
 13138   010212  B4D8               	btfsc	status,2,c
 13139   010214  EFF4  F080         	goto	l3374
 13140   010218  EF0E  F081         	goto	l1699
 13141   01021C                     l1699:
 13142                           
 13143                           ; BSR set to: 5
 13144                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 13145   01021C  6B92               	clrf	vfpfcnvrt@done& (0+255),b
 13146   01021E                     
 13147                           ; BSR set to: 5
 13148                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 13149   01021E  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13150   010222  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13151   010226  C4DE F4F6          	movff	postinc2,tblptrl
 13152   01022A  C4DD F4F7          	movff	postdec2,tblptrh
 13153   01022E                     	if	0	;tblptru may be non-zero
 13154   01022E                     	endif
 13155   01022E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13156   01022E  0E00               	movlw	low (__mediumconst shr (0+16))
 13157   010230  6EF8               	movwf	tblptru,c
 13158   010232                     	endif
 13159   010232  0008               	tblrd		*
 13160   010234  50F5               	movf	tablat,w,c
 13161   010236  0A73               	xorlw	115
 13162   010238  A4D8               	btfss	status,2,c
 13163   01023A  EF21  F081         	goto	u2241
 13164   01023E  EF23  F081         	goto	u2240
 13165   010242                     u2241:
 13166   010242  EF2E  F081         	goto	l3388
 13167   010246                     u2240:
 13168   010246                     
 13169                           ; BSR set to: 5
 13170                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 13171   010246  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13172   01024A  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13173   01024E  2ADE               	incf	postinc2,f,c
 13174   010250  0E00               	movlw	0
 13175   010252  22DD               	addwfc	postdec2,f,c
 13176   010254                     l3386:
 13177                           
 13178                           ; BSR set to: 5
 13179                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 13180   010254  0E01               	movlw	1
 13181   010256  6F92               	movwf	vfpfcnvrt@done& (0+255),b
 13182                           
 13183                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
 13184   010258  EF84  F081         	goto	l3398
 13185   01025C                     l3388:
 13186                           
 13187                           ; BSR set to: 5
 13188   01025C  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13189   010260  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13190   010264  C4DE F4F6          	movff	postinc2,tblptrl
 13191   010268  C4DD F4F7          	movff	postdec2,tblptrh
 13192   01026C                     	if	0	;tblptru may be non-zero
 13193   01026C                     	endif
 13194   01026C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13195   01026C  0E00               	movlw	low (__mediumconst shr (0+16))
 13196   01026E  6EF8               	movwf	tblptru,c
 13197   010270                     	endif
 13198   010270  0008               	tblrd		*
 13199   010272  50F5               	movf	tablat,w,c
 13200   010274  0A6C               	xorlw	108
 13201   010276  A4D8               	btfss	status,2,c
 13202   010278  EF40  F081         	goto	u2251
 13203   01027C  EF42  F081         	goto	u2250
 13204   010280                     u2251:
 13205   010280  EF84  F081         	goto	l3398
 13206   010284                     u2250:
 13207   010284                     
 13208                           ; BSR set to: 5
 13209   010284  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13210   010288  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13211   01028C  C4DE F58C          	movff	postinc2,??_vfpfcnvrt
 13212   010290  C4DD F58D          	movff	postdec2,??_vfpfcnvrt+1
 13213   010294  0E01               	movlw	1
 13214   010296  278C               	addwf	??_vfpfcnvrt& (0+255),f,b
 13215   010298  0E00               	movlw	0
 13216   01029A  238D               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 13217   01029C  C58C  F4F6         	movff	??_vfpfcnvrt,tblptrl
 13218   0102A0  C58D  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 13219   0102A4                     	if	0	;tblptru may be non-zero
 13220   0102A4                     	endif
 13221   0102A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13222   0102A4  0E00               	movlw	low (__mediumconst shr (0+16))
 13223   0102A6  6EF8               	movwf	tblptru,c
 13224   0102A8                     	endif
 13225   0102A8  0008               	tblrd		*
 13226   0102AA  50F5               	movf	tablat,w,c
 13227   0102AC  0A6C               	xorlw	108
 13228   0102AE  A4D8               	btfss	status,2,c
 13229   0102B0  EF5C  F081         	goto	u2261
 13230   0102B4  EF5E  F081         	goto	u2260
 13231   0102B8                     u2261:
 13232   0102B8  EF84  F081         	goto	l3398
 13233   0102BC                     u2260:
 13234   0102BC                     
 13235                           ; BSR set to: 5
 13236   0102BC  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13237   0102C0  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13238   0102C4  C4DE F58C          	movff	postinc2,??_vfpfcnvrt
 13239   0102C8  C4DD F58D          	movff	postdec2,??_vfpfcnvrt+1
 13240   0102CC  0E02               	movlw	2
 13241   0102CE  278C               	addwf	??_vfpfcnvrt& (0+255),f,b
 13242   0102D0  0E00               	movlw	0
 13243   0102D2  238D               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 13244   0102D4  C58C  F4F6         	movff	??_vfpfcnvrt,tblptrl
 13245   0102D8  C58D  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 13246   0102DC                     	if	0	;tblptru may be non-zero
 13247   0102DC                     	endif
 13248   0102DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13249   0102DC  0E00               	movlw	low (__mediumconst shr (0+16))
 13250   0102DE  6EF8               	movwf	tblptru,c
 13251   0102E0                     	endif
 13252   0102E0  0008               	tblrd		*
 13253   0102E2  50F5               	movf	tablat,w,c
 13254   0102E4  0A73               	xorlw	115
 13255   0102E6  A4D8               	btfss	status,2,c
 13256   0102E8  EF78  F081         	goto	u2271
 13257   0102EC  EF7A  F081         	goto	u2270
 13258   0102F0                     u2271:
 13259   0102F0  EF84  F081         	goto	l3398
 13260   0102F4                     u2270:
 13261   0102F4                     
 13262                           ; BSR set to: 5
 13263                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 13264   0102F4  0E03               	movlw	3
 13265   0102F6  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13266   0102FA  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13267   0102FE  26DE               	addwf	postinc2,f,c
 13268   010300  0E00               	movlw	0
 13269   010302  22DD               	addwfc	postdec2,f,c
 13270   010304  EF2A  F081         	goto	l3386
 13271   010308                     l3398:
 13272                           
 13273                           ; BSR set to: 5
 13274                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 13275   010308  5192               	movf	vfpfcnvrt@done& (0+255),w,b
 13276   01030A  B4D8               	btfsc	status,2,c
 13277   01030C  EF8A  F081         	goto	u2281
 13278   010310  EF8C  F081         	goto	u2280
 13279   010314                     u2281:
 13280   010314  EFA8  F081         	goto	l3404
 13281   010318                     u2280:
 13282   010318                     
 13283                           ; BSR set to: 5
 13284                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 13285   010318  C586  F569         	movff	vfpfcnvrt@fp,stoa@fp
 13286   01031C  C587  F56A         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 13287   010320  C58A  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 13288   010324  C58B  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 13289   010328  C4DF F58C          	movff	indf2,??_vfpfcnvrt
 13290   01032C  0E02               	movlw	2
 13291   01032E  26DE               	addwf	postinc2,f,c
 13292   010330  C4DF F58D          	movff	indf2,??_vfpfcnvrt+1
 13293   010334  0E00               	movlw	0
 13294   010336  22DD               	addwfc	postdec2,f,c
 13295   010338  C58C  F4D9         	movff	??_vfpfcnvrt,fsr2l
 13296   01033C  C58D  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 13297   010340  C4DE F56B          	movff	postinc2,stoa@s
 13298   010344  C4DD F56C          	movff	postdec2,stoa@s+1
 13299   010348  ECD5  F085         	call	_stoa	;wreg free
 13300   01034C  EFC8  F081         	goto	l1698
 13301   010350                     l3404:
 13302                           
 13303                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 13304   010350  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13305   010354  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13306   010358  2ADE               	incf	postinc2,f,c
 13307   01035A  0E00               	movlw	0
 13308   01035C  22DD               	addwfc	postdec2,f,c
 13309   01035E  EFC8  F081         	goto	l1698
 13310   010362                     l3408:
 13311                           
 13312                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 13313   010362  C588  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 13314   010366  C589  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13315   01036A  C4DE F4F6          	movff	postinc2,tblptrl
 13316   01036E  C4DD F4F7          	movff	postdec2,tblptrh
 13317   010372                     	if	0	;tblptru may be non-zero
 13318   010372                     	endif
 13319   010372                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13320   010372  0E00               	movlw	low (__mediumconst shr (0+16))
 13321   010374  6EF8               	movwf	tblptru,c
 13322   010376                     	endif
 13323   010376  0008               	tblrd		*
 13324   010378  50F5               	movf	tablat,w,c
 13325   01037A  0105               	movlb	5	; () banked
 13326   01037C  6F60               	movwf	fputc@c& (0+255),b
 13327   01037E  6B61               	clrf	(fputc@c+1)& (0+255),b
 13328   010380  C586  F562         	movff	vfpfcnvrt@fp,fputc@fp
 13329   010384  C587  F563         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 13330   010388  EC02  F08A         	call	_fputc	;wreg free
 13331   01038C  EFA8  F081         	goto	l3404
 13332   010390                     l1698:
 13333   010390  0012               	return		;funcret
 13334   010392                     __end_of_vfpfcnvrt:
 13335                           	callstack 0
 13336                           
 13337 ;; *************** function _xtoa *****************
 13338 ;; Defined at:
 13339 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 13340 ;; Parameters:    Size  Location     Type
 13341 ;;  fp              2   25[BANK5 ] PTR struct _IO_FILE
 13342 ;;		 -> NULL(0), 
 13343 ;;  d               2   27[BANK5 ] unsigned int 
 13344 ;; Auto vars:     Size  Location     Type
 13345 ;;  i               2   36[BANK5 ] int 
 13346 ;;  w               2   33[BANK5 ] int 
 13347 ;;  c               1   35[BANK5 ] unsigned char 
 13348 ;;  p               1   32[BANK5 ] _Bool 
 13349 ;; Return value:  Size  Location     Type
 13350 ;;                  1    wreg      void 
 13351 ;; Registers used:
 13352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13353 ;; Tracked objects:
 13354 ;;		On entry : 0/0
 13355 ;;		On exit  : 0/0
 13356 ;;		Unchanged: 0/0
 13357 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13358 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13359 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13360 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13361 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13362 ;;Total ram usage:       13 bytes
 13363 ;; Hardware stack levels used: 1
 13364 ;; Hardware stack levels required when called: 11
 13365 ;; This function calls:
 13366 ;;		_pad
 13367 ;; This function is called by:
 13368 ;;		_vfpfcnvrt
 13369 ;; This function uses a non-reentrant model
 13370 ;;
 13371                           
 13372                           	psect	text19
 13373   010F58                     __ptext19:
 13374                           	callstack 0
 13375   010F58                     _xtoa:
 13376                           	callstack 110
 13377   010F58                     
 13378                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 1067:  _Bool p = 1;
 13379   010F58  0E01               	movlw	1
 13380   010F5A  0105               	movlb	5	; () banked
 13381   010F5C  6F80               	movwf	xtoa@p& (0+255),b
 13382   010F5E                     
 13383                           ; BSR set to: 5
 13384                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 13385   010F5E  C5E6  F581         	movff	_width,xtoa@w
 13386   010F62  C5E7  F582         	movff	_width+1,xtoa@w+1
 13387                           
 13388                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 13389   010F66  0E00               	movlw	0
 13390   010F68  6F85               	movwf	(xtoa@i+1)& (0+255),b
 13391   010F6A  0E1F               	movlw	31
 13392   010F6C  6F84               	movwf	xtoa@i& (0+255),b
 13393   010F6E                     
 13394                           ; BSR set to: 5
 13395                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 13396   010F6E  0107               	movlb	7	; () banked
 13397   010F70  6BE7               	clrf	(_dbuf+31)& (0+255),b
 13398                           
 13399                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 13400   010F72  EFEB  F087         	goto	l3290
 13401   010F76                     l3272:
 13402                           
 13403                           ; BSR set to: 5
 13404                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1107:         --i;
 13405   010F76  0784               	decf	xtoa@i& (0+255),f,b
 13406   010F78  A0D8               	btfss	status,0,c
 13407   010F7A  0785               	decf	(xtoa@i+1)& (0+255),f,b
 13408   010F7C                     
 13409                           ; BSR set to: 5
 13410                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 13411   010F7C  517B               	movf	xtoa@d& (0+255),w,b
 13412   010F7E  0B0F               	andlw	15
 13413   010F80  6F83               	movwf	xtoa@c& (0+255),b
 13414   010F82                     
 13415                           ; BSR set to: 5
 13416                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 13417   010F82  0E0A               	movlw	10
 13418   010F84  6183               	cpfslt	xtoa@c& (0+255),b
 13419   010F86  EFC7  F087         	goto	u2081
 13420   010F8A  EFC9  F087         	goto	u2080
 13421   010F8E                     u2081:
 13422   010F8E  EFCD  F087         	goto	l3280
 13423   010F92                     u2080:
 13424   010F92                     
 13425                           ; BSR set to: 5
 13426                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 13427   010F92  0E30               	movlw	48
 13428   010F94  2783               	addwf	xtoa@c& (0+255),f,b
 13429                           
 13430                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1111:   }
 13431   010F96  EFCF  F087         	goto	l3282
 13432   010F9A                     l3280:
 13433                           
 13434                           ; BSR set to: 5
 13435                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1116:    c += 'a'
      +                           - 10;
 13436   010F9A  0E57               	movlw	87
 13437   010F9C  2783               	addwf	xtoa@c& (0+255),f,b
 13438   010F9E                     l3282:
 13439                           
 13440                           ; BSR set to: 5
 13441                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 13442   010F9E  0EC8               	movlw	low _dbuf
 13443   010FA0  2584               	addwf	xtoa@i& (0+255),w,b
 13444   010FA2  6ED9               	movwf	fsr2l,c
 13445   010FA4  0E07               	movlw	high _dbuf
 13446   010FA6  2185               	addwfc	(xtoa@i+1)& (0+255),w,b
 13447   010FA8  6EDA               	movwf	fsr2h,c
 13448   010FAA  C583  F4DF         	movff	xtoa@c,indf2
 13449   010FAE                     
 13450                           ; BSR set to: 5
 13451                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1125:   p = 0;
 13452   010FAE  6B80               	clrf	xtoa@p& (0+255),b
 13453   010FB0                     
 13454                           ; BSR set to: 5
 13455                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 13456   010FB0  0781               	decf	xtoa@w& (0+255),f,b
 13457   010FB2  A0D8               	btfss	status,0,c
 13458   010FB4  0782               	decf	(xtoa@w+1)& (0+255),f,b
 13459   010FB6                     
 13460                           ; BSR set to: 5
 13461                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 13462   010FB6  C57B  F57D         	movff	xtoa@d,??_xtoa
 13463   010FBA  C57C  F57E         	movff	xtoa@d+1,??_xtoa+1
 13464   010FBE  0E04               	movlw	4
 13465   010FC0  6F7F               	movwf	(??_xtoa+2)& (0+255),b
 13466   010FC2                     u2095:
 13467   010FC2  90D8               	bcf	status,0,c
 13468   010FC4  337E               	rrcf	(??_xtoa+1)& (0+255),f,b
 13469   010FC6  337D               	rrcf	??_xtoa& (0+255),f,b
 13470   010FC8  2F7F               	decfsz	(??_xtoa+2)& (0+255),f,b
 13471   010FCA  EFE1  F087         	goto	u2095
 13472   010FCE  C57D  F57B         	movff	??_xtoa,xtoa@d
 13473   010FD2  C57E  F57C         	movff	??_xtoa+1,xtoa@d+1
 13474   010FD6                     l3290:
 13475                           
 13476                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 13477   010FD6  0105               	movlb	5	; () banked
 13478   010FD8  BF85               	btfsc	(xtoa@i+1)& (0+255),7,b
 13479   010FDA  EFF8  F087         	goto	u2101
 13480   010FDE  5185               	movf	(xtoa@i+1)& (0+255),w,b
 13481   010FE0  E109               	bnz	u2100
 13482   010FE2  0E02               	movlw	2
 13483   010FE4  5D84               	subwf	xtoa@i& (0+255),w,b
 13484   010FE6  A0D8               	btfss	status,0,c
 13485   010FE8  EFF8  F087         	goto	u2101
 13486   010FEC  EFFA  F087         	goto	u2100
 13487   010FF0                     u2101:
 13488   010FF0  EF1F  F088         	goto	l3300
 13489   010FF4                     u2100:
 13490   010FF4                     
 13491                           ; BSR set to: 5
 13492   010FF4  517B               	movf	xtoa@d& (0+255),w,b
 13493   010FF6  117C               	iorwf	(xtoa@d+1)& (0+255),w,b
 13494   010FF8  A4D8               	btfss	status,2,c
 13495   010FFA  EF01  F088         	goto	u2111
 13496   010FFE  EF03  F088         	goto	u2110
 13497   011002                     u2111:
 13498   011002  EFBB  F087         	goto	l3272
 13499   011006                     u2110:
 13500   011006                     
 13501                           ; BSR set to: 5
 13502   011006  5180               	movf	xtoa@p& (0+255),w,b
 13503   011008  A4D8               	btfss	status,2,c
 13504   01100A  EF09  F088         	goto	u2121
 13505   01100E  EF0B  F088         	goto	u2120
 13506   011012                     u2121:
 13507   011012  EFBB  F087         	goto	l3272
 13508   011016                     u2120:
 13509   011016                     
 13510                           ; BSR set to: 5
 13511   011016  BF82               	btfsc	(xtoa@w+1)& (0+255),7,b
 13512   011018  EF16  F088         	goto	u2131
 13513   01101C  5182               	movf	(xtoa@w+1)& (0+255),w,b
 13514   01101E  E108               	bnz	u2130
 13515   011020  0581               	decf	xtoa@w& (0+255),w,b
 13516   011022  A0D8               	btfss	status,0,c
 13517   011024  EF16  F088         	goto	u2131
 13518   011028  EF18  F088         	goto	u2130
 13519   01102C                     u2131:
 13520   01102C  EF1F  F088         	goto	l3300
 13521   011030                     u2130:
 13522   011030                     
 13523                           ; BSR set to: 5
 13524   011030  B3EA               	btfsc	_flags& (0+255),1,b
 13525   011032  EF1D  F088         	goto	u2141
 13526   011036  EF1F  F088         	goto	u2140
 13527   01103A                     u2141:
 13528   01103A  EFBB  F087         	goto	l3272
 13529   01103E                     u2140:
 13530   01103E                     l3300:
 13531                           
 13532                           ; BSR set to: 5
 13533                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 13534   01103E  C579  F570         	movff	xtoa@fp,pad@fp
 13535   011042  C57A  F571         	movff	xtoa@fp+1,pad@fp+1
 13536   011046  0EC8               	movlw	low _dbuf
 13537   011048  2584               	addwf	xtoa@i& (0+255),w,b
 13538   01104A  6F72               	movwf	pad@buf& (0+255),b
 13539   01104C  0E07               	movlw	high _dbuf
 13540   01104E  2185               	addwfc	(xtoa@i+1)& (0+255),w,b
 13541   011050  6F73               	movwf	(pad@buf+1)& (0+255),b
 13542   011052  C581  F574         	movff	xtoa@w,pad@p
 13543   011056  C582  F575         	movff	xtoa@w+1,pad@p+1
 13544   01105A  EC61  F08D         	call	_pad	;wreg free
 13545   01105E  0012               	return		;funcret
 13546   011060                     __end_of_xtoa:
 13547                           	callstack 0
 13548                           
 13549 ;; *************** function _stoa *****************
 13550 ;; Defined at:
 13551 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 13552 ;; Parameters:    Size  Location     Type
 13553 ;;  fp              2    9[BANK5 ] PTR struct _IO_FILE
 13554 ;;		 -> NULL(0), 
 13555 ;;  s               2   11[BANK5 ] PTR unsigned char 
 13556 ;;		 -> ?_printf(2), rf24_pa_dbm(32), rf24_crclength(30), rf24_datarates(24), 
 13557 ;;		 -> STR_13(14), STR_12(8), STR_11(9), STR_10(7), 
 13558 ;;		 -> STR_9(10), STR_8(7), STR_7(11), STR_6(9), 
 13559 ;;		 -> STR_5(13), STR_4(13), 
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;  l               2   21[BANK5 ] int 
 13562 ;;  cp              2   19[BANK5 ] PTR unsigned char 
 13563 ;;		 -> STR_26(7), ?_printf(2), rf24_pa_dbm(32), rf24_crclength(30), 
 13564 ;;		 -> rf24_datarates(24), STR_13(14), STR_12(8), STR_11(9), 
 13565 ;;		 -> STR_10(7), STR_9(10), STR_8(7), STR_7(11), 
 13566 ;;		 -> STR_6(9), STR_5(13), STR_4(13), 
 13567 ;;  w               2   17[BANK5 ] int 
 13568 ;;  p               2   15[BANK5 ] int 
 13569 ;; Return value:  Size  Location     Type
 13570 ;;                  1    wreg      void 
 13571 ;; Registers used:
 13572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13573 ;; Tracked objects:
 13574 ;;		On entry : 0/0
 13575 ;;		On exit  : 0/0
 13576 ;;		Unchanged: 0/0
 13577 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13578 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13579 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13580 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13581 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13582 ;;Total ram usage:       14 bytes
 13583 ;; Hardware stack levels used: 1
 13584 ;; Hardware stack levels required when called: 9
 13585 ;; This function calls:
 13586 ;;		_fputc
 13587 ;; This function is called by:
 13588 ;;		_vfpfcnvrt
 13589 ;; This function uses a non-reentrant model
 13590 ;;
 13591                           
 13592                           	psect	text20
 13593   010BAA                     __ptext20:
 13594                           	callstack 0
 13595   010BAA                     _stoa:
 13596                           	callstack 112
 13597   010BAA                     
 13598                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
 13599   010BAA  C56B  F573         	movff	stoa@s,stoa@cp
 13600   010BAE  C56C  F574         	movff	stoa@s+1,stoa@cp+1
 13601                           
 13602                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 13603   010BB2  0105               	movlb	5	; () banked
 13604   010BB4  5173               	movf	stoa@cp& (0+255),w,b
 13605   010BB6  1174               	iorwf	(stoa@cp+1)& (0+255),w,b
 13606   010BB8  A4D8               	btfss	status,2,c
 13607   010BBA  EFE1  F085         	goto	u1991
 13608   010BBE  EFE3  F085         	goto	u1990
 13609   010BC2                     u1991:
 13610   010BC2  EFE7  F085         	goto	l3238
 13611   010BC6                     u1990:
 13612   010BC6                     
 13613                           ; BSR set to: 5
 13614                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 13615   010BC6  0ED9               	movlw	low STR_26
 13616   010BC8  6F73               	movwf	stoa@cp& (0+255),b
 13617   010BCA  0EFF               	movlw	high STR_26
 13618   010BCC  6F74               	movwf	(stoa@cp+1)& (0+255),b
 13619   010BCE                     l3238:
 13620                           
 13621                           ; BSR set to: 5
 13622                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 13623   010BCE  0E00               	movlw	0
 13624   010BD0  6F76               	movwf	(stoa@l+1)& (0+255),b
 13625   010BD2  0E00               	movlw	0
 13626   010BD4  6F75               	movwf	stoa@l& (0+255),b
 13627   010BD6  EFF0  F085         	goto	l3242
 13628   010BDA                     l3240:
 13629   010BDA  0105               	movlb	5	; () banked
 13630   010BDC  4B75               	infsnz	stoa@l& (0+255),f,b
 13631   010BDE  2B76               	incf	(stoa@l+1)& (0+255),f,b
 13632   010BE0                     l3242:
 13633                           
 13634                           ; BSR set to: 5
 13635   010BE0  5175               	movf	stoa@l& (0+255),w,b
 13636   010BE2  2573               	addwf	stoa@cp& (0+255),w,b
 13637   010BE4  6F6D               	movwf	??_stoa& (0+255),b
 13638   010BE6  5176               	movf	(stoa@l+1)& (0+255),w,b
 13639   010BE8  2174               	addwfc	(stoa@cp+1)& (0+255),w,b
 13640   010BEA  6F6E               	movwf	(??_stoa+1)& (0+255),b
 13641   010BEC  C56D  F4F6         	movff	??_stoa,tblptrl
 13642   010BF0  C56E  F4F7         	movff	??_stoa+1,tblptrh
 13643   010BF4  0E00               	movlw	low (__mediumconst shr (0+16))
 13644   010BF6  6EF8               	movwf	tblptru,c
 13645   010BF8  0E25               	movlw	(high __ramtop+-1)
 13646   010BFA  64F7               	cpfsgt	tblptrh,c
 13647   010BFC  D003               	bra	u2007
 13648   010BFE  0008               	tblrd		*
 13649   010C00  50F5               	movf	tablat,w,c
 13650   010C02  D005               	bra	u2000
 13651   010C04                     u2007:
 13652   010C04  C4F6 F4E9          	movff	tblptrl,fsr0l
 13653   010C08  C4F7 F4EA          	movff	tblptrh,fsr0h
 13654   010C0C  50EF               	movf	indf0,w,c
 13655   010C0E                     u2000:
 13656   010C0E  0900               	iorlw	0
 13657   010C10  A4D8               	btfss	status,2,c
 13658   010C12  EF0D  F086         	goto	u2011
 13659   010C16  EF0F  F086         	goto	u2010
 13660   010C1A                     u2011:
 13661   010C1A  EFED  F085         	goto	l3240
 13662   010C1E                     u2010:
 13663   010C1E                     
 13664                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 965:     p = l;
 13665   010C1E  C575  F56F         	movff	stoa@l,stoa@p
 13666   010C22  C576  F570         	movff	stoa@l+1,stoa@p+1
 13667                           
 13668                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
 13669   010C26  C5E6  F571         	movff	_width,stoa@w
 13670   010C2A  C5E7  F572         	movff	_width+1,stoa@w+1
 13671                           
 13672                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
 13673   010C2E  0105               	movlb	5	; () banked
 13674   010C30  B1EA               	btfsc	_flags& (0+255),0,b
 13675   010C32  EF1D  F086         	goto	u2021
 13676   010C36  EF1F  F086         	goto	u2020
 13677   010C3A                     u2021:
 13678   010C3A  EF5E  F086         	goto	l3256
 13679   010C3E                     u2020:
 13680   010C3E  EF2E  F086         	goto	l3250
 13681   010C42                     l3246:
 13682                           
 13683                           ; BSR set to: 5
 13684                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
 13685   010C42  0E00               	movlw	0
 13686   010C44  6F61               	movwf	(fputc@c+1)& (0+255),b
 13687   010C46  0E20               	movlw	32
 13688   010C48  6F60               	movwf	fputc@c& (0+255),b
 13689   010C4A  C569  F562         	movff	stoa@fp,fputc@fp
 13690   010C4E  C56A  F563         	movff	stoa@fp+1,fputc@fp+1
 13691   010C52  EC02  F08A         	call	_fputc	;wreg free
 13692   010C56                     
 13693                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
 13694   010C56  0105               	movlb	5	; () banked
 13695   010C58  4B75               	infsnz	stoa@l& (0+255),f,b
 13696   010C5A  2B76               	incf	(stoa@l+1)& (0+255),f,b
 13697   010C5C                     l3250:
 13698                           
 13699                           ; BSR set to: 5
 13700                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
 13701   010C5C  5171               	movf	stoa@w& (0+255),w,b
 13702   010C5E  5D75               	subwf	stoa@l& (0+255),w,b
 13703   010C60  5176               	movf	(stoa@l+1)& (0+255),w,b
 13704   010C62  0A80               	xorlw	128
 13705   010C64  6F6D               	movwf	??_stoa& (0+255),b
 13706   010C66  5172               	movf	(stoa@w+1)& (0+255),w,b
 13707   010C68  0A80               	xorlw	128
 13708   010C6A  596D               	subwfb	??_stoa& (0+255),w,b
 13709   010C6C  A0D8               	btfss	status,0,c
 13710   010C6E  EF3B  F086         	goto	u2031
 13711   010C72  EF3D  F086         	goto	u2030
 13712   010C76                     u2031:
 13713   010C76  EF21  F086         	goto	l3246
 13714   010C7A                     u2030:
 13715   010C7A  EF5E  F086         	goto	l3256
 13716   010C7E                     l3252:
 13717                           
 13718                           ; BSR set to: 5
 13719                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 13720   010C7E  C573  F4F6         	movff	stoa@cp,tblptrl
 13721   010C82  C574  F4F7         	movff	stoa@cp+1,tblptrh
 13722   010C86  0E00               	movlw	low (__mediumconst shr (0+16))
 13723   010C88  6EF8               	movwf	tblptru,c
 13724   010C8A  0E25               	movlw	(high __ramtop+-1)
 13725   010C8C  64F7               	cpfsgt	tblptrh,c
 13726   010C8E  D003               	bra	u2047
 13727   010C90  0008               	tblrd		*
 13728   010C92  50F5               	movf	tablat,w,c
 13729   010C94  D005               	bra	u2040
 13730   010C96                     u2047:
 13731   010C96  C4F6 F4E9          	movff	tblptrl,fsr0l
 13732   010C9A  C4F7 F4EA          	movff	tblptrh,fsr0h
 13733   010C9E  50EF               	movf	indf0,w,c
 13734   010CA0                     u2040:
 13735   010CA0  0105               	movlb	5	; () banked
 13736   010CA2  6F6D               	movwf	??_stoa& (0+255),b
 13737   010CA4  516D               	movf	??_stoa& (0+255),w,b
 13738   010CA6  6F60               	movwf	fputc@c& (0+255),b
 13739   010CA8  6B61               	clrf	(fputc@c+1)& (0+255),b
 13740   010CAA  C569  F562         	movff	stoa@fp,fputc@fp
 13741   010CAE  C56A  F563         	movff	stoa@fp+1,fputc@fp+1
 13742   010CB2  EC02  F08A         	call	_fputc	;wreg free
 13743   010CB6                     
 13744                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 13745   010CB6  0105               	movlb	5	; () banked
 13746   010CB8  4B73               	infsnz	stoa@cp& (0+255),f,b
 13747   010CBA  2B74               	incf	(stoa@cp+1)& (0+255),f,b
 13748   010CBC                     l3256:
 13749                           
 13750                           ; BSR set to: 5
 13751                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 13752   010CBC  076F               	decf	stoa@p& (0+255),f,b
 13753   010CBE  A0D8               	btfss	status,0,c
 13754   010CC0  0770               	decf	(stoa@p+1)& (0+255),f,b
 13755   010CC2  296F               	incf	stoa@p& (0+255),w,b
 13756   010CC4  E106               	bnz	u2051
 13757   010CC6  2970               	incf	(stoa@p+1)& (0+255),w,b
 13758   010CC8  A4D8               	btfss	status,2,c
 13759   010CCA  EF69  F086         	goto	u2051
 13760   010CCE  EF6B  F086         	goto	u2050
 13761   010CD2                     u2051:
 13762   010CD2  EF3F  F086         	goto	l3252
 13763   010CD6                     u2050:
 13764   010CD6                     
 13765                           ; BSR set to: 5
 13766                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
 13767   010CD6  A1EA               	btfss	_flags& (0+255),0,b
 13768   010CD8  EF70  F086         	goto	u2061
 13769   010CDC  EF72  F086         	goto	u2060
 13770   010CE0                     u2061:
 13771   010CE0  EF90  F086         	goto	l1663
 13772   010CE4                     u2060:
 13773   010CE4  EF81  F086         	goto	l3264
 13774   010CE8                     l3260:
 13775                           
 13776                           ; BSR set to: 5
 13777                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
 13778   010CE8  0E00               	movlw	0
 13779   010CEA  6F61               	movwf	(fputc@c+1)& (0+255),b
 13780   010CEC  0E20               	movlw	32
 13781   010CEE  6F60               	movwf	fputc@c& (0+255),b
 13782   010CF0  C569  F562         	movff	stoa@fp,fputc@fp
 13783   010CF4  C56A  F563         	movff	stoa@fp+1,fputc@fp+1
 13784   010CF8  EC02  F08A         	call	_fputc	;wreg free
 13785   010CFC                     
 13786                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
 13787   010CFC  0105               	movlb	5	; () banked
 13788   010CFE  4B75               	infsnz	stoa@l& (0+255),f,b
 13789   010D00  2B76               	incf	(stoa@l+1)& (0+255),f,b
 13790   010D02                     l3264:
 13791                           
 13792                           ; BSR set to: 5
 13793                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
 13794   010D02  5171               	movf	stoa@w& (0+255),w,b
 13795   010D04  5D75               	subwf	stoa@l& (0+255),w,b
 13796   010D06  5176               	movf	(stoa@l+1)& (0+255),w,b
 13797   010D08  0A80               	xorlw	128
 13798   010D0A  6F6D               	movwf	??_stoa& (0+255),b
 13799   010D0C  5172               	movf	(stoa@w+1)& (0+255),w,b
 13800   010D0E  0A80               	xorlw	128
 13801   010D10  596D               	subwfb	??_stoa& (0+255),w,b
 13802   010D12  A0D8               	btfss	status,0,c
 13803   010D14  EF8E  F086         	goto	u2071
 13804   010D18  EF90  F086         	goto	u2070
 13805   010D1C                     u2071:
 13806   010D1C  EF74  F086         	goto	l3260
 13807   010D20                     u2070:
 13808   010D20                     l1663:
 13809                           
 13810                           ; BSR set to: 5
 13811   010D20  0012               	return		;funcret
 13812   010D22                     __end_of_stoa:
 13813                           	callstack 0
 13814                           
 13815 ;; *************** function _read_prec_or_width *****************
 13816 ;; Defined at:
 13817 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 13818 ;; Parameters:    Size  Location     Type
 13819 ;;  fmt             2    0[BANK5 ] PTR PTR const unsigned c
 13820 ;;		 -> vfprintf@cfmt(2), 
 13821 ;;  ap              2    2[BANK5 ] PTR PTR void [1]
 13822 ;;		 -> printf@ap(2), 
 13823 ;; Auto vars:     Size  Location     Type
 13824 ;;  c               1    6[BANK5 ] unsigned char 
 13825 ;;  n               2    7[BANK5 ] int 
 13826 ;; Return value:  Size  Location     Type
 13827 ;;                  2    0[BANK5 ] int 
 13828 ;; Registers used:
 13829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13830 ;; Tracked objects:
 13831 ;;		On entry : 0/0
 13832 ;;		On exit  : 0/0
 13833 ;;		Unchanged: 0/0
 13834 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13835 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13836 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13837 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13838 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13839 ;;Total ram usage:        9 bytes
 13840 ;; Hardware stack levels used: 1
 13841 ;; Hardware stack levels required when called: 7
 13842 ;; This function calls:
 13843 ;;		Nothing
 13844 ;; This function is called by:
 13845 ;;		_vfpfcnvrt
 13846 ;; This function uses a non-reentrant model
 13847 ;;
 13848                           
 13849                           	psect	text21
 13850   011336                     __ptext21:
 13851                           	callstack 0
 13852   011336                     _read_prec_or_width:
 13853                           	callstack 114
 13854   011336                     
 13855                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 13856   011336  0E00               	movlw	0
 13857   011338  0105               	movlb	5	; () banked
 13858   01133A  6F68               	movwf	(read_prec_or_width@n+1)& (0+255),b
 13859   01133C  0E00               	movlw	0
 13860   01133E  6F67               	movwf	read_prec_or_width@n& (0+255),b
 13861   011340                     
 13862                           ; BSR set to: 5
 13863                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 13864   011340  C560  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 13865   011344  C561  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 13866   011348  C4DE F4F6          	movff	postinc2,tblptrl
 13867   01134C  C4DD F4F7          	movff	postdec2,tblptrh
 13868   011350                     	if	0	;tblptru may be non-zero
 13869   011350                     	endif
 13870   011350                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13871   011350  0E00               	movlw	low (__mediumconst shr (0+16))
 13872   011352  6EF8               	movwf	tblptru,c
 13873   011354                     	endif
 13874   011354  0008               	tblrd		*
 13875   011356  50F5               	movf	tablat,w,c
 13876   011358  0A2A               	xorlw	42
 13877   01135A  A4D8               	btfss	status,2,c
 13878   01135C  EFB2  F089         	goto	u2151
 13879   011360  EFB4  F089         	goto	u2150
 13880   011364                     u2151:
 13881   011364  EFE7  F089         	goto	l3314
 13882   011368                     u2150:
 13883   011368                     
 13884                           ; BSR set to: 5
 13885                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 13886   011368  C560  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 13887   01136C  C561  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 13888   011370  2ADE               	incf	postinc2,f,c
 13889   011372  0E00               	movlw	0
 13890   011374  22DD               	addwfc	postdec2,f,c
 13891                           
 13892                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 13893   011376  C562  F4D9         	movff	read_prec_or_width@ap,fsr2l
 13894   01137A  C563  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
 13895   01137E  C4DF F564          	movff	indf2,??_read_prec_or_width
 13896   011382  0E02               	movlw	2
 13897   011384  26DE               	addwf	postinc2,f,c
 13898   011386  C4DF F565          	movff	indf2,??_read_prec_or_width+1
 13899   01138A  0E00               	movlw	0
 13900   01138C  22DD               	addwfc	postdec2,f,c
 13901   01138E  C564  F4D9         	movff	??_read_prec_or_width,fsr2l
 13902   011392  C565  F4DA         	movff	??_read_prec_or_width+1,fsr2h
 13903   011396  C4DE F567          	movff	postinc2,read_prec_or_width@n
 13904   01139A  C4DD F568          	movff	postdec2,read_prec_or_width@n+1
 13905                           
 13906                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 13907   01139E  EFFD  F089         	goto	l1679
 13908   0113A2                     l3310:
 13909                           
 13910                           ; BSR set to: 5
 13911                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 13912   0113A2  0E0A               	movlw	10
 13913   0113A4  0367               	mulwf	read_prec_or_width@n& (0+255),b
 13914   0113A6  C4F3 F564          	movff	prodl,??_read_prec_or_width
 13915   0113AA  C4F4 F565          	movff	prodh,??_read_prec_or_width+1
 13916   0113AE  0368               	mulwf	(read_prec_or_width@n+1)& (0+255),b
 13917   0113B0  50F3               	movf	prodl,w,c
 13918   0113B2  2765               	addwf	(??_read_prec_or_width+1)& (0+255),f,b
 13919   0113B4  5166               	movf	read_prec_or_width@c& (0+255),w,b
 13920   0113B6  2564               	addwf	??_read_prec_or_width& (0+255),w,b
 13921   0113B8  6F67               	movwf	read_prec_or_width@n& (0+255),b
 13922   0113BA  0E00               	movlw	0
 13923   0113BC  2165               	addwfc	(??_read_prec_or_width+1)& (0+255),w,b
 13924   0113BE  6F68               	movwf	(read_prec_or_width@n+1)& (0+255),b
 13925   0113C0                     
 13926                           ; BSR set to: 5
 13927                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 13928   0113C0  C560  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 13929   0113C4  C561  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 13930   0113C8  2ADE               	incf	postinc2,f,c
 13931   0113CA  0E00               	movlw	0
 13932   0113CC  22DD               	addwfc	postdec2,f,c
 13933   0113CE                     l3314:
 13934                           
 13935                           ; BSR set to: 5
 13936                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 13937   0113CE  C560  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 13938   0113D2  C561  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 13939   0113D6  C4DE F4F6          	movff	postinc2,tblptrl
 13940   0113DA  C4DD F4F7          	movff	postdec2,tblptrh
 13941   0113DE                     	if	0	;tblptru may be non-zero
 13942   0113DE                     	endif
 13943   0113DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13944   0113DE  0E00               	movlw	low (__mediumconst shr (0+16))
 13945   0113E0  6EF8               	movwf	tblptru,c
 13946   0113E2                     	endif
 13947   0113E2  0008               	tblrd		*
 13948   0113E4  50F5               	movf	tablat,w,c
 13949   0113E6  0FD0               	addlw	208
 13950   0113E8  6F66               	movwf	read_prec_or_width@c& (0+255),b
 13951   0113EA  0E09               	movlw	9
 13952   0113EC  6566               	cpfsgt	read_prec_or_width@c& (0+255),b
 13953   0113EE  EFFB  F089         	goto	u2161
 13954   0113F2  EFFD  F089         	goto	u2160
 13955   0113F6                     u2161:
 13956   0113F6  EFD1  F089         	goto	l3310
 13957   0113FA                     u2160:
 13958   0113FA                     l1679:
 13959                           
 13960                           ; BSR set to: 5
 13961                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 13962   0113FA  C567  F560         	movff	read_prec_or_width@n,?_read_prec_or_width
 13963   0113FE  C568  F561         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 13964   011402                     
 13965                           ; BSR set to: 5
 13966   011402  0012               	return		;funcret
 13967   011404                     __end_of_read_prec_or_width:
 13968                           	callstack 0
 13969                           
 13970 ;; *************** function _dtoa *****************
 13971 ;; Defined at:
 13972 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 13973 ;; Parameters:    Size  Location     Type
 13974 ;;  fp              2   25[BANK5 ] PTR struct _IO_FILE
 13975 ;;		 -> NULL(0), 
 13976 ;;  d               2   27[BANK5 ] int 
 13977 ;; Auto vars:     Size  Location     Type
 13978 ;;  i               2   35[BANK5 ] int 
 13979 ;;  w               2   32[BANK5 ] int 
 13980 ;;  s               1   34[BANK5 ] unsigned char 
 13981 ;;  p               1   31[BANK5 ] _Bool 
 13982 ;; Return value:  Size  Location     Type
 13983 ;;                  1    wreg      void 
 13984 ;; Registers used:
 13985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13986 ;; Tracked objects:
 13987 ;;		On entry : 0/0
 13988 ;;		On exit  : 0/0
 13989 ;;		Unchanged: 0/0
 13990 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13991 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13992 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13994 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13995 ;;Total ram usage:       12 bytes
 13996 ;; Hardware stack levels used: 1
 13997 ;; Hardware stack levels required when called: 11
 13998 ;; This function calls:
 13999 ;;		___awdiv
 14000 ;;		___awmod
 14001 ;;		_abs
 14002 ;;		_pad
 14003 ;; This function is called by:
 14004 ;;		_vfpfcnvrt
 14005 ;; This function uses a non-reentrant model
 14006 ;;
 14007                           
 14008                           	psect	text22
 14009   010A2E                     __ptext22:
 14010                           	callstack 0
 14011   010A2E                     _dtoa:
 14012                           	callstack 110
 14013   010A2E                     
 14014                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
 14015   010A2E  0E01               	movlw	1
 14016   010A30  0105               	movlb	5	; () banked
 14017   010A32  6F7F               	movwf	dtoa@p& (0+255),b
 14018   010A34                     
 14019                           ; BSR set to: 5
 14020                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 14021   010A34  BF7C               	btfsc	(dtoa@d+1)& (0+255),7,b
 14022   010A36  EF1F  F085         	goto	u1891
 14023   010A3A  EF22  F085         	goto	u1890
 14024   010A3E                     u1891:
 14025   010A3E  0E01               	movlw	1
 14026   010A40  EF23  F085         	goto	u1900
 14027   010A44                     u1890:
 14028   010A44  0E00               	movlw	0
 14029   010A46                     u1900:
 14030   010A46  6F82               	movwf	dtoa@s& (0+255),b
 14031   010A48                     
 14032                           ; BSR set to: 5
 14033                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 14034   010A48  C5E6  F580         	movff	_width,dtoa@w
 14035   010A4C  C5E7  F581         	movff	_width+1,dtoa@w+1
 14036   010A50                     
 14037                           ; BSR set to: 5
 14038                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
 14039   010A50  5182               	movf	dtoa@s& (0+255),w,b
 14040   010A52  B4D8               	btfsc	status,2,c
 14041   010A54  EF2E  F085         	goto	u1911
 14042   010A58  EF30  F085         	goto	u1910
 14043   010A5C                     u1911:
 14044   010A5C  EF47  F085         	goto	l1631
 14045   010A60                     u1910:
 14046   010A60                     
 14047                           ; BSR set to: 5
 14048                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
 14049   010A60  0780               	decf	dtoa@w& (0+255),f,b
 14050   010A62  A0D8               	btfss	status,0,c
 14051   010A64  0781               	decf	(dtoa@w+1)& (0+255),f,b
 14052   010A66                     
 14053                           ; BSR set to: 5
 14054                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 14055   010A66  5182               	movf	dtoa@s& (0+255),w,b
 14056   010A68  A4D8               	btfss	status,2,c
 14057   010A6A  EF39  F085         	goto	u1921
 14058   010A6E  EF3B  F085         	goto	u1920
 14059   010A72                     u1921:
 14060   010A72  EF41  F085         	goto	l3198
 14061   010A76                     u1920:
 14062   010A76                     
 14063                           ; BSR set to: 5
 14064   010A76  0E00               	movlw	0
 14065   010A78  6F7E               	movwf	(_dtoa$2107+1)& (0+255),b
 14066   010A7A  0E2B               	movlw	43
 14067   010A7C  6F7D               	movwf	_dtoa$2107& (0+255),b
 14068   010A7E  EF45  F085         	goto	l3200
 14069   010A82                     l3198:
 14070                           
 14071                           ; BSR set to: 5
 14072   010A82  0E00               	movlw	0
 14073   010A84  6F7E               	movwf	(_dtoa$2107+1)& (0+255),b
 14074   010A86  0E2D               	movlw	45
 14075   010A88  6F7D               	movwf	_dtoa$2107& (0+255),b
 14076   010A8A                     l3200:
 14077                           
 14078                           ; BSR set to: 5
 14079   010A8A  C57D  F582         	movff	_dtoa$2107,dtoa@s
 14080   010A8E                     l1631:
 14081                           
 14082                           ; BSR set to: 5
 14083                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 14084   010A8E  0E00               	movlw	0
 14085   010A90  6F84               	movwf	(dtoa@i+1)& (0+255),b
 14086   010A92  0E1F               	movlw	31
 14087   010A94  6F83               	movwf	dtoa@i& (0+255),b
 14088   010A96                     
 14089                           ; BSR set to: 5
 14090                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 14091   010A96  0107               	movlb	7	; () banked
 14092   010A98  6BE7               	clrf	(_dbuf+31)& (0+255),b
 14093                           
 14094                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 14095   010A9A  EF7E  F085         	goto	l3214
 14096   010A9E                     l3204:
 14097                           
 14098                           ; BSR set to: 5
 14099                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
 14100   010A9E  0783               	decf	dtoa@i& (0+255),f,b
 14101   010AA0  A0D8               	btfss	status,0,c
 14102   010AA2  0784               	decf	(dtoa@i+1)& (0+255),f,b
 14103   010AA4                     
 14104                           ; BSR set to: 5
 14105                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 14106   010AA4  0EC8               	movlw	low _dbuf
 14107   010AA6  2583               	addwf	dtoa@i& (0+255),w,b
 14108   010AA8  6ED9               	movwf	fsr2l,c
 14109   010AAA  0E07               	movlw	high _dbuf
 14110   010AAC  2184               	addwfc	(dtoa@i+1)& (0+255),w,b
 14111   010AAE  6EDA               	movwf	fsr2h,c
 14112   010AB0  C57B  F560         	movff	dtoa@d,___awmod@dividend
 14113   010AB4  C57C  F561         	movff	dtoa@d+1,___awmod@dividend+1
 14114   010AB8  0E00               	movlw	0
 14115   010ABA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 14116   010ABC  0E0A               	movlw	10
 14117   010ABE  6F62               	movwf	___awmod@divisor& (0+255),b
 14118   010AC0  ECB3  F08C         	call	___awmod	;wreg free
 14119   010AC4  C560  F566         	movff	?___awmod,abs@a
 14120   010AC8  C561  F567         	movff	?___awmod+1,abs@a+1
 14121   010ACC  EC9D  F091         	call	_abs	;wreg free
 14122   010AD0  0105               	movlb	5	; () banked
 14123   010AD2  5166               	movf	?_abs& (0+255),w,b
 14124   010AD4  0F30               	addlw	48
 14125   010AD6  6EDF               	movwf	indf2,c
 14126   010AD8                     
 14127                           ; BSR set to: 5
 14128                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 14129   010AD8  6B7F               	clrf	dtoa@p& (0+255),b
 14130   010ADA                     
 14131                           ; BSR set to: 5
 14132                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
 14133   010ADA  0780               	decf	dtoa@w& (0+255),f,b
 14134   010ADC  A0D8               	btfss	status,0,c
 14135   010ADE  0781               	decf	(dtoa@w+1)& (0+255),f,b
 14136   010AE0                     
 14137                           ; BSR set to: 5
 14138                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 14139   010AE0  C57B  F560         	movff	dtoa@d,___awdiv@dividend
 14140   010AE4  C57C  F561         	movff	dtoa@d+1,___awdiv@dividend+1
 14141   010AE8  0E00               	movlw	0
 14142   010AEA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 14143   010AEC  0E0A               	movlw	10
 14144   010AEE  6F62               	movwf	___awdiv@divisor& (0+255),b
 14145   010AF0  ECF7  F08B         	call	___awdiv	;wreg free
 14146   010AF4  C560  F57B         	movff	?___awdiv,dtoa@d
 14147   010AF8  C561  F57C         	movff	?___awdiv+1,dtoa@d+1
 14148   010AFC                     l3214:
 14149                           
 14150                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 14151   010AFC  0105               	movlb	5	; () banked
 14152   010AFE  BF84               	btfsc	(dtoa@i+1)& (0+255),7,b
 14153   010B00  EF8A  F085         	goto	u1931
 14154   010B04  5184               	movf	(dtoa@i+1)& (0+255),w,b
 14155   010B06  E108               	bnz	u1930
 14156   010B08  0583               	decf	dtoa@i& (0+255),w,b
 14157   010B0A  A0D8               	btfss	status,0,c
 14158   010B0C  EF8A  F085         	goto	u1931
 14159   010B10  EF8C  F085         	goto	u1930
 14160   010B14                     u1931:
 14161   010B14  EFB1  F085         	goto	l3224
 14162   010B18                     u1930:
 14163   010B18                     
 14164                           ; BSR set to: 5
 14165   010B18  517B               	movf	dtoa@d& (0+255),w,b
 14166   010B1A  117C               	iorwf	(dtoa@d+1)& (0+255),w,b
 14167   010B1C  A4D8               	btfss	status,2,c
 14168   010B1E  EF93  F085         	goto	u1941
 14169   010B22  EF95  F085         	goto	u1940
 14170   010B26                     u1941:
 14171   010B26  EF4F  F085         	goto	l3204
 14172   010B2A                     u1940:
 14173   010B2A                     
 14174                           ; BSR set to: 5
 14175   010B2A  517F               	movf	dtoa@p& (0+255),w,b
 14176   010B2C  A4D8               	btfss	status,2,c
 14177   010B2E  EF9B  F085         	goto	u1951
 14178   010B32  EF9D  F085         	goto	u1950
 14179   010B36                     u1951:
 14180   010B36  EF4F  F085         	goto	l3204
 14181   010B3A                     u1950:
 14182   010B3A                     
 14183                           ; BSR set to: 5
 14184   010B3A  BF81               	btfsc	(dtoa@w+1)& (0+255),7,b
 14185   010B3C  EFA8  F085         	goto	u1961
 14186   010B40  5181               	movf	(dtoa@w+1)& (0+255),w,b
 14187   010B42  E108               	bnz	u1960
 14188   010B44  0580               	decf	dtoa@w& (0+255),w,b
 14189   010B46  A0D8               	btfss	status,0,c
 14190   010B48  EFA8  F085         	goto	u1961
 14191   010B4C  EFAA  F085         	goto	u1960
 14192   010B50                     u1961:
 14193   010B50  EFB1  F085         	goto	l3224
 14194   010B54                     u1960:
 14195   010B54                     
 14196                           ; BSR set to: 5
 14197   010B54  B3EA               	btfsc	_flags& (0+255),1,b
 14198   010B56  EFAF  F085         	goto	u1971
 14199   010B5A  EFB1  F085         	goto	u1970
 14200   010B5E                     u1971:
 14201   010B5E  EF4F  F085         	goto	l3204
 14202   010B62                     u1970:
 14203   010B62                     l3224:
 14204                           
 14205                           ; BSR set to: 5
 14206                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 14207   010B62  5182               	movf	dtoa@s& (0+255),w,b
 14208   010B64  B4D8               	btfsc	status,2,c
 14209   010B66  EFB7  F085         	goto	u1981
 14210   010B6A  EFB9  F085         	goto	u1980
 14211   010B6E                     u1981:
 14212   010B6E  EFC4  F085         	goto	l3230
 14213   010B72                     u1980:
 14214   010B72                     
 14215                           ; BSR set to: 5
 14216                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
 14217   010B72  0783               	decf	dtoa@i& (0+255),f,b
 14218   010B74  A0D8               	btfss	status,0,c
 14219   010B76  0784               	decf	(dtoa@i+1)& (0+255),f,b
 14220   010B78                     
 14221                           ; BSR set to: 5
 14222                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 14223   010B78  0EC8               	movlw	low _dbuf
 14224   010B7A  2583               	addwf	dtoa@i& (0+255),w,b
 14225   010B7C  6ED9               	movwf	fsr2l,c
 14226   010B7E  0E07               	movlw	high _dbuf
 14227   010B80  2184               	addwfc	(dtoa@i+1)& (0+255),w,b
 14228   010B82  6EDA               	movwf	fsr2h,c
 14229   010B84  C582  F4DF         	movff	dtoa@s,indf2
 14230   010B88                     l3230:
 14231                           
 14232                           ; BSR set to: 5
 14233                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 14234   010B88  C579  F570         	movff	dtoa@fp,pad@fp
 14235   010B8C  C57A  F571         	movff	dtoa@fp+1,pad@fp+1
 14236   010B90  0EC8               	movlw	low _dbuf
 14237   010B92  2583               	addwf	dtoa@i& (0+255),w,b
 14238   010B94  6F72               	movwf	pad@buf& (0+255),b
 14239   010B96  0E07               	movlw	high _dbuf
 14240   010B98  2184               	addwfc	(dtoa@i+1)& (0+255),w,b
 14241   010B9A  6F73               	movwf	(pad@buf+1)& (0+255),b
 14242   010B9C  C580  F574         	movff	dtoa@w,pad@p
 14243   010BA0  C581  F575         	movff	dtoa@w+1,pad@p+1
 14244   010BA4  EC61  F08D         	call	_pad	;wreg free
 14245   010BA8  0012               	return		;funcret
 14246   010BAA                     __end_of_dtoa:
 14247                           	callstack 0
 14248                           
 14249 ;; *************** function _pad *****************
 14250 ;; Defined at:
 14251 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 14252 ;; Parameters:    Size  Location     Type
 14253 ;;  fp              2   16[BANK5 ] PTR struct _IO_FILE
 14254 ;;		 -> NULL(0), 
 14255 ;;  buf             2   18[BANK5 ] PTR unsigned char 
 14256 ;;		 -> dbuf(32), 
 14257 ;;  p               2   20[BANK5 ] int 
 14258 ;; Auto vars:     Size  Location     Type
 14259 ;;  i               2   23[BANK5 ] int 
 14260 ;; Return value:  Size  Location     Type
 14261 ;;                  1    wreg      void 
 14262 ;; Registers used:
 14263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14264 ;; Tracked objects:
 14265 ;;		On entry : 0/0
 14266 ;;		On exit  : 0/0
 14267 ;;		Unchanged: 0/0
 14268 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14269 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14270 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14272 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14273 ;;Total ram usage:        9 bytes
 14274 ;; Hardware stack levels used: 1
 14275 ;; Hardware stack levels required when called: 10
 14276 ;; This function calls:
 14277 ;;		_fputc
 14278 ;;		_fputs
 14279 ;; This function is called by:
 14280 ;;		_dtoa
 14281 ;;		_xtoa
 14282 ;; This function uses a non-reentrant model
 14283 ;;
 14284                           
 14285                           	psect	text23
 14286   011AC2                     __ptext23:
 14287                           	callstack 0
 14288   011AC2                     _pad:
 14289                           	callstack 110
 14290   011AC2                     
 14291                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 14292   011AC2  0105               	movlb	5	; () banked
 14293   011AC4  A1EA               	btfss	_flags& (0+255),0,b
 14294   011AC6  EF67  F08D         	goto	u1841
 14295   011ACA  EF69  F08D         	goto	u1840
 14296   011ACE                     u1841:
 14297   011ACE  EF73  F08D         	goto	l3168
 14298   011AD2                     u1840:
 14299   011AD2                     
 14300                           ; BSR set to: 5
 14301                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 14302   011AD2  C572  F569         	movff	pad@buf,fputs@s
 14303   011AD6  C573  F56A         	movff	pad@buf+1,fputs@s+1
 14304   011ADA  C570  F56B         	movff	pad@fp,fputs@fp
 14305   011ADE  C571  F56C         	movff	pad@fp+1,fputs@fp+1
 14306   011AE2  EC25  F091         	call	_fputs	;wreg free
 14307   011AE6                     l3168:
 14308                           
 14309                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 14310   011AE6  0105               	movlb	5	; () banked
 14311   011AE8  BF75               	btfsc	(pad@p+1)& (0+255),7,b
 14312   011AEA  EF7B  F08D         	goto	u1850
 14313   011AEE  EF79  F08D         	goto	u1851
 14314   011AF2                     u1851:
 14315   011AF2  EF7F  F08D         	goto	l1623
 14316   011AF6                     u1850:
 14317   011AF6                     
 14318                           ; BSR set to: 5
 14319                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 14320   011AF6  0E00               	movlw	0
 14321   011AF8  6F75               	movwf	(pad@p+1)& (0+255),b
 14322   011AFA  0E00               	movlw	0
 14323   011AFC  6F74               	movwf	pad@p& (0+255),b
 14324   011AFE                     l1623:
 14325                           
 14326                           ; BSR set to: 5
 14327                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 14328   011AFE  0E00               	movlw	0
 14329   011B00  6F78               	movwf	(pad@i+1)& (0+255),b
 14330   011B02  0E00               	movlw	0
 14331   011B04  6F77               	movwf	pad@i& (0+255),b
 14332                           
 14333                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 14334   011B06  EF92  F08D         	goto	l3176
 14335   011B0A                     l3172:
 14336                           
 14337                           ; BSR set to: 5
 14338                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 14339   011B0A  0E00               	movlw	0
 14340   011B0C  6F61               	movwf	(fputc@c+1)& (0+255),b
 14341   011B0E  0E20               	movlw	32
 14342   011B10  6F60               	movwf	fputc@c& (0+255),b
 14343   011B12  C570  F562         	movff	pad@fp,fputc@fp
 14344   011B16  C571  F563         	movff	pad@fp+1,fputc@fp+1
 14345   011B1A  EC02  F08A         	call	_fputc	;wreg free
 14346   011B1E                     
 14347                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
 14348   011B1E  0105               	movlb	5	; () banked
 14349   011B20  4B77               	infsnz	pad@i& (0+255),f,b
 14350   011B22  2B78               	incf	(pad@i+1)& (0+255),f,b
 14351   011B24                     l3176:
 14352                           
 14353                           ; BSR set to: 5
 14354                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 14355   011B24  5174               	movf	pad@p& (0+255),w,b
 14356   011B26  5D77               	subwf	pad@i& (0+255),w,b
 14357   011B28  5178               	movf	(pad@i+1)& (0+255),w,b
 14358   011B2A  0A80               	xorlw	128
 14359   011B2C  6F76               	movwf	??_pad& (0+255),b
 14360   011B2E  5175               	movf	(pad@p+1)& (0+255),w,b
 14361   011B30  0A80               	xorlw	128
 14362   011B32  5976               	subwfb	??_pad& (0+255),w,b
 14363   011B34  A0D8               	btfss	status,0,c
 14364   011B36  EF9F  F08D         	goto	u1861
 14365   011B3A  EFA1  F08D         	goto	u1860
 14366   011B3E                     u1861:
 14367   011B3E  EF85  F08D         	goto	l3172
 14368   011B42                     u1860:
 14369   011B42                     
 14370                           ; BSR set to: 5
 14371                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 14372   011B42  B1EA               	btfsc	_flags& (0+255),0,b
 14373   011B44  EFA6  F08D         	goto	u1871
 14374   011B48  EFA8  F08D         	goto	u1870
 14375   011B4C                     u1871:
 14376   011B4C  EFB2  F08D         	goto	l1628
 14377   011B50                     u1870:
 14378   011B50                     
 14379                           ; BSR set to: 5
 14380                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 14381   011B50  C572  F569         	movff	pad@buf,fputs@s
 14382   011B54  C573  F56A         	movff	pad@buf+1,fputs@s+1
 14383   011B58  C570  F56B         	movff	pad@fp,fputs@fp
 14384   011B5C  C571  F56C         	movff	pad@fp+1,fputs@fp+1
 14385   011B60  EC25  F091         	call	_fputs	;wreg free
 14386   011B64                     l1628:
 14387   011B64  0012               	return		;funcret
 14388   011B66                     __end_of_pad:
 14389                           	callstack 0
 14390                           
 14391 ;; *************** function _fputs *****************
 14392 ;; Defined at:
 14393 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
 14394 ;; Parameters:    Size  Location     Type
 14395 ;;  s               2    9[BANK5 ] PTR const unsigned char 
 14396 ;;		 -> dbuf(32), 
 14397 ;;  fp              2   11[BANK5 ] PTR struct _IO_FILE
 14398 ;;		 -> NULL(0), 
 14399 ;; Auto vars:     Size  Location     Type
 14400 ;;  i               2   14[BANK5 ] int 
 14401 ;;  c               1   13[BANK5 ] unsigned char 
 14402 ;; Return value:  Size  Location     Type
 14403 ;;                  2    9[BANK5 ] int 
 14404 ;; Registers used:
 14405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14406 ;; Tracked objects:
 14407 ;;		On entry : 0/0
 14408 ;;		On exit  : 0/0
 14409 ;;		Unchanged: 0/0
 14410 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14411 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14412 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14414 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14415 ;;Total ram usage:        7 bytes
 14416 ;; Hardware stack levels used: 1
 14417 ;; Hardware stack levels required when called: 9
 14418 ;; This function calls:
 14419 ;;		_fputc
 14420 ;; This function is called by:
 14421 ;;		_pad
 14422 ;; This function uses a non-reentrant model
 14423 ;;
 14424                           
 14425                           	psect	text24
 14426   01224A                     __ptext24:
 14427                           	callstack 0
 14428   01224A                     _fputs:
 14429                           	callstack 110
 14430   01224A  0E00               	movlw	0
 14431   01224C  0105               	movlb	5	; () banked
 14432   01224E  6F6F               	movwf	(fputs@i+1)& (0+255),b
 14433   012250  0E00               	movlw	0
 14434   012252  6F6E               	movwf	fputs@i& (0+255),b
 14435   012254  EF38  F091         	goto	l3082
 14436   012258                     l3078:
 14437                           
 14438                           ; BSR set to: 5
 14439   012258  C56D  F560         	movff	fputs@c,fputc@c
 14440   01225C  6B61               	clrf	(fputc@c+1)& (0+255),b
 14441   01225E  C56B  F562         	movff	fputs@fp,fputc@fp
 14442   012262  C56C  F563         	movff	fputs@fp+1,fputc@fp+1
 14443   012266  EC02  F08A         	call	_fputc	;wreg free
 14444   01226A  0105               	movlb	5	; () banked
 14445   01226C  4B6E               	infsnz	fputs@i& (0+255),f,b
 14446   01226E  2B6F               	incf	(fputs@i+1)& (0+255),f,b
 14447   012270                     l3082:
 14448                           
 14449                           ; BSR set to: 5
 14450   012270  516E               	movf	fputs@i& (0+255),w,b
 14451   012272  2569               	addwf	fputs@s& (0+255),w,b
 14452   012274  6ED9               	movwf	fsr2l,c
 14453   012276  516F               	movf	(fputs@i+1)& (0+255),w,b
 14454   012278  216A               	addwfc	(fputs@s+1)& (0+255),w,b
 14455   01227A  6EDA               	movwf	fsr2h,c
 14456   01227C  50DF               	movf	indf2,w,c
 14457   01227E  6F6D               	movwf	fputs@c& (0+255),b
 14458   012280  516D               	movf	fputs@c& (0+255),w,b
 14459   012282  A4D8               	btfss	status,2,c
 14460   012284  EF46  F091         	goto	u1711
 14461   012288  EF48  F091         	goto	u1710
 14462   01228C                     u1711:
 14463   01228C  EF2C  F091         	goto	l3078
 14464   012290                     u1710:
 14465   012290                     
 14466                           ; BSR set to: 5
 14467   012290  0012               	return		;funcret
 14468   012292                     __end_of_fputs:
 14469                           	callstack 0
 14470                           
 14471 ;; *************** function _fputc *****************
 14472 ;; Defined at:
 14473 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
 14474 ;; Parameters:    Size  Location     Type
 14475 ;;  c               2    0[BANK5 ] int 
 14476 ;;  fp              2    2[BANK5 ] PTR struct _IO_FILE
 14477 ;;		 -> NULL(0), 
 14478 ;; Auto vars:     Size  Location     Type
 14479 ;;		None
 14480 ;; Return value:  Size  Location     Type
 14481 ;;                  2    0[BANK5 ] int 
 14482 ;; Registers used:
 14483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14484 ;; Tracked objects:
 14485 ;;		On entry : 0/0
 14486 ;;		On exit  : 0/0
 14487 ;;		Unchanged: 0/0
 14488 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14489 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14491 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14492 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14493 ;;Total ram usage:        9 bytes
 14494 ;; Hardware stack levels used: 1
 14495 ;; Hardware stack levels required when called: 8
 14496 ;; This function calls:
 14497 ;;		_putch
 14498 ;; This function is called by:
 14499 ;;		_pad
 14500 ;;		_stoa
 14501 ;;		_vfpfcnvrt
 14502 ;;		_fputs
 14503 ;; This function uses a non-reentrant model
 14504 ;;
 14505                           
 14506                           	psect	text25
 14507   011404                     __ptext25:
 14508                           	callstack 0
 14509   011404                     _fputc:
 14510                           	callstack 110
 14511   011404  0105               	movlb	5	; () banked
 14512   011406  5162               	movf	fputc@fp& (0+255),w,b
 14513   011408  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
 14514   01140A  B4D8               	btfsc	status,2,c
 14515   01140C  EF0A  F08A         	goto	u1671
 14516   011410  EF0C  F08A         	goto	u1670
 14517   011414                     u1671:
 14518   011414  EF15  F08A         	goto	l3066
 14519   011418                     u1670:
 14520   011418                     
 14521                           ; BSR set to: 5
 14522   011418  5162               	movf	fputc@fp& (0+255),w,b
 14523   01141A  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
 14524   01141C  A4D8               	btfss	status,2,c
 14525   01141E  EF13  F08A         	goto	u1681
 14526   011422  EF15  F08A         	goto	u1680
 14527   011426                     u1681:
 14528   011426  EF1A  F08A         	goto	l3068
 14529   01142A                     u1680:
 14530   01142A                     l3066:
 14531                           
 14532                           ; BSR set to: 5
 14533   01142A  5160               	movf	fputc@c& (0+255),w,b
 14534   01142C  ECEC  F093         	call	_putch
 14535   011430  EF67  F08A         	goto	l1733
 14536   011434                     l3068:
 14537                           
 14538                           ; BSR set to: 5
 14539   011434  EE20 F009          	lfsr	2,9
 14540   011438  5162               	movf	fputc@fp& (0+255),w,b
 14541   01143A  26D9               	addwf	fsr2l,f,c
 14542   01143C  5163               	movf	(fputc@fp+1)& (0+255),w,b
 14543   01143E  22DA               	addwfc	fsr2h,f,c
 14544   011440  50DE               	movf	postinc2,w,c
 14545   011442  10DE               	iorwf	postinc2,w,c
 14546   011444  B4D8               	btfsc	status,2,c
 14547   011446  EF27  F08A         	goto	u1691
 14548   01144A  EF29  F08A         	goto	u1690
 14549   01144E                     u1691:
 14550   01144E  EF44  F08A         	goto	l3072
 14551   011452                     u1690:
 14552   011452                     
 14553                           ; BSR set to: 5
 14554   011452  EE20 F009          	lfsr	2,9
 14555   011456  5162               	movf	fputc@fp& (0+255),w,b
 14556   011458  26D9               	addwf	fsr2l,f,c
 14557   01145A  5163               	movf	(fputc@fp+1)& (0+255),w,b
 14558   01145C  22DA               	addwfc	fsr2h,f,c
 14559   01145E  EE10 F002          	lfsr	1,2
 14560   011462  5162               	movf	fputc@fp& (0+255),w,b
 14561   011464  26E1               	addwf	fsr1l,f,c
 14562   011466  5163               	movf	(fputc@fp+1)& (0+255),w,b
 14563   011468  22E2               	addwfc	fsr1h,f,c
 14564   01146A  50DE               	movf	postinc2,w,c
 14565   01146C  5CE6               	subwf	postinc1,w,c
 14566   01146E  50E6               	movf	postinc1,w,c
 14567   011470  0A80               	xorlw	128
 14568   011472  6F68               	movwf	(??_fputc+4)& (0+255),b
 14569   011474  50DE               	movf	postinc2,w,c
 14570   011476  0A80               	xorlw	128
 14571   011478  5968               	subwfb	(??_fputc+4)& (0+255),w,b
 14572   01147A  B0D8               	btfsc	status,0,c
 14573   01147C  EF42  F08A         	goto	u1701
 14574   011480  EF44  F08A         	goto	u1700
 14575   011484                     u1701:
 14576   011484  EF67  F08A         	goto	l1733
 14577   011488                     u1700:
 14578   011488                     l3072:
 14579                           
 14580                           ; BSR set to: 5
 14581   011488  EE20 F002          	lfsr	2,2
 14582   01148C  5162               	movf	fputc@fp& (0+255),w,b
 14583   01148E  26D9               	addwf	fsr2l,f,c
 14584   011490  5163               	movf	(fputc@fp+1)& (0+255),w,b
 14585   011492  22DA               	addwfc	fsr2h,f,c
 14586   011494  C4DE F564          	movff	postinc2,??_fputc
 14587   011498  C4DD F565          	movff	postdec2,??_fputc+1
 14588   01149C  C562  F4D9         	movff	fputc@fp,fsr2l
 14589   0114A0  C563  F4DA         	movff	fputc@fp+1,fsr2h
 14590   0114A4  C4DE F566          	movff	postinc2,??_fputc+2
 14591   0114A8  C4DD F567          	movff	postdec2,??_fputc+3
 14592   0114AC  5164               	movf	??_fputc& (0+255),w,b
 14593   0114AE  2566               	addwf	(??_fputc+2)& (0+255),w,b
 14594   0114B0  6ED9               	movwf	fsr2l,c
 14595   0114B2  5165               	movf	(??_fputc+1)& (0+255),w,b
 14596   0114B4  2167               	addwfc	(??_fputc+3)& (0+255),w,b
 14597   0114B6  6EDA               	movwf	fsr2h,c
 14598   0114B8  C560  F4DF         	movff	fputc@c,indf2
 14599   0114BC  EE20 F002          	lfsr	2,2
 14600   0114C0  5162               	movf	fputc@fp& (0+255),w,b
 14601   0114C2  26D9               	addwf	fsr2l,f,c
 14602   0114C4  5163               	movf	(fputc@fp+1)& (0+255),w,b
 14603   0114C6  22DA               	addwfc	fsr2h,f,c
 14604   0114C8  2ADE               	incf	postinc2,f,c
 14605   0114CA  0E00               	movlw	0
 14606   0114CC  22DD               	addwfc	postdec2,f,c
 14607   0114CE                     l1733:
 14608   0114CE  0012               	return		;funcret
 14609   0114D0                     __end_of_fputc:
 14610                           	callstack 0
 14611                           
 14612 ;; *************** function _putch *****************
 14613 ;; Defined at:
 14614 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
 14615 ;; Parameters:    Size  Location     Type
 14616 ;;  c               1    wreg     unsigned char 
 14617 ;; Auto vars:     Size  Location     Type
 14618 ;;  c               1    0[COMRAM] unsigned char 
 14619 ;; Return value:  Size  Location     Type
 14620 ;;                  1    wreg      void 
 14621 ;; Registers used:
 14622 ;;		wreg
 14623 ;; Tracked objects:
 14624 ;;		On entry : 0/0
 14625 ;;		On exit  : 0/0
 14626 ;;		Unchanged: 0/0
 14627 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14632 ;;Total ram usage:        0 bytes
 14633 ;; Hardware stack levels used: 1
 14634 ;; Hardware stack levels required when called: 7
 14635 ;; This function calls:
 14636 ;;		Nothing
 14637 ;; This function is called by:
 14638 ;;		_fputc
 14639 ;; This function uses a non-reentrant model
 14640 ;;
 14641                           
 14642                           	psect	text26
 14643   0127D8                     __ptext26:
 14644                           	callstack 0
 14645   0127D8                     _putch:
 14646                           	callstack 110
 14647   0127D8  0012               	return		;funcret
 14648   0127DA                     __end_of_putch:
 14649                           	callstack 0
 14650                           
 14651 ;; *************** function _abs *****************
 14652 ;; Defined at:
 14653 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
 14654 ;; Parameters:    Size  Location     Type
 14655 ;;  a               2    6[BANK5 ] int 
 14656 ;; Auto vars:     Size  Location     Type
 14657 ;;		None
 14658 ;; Return value:  Size  Location     Type
 14659 ;;                  2    6[BANK5 ] int 
 14660 ;; Registers used:
 14661 ;;		wreg, status,2, status,0
 14662 ;; Tracked objects:
 14663 ;;		On entry : 0/0
 14664 ;;		On exit  : 0/0
 14665 ;;		Unchanged: 0/0
 14666 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14667 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14669 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14670 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14671 ;;Total ram usage:        4 bytes
 14672 ;; Hardware stack levels used: 1
 14673 ;; Hardware stack levels required when called: 7
 14674 ;; This function calls:
 14675 ;;		Nothing
 14676 ;; This function is called by:
 14677 ;;		_dtoa
 14678 ;; This function uses a non-reentrant model
 14679 ;;
 14680                           
 14681                           	psect	text27
 14682   01233A                     __ptext27:
 14683                           	callstack 0
 14684   01233A                     _abs:
 14685                           	callstack 113
 14686   01233A  0105               	movlb	5	; () banked
 14687   01233C  BF67               	btfsc	(abs@a+1)& (0+255),7,b
 14688   01233E  EFA3  F091         	goto	u1881
 14689   012342  EFA5  F091         	goto	u1880
 14690   012346                     u1881:
 14691   012346  EFAB  F091         	goto	l1718
 14692   01234A                     u1880:
 14693   01234A                     
 14694                           ; BSR set to: 5
 14695   01234A  C566  F566         	movff	abs@a,?_abs
 14696   01234E  C567  F567         	movff	abs@a+1,?_abs+1
 14697   012352  EFB7  F091         	goto	l1721
 14698   012356                     l1718:
 14699                           
 14700                           ; BSR set to: 5
 14701   012356  C566  F568         	movff	abs@a,??_abs
 14702   01235A  C567  F569         	movff	abs@a+1,??_abs+1
 14703   01235E  1F68               	comf	??_abs& (0+255),f,b
 14704   012360  1F69               	comf	(??_abs+1)& (0+255),f,b
 14705   012362  4B68               	infsnz	??_abs& (0+255),f,b
 14706   012364  2B69               	incf	(??_abs+1)& (0+255),f,b
 14707   012366  C568  F566         	movff	??_abs,?_abs
 14708   01236A  C569  F567         	movff	??_abs+1,?_abs+1
 14709   01236E                     l1721:
 14710                           
 14711                           ; BSR set to: 5
 14712   01236E  0012               	return		;funcret
 14713   012370                     __end_of_abs:
 14714                           	callstack 0
 14715                           
 14716 ;; *************** function ___awmod *****************
 14717 ;; Defined at:
 14718 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
 14719 ;; Parameters:    Size  Location     Type
 14720 ;;  dividend        2    0[BANK5 ] int 
 14721 ;;  divisor         2    2[BANK5 ] int 
 14722 ;; Auto vars:     Size  Location     Type
 14723 ;;  sign            1    5[BANK5 ] unsigned char 
 14724 ;;  counter         1    4[BANK5 ] unsigned char 
 14725 ;; Return value:  Size  Location     Type
 14726 ;;                  2    0[BANK5 ] int 
 14727 ;; Registers used:
 14728 ;;		wreg, status,2, status,0
 14729 ;; Tracked objects:
 14730 ;;		On entry : 0/0
 14731 ;;		On exit  : 0/0
 14732 ;;		Unchanged: 0/0
 14733 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14734 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14735 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14737 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14738 ;;Total ram usage:        6 bytes
 14739 ;; Hardware stack levels used: 1
 14740 ;; Hardware stack levels required when called: 7
 14741 ;; This function calls:
 14742 ;;		Nothing
 14743 ;; This function is called by:
 14744 ;;		_dtoa
 14745 ;; This function uses a non-reentrant model
 14746 ;;
 14747                           
 14748                           	psect	text28
 14749   011966                     __ptext28:
 14750                           	callstack 0
 14751   011966                     ___awmod:
 14752                           	callstack 113
 14753   011966  0105               	movlb	5	; () banked
 14754   011968  6B65               	clrf	___awmod@sign& (0+255),b
 14755   01196A                     
 14756                           ; BSR set to: 5
 14757   01196A  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
 14758   01196C  EFBC  F08C         	goto	u1780
 14759   011970  EFBA  F08C         	goto	u1781
 14760   011974                     u1781:
 14761   011974  EFC2  F08C         	goto	l3136
 14762   011978                     u1780:
 14763   011978                     
 14764                           ; BSR set to: 5
 14765   011978  6D60               	negf	___awmod@dividend& (0+255),b
 14766   01197A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 14767   01197C  B0D8               	btfsc	status,0,c
 14768   01197E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 14769   011980                     
 14770                           ; BSR set to: 5
 14771   011980  0E01               	movlw	1
 14772   011982  6F65               	movwf	___awmod@sign& (0+255),b
 14773   011984                     l3136:
 14774                           
 14775                           ; BSR set to: 5
 14776   011984  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 14777   011986  EFC9  F08C         	goto	u1790
 14778   01198A  EFC7  F08C         	goto	u1791
 14779   01198E                     u1791:
 14780   01198E  EFCD  F08C         	goto	l3140
 14781   011992                     u1790:
 14782   011992                     
 14783                           ; BSR set to: 5
 14784   011992  6D62               	negf	___awmod@divisor& (0+255),b
 14785   011994  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 14786   011996  B0D8               	btfsc	status,0,c
 14787   011998  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 14788   01199A                     l3140:
 14789                           
 14790                           ; BSR set to: 5
 14791   01199A  5162               	movf	___awmod@divisor& (0+255),w,b
 14792   01199C  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 14793   01199E  B4D8               	btfsc	status,2,c
 14794   0119A0  EFD4  F08C         	goto	u1801
 14795   0119A4  EFD6  F08C         	goto	u1800
 14796   0119A8                     u1801:
 14797   0119A8  EFFA  F08C         	goto	l3156
 14798   0119AC                     u1800:
 14799   0119AC                     
 14800                           ; BSR set to: 5
 14801   0119AC  0E01               	movlw	1
 14802   0119AE  6F64               	movwf	___awmod@counter& (0+255),b
 14803   0119B0  EFDE  F08C         	goto	l3146
 14804   0119B4                     l3144:
 14805                           
 14806                           ; BSR set to: 5
 14807   0119B4  90D8               	bcf	status,0,c
 14808   0119B6  3762               	rlcf	___awmod@divisor& (0+255),f,b
 14809   0119B8  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 14810   0119BA  2B64               	incf	___awmod@counter& (0+255),f,b
 14811   0119BC                     l3146:
 14812                           
 14813                           ; BSR set to: 5
 14814   0119BC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 14815   0119BE  EFE3  F08C         	goto	u1811
 14816   0119C2  EFE5  F08C         	goto	u1810
 14817   0119C6                     u1811:
 14818   0119C6  EFDA  F08C         	goto	l3144
 14819   0119CA                     u1810:
 14820   0119CA                     l3148:
 14821                           
 14822                           ; BSR set to: 5
 14823   0119CA  5162               	movf	___awmod@divisor& (0+255),w,b
 14824   0119CC  5D60               	subwf	___awmod@dividend& (0+255),w,b
 14825   0119CE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 14826   0119D0  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 14827   0119D2  A0D8               	btfss	status,0,c
 14828   0119D4  EFEE  F08C         	goto	u1821
 14829   0119D8  EFF0  F08C         	goto	u1820
 14830   0119DC                     u1821:
 14831   0119DC  EFF4  F08C         	goto	l3152
 14832   0119E0                     u1820:
 14833   0119E0                     
 14834                           ; BSR set to: 5
 14835   0119E0  5162               	movf	___awmod@divisor& (0+255),w,b
 14836   0119E2  5F60               	subwf	___awmod@dividend& (0+255),f,b
 14837   0119E4  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 14838   0119E6  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 14839   0119E8                     l3152:
 14840                           
 14841                           ; BSR set to: 5
 14842   0119E8  90D8               	bcf	status,0,c
 14843   0119EA  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 14844   0119EC  3362               	rrcf	___awmod@divisor& (0+255),f,b
 14845   0119EE                     
 14846                           ; BSR set to: 5
 14847   0119EE  2F64               	decfsz	___awmod@counter& (0+255),f,b
 14848   0119F0  EFE5  F08C         	goto	l3148
 14849   0119F4                     l3156:
 14850                           
 14851                           ; BSR set to: 5
 14852   0119F4  5165               	movf	___awmod@sign& (0+255),w,b
 14853   0119F6  B4D8               	btfsc	status,2,c
 14854   0119F8  EF00  F08D         	goto	u1831
 14855   0119FC  EF02  F08D         	goto	u1830
 14856   011A00                     u1831:
 14857   011A00  EF06  F08D         	goto	l3160
 14858   011A04                     u1830:
 14859   011A04                     
 14860                           ; BSR set to: 5
 14861   011A04  6D60               	negf	___awmod@dividend& (0+255),b
 14862   011A06  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 14863   011A08  B0D8               	btfsc	status,0,c
 14864   011A0A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 14865   011A0C                     l3160:
 14866                           
 14867                           ; BSR set to: 5
 14868   011A0C  C560  F560         	movff	___awmod@dividend,?___awmod
 14869   011A10  C561  F561         	movff	___awmod@dividend+1,?___awmod+1
 14870   011A14                     
 14871                           ; BSR set to: 5
 14872   011A14  0012               	return		;funcret
 14873   011A16                     __end_of___awmod:
 14874                           	callstack 0
 14875                           
 14876 ;; *************** function ___awdiv *****************
 14877 ;; Defined at:
 14878 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
 14879 ;; Parameters:    Size  Location     Type
 14880 ;;  dividend        2    0[BANK5 ] int 
 14881 ;;  divisor         2    2[BANK5 ] int 
 14882 ;; Auto vars:     Size  Location     Type
 14883 ;;  quotient        2    6[BANK5 ] int 
 14884 ;;  sign            1    5[BANK5 ] unsigned char 
 14885 ;;  counter         1    4[BANK5 ] unsigned char 
 14886 ;; Return value:  Size  Location     Type
 14887 ;;                  2    0[BANK5 ] int 
 14888 ;; Registers used:
 14889 ;;		wreg, status,2, status,0
 14890 ;; Tracked objects:
 14891 ;;		On entry : 0/0
 14892 ;;		On exit  : 0/0
 14893 ;;		Unchanged: 0/0
 14894 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14895 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14896 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14898 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14899 ;;Total ram usage:        8 bytes
 14900 ;; Hardware stack levels used: 1
 14901 ;; Hardware stack levels required when called: 7
 14902 ;; This function calls:
 14903 ;;		Nothing
 14904 ;; This function is called by:
 14905 ;;		_dtoa
 14906 ;; This function uses a non-reentrant model
 14907 ;;
 14908                           
 14909                           	psect	text29
 14910   0117EE                     __ptext29:
 14911                           	callstack 0
 14912   0117EE                     ___awdiv:
 14913                           	callstack 113
 14914   0117EE  0105               	movlb	5	; () banked
 14915   0117F0  6B65               	clrf	___awdiv@sign& (0+255),b
 14916   0117F2                     
 14917                           ; BSR set to: 5
 14918   0117F2  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 14919   0117F4  EF00  F08C         	goto	u1720
 14920   0117F8  EFFE  F08B         	goto	u1721
 14921   0117FC                     u1721:
 14922   0117FC  EF06  F08C         	goto	l3092
 14923   011800                     u1720:
 14924   011800                     
 14925                           ; BSR set to: 5
 14926   011800  6D62               	negf	___awdiv@divisor& (0+255),b
 14927   011802  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 14928   011804  B0D8               	btfsc	status,0,c
 14929   011806  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 14930   011808                     
 14931                           ; BSR set to: 5
 14932   011808  0E01               	movlw	1
 14933   01180A  6F65               	movwf	___awdiv@sign& (0+255),b
 14934   01180C                     l3092:
 14935                           
 14936                           ; BSR set to: 5
 14937   01180C  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
 14938   01180E  EF0D  F08C         	goto	u1730
 14939   011812  EF0B  F08C         	goto	u1731
 14940   011816                     u1731:
 14941   011816  EF13  F08C         	goto	l3098
 14942   01181A                     u1730:
 14943   01181A                     
 14944                           ; BSR set to: 5
 14945   01181A  6D60               	negf	___awdiv@dividend& (0+255),b
 14946   01181C  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 14947   01181E  B0D8               	btfsc	status,0,c
 14948   011820  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 14949   011822                     
 14950                           ; BSR set to: 5
 14951   011822  0E01               	movlw	1
 14952   011824  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 14953   011826                     l3098:
 14954                           
 14955                           ; BSR set to: 5
 14956   011826  0E00               	movlw	0
 14957   011828  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 14958   01182A  0E00               	movlw	0
 14959   01182C  6F66               	movwf	___awdiv@quotient& (0+255),b
 14960   01182E                     
 14961                           ; BSR set to: 5
 14962   01182E  5162               	movf	___awdiv@divisor& (0+255),w,b
 14963   011830  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 14964   011832  B4D8               	btfsc	status,2,c
 14965   011834  EF1E  F08C         	goto	u1741
 14966   011838  EF20  F08C         	goto	u1740
 14967   01183C                     u1741:
 14968   01183C  EF48  F08C         	goto	l3120
 14969   011840                     u1740:
 14970   011840                     
 14971                           ; BSR set to: 5
 14972   011840  0E01               	movlw	1
 14973   011842  6F64               	movwf	___awdiv@counter& (0+255),b
 14974   011844  EF28  F08C         	goto	l3106
 14975   011848                     l3104:
 14976                           
 14977                           ; BSR set to: 5
 14978   011848  90D8               	bcf	status,0,c
 14979   01184A  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 14980   01184C  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 14981   01184E  2B64               	incf	___awdiv@counter& (0+255),f,b
 14982   011850                     l3106:
 14983                           
 14984                           ; BSR set to: 5
 14985   011850  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 14986   011852  EF2D  F08C         	goto	u1751
 14987   011856  EF2F  F08C         	goto	u1750
 14988   01185A                     u1751:
 14989   01185A  EF24  F08C         	goto	l3104
 14990   01185E                     u1750:
 14991   01185E                     l3108:
 14992                           
 14993                           ; BSR set to: 5
 14994   01185E  90D8               	bcf	status,0,c
 14995   011860  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 14996   011862  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 14997   011864                     
 14998                           ; BSR set to: 5
 14999   011864  5162               	movf	___awdiv@divisor& (0+255),w,b
 15000   011866  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 15001   011868  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15002   01186A  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 15003   01186C  A0D8               	btfss	status,0,c
 15004   01186E  EF3B  F08C         	goto	u1761
 15005   011872  EF3D  F08C         	goto	u1760
 15006   011876                     u1761:
 15007   011876  EF42  F08C         	goto	l3116
 15008   01187A                     u1760:
 15009   01187A                     
 15010                           ; BSR set to: 5
 15011   01187A  5162               	movf	___awdiv@divisor& (0+255),w,b
 15012   01187C  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 15013   01187E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15014   011880  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 15015   011882                     
 15016                           ; BSR set to: 5
 15017   011882  8166               	bsf	___awdiv@quotient& (0+255),0,b
 15018   011884                     l3116:
 15019                           
 15020                           ; BSR set to: 5
 15021   011884  90D8               	bcf	status,0,c
 15022   011886  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 15023   011888  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 15024   01188A                     
 15025                           ; BSR set to: 5
 15026   01188A  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 15027   01188C  EF2F  F08C         	goto	l3108
 15028   011890                     l3120:
 15029                           
 15030                           ; BSR set to: 5
 15031   011890  5165               	movf	___awdiv@sign& (0+255),w,b
 15032   011892  B4D8               	btfsc	status,2,c
 15033   011894  EF4E  F08C         	goto	u1771
 15034   011898  EF50  F08C         	goto	u1770
 15035   01189C                     u1771:
 15036   01189C  EF54  F08C         	goto	l3124
 15037   0118A0                     u1770:
 15038   0118A0                     
 15039                           ; BSR set to: 5
 15040   0118A0  6D66               	negf	___awdiv@quotient& (0+255),b
 15041   0118A2  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 15042   0118A4  B0D8               	btfsc	status,0,c
 15043   0118A6  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 15044   0118A8                     l3124:
 15045                           
 15046                           ; BSR set to: 5
 15047   0118A8  C566  F560         	movff	___awdiv@quotient,?___awdiv
 15048   0118AC  C567  F561         	movff	___awdiv@quotient+1,?___awdiv+1
 15049   0118B0                     
 15050                           ; BSR set to: 5
 15051   0118B0  0012               	return		;funcret
 15052   0118B2                     __end_of___awdiv:
 15053                           	callstack 0
 15054                           
 15055 ;; *************** function _Nrf24_getRetransmitDelay *****************
 15056 ;; Defined at:
 15057 ;;		line 494 in file "mirf.c"
 15058 ;; Parameters:    Size  Location     Type
 15059 ;;  dev             2   10[BANK5 ] PTR struct .
 15060 ;;		 -> dev(3), 
 15061 ;; Auto vars:     Size  Location     Type
 15062 ;;  value           1   12[BANK5 ] unsigned char 
 15063 ;; Return value:  Size  Location     Type
 15064 ;;                  1    wreg      unsigned char 
 15065 ;; Registers used:
 15066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15067 ;; Tracked objects:
 15068 ;;		On entry : 0/0
 15069 ;;		On exit  : 0/0
 15070 ;;		Unchanged: 0/0
 15071 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15075 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15076 ;;Total ram usage:        3 bytes
 15077 ;; Hardware stack levels used: 1
 15078 ;; Hardware stack levels required when called: 10
 15079 ;; This function calls:
 15080 ;;		_Nrf24_readRegister
 15081 ;; This function is called by:
 15082 ;;		_Nrf24_printDetails
 15083 ;; This function uses a non-reentrant model
 15084 ;;
 15085                           
 15086                           	psect	text30
 15087   0126D2                     __ptext30:
 15088                           	callstack 0
 15089   0126D2                     _Nrf24_getRetransmitDelay:
 15090                           	callstack 114
 15091   0126D2                     
 15092                           ;mirf.c: 494: uint8_t Nrf24_getRetransmitDelay(NRF24_t * dev);mirf.c: 495: {;mirf.c: 496
      +                          :  uint8_t value;;mirf.c: 497:  Nrf24_readRegister(0x04, &value, 1);
 15093   0126D2  0E6C               	movlw	low Nrf24_getRetransmitDelay@value
 15094   0126D4  0105               	movlb	5	; () banked
 15095   0126D6  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 15096   0126D8  0E05               	movlw	high Nrf24_getRetransmitDelay@value
 15097   0126DA  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 15098   0126DC  0E01               	movlw	1
 15099   0126DE  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 15100   0126E0  0E04               	movlw	4
 15101   0126E2  ECEE  F091         	call	_Nrf24_readRegister
 15102   0126E6                     
 15103                           ;mirf.c: 498:  return (value >> 4);
 15104   0126E6  0105               	movlb	5	; () banked
 15105   0126E8  396C               	swapf	Nrf24_getRetransmitDelay@value& (0+255),w,b
 15106   0126EA  0B0F               	andlw	15
 15107   0126EC                     
 15108                           ; BSR set to: 5
 15109   0126EC  0012               	return		;funcret
 15110   0126EE                     __end_of_Nrf24_getRetransmitDelay:
 15111                           	callstack 0
 15112                           
 15113 ;; *************** function _Nrf24_getPALevel *****************
 15114 ;; Defined at:
 15115 ;;		line 481 in file "mirf.c"
 15116 ;; Parameters:    Size  Location     Type
 15117 ;;  dev             2   10[BANK5 ] PTR struct .
 15118 ;;		 -> dev(3), 
 15119 ;; Auto vars:     Size  Location     Type
 15120 ;;  level           1   12[BANK5 ] unsigned char 
 15121 ;; Return value:  Size  Location     Type
 15122 ;;                  1    wreg      unsigned char 
 15123 ;; Registers used:
 15124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15125 ;; Tracked objects:
 15126 ;;		On entry : 0/0
 15127 ;;		On exit  : 0/0
 15128 ;;		Unchanged: 0/0
 15129 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15131 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15133 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15134 ;;Total ram usage:        3 bytes
 15135 ;; Hardware stack levels used: 1
 15136 ;; Hardware stack levels required when called: 10
 15137 ;; This function calls:
 15138 ;;		_Nrf24_readRegister
 15139 ;; This function is called by:
 15140 ;;		_Nrf24_printDetails
 15141 ;;		_Nrf24_getPALevelString
 15142 ;; This function uses a non-reentrant model
 15143 ;;
 15144                           
 15145                           	psect	text31
 15146   012634                     __ptext31:
 15147                           	callstack 0
 15148   012634                     _Nrf24_getPALevel:
 15149                           	callstack 114
 15150   012634                     
 15151                           ;mirf.c: 481: uint8_t Nrf24_getPALevel(NRF24_t * dev);mirf.c: 482: {;mirf.c: 483:  uint8
      +                          _t level;;mirf.c: 484:  Nrf24_readRegister(0x06, &level, sizeof(level));
 15152   012634  0E6C               	movlw	low Nrf24_getPALevel@level
 15153   012636  0105               	movlb	5	; () banked
 15154   012638  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 15155   01263A  0E05               	movlw	high Nrf24_getPALevel@level
 15156   01263C  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 15157   01263E  0E01               	movlw	1
 15158   012640  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 15159   012642  0E06               	movlw	6
 15160   012644  ECEE  F091         	call	_Nrf24_readRegister
 15161   012648                     
 15162                           ;mirf.c: 485:  level = (level & ((1<<(1)) | (1<<(2)))) >> 1;
 15163   012648  0105               	movlb	5	; () banked
 15164   01264A  90D8               	bcf	status,0,c
 15165   01264C  316C               	rrcf	Nrf24_getPALevel@level& (0+255),w,b
 15166   01264E  0B03               	andlw	3
 15167   012650  6F6C               	movwf	Nrf24_getPALevel@level& (0+255),b
 15168   012652                     
 15169                           ; BSR set to: 5
 15170                           ;mirf.c: 486:  return (level);
 15171   012652  516C               	movf	Nrf24_getPALevel@level& (0+255),w,b
 15172   012654                     
 15173                           ; BSR set to: 5
 15174   012654  0012               	return		;funcret
 15175   012656                     __end_of_Nrf24_getPALevel:
 15176                           	callstack 0
 15177                           
 15178 ;; *************** function _Nrf24_getDataRate *****************
 15179 ;; Defined at:
 15180 ;;		line 434 in file "mirf.c"
 15181 ;; Parameters:    Size  Location     Type
 15182 ;;  dev             2   10[BANK5 ] PTR struct .
 15183 ;;		 -> dev(3), 
 15184 ;; Auto vars:     Size  Location     Type
 15185 ;;  dr              1   13[BANK5 ] unsigned char 
 15186 ;;  result          1   12[BANK5 ] enum E17461
 15187 ;; Return value:  Size  Location     Type
 15188 ;;                  1    wreg      unsigned char 
 15189 ;; Registers used:
 15190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15191 ;; Tracked objects:
 15192 ;;		On entry : 0/0
 15193 ;;		On exit  : 0/0
 15194 ;;		Unchanged: 0/0
 15195 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15197 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15199 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15200 ;;Total ram usage:        4 bytes
 15201 ;; Hardware stack levels used: 1
 15202 ;; Hardware stack levels required when called: 10
 15203 ;; This function calls:
 15204 ;;		_Nrf24_readRegister
 15205 ;; This function is called by:
 15206 ;;		_Nrf24_printDetails
 15207 ;;		_Nrf24_getDataRateString
 15208 ;; This function uses a non-reentrant model
 15209 ;;
 15210                           
 15211                           	psect	text32
 15212   0121AA                     __ptext32:
 15213                           	callstack 0
 15214   0121AA                     _Nrf24_getDataRate:
 15215                           	callstack 114
 15216   0121AA                     
 15217                           ;mirf.c: 434: uint8_t Nrf24_getDataRate(NRF24_t * dev);mirf.c: 435: {;mirf.c: 436:  rf24
      +                          _datarate_e result;;mirf.c: 437:  uint8_t dr;;mirf.c: 438:  Nrf24_readRegister(0x06, &dr
      +                          , sizeof(dr));
 15218   0121AA  0E6D               	movlw	low Nrf24_getDataRate@dr
 15219   0121AC  0105               	movlb	5	; () banked
 15220   0121AE  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 15221   0121B0  0E05               	movlw	high Nrf24_getDataRate@dr
 15222   0121B2  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 15223   0121B4  0E01               	movlw	1
 15224   0121B6  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 15225   0121B8  0E06               	movlw	6
 15226   0121BA  ECEE  F091         	call	_Nrf24_readRegister
 15227   0121BE                     
 15228                           ;mirf.c: 439:  dr = dr & ((1<<(5)) | (1<<(3)));
 15229   0121BE  0105               	movlb	5	; () banked
 15230   0121C0  516D               	movf	Nrf24_getDataRate@dr& (0+255),w,b
 15231   0121C2  0B28               	andlw	40
 15232   0121C4  6F6D               	movwf	Nrf24_getDataRate@dr& (0+255),b
 15233   0121C6                     
 15234                           ; BSR set to: 5
 15235                           ;mirf.c: 442:  if (dr == (1<<(5))) {
 15236   0121C6  0E20               	movlw	32
 15237   0121C8  196D               	xorwf	Nrf24_getDataRate@dr& (0+255),w,b
 15238   0121CA  A4D8               	btfss	status,2,c
 15239   0121CC  EFEA  F090         	goto	u2671
 15240   0121D0  EFEC  F090         	goto	u2670
 15241   0121D4                     u2671:
 15242   0121D4  EFF0  F090         	goto	l3626
 15243   0121D8                     u2670:
 15244   0121D8                     
 15245                           ; BSR set to: 5
 15246                           ;mirf.c: 444:   result = RF24_250KBPS;
 15247   0121D8  0E02               	movlw	2
 15248   0121DA  6F6C               	movwf	Nrf24_getDataRate@result& (0+255),b
 15249                           
 15250                           ;mirf.c: 445:  } else if (dr == (1<<(3))) {
 15251   0121DC  EFFE  F090         	goto	l3630
 15252   0121E0                     l3626:
 15253                           
 15254                           ; BSR set to: 5
 15255   0121E0  0E08               	movlw	8
 15256   0121E2  196D               	xorwf	Nrf24_getDataRate@dr& (0+255),w,b
 15257   0121E4  A4D8               	btfss	status,2,c
 15258   0121E6  EFF7  F090         	goto	u2681
 15259   0121EA  EFF9  F090         	goto	u2680
 15260   0121EE                     u2681:
 15261   0121EE  EFFD  F090         	goto	l888
 15262   0121F2                     u2680:
 15263   0121F2                     
 15264                           ; BSR set to: 5
 15265                           ;mirf.c: 447:   result = RF24_2MBPS;
 15266   0121F2  0E01               	movlw	1
 15267   0121F4  6F6C               	movwf	Nrf24_getDataRate@result& (0+255),b
 15268                           
 15269                           ;mirf.c: 448:  } else {
 15270   0121F6  EFFE  F090         	goto	l3630
 15271   0121FA                     l888:
 15272                           
 15273                           ; BSR set to: 5
 15274                           ;mirf.c: 450:   result = RF24_1MBPS;
 15275   0121FA  6B6C               	clrf	Nrf24_getDataRate@result& (0+255),b
 15276   0121FC                     l3630:
 15277                           
 15278                           ; BSR set to: 5
 15279                           ;mirf.c: 452:  return result;
 15280   0121FC  516C               	movf	Nrf24_getDataRate@result& (0+255),w,b
 15281   0121FE                     
 15282                           ; BSR set to: 5
 15283   0121FE  0012               	return		;funcret
 15284   012200                     __end_of_Nrf24_getDataRate:
 15285                           	callstack 0
 15286                           
 15287 ;; *************** function _Nrf24_getCRCLength *****************
 15288 ;; Defined at:
 15289 ;;		line 460 in file "mirf.c"
 15290 ;; Parameters:    Size  Location     Type
 15291 ;;  dev             2   10[BANK5 ] PTR struct .
 15292 ;;		 -> dev(3), 
 15293 ;; Auto vars:     Size  Location     Type
 15294 ;;  config          1   14[BANK5 ] unsigned char 
 15295 ;;  AA              1   13[BANK5 ] unsigned char 
 15296 ;;  result          1   12[BANK5 ] enum E17466
 15297 ;; Return value:  Size  Location     Type
 15298 ;;                  1    wreg      unsigned char 
 15299 ;; Registers used:
 15300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15301 ;; Tracked objects:
 15302 ;;		On entry : 0/0
 15303 ;;		On exit  : 0/0
 15304 ;;		Unchanged: 0/0
 15305 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15306 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15307 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15309 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15310 ;;Total ram usage:        5 bytes
 15311 ;; Hardware stack levels used: 1
 15312 ;; Hardware stack levels required when called: 10
 15313 ;; This function calls:
 15314 ;;		_Nrf24_readRegister
 15315 ;; This function is called by:
 15316 ;;		_Nrf24_printDetails
 15317 ;; This function uses a non-reentrant model
 15318 ;;
 15319                           
 15320                           	psect	text33
 15321   011FBC                     __ptext33:
 15322                           	callstack 0
 15323   011FBC                     _Nrf24_getCRCLength:
 15324                           	callstack 114
 15325   011FBC                     
 15326                           ;mirf.c: 460: uint8_t Nrf24_getCRCLength(NRF24_t * dev);mirf.c: 461: {;mirf.c: 462:  rf2
      +                          4_crclength_e result = RF24_CRC_DISABLED;
 15327   011FBC  0105               	movlb	5	; () banked
 15328   011FBE  6B6C               	clrf	Nrf24_getCRCLength@result& (0+255),b
 15329   011FC0                     
 15330                           ; BSR set to: 5
 15331                           ;mirf.c: 464:  uint8_t config;;mirf.c: 465:  Nrf24_readRegister(0x00, &config, sizeof(co
      +                          nfig));
 15332   011FC0  0E6E               	movlw	low Nrf24_getCRCLength@config
 15333   011FC2  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 15334   011FC4  0E05               	movlw	high Nrf24_getCRCLength@config
 15335   011FC6  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 15336   011FC8  0E01               	movlw	1
 15337   011FCA  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 15338   011FCC  0E00               	movlw	0
 15339   011FCE  ECEE  F091         	call	_Nrf24_readRegister
 15340   011FD2                     
 15341                           ;mirf.c: 466:  config = config & ((1<<(2)) | (1<<(3)));
 15342   011FD2  0105               	movlb	5	; () banked
 15343   011FD4  516E               	movf	Nrf24_getCRCLength@config& (0+255),w,b
 15344   011FD6  0B0C               	andlw	12
 15345   011FD8  6F6E               	movwf	Nrf24_getCRCLength@config& (0+255),b
 15346   011FDA                     
 15347                           ; BSR set to: 5
 15348                           ;mirf.c: 467:  uint8_t AA;;mirf.c: 468:  Nrf24_readRegister(0x01, &AA, sizeof(AA));
 15349   011FDA  0E6D               	movlw	low Nrf24_getCRCLength@AA
 15350   011FDC  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 15351   011FDE  0E05               	movlw	high Nrf24_getCRCLength@AA
 15352   011FE0  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 15353   011FE2  0E01               	movlw	1
 15354   011FE4  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 15355   011FE6  0E01               	movlw	1
 15356   011FE8  ECEE  F091         	call	_Nrf24_readRegister
 15357   011FEC                     
 15358                           ;mirf.c: 470:  if (config & (1<<(3)) || AA) {
 15359   011FEC  0105               	movlb	5	; () banked
 15360   011FEE  B76E               	btfsc	Nrf24_getCRCLength@config& (0+255),3,b
 15361   011FF0  EFFC  F08F         	goto	u2691
 15362   011FF4  EFFE  F08F         	goto	u2690
 15363   011FF8                     u2691:
 15364   011FF8  EF06  F090         	goto	l898
 15365   011FFC                     u2690:
 15366   011FFC                     
 15367                           ; BSR set to: 5
 15368   011FFC  516D               	movf	Nrf24_getCRCLength@AA& (0+255),w,b
 15369   011FFE  B4D8               	btfsc	status,2,c
 15370   012000  EF04  F090         	goto	u2701
 15371   012004  EF06  F090         	goto	u2700
 15372   012008                     u2701:
 15373   012008  EF13  F090         	goto	l896
 15374   01200C                     u2700:
 15375   01200C                     l898:
 15376                           
 15377                           ; BSR set to: 5
 15378                           ;mirf.c: 471:   if (config & (1<<(2))) {
 15379   01200C  A56E               	btfss	Nrf24_getCRCLength@config& (0+255),2,b
 15380   01200E  EF0B  F090         	goto	u2711
 15381   012012  EF0D  F090         	goto	u2710
 15382   012016                     u2711:
 15383   012016  EF11  F090         	goto	l3648
 15384   01201A                     u2710:
 15385   01201A                     
 15386                           ; BSR set to: 5
 15387                           ;mirf.c: 472:    result = RF24_CRC_16;
 15388   01201A  0E02               	movlw	2
 15389   01201C  6F6C               	movwf	Nrf24_getCRCLength@result& (0+255),b
 15390                           
 15391                           ;mirf.c: 473:   } else {
 15392   01201E  EF13  F090         	goto	l896
 15393   012022                     l3648:
 15394                           
 15395                           ; BSR set to: 5
 15396                           ;mirf.c: 474:    result = RF24_CRC_8;
 15397   012022  0E01               	movlw	1
 15398   012024  6F6C               	movwf	Nrf24_getCRCLength@result& (0+255),b
 15399   012026                     l896:
 15400                           
 15401                           ; BSR set to: 5
 15402                           ;mirf.c: 478:  return result;
 15403   012026  516C               	movf	Nrf24_getCRCLength@result& (0+255),w,b
 15404   012028                     
 15405                           ; BSR set to: 5
 15406   012028  0012               	return		;funcret
 15407   01202A                     __end_of_Nrf24_getCRCLength:
 15408                           	callstack 0
 15409                           
 15410 ;; *************** function _Nrf24_init *****************
 15411 ;; Defined at:
 15412 ;;		line 70 in file "mirf.c"
 15413 ;; Parameters:    Size  Location     Type
 15414 ;;  dev             2    1[BANK5 ] PTR struct .
 15415 ;;		 -> dev(3), 
 15416 ;; Auto vars:     Size  Location     Type
 15417 ;;		None
 15418 ;; Return value:  Size  Location     Type
 15419 ;;                  1    wreg      void 
 15420 ;; Registers used:
 15421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15422 ;; Tracked objects:
 15423 ;;		On entry : 0/0
 15424 ;;		On exit  : 0/0
 15425 ;;		Unchanged: 0/0
 15426 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15427 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15430 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15431 ;;Total ram usage:        2 bytes
 15432 ;; Hardware stack levels used: 1
 15433 ;; Hardware stack levels required when called: 8
 15434 ;; This function calls:
 15435 ;;		_SPI1_Open
 15436 ;; This function is called by:
 15437 ;;		_init_nrf
 15438 ;; This function uses a non-reentrant model
 15439 ;;
 15440                           
 15441                           	psect	text34
 15442   01253C                     __ptext34:
 15443                           	callstack 0
 15444   01253C                     _Nrf24_init:
 15445                           	callstack 117
 15446   01253C                     
 15447                           ;mirf.c: 70: void Nrf24_init(NRF24_t * dev);mirf.c: 71: {;mirf.c: 72:     SPI1_Open(0);
 15448   01253C  0E00               	movlw	0
 15449   01253E  EC31  F089         	call	_SPI1_Open
 15450   012542                     
 15451                           ;mirf.c: 74:     dev->channel = 99;
 15452   012542  0105               	movlb	5	; () banked
 15453   012544  EE20 F001          	lfsr	2,1
 15454   012548  5161               	movf	Nrf24_init@dev& (0+255),w,b
 15455   01254A  26D9               	addwf	fsr2l,f,c
 15456   01254C  5162               	movf	(Nrf24_init@dev+1)& (0+255),w,b
 15457   01254E  22DA               	addwfc	fsr2h,f,c
 15458   012550  0E63               	movlw	99
 15459   012552  6EDF               	movwf	indf2,c
 15460   012554                     
 15461                           ; BSR set to: 5
 15462                           ;mirf.c: 75:     dev->payload = 32;
 15463   012554  EE20 F002          	lfsr	2,2
 15464   012558  5161               	movf	Nrf24_init@dev& (0+255),w,b
 15465   01255A  26D9               	addwf	fsr2l,f,c
 15466   01255C  5162               	movf	(Nrf24_init@dev+1)& (0+255),w,b
 15467   01255E  22DA               	addwfc	fsr2h,f,c
 15468   012560  0E20               	movlw	32
 15469   012562  6EDF               	movwf	indf2,c
 15470   012564                     
 15471                           ; BSR set to: 5
 15472   012564  9EC8               	bcf	200,7,c	;volatile
 15473   012566                     
 15474                           ; BSR set to: 5
 15475   012566  94C8               	bcf	200,2,c	;volatile
 15476   012568                     
 15477                           ; BSR set to: 5
 15478   012568  0012               	return		;funcret
 15479   01256A                     __end_of_Nrf24_init:
 15480                           	callstack 0
 15481                           
 15482 ;; *************** function _SPI1_Open *****************
 15483 ;; Defined at:
 15484 ;;		line 90 in file "mcc_generated_files/spi/src/spi1.c"
 15485 ;; Parameters:    Size  Location     Type
 15486 ;;  spiConfigInd    1    wreg     unsigned char 
 15487 ;; Auto vars:     Size  Location     Type
 15488 ;;  spiConfigInd    1    0[BANK5 ] unsigned char 
 15489 ;;  returnValue     1    0        _Bool 
 15490 ;; Return value:  Size  Location     Type
 15491 ;;                  1    wreg      _Bool 
 15492 ;; Registers used:
 15493 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 15494 ;; Tracked objects:
 15495 ;;		On entry : 0/0
 15496 ;;		On exit  : 0/0
 15497 ;;		Unchanged: 0/0
 15498 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15502 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15503 ;;Total ram usage:        1 bytes
 15504 ;; Hardware stack levels used: 1
 15505 ;; Hardware stack levels required when called: 7
 15506 ;; This function calls:
 15507 ;;		Nothing
 15508 ;; This function is called by:
 15509 ;;		_Nrf24_init
 15510 ;; This function uses a non-reentrant model
 15511 ;;
 15512                           
 15513                           	psect	text35
 15514   011262                     __ptext35:
 15515                           	callstack 0
 15516   011262                     _SPI1_Open:
 15517                           	callstack 117
 15518                           
 15519                           ; BSR set to: 5
 15520                           ;incstack = 0
 15521                           ;SPI1_Open@spiConfigIndex stored from wreg
 15522   011262  0105               	movlb	5	; () banked
 15523   011264  6F60               	movwf	SPI1_Open@spiConfigIndex& (0+255),b
 15524   011266                     
 15525                           ;mcc_generated_files/spi/src/spi1.c: 93:  if(0 == SPI1CON0bits.EN)
 15526   011266  0100               	movlb	0	; () banked
 15527   011268  BF84               	btfsc	132,7,b	;volatile
 15528   01126A  EF39  F089         	goto	u2541
 15529   01126E  EF3B  F089         	goto	u2540
 15530   011272                     u2541:
 15531   011272  EF9A  F089         	goto	l67
 15532   011276                     u2540:
 15533   011276                     
 15534                           ; BSR set to: 0
 15535                           ;mcc_generated_files/spi/src/spi1.c: 94:  {;mcc_generated_files/spi/src/spi1.c: 95:     
      +                              SPI1CON0 = spi1_configuration[spiConfigIndex].con0;
 15536   011276  0105               	movlb	5	; () banked
 15537   011278  5160               	movf	SPI1_Open@spiConfigIndex& (0+255),w,b
 15538   01127A  0D05               	mullw	5
 15539   01127C  0E8F               	movlw	low _spi1_configuration
 15540   01127E  24F3               	addwf	243,w,c
 15541   011280  6EF6               	movwf	tblptrl,c
 15542   011282  0EFE               	movlw	high _spi1_configuration
 15543   011284  20F4               	addwfc	244,w,c
 15544   011286  6EF7               	movwf	tblptrh,c
 15545   011288                     	if	1	;There are 3 active tblptr bytes
 15546   011288  6AF8               	clrf	tblptru,c
 15547   01128A  0E00               	movlw	low (__mediumconst shr (0+16))
 15548   01128C  22F8               	addwfc	tblptru,f,c
 15549   01128E                     	endif
 15550   01128E  0008               	tblrd		*
 15551   011290  C4F5 F084          	movff	tablat,132	;volatile
 15552                           
 15553                           ;mcc_generated_files/spi/src/spi1.c: 96:         SPI1CON1 = spi1_configuration[spiConfig
      +                          Index].con1;
 15554   011294  5160               	movf	SPI1_Open@spiConfigIndex& (0+255),w,b
 15555   011296  0D05               	mullw	5
 15556   011298  0E01               	movlw	1
 15557   01129A  26F3               	addwf	243,f,c
 15558   01129C  0E00               	movlw	0
 15559   01129E  22F4               	addwfc	244,f,c
 15560   0112A0  0E8F               	movlw	low _spi1_configuration
 15561   0112A2  24F3               	addwf	243,w,c
 15562   0112A4  6EF6               	movwf	tblptrl,c
 15563   0112A6  0EFE               	movlw	high _spi1_configuration
 15564   0112A8  20F4               	addwfc	244,w,c
 15565   0112AA  6EF7               	movwf	tblptrh,c
 15566   0112AC                     	if	1	;There are 3 active tblptr bytes
 15567   0112AC  6AF8               	clrf	tblptru,c
 15568   0112AE  0E00               	movlw	low (__mediumconst shr (0+16))
 15569   0112B0  22F8               	addwfc	tblptru,f,c
 15570   0112B2                     	endif
 15571   0112B2  0008               	tblrd		*
 15572   0112B4  C4F5 F085          	movff	tablat,133	;volatile
 15573                           
 15574                           ;mcc_generated_files/spi/src/spi1.c: 97:         SPI1CON2 = spi1_configuration[spiConfig
      +                          Index].con2 & ~(0x1) & ~(0x2);
 15575   0112B8  5160               	movf	SPI1_Open@spiConfigIndex& (0+255),w,b
 15576   0112BA  0D05               	mullw	5
 15577   0112BC  0E02               	movlw	2
 15578   0112BE  26F3               	addwf	243,f,c
 15579   0112C0  0E00               	movlw	0
 15580   0112C2  22F4               	addwfc	244,f,c
 15581   0112C4  0E8F               	movlw	low _spi1_configuration
 15582   0112C6  24F3               	addwf	243,w,c
 15583   0112C8  6EF6               	movwf	tblptrl,c
 15584   0112CA  0EFE               	movlw	high _spi1_configuration
 15585   0112CC  20F4               	addwfc	244,w,c
 15586   0112CE  6EF7               	movwf	tblptrh,c
 15587   0112D0                     	if	1	;There are 3 active tblptr bytes
 15588   0112D0  6AF8               	clrf	tblptru,c
 15589   0112D2  0E00               	movlw	low (__mediumconst shr (0+16))
 15590   0112D4  22F8               	addwfc	tblptru,f,c
 15591   0112D6                     	endif
 15592   0112D6  0008               	tblrd		*
 15593   0112D8  50F5               	movf	tablat,w,c
 15594   0112DA  0BFC               	andlw	252
 15595   0112DC  0100               	movlb	0	; () banked
 15596   0112DE  6F86               	movwf	134,b	;volatile
 15597                           
 15598                           ;mcc_generated_files/spi/src/spi1.c: 98:         SPI1BAUD = spi1_configuration[spiConfig
      +                          Index].baud;
 15599   0112E0  0105               	movlb	5	; () banked
 15600   0112E2  5160               	movf	SPI1_Open@spiConfigIndex& (0+255),w,b
 15601   0112E4  0D05               	mullw	5
 15602   0112E6  0E03               	movlw	3
 15603   0112E8  26F3               	addwf	243,f,c
 15604   0112EA  0E00               	movlw	0
 15605   0112EC  22F4               	addwfc	244,f,c
 15606   0112EE  0E8F               	movlw	low _spi1_configuration
 15607   0112F0  24F3               	addwf	243,w,c
 15608   0112F2  6EF6               	movwf	tblptrl,c
 15609   0112F4  0EFE               	movlw	high _spi1_configuration
 15610   0112F6  20F4               	addwfc	244,w,c
 15611   0112F8  6EF7               	movwf	tblptrh,c
 15612   0112FA                     	if	1	;There are 3 active tblptr bytes
 15613   0112FA  6AF8               	clrf	tblptru,c
 15614   0112FC  0E00               	movlw	low (__mediumconst shr (0+16))
 15615   0112FE  22F8               	addwfc	tblptru,f,c
 15616   011300                     	endif
 15617   011300  0008               	tblrd		*
 15618   011302  C4F5 F089          	movff	tablat,137	;volatile
 15619                           
 15620                           ;mcc_generated_files/spi/src/spi1.c: 99:         SPI1CLK = spi1_configuration[spiConfigI
      +                          ndex].clksel;
 15621   011306  5160               	movf	SPI1_Open@spiConfigIndex& (0+255),w,b
 15622   011308  0D05               	mullw	5
 15623   01130A  0E04               	movlw	4
 15624   01130C  26F3               	addwf	243,f,c
 15625   01130E  0E00               	movlw	0
 15626   011310  22F4               	addwfc	244,f,c
 15627   011312  0E8F               	movlw	low _spi1_configuration
 15628   011314  24F3               	addwf	243,w,c
 15629   011316  6EF6               	movwf	tblptrl,c
 15630   011318  0EFE               	movlw	high _spi1_configuration
 15631   01131A  20F4               	addwfc	244,w,c
 15632   01131C  6EF7               	movwf	tblptrh,c
 15633   01131E                     	if	1	;There are 3 active tblptr bytes
 15634   01131E  6AF8               	clrf	tblptru,c
 15635   011320  0E00               	movlw	low (__mediumconst shr (0+16))
 15636   011322  22F8               	addwfc	tblptru,f,c
 15637   011324                     	endif
 15638   011324  0008               	tblrd		*
 15639   011326  C4F5 F08C          	movff	tablat,140	;volatile
 15640   01132A                     
 15641                           ; BSR set to: 5
 15642                           ;mcc_generated_files/spi/src/spi1.c: 100:   TRISCbits.TRISC3 = 0;
 15643   01132A  96C8               	bcf	200,3,c	;volatile
 15644   01132C                     
 15645                           ; BSR set to: 5
 15646                           ;mcc_generated_files/spi/src/spi1.c: 101:         SPI1CON0bits.EN = 1U;
 15647   01132C  0100               	movlb	0	; () banked
 15648   01132E  8F84               	bsf	132,7,b	;volatile
 15649   011330                     
 15650                           ; BSR set to: 0
 15651                           ;mcc_generated_files/spi/src/spi1.c: 103:  }
 15652   011330  EF9A  F089         	goto	l69
 15653   011334                     l67:
 15654   011334                     l69:
 15655                           
 15656                           ; BSR set to: 0
 15657   011334  0012               	return		;funcret
 15658   011336                     __end_of_SPI1_Open:
 15659                           	callstack 0
 15660                           
 15661 ;; *************** function _Nrf24_getData *****************
 15662 ;; Defined at:
 15663 ;;		line 180 in file "mirf.c"
 15664 ;; Parameters:    Size  Location     Type
 15665 ;;  dev             2    6[BANK5 ] PTR struct .
 15666 ;;		 -> dev(3), 
 15667 ;;  data            2    8[BANK5 ] PTR unsigned char 
 15668 ;;		 -> nrf_interrupt@buf(32), init_nrf@buf(32), 
 15669 ;; Auto vars:     Size  Location     Type
 15670 ;;		None
 15671 ;; Return value:  Size  Location     Type
 15672 ;;                  1    wreg      void 
 15673 ;; Registers used:
 15674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15675 ;; Tracked objects:
 15676 ;;		On entry : 0/0
 15677 ;;		On exit  : 0/0
 15678 ;;		Unchanged: 0/0
 15679 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15680 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15683 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15684 ;;Total ram usage:        4 bytes
 15685 ;; Hardware stack levels used: 1
 15686 ;; Hardware stack levels required when called: 9
 15687 ;; This function calls:
 15688 ;;		_Nrf24_configRegister
 15689 ;;		_SPI1_ByteExchange
 15690 ;;		_SPI_read_buff
 15691 ;; This function is called by:
 15692 ;;		_init_nrf
 15693 ;; This function uses a non-reentrant model
 15694 ;;
 15695                           
 15696                           	psect	text36
 15697   012370                     __ptext36:
 15698                           	callstack 0
 15699   012370                     _Nrf24_getData:
 15700                           	callstack 116
 15701   012370  9EC0               	bcf	192,7,c	;volatile
 15702   012372                     
 15703                           ;mirf.c: 183:  SPI1_ByteExchange(0x00 | 0x61);
 15704   012372  0E61               	movlw	97
 15705   012374  EC49  F091         	call	_SPI1_ByteExchange
 15706   012378                     
 15707                           ;mirf.c: 184:  SPI_read_buff( data, dev->payload );
 15708   012378  C568  F562         	movff	Nrf24_getData@data,SPI_read_buff@buffer
 15709   01237C  C569  F563         	movff	Nrf24_getData@data+1,SPI_read_buff@buffer+1
 15710   012380  0105               	movlb	5	; () banked
 15711   012382  EE20 F002          	lfsr	2,2
 15712   012386  5166               	movf	Nrf24_getData@dev& (0+255),w,b
 15713   012388  26D9               	addwf	fsr2l,f,c
 15714   01238A  5167               	movf	(Nrf24_getData@dev+1)& (0+255),w,b
 15715   01238C  22DA               	addwfc	fsr2h,f,c
 15716   01238E  50DF               	movf	indf2,w,c
 15717   012390  6F64               	movwf	SPI_read_buff@bytes& (0+255),b
 15718   012392  EC66  F091         	call	_SPI_read_buff	;wreg free
 15719   012396  8EC0               	bsf	192,7,c	;volatile
 15720   012398                     
 15721                           ;mirf.c: 194:  Nrf24_configRegister(0x07, (1 << 6));
 15722   012398  0E40               	movlw	64
 15723   01239A  0105               	movlb	5	; () banked
 15724   01239C  6F62               	movwf	Nrf24_configRegister@value& (0+255),b
 15725   01239E  0E07               	movlw	7
 15726   0123A0  EC5A  F093         	call	_Nrf24_configRegister
 15727   0123A4  0012               	return		;funcret
 15728   0123A6                     __end_of_Nrf24_getData:
 15729                           	callstack 0
 15730                           
 15731 ;; *************** function _Nrf24_dataReady *****************
 15732 ;; Defined at:
 15733 ;;		line 158 in file "mirf.c"
 15734 ;; Parameters:    Size  Location     Type
 15735 ;;  dev             2   13[BANK5 ] PTR struct .
 15736 ;;		 -> dev(3), 
 15737 ;; Auto vars:     Size  Location     Type
 15738 ;;  status          1   15[BANK5 ] unsigned char 
 15739 ;; Return value:  Size  Location     Type
 15740 ;;                  1    wreg      _Bool 
 15741 ;; Registers used:
 15742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15743 ;; Tracked objects:
 15744 ;;		On entry : 0/0
 15745 ;;		On exit  : 0/0
 15746 ;;		Unchanged: 0/0
 15747 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15751 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15752 ;;Total ram usage:        3 bytes
 15753 ;; Hardware stack levels used: 1
 15754 ;; Hardware stack levels required when called: 11
 15755 ;; This function calls:
 15756 ;;		_Nrf24_getStatus
 15757 ;; This function is called by:
 15758 ;;		_init_nrf
 15759 ;; This function uses a non-reentrant model
 15760 ;;
 15761                           
 15762                           	psect	text37
 15763   0125BE                     __ptext37:
 15764                           	callstack 0
 15765   0125BE                     _Nrf24_dataReady:
 15766                           	callstack 114
 15767   0125BE                     
 15768                           ;mirf.c: 158: extern _Bool Nrf24_dataReady(NRF24_t * dev);mirf.c: 159: {;mirf.c: 160:  u
      +                          int8_t status = Nrf24_getStatus(dev);
 15769   0125BE  C56D  F56A         	movff	Nrf24_dataReady@dev,Nrf24_getStatus@dev
 15770   0125C2  C56E  F56B         	movff	Nrf24_dataReady@dev+1,Nrf24_getStatus@dev+1
 15771   0125C6  EC77  F093         	call	_Nrf24_getStatus	;wreg free
 15772   0125CA  0105               	movlb	5	; () banked
 15773   0125CC  6F6F               	movwf	Nrf24_dataReady@status& (0+255),b
 15774   0125CE                     
 15775                           ; BSR set to: 5
 15776                           ;mirf.c: 161:  if ( status & (1 << 6) ) {
 15777   0125CE  AD6F               	btfss	Nrf24_dataReady@status& (0+255),6,b
 15778   0125D0  EFEC  F092         	goto	u2791
 15779   0125D4  EFEE  F092         	goto	u2790
 15780   0125D8                     u2791:
 15781   0125D8  EFF1  F092         	goto	l3908
 15782   0125DC                     u2790:
 15783   0125DC                     
 15784                           ; BSR set to: 5
 15785                           ;mirf.c: 162:   return 1;
 15786   0125DC  0E01               	movlw	1
 15787   0125DE  EFF2  F092         	goto	l756
 15788   0125E2                     l3908:
 15789                           
 15790                           ; BSR set to: 5
 15791                           ;mirf.c: 164:  return 0;
 15792   0125E2  0E00               	movlw	0
 15793   0125E4                     l756:
 15794                           
 15795                           ; BSR set to: 5
 15796   0125E4  0012               	return		;funcret
 15797   0125E6                     __end_of_Nrf24_dataReady:
 15798                           	callstack 0
 15799                           
 15800 ;; *************** function _Nrf24_config *****************
 15801 ;; Defined at:
 15802 ;;		line 89 in file "mirf.c"
 15803 ;; Parameters:    Size  Location     Type
 15804 ;;  dev             2   13[BANK5 ] PTR struct .
 15805 ;;		 -> dev(3), 
 15806 ;;  channel         1   15[BANK5 ] unsigned char 
 15807 ;;  payload         1   16[BANK5 ] unsigned char 
 15808 ;; Auto vars:     Size  Location     Type
 15809 ;;		None
 15810 ;; Return value:  Size  Location     Type
 15811 ;;                  1    wreg      void 
 15812 ;; Registers used:
 15813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15814 ;; Tracked objects:
 15815 ;;		On entry : 0/0
 15816 ;;		On exit  : 0/0
 15817 ;;		Unchanged: 0/0
 15818 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15819 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15822 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15823 ;;Total ram usage:        4 bytes
 15824 ;; Hardware stack levels used: 1
 15825 ;; Hardware stack levels required when called: 11
 15826 ;; This function calls:
 15827 ;;		_Nrf24_configRegister
 15828 ;;		_Nrf24_flushRx
 15829 ;;		_Nrf24_getStatus
 15830 ;;		_Nrf24_powerUpRx
 15831 ;; This function is called by:
 15832 ;;		_init_nrf
 15833 ;; This function uses a non-reentrant model
 15834 ;;
 15835                           
 15836                           	psect	text38
 15837   011E56                     __ptext38:
 15838                           	callstack 0
 15839   011E56                     _Nrf24_config:
 15840                           	callstack 114
 15841   011E56                     
 15842                           ;mirf.c: 89: void Nrf24_config(NRF24_t * dev, uint8_t channel, uint8_t payload);mirf.c: 
      +                          90: {;mirf.c: 91:  dev->channel = channel;
 15843   011E56  0105               	movlb	5	; () banked
 15844   011E58  EE20 F001          	lfsr	2,1
 15845   011E5C  516D               	movf	Nrf24_config@dev& (0+255),w,b
 15846   011E5E  26D9               	addwf	fsr2l,f,c
 15847   011E60  516E               	movf	(Nrf24_config@dev+1)& (0+255),w,b
 15848   011E62  22DA               	addwfc	fsr2h,f,c
 15849   011E64  C56F  F4DF         	movff	Nrf24_config@channel,indf2
 15850                           
 15851                           ;mirf.c: 92:  dev->payload = payload;
 15852   011E68  EE20 F002          	lfsr	2,2
 15853   011E6C  516D               	movf	Nrf24_config@dev& (0+255),w,b
 15854   011E6E  26D9               	addwf	fsr2l,f,c
 15855   011E70  516E               	movf	(Nrf24_config@dev+1)& (0+255),w,b
 15856   011E72  22DA               	addwfc	fsr2h,f,c
 15857   011E74  C570  F4DF         	movff	Nrf24_config@payload,indf2
 15858   011E78                     
 15859                           ; BSR set to: 5
 15860                           ;mirf.c: 93:     Nrf24_getStatus(dev);
 15861   011E78  C56D  F56A         	movff	Nrf24_config@dev,Nrf24_getStatus@dev
 15862   011E7C  C56E  F56B         	movff	Nrf24_config@dev+1,Nrf24_getStatus@dev+1
 15863   011E80  EC77  F093         	call	_Nrf24_getStatus	;wreg free
 15864   011E84                     
 15865                           ;mirf.c: 94:     Nrf24_configRegister(0x05, channel);
 15866   011E84  C56F  F562         	movff	Nrf24_config@channel,Nrf24_configRegister@value
 15867   011E88  0E05               	movlw	5
 15868   011E8A  EC5A  F093         	call	_Nrf24_configRegister
 15869   011E8E                     
 15870                           ;mirf.c: 95:  Nrf24_configRegister(0x11, dev->payload);
 15871   011E8E  0105               	movlb	5	; () banked
 15872   011E90  EE20 F002          	lfsr	2,2
 15873   011E94  516D               	movf	Nrf24_config@dev& (0+255),w,b
 15874   011E96  26D9               	addwf	fsr2l,f,c
 15875   011E98  516E               	movf	(Nrf24_config@dev+1)& (0+255),w,b
 15876   011E9A  22DA               	addwfc	fsr2h,f,c
 15877   011E9C  50DF               	movf	indf2,w,c
 15878   011E9E  6F62               	movwf	Nrf24_configRegister@value& (0+255),b
 15879   011EA0  0E11               	movlw	17
 15880   011EA2  EC5A  F093         	call	_Nrf24_configRegister
 15881   011EA6                     
 15882                           ;mirf.c: 96:  Nrf24_configRegister(0x12, dev->payload);
 15883   011EA6  0105               	movlb	5	; () banked
 15884   011EA8  EE20 F002          	lfsr	2,2
 15885   011EAC  516D               	movf	Nrf24_config@dev& (0+255),w,b
 15886   011EAE  26D9               	addwf	fsr2l,f,c
 15887   011EB0  516E               	movf	(Nrf24_config@dev+1)& (0+255),w,b
 15888   011EB2  22DA               	addwfc	fsr2h,f,c
 15889   011EB4  50DF               	movf	indf2,w,c
 15890   011EB6  6F62               	movwf	Nrf24_configRegister@value& (0+255),b
 15891   011EB8  0E12               	movlw	18
 15892   011EBA  EC5A  F093         	call	_Nrf24_configRegister
 15893   011EBE                     
 15894                           ;mirf.c: 97:  Nrf24_powerUpRx(dev);
 15895   011EBE  C56D  F564         	movff	Nrf24_config@dev,Nrf24_powerUpRx@dev
 15896   011EC2  C56E  F565         	movff	Nrf24_config@dev+1,Nrf24_powerUpRx@dev+1
 15897   011EC6  ECF3  F092         	call	_Nrf24_powerUpRx	;wreg free
 15898   011ECA                     
 15899                           ;mirf.c: 98:  Nrf24_flushRx(dev);
 15900   011ECA  C56D  F562         	movff	Nrf24_config@dev,Nrf24_flushRx@dev
 15901   011ECE  C56E  F563         	movff	Nrf24_config@dev+1,Nrf24_flushRx@dev+1
 15902   011ED2  ECE6  F093         	call	_Nrf24_flushRx	;wreg free
 15903   011ED6  0012               	return		;funcret
 15904   011ED8                     __end_of_Nrf24_config:
 15905                           	callstack 0
 15906                           
 15907 ;; *************** function _Nrf24_powerUpRx *****************
 15908 ;; Defined at:
 15909 ;;		line 303 in file "mirf.c"
 15910 ;; Parameters:    Size  Location     Type
 15911 ;;  dev             2    4[BANK5 ] PTR struct .
 15912 ;;		 -> dev(3), 
 15913 ;; Auto vars:     Size  Location     Type
 15914 ;;		None
 15915 ;; Return value:  Size  Location     Type
 15916 ;;                  1    wreg      void 
 15917 ;; Registers used:
 15918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15919 ;; Tracked objects:
 15920 ;;		On entry : 0/0
 15921 ;;		On exit  : 0/0
 15922 ;;		Unchanged: 0/0
 15923 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15927 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15928 ;;Total ram usage:        2 bytes
 15929 ;; Hardware stack levels used: 1
 15930 ;; Hardware stack levels required when called: 9
 15931 ;; This function calls:
 15932 ;;		_Nrf24_configRegister
 15933 ;; This function is called by:
 15934 ;;		_Nrf24_config
 15935 ;;		_Nrf24_isSending
 15936 ;;		_Nrf24_isSend
 15937 ;; This function uses a non-reentrant model
 15938 ;;
 15939                           
 15940                           	psect	text39
 15941   0125E6                     __ptext39:
 15942                           	callstack 0
 15943   0125E6                     _Nrf24_powerUpRx:
 15944                           	callstack 115
 15945   0125E6                     
 15946                           ;mirf.c: 304:  dev->PTX = 0;
 15947   0125E6  C564  F4D9         	movff	Nrf24_powerUpRx@dev,fsr2l
 15948   0125EA  C565  F4DA         	movff	Nrf24_powerUpRx@dev+1,fsr2h
 15949   0125EE  6ADF               	clrf	indf2,c
 15950   0125F0  94C0               	bcf	192,2,c	;volatile
 15951   0125F2                     
 15952                           ;mirf.c: 306:  Nrf24_configRegister(0x00, ((1<<5) | (1<<3) | (0<<2) ) | ( (1 << 1) | (1 
      +                          << 0) ) );
 15953   0125F2  0E2B               	movlw	43
 15954   0125F4  0105               	movlb	5	; () banked
 15955   0125F6  6F62               	movwf	Nrf24_configRegister@value& (0+255),b
 15956   0125F8  0E00               	movlw	0
 15957   0125FA  EC5A  F093         	call	_Nrf24_configRegister
 15958   0125FE  84C0               	bsf	192,2,c	;volatile
 15959   012600                     
 15960                           ;mirf.c: 308:  Nrf24_configRegister(0x07, (1 << 5) | (1 << 4));
 15961   012600  0E30               	movlw	48
 15962   012602  0105               	movlb	5	; () banked
 15963   012604  6F62               	movwf	Nrf24_configRegister@value& (0+255),b
 15964   012606  0E07               	movlw	7
 15965   012608  EC5A  F093         	call	_Nrf24_configRegister
 15966   01260C  0012               	return		;funcret
 15967   01260E                     __end_of_Nrf24_powerUpRx:
 15968                           	callstack 0
 15969                           
 15970 ;; *************** function _Nrf24_getStatus *****************
 15971 ;; Defined at:
 15972 ;;		line 297 in file "mirf.c"
 15973 ;; Parameters:    Size  Location     Type
 15974 ;;  dev             2   10[BANK5 ] PTR struct .
 15975 ;;		 -> dev(3), 
 15976 ;; Auto vars:     Size  Location     Type
 15977 ;;  rv              1   12[BANK5 ] unsigned char 
 15978 ;; Return value:  Size  Location     Type
 15979 ;;                  1    wreg      unsigned char 
 15980 ;; Registers used:
 15981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15982 ;; Tracked objects:
 15983 ;;		On entry : 0/0
 15984 ;;		On exit  : 0/0
 15985 ;;		Unchanged: 0/0
 15986 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15987 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15988 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15990 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15991 ;;Total ram usage:        3 bytes
 15992 ;; Hardware stack levels used: 1
 15993 ;; Hardware stack levels required when called: 10
 15994 ;; This function calls:
 15995 ;;		_Nrf24_readRegister
 15996 ;; This function is called by:
 15997 ;;		_Nrf24_config
 15998 ;;		_Nrf24_dataReady
 15999 ;;		_Nrf24_printDetails
 16000 ;;		_Nrf24_getDataPipe
 16001 ;;		_Nrf24_send
 16002 ;;		_Nrf24_isSending
 16003 ;;		_Nrf24_isSend
 16004 ;; This function uses a non-reentrant model
 16005 ;;
 16006                           
 16007                           	psect	text40
 16008   0126EE                     __ptext40:
 16009                           	callstack 0
 16010   0126EE                     _Nrf24_getStatus:
 16011                           	callstack 114
 16012   0126EE                     
 16013                           ;mirf.c: 298:  uint8_t rv;;mirf.c: 299:  Nrf24_readRegister(0x07, &rv, 1);
 16014   0126EE  0E6C               	movlw	low Nrf24_getStatus@rv
 16015   0126F0  0105               	movlb	5	; () banked
 16016   0126F2  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 16017   0126F4  0E05               	movlw	high Nrf24_getStatus@rv
 16018   0126F6  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 16019   0126F8  0E01               	movlw	1
 16020   0126FA  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 16021   0126FC  0E07               	movlw	7
 16022   0126FE  ECEE  F091         	call	_Nrf24_readRegister
 16023   012702                     
 16024                           ;mirf.c: 300:  return rv;
 16025   012702  0105               	movlb	5	; () banked
 16026   012704  516C               	movf	Nrf24_getStatus@rv& (0+255),w,b
 16027   012706                     
 16028                           ; BSR set to: 5
 16029   012706  0012               	return		;funcret
 16030   012708                     __end_of_Nrf24_getStatus:
 16031                           	callstack 0
 16032                           
 16033 ;; *************** function _Nrf24_flushRx *****************
 16034 ;; Defined at:
 16035 ;;		line 311 in file "mirf.c"
 16036 ;; Parameters:    Size  Location     Type
 16037 ;;  dev             2    2[BANK5 ] PTR struct .
 16038 ;;		 -> dev(3), 
 16039 ;; Auto vars:     Size  Location     Type
 16040 ;;		None
 16041 ;; Return value:  Size  Location     Type
 16042 ;;                  1    wreg      void 
 16043 ;; Registers used:
 16044 ;;		wreg, status,2, status,0, cstack
 16045 ;; Tracked objects:
 16046 ;;		On entry : 0/0
 16047 ;;		On exit  : 0/0
 16048 ;;		Unchanged: 0/0
 16049 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16050 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16053 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16054 ;;Total ram usage:        2 bytes
 16055 ;; Hardware stack levels used: 1
 16056 ;; Hardware stack levels required when called: 8
 16057 ;; This function calls:
 16058 ;;		_SPI1_ByteExchange
 16059 ;; This function is called by:
 16060 ;;		_Nrf24_config
 16061 ;; This function uses a non-reentrant model
 16062 ;;
 16063                           
 16064                           	psect	text41
 16065   0127CC                     __ptext41:
 16066                           	callstack 0
 16067   0127CC                     _Nrf24_flushRx:
 16068                           	callstack 116
 16069   0127CC  9EC0               	bcf	192,7,c	;volatile
 16070   0127CE                     
 16071                           ;mirf.c: 314:  SPI1_ByteExchange(0xE2);
 16072   0127CE  0EE2               	movlw	226
 16073   0127D0  EC49  F091         	call	_SPI1_ByteExchange
 16074   0127D4  8EC0               	bsf	192,7,c	;volatile
 16075   0127D6  0012               	return		;funcret
 16076   0127D8                     __end_of_Nrf24_flushRx:
 16077                           	callstack 0
 16078                           
 16079 ;; *************** function _Nrf24_SetSpeedDataRates *****************
 16080 ;; Defined at:
 16081 ;;		line 343 in file "mirf.c"
 16082 ;; Parameters:    Size  Location     Type
 16083 ;;  dev             2   10[BANK5 ] PTR struct .
 16084 ;;		 -> dev(3), 
 16085 ;;  val             1   12[BANK5 ] unsigned char 
 16086 ;; Auto vars:     Size  Location     Type
 16087 ;;  value           1   13[BANK5 ] unsigned char 
 16088 ;; Return value:  Size  Location     Type
 16089 ;;                  1    wreg      void 
 16090 ;; Registers used:
 16091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16092 ;; Tracked objects:
 16093 ;;		On entry : 0/0
 16094 ;;		On exit  : 0/0
 16095 ;;		Unchanged: 0/0
 16096 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16097 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16098 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16100 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16101 ;;Total ram usage:        4 bytes
 16102 ;; Hardware stack levels used: 1
 16103 ;; Hardware stack levels required when called: 10
 16104 ;; This function calls:
 16105 ;;		_Nrf24_configRegister
 16106 ;;		_Nrf24_readRegister
 16107 ;; This function is called by:
 16108 ;;		_init_nrf
 16109 ;; This function uses a non-reentrant model
 16110 ;;
 16111                           
 16112                           	psect	text42
 16113   011F4A                     __ptext42:
 16114                           	callstack 0
 16115   011F4A                     _Nrf24_SetSpeedDataRates:
 16116                           	callstack 115
 16117   011F4A                     
 16118                           ;mirf.c: 343: void Nrf24_SetSpeedDataRates(NRF24_t * dev, uint8_t val);mirf.c: 344: {;mi
      +                          rf.c: 345:  if (val > 2) return;
 16119   011F4A  0E02               	movlw	2
 16120   011F4C  0105               	movlb	5	; () banked
 16121   011F4E  656C               	cpfsgt	Nrf24_SetSpeedDataRates@val& (0+255),b
 16122   011F50  EFAC  F08F         	goto	u2771
 16123   011F54  EFAE  F08F         	goto	u2770
 16124   011F58                     u2771:
 16125   011F58  EFB0  F08F         	goto	l3872
 16126   011F5C                     u2770:
 16127   011F5C  EFDD  F08F         	goto	l858
 16128   011F60                     l3872:
 16129                           
 16130                           ; BSR set to: 5
 16131                           ;mirf.c: 347:  uint8_t value;;mirf.c: 348:  Nrf24_readRegister(0x06, &value, 1);
 16132   011F60  0E6D               	movlw	low Nrf24_SetSpeedDataRates@value
 16133   011F62  6F66               	movwf	Nrf24_readRegister@value& (0+255),b
 16134   011F64  0E05               	movlw	high Nrf24_SetSpeedDataRates@value
 16135   011F66  6F67               	movwf	(Nrf24_readRegister@value+1)& (0+255),b
 16136   011F68  0E01               	movlw	1
 16137   011F6A  6F68               	movwf	Nrf24_readRegister@len& (0+255),b
 16138   011F6C  0E06               	movlw	6
 16139   011F6E  ECEE  F091         	call	_Nrf24_readRegister
 16140   011F72                     
 16141                           ;mirf.c: 349:  if(val == 2)
 16142   011F72  0E02               	movlw	2
 16143   011F74  0105               	movlb	5	; () banked
 16144   011F76  196C               	xorwf	Nrf24_SetSpeedDataRates@val& (0+255),w,b
 16145   011F78  A4D8               	btfss	status,2,c
 16146   011F7A  EFC1  F08F         	goto	u2781
 16147   011F7E  EFC3  F08F         	goto	u2780
 16148   011F82                     u2781:
 16149   011F82  EFD0  F08F         	goto	l3880
 16150   011F86                     u2780:
 16151   011F86                     
 16152                           ; BSR set to: 5
 16153                           ;mirf.c: 350:  {;mirf.c: 351:   value = value | 0x20;
 16154   011F86  516D               	movf	Nrf24_SetSpeedDataRates@value& (0+255),w,b
 16155   011F88  0920               	iorlw	32
 16156   011F8A  6F6D               	movwf	Nrf24_SetSpeedDataRates@value& (0+255),b
 16157                           
 16158                           ;mirf.c: 352:   value = value & 0xF7;
 16159   011F8C  516D               	movf	Nrf24_SetSpeedDataRates@value& (0+255),w,b
 16160   011F8E  0BF7               	andlw	247
 16161   011F90  6F6D               	movwf	Nrf24_SetSpeedDataRates@value& (0+255),b
 16162   011F92                     
 16163                           ; BSR set to: 5
 16164                           ;mirf.c: 353:      Nrf24_configRegister(0x06, value);
 16165   011F92  C56D  F562         	movff	Nrf24_SetSpeedDataRates@value,Nrf24_configRegister@value
 16166   011F96  0E06               	movlw	6
 16167   011F98  EC5A  F093         	call	_Nrf24_configRegister
 16168                           
 16169                           ;mirf.c: 354:  }
 16170   011F9C  EFDD  F08F         	goto	l858
 16171   011FA0                     l3880:
 16172                           
 16173                           ; BSR set to: 5
 16174                           ;mirf.c: 356:  {;mirf.c: 357:   value = value & 0xD7;
 16175   011FA0  516D               	movf	Nrf24_SetSpeedDataRates@value& (0+255),w,b
 16176   011FA2  0BD7               	andlw	215
 16177   011FA4  6F6D               	movwf	Nrf24_SetSpeedDataRates@value& (0+255),b
 16178                           
 16179                           ;mirf.c: 358:   value = value | (val << 3);
 16180   011FA6  396C               	swapf	Nrf24_SetSpeedDataRates@val& (0+255),w,b
 16181   011FA8  42E8               	rrncf	wreg,f,c
 16182   011FAA  0BF8               	andlw	248
 16183   011FAC  116D               	iorwf	Nrf24_SetSpeedDataRates@value& (0+255),w,b
 16184   011FAE  6F6D               	movwf	Nrf24_SetSpeedDataRates@value& (0+255),b
 16185   011FB0                     
 16186                           ; BSR set to: 5
 16187                           ;mirf.c: 359:   Nrf24_configRegister(0x06, value);
 16188   011FB0  C56D  F562         	movff	Nrf24_SetSpeedDataRates@value,Nrf24_configRegister@value
 16189   011FB4  0E06               	movlw	6
 16190   011FB6  EC5A  F093         	call	_Nrf24_configRegister
 16191   011FBA                     l858:
 16192   011FBA  0012               	return		;funcret
 16193   011FBC                     __end_of_Nrf24_SetSpeedDataRates:
 16194                           	callstack 0
 16195                           
 16196 ;; *************** function _Nrf24_readRegister *****************
 16197 ;; Defined at:
 16198 ;;		line 207 in file "mirf.c"
 16199 ;; Parameters:    Size  Location     Type
 16200 ;;  reg             1    wreg     unsigned char 
 16201 ;;  value           2    6[BANK5 ] PTR unsigned char 
 16202 ;;		 -> Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1), Nrf24_getCRCLength@confi
      +g(1), 
 16203 ;;		 -> Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_register@buffer(5), Nrf24_setR
      +etransmitDelay@value(1), 
 16204 ;;		 -> Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getStatus@rv(1), Nrf24_rxFifoEmpty@fifoS
      +tatus(1), 
 16205 ;;		 -> Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), 
 16206 ;;  len             1    8[BANK5 ] unsigned char 
 16207 ;; Auto vars:     Size  Location     Type
 16208 ;;  reg             1    9[BANK5 ] unsigned char 
 16209 ;; Return value:  Size  Location     Type
 16210 ;;                  1    wreg      void 
 16211 ;; Registers used:
 16212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16213 ;; Tracked objects:
 16214 ;;		On entry : 0/0
 16215 ;;		On exit  : 0/0
 16216 ;;		Unchanged: 0/0
 16217 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16218 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16221 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16222 ;;Total ram usage:        4 bytes
 16223 ;; Hardware stack levels used: 1
 16224 ;; Hardware stack levels required when called: 9
 16225 ;; This function calls:
 16226 ;;		_SPI1_ByteExchange
 16227 ;;		_SPI_read_buff
 16228 ;; This function is called by:
 16229 ;;		_Nrf24_setRADDR
 16230 ;;		_Nrf24_setTADDR
 16231 ;;		_Nrf24_getStatus
 16232 ;;		_Nrf24_SetSpeedDataRates
 16233 ;;		_Nrf24_setRetransmitDelay
 16234 ;;		_Nrf24_print_address_register
 16235 ;;		_Nrf24_print_byte_register
 16236 ;;		_Nrf24_getDataRate
 16237 ;;		_Nrf24_getCRCLength
 16238 ;;		_Nrf24_getPALevel
 16239 ;;		_Nrf24_getRetransmitDelay
 16240 ;;		_Nrf24_addRADDR
 16241 ;;		_Nrf24_rxFifoEmpty
 16242 ;;		_Nrf24_SetOutputRF_PWR
 16243 ;; This function uses a non-reentrant model
 16244 ;;
 16245                           
 16246                           	psect	text43
 16247   0123DC                     __ptext43:
 16248                           	callstack 0
 16249   0123DC                     _Nrf24_readRegister:
 16250                           	callstack 115
 16251                           
 16252                           ;incstack = 0
 16253                           ;Nrf24_readRegister@reg stored from wreg
 16254   0123DC  0105               	movlb	5	; () banked
 16255   0123DE  6F69               	movwf	Nrf24_readRegister@reg& (0+255),b
 16256   0123E0                     
 16257                           ;mirf.c: 207: void Nrf24_readRegister(uint8_t reg, uint8_t * value, uint8_t len);mirf.c:
      +                           208: {;mirf.c: 209:     if(len) {
 16258   0123E0  0105               	movlb	5	; () banked
 16259   0123E2  5168               	movf	Nrf24_readRegister@len& (0+255),w,b
 16260   0123E4  B4D8               	btfsc	status,2,c
 16261   0123E6  EFF7  F091         	goto	u2521
 16262   0123EA  EFF9  F091         	goto	u2520
 16263   0123EE                     u2521:
 16264   0123EE  EF07  F092         	goto	l784
 16265   0123F2                     u2520:
 16266   0123F2                     
 16267                           ; BSR set to: 5
 16268   0123F2  9EC0               	bcf	192,7,c	;volatile
 16269   0123F4                     
 16270                           ; BSR set to: 5
 16271                           ;mirf.c: 211:         SPI1_ByteExchange(0x00 | (0x1F & reg));
 16272   0123F4  5169               	movf	Nrf24_readRegister@reg& (0+255),w,b
 16273   0123F6  0B1F               	andlw	31
 16274   0123F8  EC49  F091         	call	_SPI1_ByteExchange
 16275   0123FC                     
 16276                           ;mirf.c: 212:         SPI_read_buff(value, len);
 16277   0123FC  C566  F562         	movff	Nrf24_readRegister@value,SPI_read_buff@buffer
 16278   012400  C567  F563         	movff	Nrf24_readRegister@value+1,SPI_read_buff@buffer+1
 16279   012404  C568  F564         	movff	Nrf24_readRegister@len,SPI_read_buff@bytes
 16280   012408  EC66  F091         	call	_SPI_read_buff	;wreg free
 16281   01240C  8EC0               	bsf	192,7,c	;volatile
 16282   01240E                     l784:
 16283   01240E  0012               	return		;funcret
 16284   012410                     __end_of_Nrf24_readRegister:
 16285                           	callstack 0
 16286                           
 16287 ;; *************** function _SPI_read_buff *****************
 16288 ;; Defined at:
 16289 ;;		line 44 in file "mirf.c"
 16290 ;; Parameters:    Size  Location     Type
 16291 ;;  buffer          2    2[BANK5 ] PTR unsigned char 
 16292 ;;		 -> Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1), Nrf24_getCRCLength@confi
      +g(1), 
 16293 ;;		 -> Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_register@buffer(5), Nrf24_setR
      +etransmitDelay@value(1), 
 16294 ;;		 -> Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getStatus@rv(1), Nrf24_rxFifoEmpty@fifoS
      +tatus(1), 
 16295 ;;		 -> Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), nrf_interrupt@buf(32), 
 16296 ;;		 -> init_nrf@buf(32), 
 16297 ;;  bytes           1    4[BANK5 ] unsigned char 
 16298 ;; Auto vars:     Size  Location     Type
 16299 ;;  i               1    5[BANK5 ] unsigned char 
 16300 ;; Return value:  Size  Location     Type
 16301 ;;                  1    wreg      void 
 16302 ;; Registers used:
 16303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16304 ;; Tracked objects:
 16305 ;;		On entry : 0/0
 16306 ;;		On exit  : 0/0
 16307 ;;		Unchanged: 0/0
 16308 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16309 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16312 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16313 ;;Total ram usage:        4 bytes
 16314 ;; Hardware stack levels used: 1
 16315 ;; Hardware stack levels required when called: 8
 16316 ;; This function calls:
 16317 ;;		_SPI1_ByteExchange
 16318 ;; This function is called by:
 16319 ;;		_Nrf24_getData
 16320 ;;		_Nrf24_readRegister
 16321 ;; This function uses a non-reentrant model
 16322 ;;
 16323                           
 16324                           	psect	text44
 16325   0122CC                     __ptext44:
 16326                           	callstack 0
 16327   0122CC                     _SPI_read_buff:
 16328                           	callstack 115
 16329   0122CC  9EC0               	bcf	192,7,c	;volatile
 16330   0122CE                     
 16331                           ;mirf.c: 46:     unsigned char i;;mirf.c: 47:     for (i = 0; i < bytes; i++) {
 16332   0122CE  0105               	movlb	5	; () banked
 16333   0122D0  6B65               	clrf	SPI_read_buff@i& (0+255),b
 16334   0122D2  EF77  F091         	goto	l3446
 16335   0122D6                     l3440:
 16336                           
 16337                           ; BSR set to: 5
 16338                           ;mirf.c: 48:         *buffer = SPI1_ByteExchange(0xFF);
 16339   0122D6  0EFF               	movlw	255
 16340   0122D8  EC49  F091         	call	_SPI1_ByteExchange
 16341   0122DC  C562  F4D9         	movff	SPI_read_buff@buffer,fsr2l
 16342   0122E0  C563  F4DA         	movff	SPI_read_buff@buffer+1,fsr2h
 16343   0122E4  6EDF               	movwf	indf2,c
 16344   0122E6                     
 16345                           ;mirf.c: 49:         buffer++;
 16346   0122E6  0105               	movlb	5	; () banked
 16347   0122E8  4B62               	infsnz	SPI_read_buff@buffer& (0+255),f,b
 16348   0122EA  2B63               	incf	(SPI_read_buff@buffer+1)& (0+255),f,b
 16349   0122EC                     
 16350                           ; BSR set to: 5
 16351                           ;mirf.c: 50:     }
 16352   0122EC  2B65               	incf	SPI_read_buff@i& (0+255),f,b
 16353   0122EE                     l3446:
 16354                           
 16355                           ; BSR set to: 5
 16356   0122EE  5164               	movf	SPI_read_buff@bytes& (0+255),w,b
 16357   0122F0  5D65               	subwf	SPI_read_buff@i& (0+255),w,b
 16358   0122F2  A0D8               	btfss	status,0,c
 16359   0122F4  EF7E  F091         	goto	u2321
 16360   0122F8  EF80  F091         	goto	u2320
 16361   0122FC                     u2321:
 16362   0122FC  EF6B  F091         	goto	l3440
 16363   012300                     u2320:
 16364   012300                     
 16365                           ; BSR set to: 5
 16366   012300  8EC0               	bsf	192,7,c	;volatile
 16367   012302                     
 16368                           ; BSR set to: 5
 16369   012302  0012               	return		;funcret
 16370   012304                     __end_of_SPI_read_buff:
 16371                           	callstack 0
 16372                           
 16373 ;; *************** function _Nrf24_configRegister *****************
 16374 ;; Defined at:
 16375 ;;		line 198 in file "mirf.c"
 16376 ;; Parameters:    Size  Location     Type
 16377 ;;  reg             1    wreg     unsigned char 
 16378 ;;  value           1    2[BANK5 ] unsigned char 
 16379 ;; Auto vars:     Size  Location     Type
 16380 ;;  reg             1    3[BANK5 ] unsigned char 
 16381 ;; Return value:  Size  Location     Type
 16382 ;;                  1    wreg      void 
 16383 ;; Registers used:
 16384 ;;		wreg, status,2, status,0, cstack
 16385 ;; Tracked objects:
 16386 ;;		On entry : 0/0
 16387 ;;		On exit  : 0/0
 16388 ;;		Unchanged: 0/0
 16389 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16390 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16391 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16393 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16394 ;;Total ram usage:        2 bytes
 16395 ;; Hardware stack levels used: 1
 16396 ;; Hardware stack levels required when called: 8
 16397 ;; This function calls:
 16398 ;;		_SPI1_ByteExchange
 16399 ;; This function is called by:
 16400 ;;		_Nrf24_config
 16401 ;;		_Nrf24_getData
 16402 ;;		_Nrf24_powerUpRx
 16403 ;;		_Nrf24_SetSpeedDataRates
 16404 ;;		_Nrf24_setRetransmitDelay
 16405 ;;		_Nrf24_addRADDR
 16406 ;;		_Nrf24_powerUpTx
 16407 ;;		_Nrf24_powerDown
 16408 ;;		_Nrf24_SetOutputRF_PWR
 16409 ;; This function uses a non-reentrant model
 16410 ;;
 16411                           
 16412                           	psect	text45
 16413   0126B4                     __ptext45:
 16414                           	callstack 0
 16415   0126B4                     _Nrf24_configRegister:
 16416                           	callstack 116
 16417                           
 16418                           ; BSR set to: 5
 16419                           ;incstack = 0
 16420                           ;Nrf24_configRegister@reg stored from wreg
 16421   0126B4  0105               	movlb	5	; () banked
 16422   0126B6  6F63               	movwf	Nrf24_configRegister@reg& (0+255),b
 16423   0126B8  9EC0               	bcf	192,7,c	;volatile
 16424   0126BA                     
 16425                           ;mirf.c: 201:  SPI1_ByteExchange(0x20 | (0x1F & reg));
 16426   0126BA  0105               	movlb	5	; () banked
 16427   0126BC  5163               	movf	Nrf24_configRegister@reg& (0+255),w,b
 16428   0126BE  0B1F               	andlw	31
 16429   0126C0  0920               	iorlw	32
 16430   0126C2  EC49  F091         	call	_SPI1_ByteExchange
 16431                           
 16432                           ;mirf.c: 202:  SPI1_ByteExchange(value);
 16433   0126C6  0105               	movlb	5	; () banked
 16434   0126C8  5162               	movf	Nrf24_configRegister@value& (0+255),w,b
 16435   0126CA  EC49  F091         	call	_SPI1_ByteExchange
 16436   0126CE  8EC0               	bsf	192,7,c	;volatile
 16437   0126D0  0012               	return		;funcret
 16438   0126D2                     __end_of_Nrf24_configRegister:
 16439                           	callstack 0
 16440                           
 16441 ;; *************** function _SPI1_ByteExchange *****************
 16442 ;; Defined at:
 16443 ;;		line 208 in file "mcc_generated_files/spi/src/spi1.c"
 16444 ;; Parameters:    Size  Location     Type
 16445 ;;  byteData        1    wreg     unsigned char 
 16446 ;; Auto vars:     Size  Location     Type
 16447 ;;  byteData        1    0[BANK5 ] unsigned char 
 16448 ;;  returnValue     1    1[BANK5 ] unsigned char 
 16449 ;; Return value:  Size  Location     Type
 16450 ;;                  1    wreg      unsigned char 
 16451 ;; Registers used:
 16452 ;;		wreg, status,2, status,0
 16453 ;; Tracked objects:
 16454 ;;		On entry : 0/0
 16455 ;;		On exit  : 0/0
 16456 ;;		Unchanged: 0/0
 16457 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16459 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16461 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16462 ;;Total ram usage:        2 bytes
 16463 ;; Hardware stack levels used: 1
 16464 ;; Hardware stack levels required when called: 7
 16465 ;; This function calls:
 16466 ;;		Nothing
 16467 ;; This function is called by:
 16468 ;;		_SPI_read_buff
 16469 ;;		_SPI_write_buff
 16470 ;;		_Nrf24_getData
 16471 ;;		_Nrf24_configRegister
 16472 ;;		_Nrf24_readRegister
 16473 ;;		_Nrf24_writeRegister
 16474 ;;		_Nrf24_flushRx
 16475 ;;		_Nrf24_send
 16476 ;; This function uses a non-reentrant model
 16477 ;;
 16478                           
 16479                           	psect	text46
 16480   012292                     __ptext46:
 16481                           	callstack 0
 16482   012292                     _SPI1_ByteExchange:
 16483                           	callstack 0
 16484   0000D7                     INTSTAT_ADDR    equ	215
 16485                           
 16486                           ;Skip over the trampoline to the duplicate function for level 2
 16487   012292  AED7               	btfss	215,7,c
 16488   012294  EF4E  F091         	goto	_SPI1_ByteExchange$intlevel0
 16489   012298  EFB5  F092         	goto	i2_SPI1_ByteExchange
 16490   01229C                     _SPI1_ByteExchange$intlevel0:
 16491                           	callstack 115
 16492                           
 16493                           ;incstack = 0
 16494                           ;SPI1_ByteExchange@byteData stored from wreg
 16495   01229C  0105               	movlb	5	; () banked
 16496   01229E  6F60               	movwf	SPI1_ByteExchange@byteData& (0+255),b
 16497   0122A0                     
 16498                           ;mcc_generated_files/spi/src/spi1.c: 212:  SPI1STATUSbits.CLRBF = 1U;
 16499   0122A0  0100               	movlb	0	; () banked
 16500   0122A2  8587               	bsf	135,2,b	;volatile
 16501   0122A4                     
 16502                           ; BSR set to: 0
 16503                           ;mcc_generated_files/spi/src/spi1.c: 215:  SPI1CON2 = SPI1CON2 | 0x1 | 0x2;
 16504   0122A4  5186               	movf	134,w,b	;volatile
 16505   0122A6  0903               	iorlw	3
 16506   0122A8  6F86               	movwf	134,b	;volatile
 16507   0122AA                     
 16508                           ; BSR set to: 0
 16509                           ;mcc_generated_files/spi/src/spi1.c: 218:  SPI1TCNTH = 0U;
 16510   0122AA  6B83               	clrf	131,b	;volatile
 16511   0122AC                     
 16512                           ; BSR set to: 0
 16513                           ;mcc_generated_files/spi/src/spi1.c: 219:  SPI1TCNTL = 1U;
 16514   0122AC  0E01               	movlw	1
 16515   0122AE  6F82               	movwf	130,b	;volatile
 16516   0122B0                     
 16517                           ; BSR set to: 0
 16518                           ;mcc_generated_files/spi/src/spi1.c: 221:  SPI1TXB = byteData;
 16519   0122B0  C560  F081         	movff	SPI1_ByteExchange@byteData,129	;volatile
 16520   0122B4                     l102:
 16521                           
 16522                           ;mcc_generated_files/spi/src/spi1.c: 223:  while(!PIR3bits.SPI1RXIF)
 16523   0122B4  A0B1               	btfss	177,0,c	;volatile
 16524   0122B6  EF5F  F091         	goto	u2171
 16525   0122BA  EF61  F091         	goto	u2170
 16526   0122BE                     u2171:
 16527   0122BE  EF5A  F091         	goto	l102
 16528   0122C2                     u2170:
 16529   0122C2                     
 16530                           ;mcc_generated_files/spi/src/spi1.c: 227:  returnValue = SPI1RXB;
 16531   0122C2  C080 F561          	movff	128,SPI1_ByteExchange@returnValue	;volatile
 16532   0122C6                     
 16533                           ;mcc_generated_files/spi/src/spi1.c: 228:  return returnValue;
 16534   0122C6  0105               	movlb	5	; () banked
 16535   0122C8  5161               	movf	SPI1_ByteExchange@returnValue& (0+255),w,b
 16536   0122CA                     
 16537                           ; BSR set to: 5
 16538   0122CA  0012               	return		;funcret
 16539   0122CC                     __end_of_SPI1_ByteExchange:
 16540                           	callstack 0
 16541                           
 16542 ;; *************** function _DELAY_milliseconds *****************
 16543 ;; Defined at:
 16544 ;;		line 37 in file "mcc_generated_files/timer/src/delay.c"
 16545 ;; Parameters:    Size  Location     Type
 16546 ;;  milliseconds    2    0[BANK5 ] unsigned short 
 16547 ;; Auto vars:     Size  Location     Type
 16548 ;;		None
 16549 ;; Return value:  Size  Location     Type
 16550 ;;                  1    wreg      void 
 16551 ;; Registers used:
 16552 ;;		wreg, status,2, status,0
 16553 ;; Tracked objects:
 16554 ;;		On entry : 0/0
 16555 ;;		On exit  : 0/0
 16556 ;;		Unchanged: 0/0
 16557 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16558 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16560 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16561 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16562 ;;Total ram usage:        3 bytes
 16563 ;; Hardware stack levels used: 1
 16564 ;; Hardware stack levels required when called: 7
 16565 ;; This function calls:
 16566 ;;		Nothing
 16567 ;; This function is called by:
 16568 ;;		_init_nrf
 16569 ;;		_Nrf24_isSend
 16570 ;; This function uses a non-reentrant model
 16571 ;;
 16572                           
 16573                           	psect	text47
 16574   012410                     __ptext47:
 16575                           	callstack 0
 16576   012410                     _DELAY_milliseconds:
 16577                           	callstack 118
 16578   012410                     
 16579                           ;mcc_generated_files/timer/src/delay.c: 38:     while(milliseconds--){
 16580   012410  EF13  F092         	goto	l3800
 16581   012414                     l3798:
 16582                           
 16583                           ; BSR set to: 5
 16584                           ;mcc_generated_files/timer/src/delay.c: 39:         _delay((unsigned long)((1)*(64000000
      +                          U/4000.0)));
 16585   012414  0E15               	movlw	21
 16586   012416  0105               	movlb	5	; () banked
 16587   012418  6F62               	movwf	??_DELAY_milliseconds& (0+255),b
 16588   01241A  0EC6               	movlw	198
 16589   01241C                     u3217:
 16590   01241C  2EE8               	decfsz	wreg,f,c
 16591   01241E  D7FE               	bra	u3217
 16592   012420  2F62               	decfsz	??_DELAY_milliseconds& (0+255),f,b
 16593   012422  D7FC               	bra	u3217
 16594   012424  0000               	nop	
 16595   012426                     l3800:
 16596                           
 16597                           ;mcc_generated_files/timer/src/delay.c: 38:     while(milliseconds--){
 16598   012426  0105               	movlb	5	; () banked
 16599   012428  0760               	decf	DELAY_milliseconds@milliseconds& (0+255),f,b
 16600   01242A  A0D8               	btfss	status,0,c
 16601   01242C  0761               	decf	(DELAY_milliseconds@milliseconds+1)& (0+255),f,b
 16602   01242E  2960               	incf	DELAY_milliseconds@milliseconds& (0+255),w,b
 16603   012430  E106               	bnz	u2721
 16604   012432  2961               	incf	(DELAY_milliseconds@milliseconds+1)& (0+255),w,b
 16605   012434  A4D8               	btfss	status,2,c
 16606   012436  EF1F  F092         	goto	u2721
 16607   01243A  EF21  F092         	goto	u2720
 16608   01243E                     u2721:
 16609   01243E  EF0A  F092         	goto	l3798
 16610   012442                     u2720:
 16611   012442                     
 16612                           ; BSR set to: 5
 16613   012442  0012               	return		;funcret
 16614   012444                     __end_of_DELAY_milliseconds:
 16615                           	callstack 0
 16616                           
 16617 ;; *************** function _SYSTEM_Initialize *****************
 16618 ;; Defined at:
 16619 ;;		line 38 in file "mcc_generated_files/system/src/system.c"
 16620 ;; Parameters:    Size  Location     Type
 16621 ;;		None
 16622 ;; Auto vars:     Size  Location     Type
 16623 ;;		None
 16624 ;; Return value:  Size  Location     Type
 16625 ;;                  1    wreg      void 
 16626 ;; Registers used:
 16627 ;;		wreg, status,2, status,0, cstack
 16628 ;; Tracked objects:
 16629 ;;		On entry : 0/0
 16630 ;;		On exit  : 0/0
 16631 ;;		Unchanged: 0/0
 16632 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16637 ;;Total ram usage:        0 bytes
 16638 ;; Hardware stack levels used: 1
 16639 ;; Hardware stack levels required when called: 9
 16640 ;; This function calls:
 16641 ;;		_CLOCK_Initialize
 16642 ;;		_INTERRUPT_Initialize
 16643 ;;		_PIN_MANAGER_Initialize
 16644 ;;		_SPI1_Initialize
 16645 ;; This function is called by:
 16646 ;;		_main
 16647 ;; This function uses a non-reentrant model
 16648 ;;
 16649                           
 16650                           	psect	text48
 16651   012790                     __ptext48:
 16652                           	callstack 0
 16653   012790                     _SYSTEM_Initialize:
 16654                           	callstack 117
 16655   012790                     
 16656                           ;mcc_generated_files/system/src/system.c: 40:     CLOCK_Initialize();
 16657   012790  ECBE  F093         	call	_CLOCK_Initialize	;wreg free
 16658                           
 16659                           ;mcc_generated_files/system/src/system.c: 41:     PIN_MANAGER_Initialize();
 16660   012794  EC03  F08E         	call	_PIN_MANAGER_Initialize	;wreg free
 16661                           
 16662                           ;mcc_generated_files/system/src/system.c: 42:     SPI1_Initialize();
 16663   012798  EC90  F093         	call	_SPI1_Initialize	;wreg free
 16664   01279C                     
 16665                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
 16666   01279C  ECD3  F091         	call	_INTERRUPT_Initialize	;wreg free
 16667   0127A0  0012               	return		;funcret
 16668   0127A2                     __end_of_SYSTEM_Initialize:
 16669                           	callstack 0
 16670                           
 16671 ;; *************** function _SPI1_Initialize *****************
 16672 ;; Defined at:
 16673 ;;		line 68 in file "mcc_generated_files/spi/src/spi1.c"
 16674 ;; Parameters:    Size  Location     Type
 16675 ;;		None
 16676 ;; Auto vars:     Size  Location     Type
 16677 ;;		None
 16678 ;; Return value:  Size  Location     Type
 16679 ;;                  1    wreg      void 
 16680 ;; Registers used:
 16681 ;;		wreg, status,2
 16682 ;; Tracked objects:
 16683 ;;		On entry : 0/0
 16684 ;;		On exit  : 0/0
 16685 ;;		Unchanged: 0/0
 16686 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16691 ;;Total ram usage:        0 bytes
 16692 ;; Hardware stack levels used: 1
 16693 ;; Hardware stack levels required when called: 7
 16694 ;; This function calls:
 16695 ;;		Nothing
 16696 ;; This function is called by:
 16697 ;;		_SYSTEM_Initialize
 16698 ;; This function uses a non-reentrant model
 16699 ;;
 16700                           
 16701                           	psect	text49
 16702   012720                     __ptext49:
 16703                           	callstack 0
 16704   012720                     _SPI1_Initialize:
 16705                           	callstack 118
 16706   012720                     
 16707                           ;mcc_generated_files/spi/src/spi1.c: 71:     PIE3bits.SPI1IE = 0U;
 16708   012720  94A1               	bcf	161,2,c	;volatile
 16709                           
 16710                           ;mcc_generated_files/spi/src/spi1.c: 72:     PIE3bits.SPI1TXIE = 0U;
 16711   012722  92A1               	bcf	161,1,c	;volatile
 16712                           
 16713                           ;mcc_generated_files/spi/src/spi1.c: 73:     PIE3bits.SPI1RXIE = 0U;
 16714   012724  90A1               	bcf	161,0,c	;volatile
 16715                           
 16716                           ;mcc_generated_files/spi/src/spi1.c: 76:     SPI1CON0 = 0x0;
 16717   012726  0100               	movlb	0	; () banked
 16718   012728  6B84               	clrf	132,b	;volatile
 16719   01272A                     
 16720                           ; BSR set to: 0
 16721                           ;mcc_generated_files/spi/src/spi1.c: 77:     SPI1CON1 = 0x4;
 16722   01272A  0E04               	movlw	4
 16723   01272C  6F85               	movwf	133,b	;volatile
 16724   01272E                     
 16725                           ; BSR set to: 0
 16726                           ;mcc_generated_files/spi/src/spi1.c: 78:     SPI1CON2 = 0x0;
 16727   01272E  6B86               	clrf	134,b	;volatile
 16728   012730                     
 16729                           ; BSR set to: 0
 16730                           ;mcc_generated_files/spi/src/spi1.c: 79:     SPI1BAUD = 0x0;
 16731   012730  6B89               	clrf	137,b	;volatile
 16732   012732                     
 16733                           ; BSR set to: 0
 16734                           ;mcc_generated_files/spi/src/spi1.c: 80:     SPI1CLK = 0x0;
 16735   012732  6B8C               	clrf	140,b	;volatile
 16736   012734                     
 16737                           ; BSR set to: 0
 16738                           ;mcc_generated_files/spi/src/spi1.c: 81:  SPI1STATUSbits.CLRBF = 1U;
 16739   012734  8587               	bsf	135,2,b	;volatile
 16740   012736                     
 16741                           ; BSR set to: 0
 16742   012736  0012               	return		;funcret
 16743   012738                     __end_of_SPI1_Initialize:
 16744                           	callstack 0
 16745                           
 16746 ;; *************** function _PIN_MANAGER_Initialize *****************
 16747 ;; Defined at:
 16748 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 16749 ;; Parameters:    Size  Location     Type
 16750 ;;		None
 16751 ;; Auto vars:     Size  Location     Type
 16752 ;;		None
 16753 ;; Return value:  Size  Location     Type
 16754 ;;                  1    wreg      void 
 16755 ;; Registers used:
 16756 ;;		wreg, status,2
 16757 ;; Tracked objects:
 16758 ;;		On entry : 0/0
 16759 ;;		On exit  : 0/0
 16760 ;;		Unchanged: 0/0
 16761 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16766 ;;Total ram usage:        0 bytes
 16767 ;; Hardware stack levels used: 1
 16768 ;; Hardware stack levels required when called: 7
 16769 ;; This function calls:
 16770 ;;		Nothing
 16771 ;; This function is called by:
 16772 ;;		_SYSTEM_Initialize
 16773 ;; This function uses a non-reentrant model
 16774 ;;
 16775                           
 16776                           	psect	text50
 16777   011C06                     __ptext50:
 16778                           	callstack 0
 16779   011C06                     _PIN_MANAGER_Initialize:
 16780                           	callstack 118
 16781   011C06                     
 16782                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 16783   011C06  6ABE               	clrf	190,c	;volatile
 16784                           
 16785                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 16786   011C08  6ABF               	clrf	191,c	;volatile
 16787                           
 16788                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 16789   011C0A  6AC0               	clrf	192,c	;volatile
 16790                           
 16791                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
 16792   011C0C  6AC1               	clrf	193,c	;volatile
 16793                           
 16794                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
 16795   011C0E  6AC2               	clrf	194,c	;volatile
 16796                           
 16797                           ;mcc_generated_files/system/src/pins.c: 48:     LATF = 0x0;
 16798   011C10  6AC3               	clrf	195,c	;volatile
 16799                           
 16800                           ;mcc_generated_files/system/src/pins.c: 52:     ODCONA = 0x0;
 16801   011C12  0104               	movlb	4	; () banked
 16802   011C14  6B02               	clrf	2,b	;volatile
 16803                           
 16804                           ;mcc_generated_files/system/src/pins.c: 53:     ODCONB = 0x0;
 16805   011C16  6B0A               	clrf	10,b	;volatile
 16806                           
 16807                           ;mcc_generated_files/system/src/pins.c: 54:     ODCONC = 0x0;
 16808   011C18  6B12               	clrf	18,b	;volatile
 16809                           
 16810                           ;mcc_generated_files/system/src/pins.c: 55:     ODCOND = 0x0;
 16811   011C1A  6B1A               	clrf	26,b	;volatile
 16812                           
 16813                           ;mcc_generated_files/system/src/pins.c: 56:     ODCONE = 0x0;
 16814   011C1C  6B22               	clrf	34,b	;volatile
 16815                           
 16816                           ;mcc_generated_files/system/src/pins.c: 57:     ODCONF = 0x0;
 16817   011C1E  6B2A               	clrf	42,b	;volatile
 16818   011C20                     
 16819                           ; BSR set to: 4
 16820                           ;mcc_generated_files/system/src/pins.c: 62:     TRISA = 0xFE;
 16821   011C20  0EFE               	movlw	254
 16822   011C22  6EC6               	movwf	198,c	;volatile
 16823   011C24                     
 16824                           ; BSR set to: 4
 16825                           ;mcc_generated_files/system/src/pins.c: 63:     TRISB = 0xFF;
 16826   011C24  68C7               	setf	199,c	;volatile
 16827                           
 16828                           ;mcc_generated_files/system/src/pins.c: 64:     TRISC = 0x6B;
 16829   011C26  0E6B               	movlw	107
 16830   011C28  6EC8               	movwf	200,c	;volatile
 16831   011C2A                     
 16832                           ; BSR set to: 4
 16833                           ;mcc_generated_files/system/src/pins.c: 65:     TRISD = 0xFF;
 16834   011C2A  68C9               	setf	201,c	;volatile
 16835                           
 16836                           ;mcc_generated_files/system/src/pins.c: 66:     TRISE = 0xF;
 16837   011C2C  0E0F               	movlw	15
 16838   011C2E  6ECA               	movwf	202,c	;volatile
 16839                           
 16840                           ;mcc_generated_files/system/src/pins.c: 67:     TRISF = 0xF7;
 16841   011C30  0EF7               	movlw	247
 16842   011C32  6ECB               	movwf	203,c	;volatile
 16843                           
 16844                           ;mcc_generated_files/system/src/pins.c: 72:     ANSELA = 0xFE;
 16845   011C34  0EFE               	movlw	254
 16846   011C36  6F00               	movwf	0,b	;volatile
 16847   011C38                     
 16848                           ; BSR set to: 4
 16849                           ;mcc_generated_files/system/src/pins.c: 73:     ANSELB = 0xFF;
 16850   011C38  6908               	setf	8,b	;volatile
 16851                           
 16852                           ;mcc_generated_files/system/src/pins.c: 74:     ANSELC = 0x3;
 16853   011C3A  0E03               	movlw	3
 16854   011C3C  6F10               	movwf	16,b	;volatile
 16855   011C3E                     
 16856                           ; BSR set to: 4
 16857                           ;mcc_generated_files/system/src/pins.c: 75:     ANSELD = 0xFF;
 16858   011C3E  6918               	setf	24,b	;volatile
 16859                           
 16860                           ;mcc_generated_files/system/src/pins.c: 76:     ANSELE = 0x7;
 16861   011C40  0E07               	movlw	7
 16862   011C42  6F20               	movwf	32,b	;volatile
 16863                           
 16864                           ;mcc_generated_files/system/src/pins.c: 77:     ANSELF = 0xF7;
 16865   011C44  0EF7               	movlw	247
 16866   011C46  6F28               	movwf	40,b	;volatile
 16867   011C48                     
 16868                           ; BSR set to: 4
 16869                           ;mcc_generated_files/system/src/pins.c: 82:     WPUA = 0x0;
 16870   011C48  6B01               	clrf	1,b	;volatile
 16871   011C4A                     
 16872                           ; BSR set to: 4
 16873                           ;mcc_generated_files/system/src/pins.c: 83:     WPUB = 0x0;
 16874   011C4A  6B09               	clrf	9,b	;volatile
 16875   011C4C                     
 16876                           ; BSR set to: 4
 16877                           ;mcc_generated_files/system/src/pins.c: 84:     WPUC = 0x0;
 16878   011C4C  6B11               	clrf	17,b	;volatile
 16879   011C4E                     
 16880                           ; BSR set to: 4
 16881                           ;mcc_generated_files/system/src/pins.c: 85:     WPUD = 0x0;
 16882   011C4E  6B19               	clrf	25,b	;volatile
 16883   011C50                     
 16884                           ; BSR set to: 4
 16885                           ;mcc_generated_files/system/src/pins.c: 86:     WPUE = 0x0;
 16886   011C50  6B21               	clrf	33,b	;volatile
 16887   011C52                     
 16888                           ; BSR set to: 4
 16889                           ;mcc_generated_files/system/src/pins.c: 87:     WPUF = 0x0;
 16890   011C52  6B29               	clrf	41,b	;volatile
 16891   011C54                     
 16892                           ; BSR set to: 4
 16893                           ;mcc_generated_files/system/src/pins.c: 93:     SLRCONA = 0xFF;
 16894   011C54  6903               	setf	3,b	;volatile
 16895   011C56                     
 16896                           ; BSR set to: 4
 16897                           ;mcc_generated_files/system/src/pins.c: 94:     SLRCONB = 0xFF;
 16898   011C56  690B               	setf	11,b	;volatile
 16899   011C58                     
 16900                           ; BSR set to: 4
 16901                           ;mcc_generated_files/system/src/pins.c: 95:     SLRCONC = 0xFF;
 16902   011C58  6913               	setf	19,b	;volatile
 16903   011C5A                     
 16904                           ; BSR set to: 4
 16905                           ;mcc_generated_files/system/src/pins.c: 96:     SLRCOND = 0xFF;
 16906   011C5A  691B               	setf	27,b	;volatile
 16907                           
 16908                           ;mcc_generated_files/system/src/pins.c: 97:     SLRCONE = 0x7;
 16909   011C5C  0E07               	movlw	7
 16910   011C5E  6F23               	movwf	35,b	;volatile
 16911   011C60                     
 16912                           ; BSR set to: 4
 16913                           ;mcc_generated_files/system/src/pins.c: 98:     SLRCONF = 0xFF;
 16914   011C60  692B               	setf	43,b	;volatile
 16915   011C62                     
 16916                           ; BSR set to: 4
 16917                           ;mcc_generated_files/system/src/pins.c: 103:     INLVLA = 0xFF;
 16918   011C62  6904               	setf	4,b	;volatile
 16919   011C64                     
 16920                           ; BSR set to: 4
 16921                           ;mcc_generated_files/system/src/pins.c: 104:     INLVLB = 0xFF;
 16922   011C64  690C               	setf	12,b	;volatile
 16923   011C66                     
 16924                           ; BSR set to: 4
 16925                           ;mcc_generated_files/system/src/pins.c: 105:     INLVLC = 0xFF;
 16926   011C66  6914               	setf	20,b	;volatile
 16927   011C68                     
 16928                           ; BSR set to: 4
 16929                           ;mcc_generated_files/system/src/pins.c: 106:     INLVLD = 0xFF;
 16930   011C68  691C               	setf	28,b	;volatile
 16931                           
 16932                           ;mcc_generated_files/system/src/pins.c: 107:     INLVLE = 0xF;
 16933   011C6A  0E0F               	movlw	15
 16934   011C6C  6F24               	movwf	36,b	;volatile
 16935   011C6E                     
 16936                           ; BSR set to: 4
 16937                           ;mcc_generated_files/system/src/pins.c: 108:     INLVLF = 0xFF;
 16938   011C6E  692C               	setf	44,b	;volatile
 16939   011C70                     
 16940                           ; BSR set to: 4
 16941                           ;mcc_generated_files/system/src/pins.c: 113:     RB1I2C = 0x0;
 16942   011C70  0102               	movlb	2	; () banked
 16943   011C72  6B89               	clrf	137,b	;volatile
 16944   011C74                     
 16945                           ; BSR set to: 2
 16946                           ;mcc_generated_files/system/src/pins.c: 114:     RB2I2C = 0x0;
 16947   011C74  6B88               	clrf	136,b	;volatile
 16948   011C76                     
 16949                           ; BSR set to: 2
 16950                           ;mcc_generated_files/system/src/pins.c: 115:     RC3I2C = 0x0;
 16951   011C76  6B87               	clrf	135,b	;volatile
 16952   011C78                     
 16953                           ; BSR set to: 2
 16954                           ;mcc_generated_files/system/src/pins.c: 116:     RC4I2C = 0x0;
 16955   011C78  6B86               	clrf	134,b	;volatile
 16956                           
 16957                           ;mcc_generated_files/system/src/pins.c: 120:     SPI1SDIPPS = 0x15;
 16958   011C7A  0E15               	movlw	21
 16959   011C7C  6F6B               	movwf	107,b	;volatile
 16960                           
 16961                           ;mcc_generated_files/system/src/pins.c: 121:     RC4PPS = 0x32;
 16962   011C7E  0E32               	movlw	50
 16963   011C80  6F15               	movwf	21,b	;volatile
 16964                           
 16965                           ;mcc_generated_files/system/src/pins.c: 122:     SPI1SCKPPS = 0x13;
 16966   011C82  0E13               	movlw	19
 16967   011C84  6F6A               	movwf	106,b	;volatile
 16968                           
 16969                           ;mcc_generated_files/system/src/pins.c: 123:     RC3PPS = 0x31;
 16970   011C86  0E31               	movlw	49
 16971   011C88  6F14               	movwf	20,b	;volatile
 16972   011C8A                     
 16973                           ; BSR set to: 2
 16974                           ;mcc_generated_files/system/src/pins.c: 128:     IOCAP = 0x0;
 16975   011C8A  0104               	movlb	4	; () banked
 16976   011C8C  6B05               	clrf	5,b	;volatile
 16977   011C8E                     
 16978                           ; BSR set to: 4
 16979                           ;mcc_generated_files/system/src/pins.c: 129:     IOCAN = 0x0;
 16980   011C8E  6B06               	clrf	6,b	;volatile
 16981   011C90                     
 16982                           ; BSR set to: 4
 16983                           ;mcc_generated_files/system/src/pins.c: 130:     IOCAF = 0x0;
 16984   011C90  6B07               	clrf	7,b	;volatile
 16985   011C92                     
 16986                           ; BSR set to: 4
 16987                           ;mcc_generated_files/system/src/pins.c: 131:     IOCBP = 0x0;
 16988   011C92  6B0D               	clrf	13,b	;volatile
 16989   011C94                     
 16990                           ; BSR set to: 4
 16991                           ;mcc_generated_files/system/src/pins.c: 132:     IOCBN = 0x0;
 16992   011C94  6B0E               	clrf	14,b	;volatile
 16993   011C96                     
 16994                           ; BSR set to: 4
 16995                           ;mcc_generated_files/system/src/pins.c: 133:     IOCBF = 0x0;
 16996   011C96  6B0F               	clrf	15,b	;volatile
 16997   011C98                     
 16998                           ; BSR set to: 4
 16999                           ;mcc_generated_files/system/src/pins.c: 134:     IOCCP = 0x0;
 17000   011C98  6B15               	clrf	21,b	;volatile
 17001   011C9A                     
 17002                           ; BSR set to: 4
 17003                           ;mcc_generated_files/system/src/pins.c: 135:     IOCCN = 0x0;
 17004   011C9A  6B16               	clrf	22,b	;volatile
 17005   011C9C                     
 17006                           ; BSR set to: 4
 17007                           ;mcc_generated_files/system/src/pins.c: 136:     IOCCF = 0x0;
 17008   011C9C  6B17               	clrf	23,b	;volatile
 17009   011C9E                     
 17010                           ; BSR set to: 4
 17011                           ;mcc_generated_files/system/src/pins.c: 137:     IOCEP = 0x0;
 17012   011C9E  6B25               	clrf	37,b	;volatile
 17013   011CA0                     
 17014                           ; BSR set to: 4
 17015                           ;mcc_generated_files/system/src/pins.c: 138:     IOCEN = 0x0;
 17016   011CA0  6B26               	clrf	38,b	;volatile
 17017   011CA2                     
 17018                           ; BSR set to: 4
 17019                           ;mcc_generated_files/system/src/pins.c: 139:     IOCEF = 0x0;
 17020   011CA2  6B27               	clrf	39,b	;volatile
 17021   011CA4                     
 17022                           ; BSR set to: 4
 17023   011CA4  0012               	return		;funcret
 17024   011CA6                     __end_of_PIN_MANAGER_Initialize:
 17025                           	callstack 0
 17026                           
 17027 ;; *************** function _INTERRUPT_Initialize *****************
 17028 ;; Defined at:
 17029 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
 17030 ;; Parameters:    Size  Location     Type
 17031 ;;		None
 17032 ;; Auto vars:     Size  Location     Type
 17033 ;;		None
 17034 ;; Return value:  Size  Location     Type
 17035 ;;                  1    wreg      void 
 17036 ;; Registers used:
 17037 ;;		wreg, status,2, status,0, cstack
 17038 ;; Tracked objects:
 17039 ;;		On entry : 0/0
 17040 ;;		On exit  : 0/0
 17041 ;;		Unchanged: 0/0
 17042 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17047 ;;Total ram usage:        0 bytes
 17048 ;; Hardware stack levels used: 1
 17049 ;; Hardware stack levels required when called: 8
 17050 ;; This function calls:
 17051 ;;		_INT1_SetInterruptHandler
 17052 ;;		_INT2_SetInterruptHandler
 17053 ;; This function is called by:
 17054 ;;		_SYSTEM_Initialize
 17055 ;; This function uses a non-reentrant model
 17056 ;;
 17057                           
 17058                           	psect	text51
 17059   0123A6                     __ptext51:
 17060                           	callstack 0
 17061   0123A6                     _INTERRUPT_Initialize:
 17062                           	callstack 117
 17063   0123A6                     
 17064                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
 17065   0123A6  9AD6               	bcf	214,5,c	;volatile
 17066                           
 17067                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
 17068   0123A8  90AF               	bcf	175,0,c	;volatile
 17069                           
 17070                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 0);
 17071   0123AA  90D6               	bcf	214,0,c	;volatile
 17072                           
 17073                           ;mcc_generated_files/system/src/interrupt.c: 53:     (PIE1bits.INT0IE = 1);
 17074   0123AC  809F               	bsf	159,0,c	;volatile
 17075                           
 17076                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR6bits.INT1IF = 0);
 17077   0123AE  90B4               	bcf	180,0,c	;volatile
 17078                           
 17079                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
 17080   0123B0  82D6               	bsf	214,1,c	;volatile
 17081   0123B2                     
 17082                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
 17083   0123B2  0E00               	movlw	0
 17084   0123B4  0105               	movlb	5	; () banked
 17085   0123B6  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 17086   0123B8  0E00               	movlw	0
 17087   0123BA  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17088   0123BC  0E00               	movlw	0
 17089   0123BE  6F62               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 17090   0123C0  ECD8  F093         	call	_INT1_SetInterruptHandler	;wreg free
 17091   0123C4                     
 17092                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR10bits.INT2IF = 0);
 17093   0123C4  90B8               	bcf	184,0,c	;volatile
 17094   0123C6                     
 17095                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
 17096   0123C6  84D6               	bsf	214,2,c	;volatile
 17097                           
 17098                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
 17099   0123C8  0E00               	movlw	0
 17100   0123CA  0105               	movlb	5	; () banked
 17101   0123CC  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 17102   0123CE  0E00               	movlw	0
 17103   0123D0  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17104   0123D2  0E00               	movlw	0
 17105   0123D4  6F62               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 17106   0123D6  ECD1  F093         	call	_INT2_SetInterruptHandler	;wreg free
 17107   0123DA  0012               	return		;funcret
 17108   0123DC                     __end_of_INTERRUPT_Initialize:
 17109                           	callstack 0
 17110                           
 17111 ;; *************** function _INT2_SetInterruptHandler *****************
 17112 ;; Defined at:
 17113 ;;		line 181 in file "mcc_generated_files/system/src/interrupt.c"
 17114 ;; Parameters:    Size  Location     Type
 17115 ;;  InterruptHan    3    0[BANK5 ] PTR FTN()void 
 17116 ;;		 -> INT2_DefaultInterruptHandler(1), 
 17117 ;; Auto vars:     Size  Location     Type
 17118 ;;		None
 17119 ;; Return value:  Size  Location     Type
 17120 ;;                  1    wreg      void 
 17121 ;; Registers used:
 17122 ;;		wreg, status,2, status,0
 17123 ;; Tracked objects:
 17124 ;;		On entry : 0/0
 17125 ;;		On exit  : 0/0
 17126 ;;		Unchanged: 0/0
 17127 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17128 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17131 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17132 ;;Total ram usage:        3 bytes
 17133 ;; Hardware stack levels used: 1
 17134 ;; Hardware stack levels required when called: 7
 17135 ;; This function calls:
 17136 ;;		Nothing
 17137 ;; This function is called by:
 17138 ;;		_INTERRUPT_Initialize
 17139 ;; This function uses a non-reentrant model
 17140 ;;
 17141                           
 17142                           	psect	text52
 17143   0127A2                     __ptext52:
 17144                           	callstack 0
 17145   0127A2                     _INT2_SetInterruptHandler:
 17146                           	callstack 117
 17147   0127A2                     
 17148                           ;mcc_generated_files/system/src/interrupt.c: 182:     INT2_InterruptHandler = InterruptH
      +                          andler;
 17149   0127A2  C560  F542         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 17150   0127A6  C561  F543         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 17151   0127AA  C562  F544         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
 17152   0127AE  0012               	return		;funcret
 17153   0127B0                     __end_of_INT2_SetInterruptHandler:
 17154                           	callstack 0
 17155                           
 17156 ;; *************** function _INT1_SetInterruptHandler *****************
 17157 ;; Defined at:
 17158 ;;		line 155 in file "mcc_generated_files/system/src/interrupt.c"
 17159 ;; Parameters:    Size  Location     Type
 17160 ;;  InterruptHan    3    0[BANK5 ] PTR FTN()void 
 17161 ;;		 -> INT1_DefaultInterruptHandler(1), 
 17162 ;; Auto vars:     Size  Location     Type
 17163 ;;		None
 17164 ;; Return value:  Size  Location     Type
 17165 ;;                  1    wreg      void 
 17166 ;; Registers used:
 17167 ;;		wreg, status,2, status,0
 17168 ;; Tracked objects:
 17169 ;;		On entry : 0/0
 17170 ;;		On exit  : 0/0
 17171 ;;		Unchanged: 0/0
 17172 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17173 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17176 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17177 ;;Total ram usage:        3 bytes
 17178 ;; Hardware stack levels used: 1
 17179 ;; Hardware stack levels required when called: 7
 17180 ;; This function calls:
 17181 ;;		Nothing
 17182 ;; This function is called by:
 17183 ;;		_INTERRUPT_Initialize
 17184 ;; This function uses a non-reentrant model
 17185 ;;
 17186                           
 17187                           	psect	text53
 17188   0127B0                     __ptext53:
 17189                           	callstack 0
 17190   0127B0                     _INT1_SetInterruptHandler:
 17191                           	callstack 117
 17192   0127B0                     
 17193                           ;mcc_generated_files/system/src/interrupt.c: 156:     INT1_InterruptHandler = InterruptH
      +                          andler;
 17194   0127B0  C560  F545         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 17195   0127B4  C561  F546         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 17196   0127B8  C562  F547         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
 17197   0127BC  0012               	return		;funcret
 17198   0127BE                     __end_of_INT1_SetInterruptHandler:
 17199                           	callstack 0
 17200                           
 17201 ;; *************** function _CLOCK_Initialize *****************
 17202 ;; Defined at:
 17203 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 17204 ;; Parameters:    Size  Location     Type
 17205 ;;		None
 17206 ;; Auto vars:     Size  Location     Type
 17207 ;;		None
 17208 ;; Return value:  Size  Location     Type
 17209 ;;                  1    wreg      void 
 17210 ;; Registers used:
 17211 ;;		wreg, status,2
 17212 ;; Tracked objects:
 17213 ;;		On entry : 0/0
 17214 ;;		On exit  : 0/0
 17215 ;;		Unchanged: 0/0
 17216 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17221 ;;Total ram usage:        0 bytes
 17222 ;; Hardware stack levels used: 1
 17223 ;; Hardware stack levels required when called: 7
 17224 ;; This function calls:
 17225 ;;		Nothing
 17226 ;; This function is called by:
 17227 ;;		_SYSTEM_Initialize
 17228 ;; This function uses a non-reentrant model
 17229 ;;
 17230                           
 17231                           	psect	text54
 17232   01277C                     __ptext54:
 17233                           	callstack 0
 17234   01277C                     _CLOCK_Initialize:
 17235                           	callstack 118
 17236   01277C                     
 17237                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 17238   01277C  0E60               	movlw	96
 17239   01277E  0100               	movlb	0	; () banked
 17240   012780  6FAD               	movwf	173,b	;volatile
 17241   012782                     
 17242                           ; BSR set to: 0
 17243                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 17244   012782  6BAF               	clrf	175,b	;volatile
 17245   012784                     
 17246                           ; BSR set to: 0
 17247                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 17248   012784  6BB3               	clrf	179,b	;volatile
 17249                           
 17250                           ;mcc_generated_files/system/src/clock.c: 53:     OSCFRQ = (8 << 0x0);
 17251   012786  0E08               	movlw	8
 17252   012788  6FB1               	movwf	177,b	;volatile
 17253   01278A                     
 17254                           ; BSR set to: 0
 17255                           ;mcc_generated_files/system/src/clock.c: 54:     OSCTUNE = (0 << 0x0);
 17256   01278A  6BB0               	clrf	176,b	;volatile
 17257   01278C                     
 17258                           ; BSR set to: 0
 17259                           ;mcc_generated_files/system/src/clock.c: 55:     ACTCON = (0 << 0x7)
 17260   01278C  6BAC               	clrf	172,b	;volatile
 17261   01278E                     
 17262                           ; BSR set to: 0
 17263   01278E  0012               	return		;funcret
 17264   012790                     __end_of_CLOCK_Initialize:
 17265                           	callstack 0
 17266                           
 17267 ;; *************** function _RC6_SetInterruptHandler *****************
 17268 ;; Defined at:
 17269 ;;		line 106 in file "mcc_generated_files/system/src/interrupt.c"
 17270 ;; Parameters:    Size  Location     Type
 17271 ;;  InterruptHan    3    0[BANK5 ] PTR FTN()void 
 17272 ;;		 -> nrf_interrupt(1), 
 17273 ;; Auto vars:     Size  Location     Type
 17274 ;;		None
 17275 ;; Return value:  Size  Location     Type
 17276 ;;                  1    wreg      void 
 17277 ;; Registers used:
 17278 ;;		wreg, status,2, status,0
 17279 ;; Tracked objects:
 17280 ;;		On entry : 0/0
 17281 ;;		On exit  : 0/0
 17282 ;;		Unchanged: 0/0
 17283 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17284 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17287 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17288 ;;Total ram usage:        3 bytes
 17289 ;; Hardware stack levels used: 1
 17290 ;; Hardware stack levels required when called: 7
 17291 ;; This function calls:
 17292 ;;		Nothing
 17293 ;; This function is called by:
 17294 ;;		_main
 17295 ;; This function uses a non-reentrant model
 17296 ;;
 17297                           
 17298                           	psect	text55
 17299   0127BE                     __ptext55:
 17300                           	callstack 0
 17301   0127BE                     _RC6_SetInterruptHandler:
 17302                           	callstack 119
 17303   0127BE                     
 17304                           ;mcc_generated_files/system/src/interrupt.c: 107:     RC6_InterruptHandler = InterruptHa
      +                          ndler;
 17305   0127BE  C560  F548         	movff	RC6_SetInterruptHandler@InterruptHandler,_RC6_InterruptHandler
 17306   0127C2  C561  F549         	movff	RC6_SetInterruptHandler@InterruptHandler+1,_RC6_InterruptHandler+1
 17307   0127C6  C562  F54A         	movff	RC6_SetInterruptHandler@InterruptHandler+2,_RC6_InterruptHandler+2
 17308   0127CA  0012               	return		;funcret
 17309   0127CC                     __end_of_RC6_SetInterruptHandler:
 17310                           	callstack 0
 17311                           
 17312 ;; *************** function _INTERRUPT_InterruptManager *****************
 17313 ;; Defined at:
 17314 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
 17315 ;; Parameters:    Size  Location     Type
 17316 ;;		None
 17317 ;; Auto vars:     Size  Location     Type
 17318 ;;		None
 17319 ;; Return value:  Size  Location     Type
 17320 ;;                  1    wreg      void 
 17321 ;; Registers used:
 17322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 17323 ;; Tracked objects:
 17324 ;;		On entry : 0/0
 17325 ;;		On exit  : 0/0
 17326 ;;		Unchanged: 0/0
 17327 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17332 ;;Total ram usage:        2 bytes
 17333 ;; Hardware stack levels used: 1
 17334 ;; Hardware stack levels required when called: 6
 17335 ;; This function calls:
 17336 ;;		NULL
 17337 ;;		_TMR0_OverflowISR
 17338 ;;		_nrf_interrupt
 17339 ;; This function is called by:
 17340 ;;		Interrupt level 2
 17341 ;; This function uses a non-reentrant model
 17342 ;;
 17343                           
 17344                           	psect	text56
 17345   011D44                     __ptext56:
 17346                           	callstack 0
 17347   011D44                     _INTERRUPT_InterruptManager:
 17348                           	callstack 109
 17349                           
 17350                           ;incstack = 0
 17351   011D44  C4FA F535          	movff	pclath,??_INTERRUPT_InterruptManager
 17352   011D48  C4FB F536          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 17353   011D4C                     
 17354                           ;mcc_generated_files/system/src/interrupt.c: 83:     if (PIE3bits.TMR0IE == 1 && PIR3bit
      +                          s.TMR0IF == 1)
 17355   011D4C  AEA1               	btfss	161,7,c	;volatile
 17356   011D4E  EFAB  F08E         	goto	i2u294_41
 17357   011D52  EFAD  F08E         	goto	i2u294_40
 17358   011D56                     i2u294_41:
 17359   011D56  EFB6  F08E         	goto	i2l319
 17360   011D5A                     i2u294_40:
 17361   011D5A  AEB1               	btfss	177,7,c	;volatile
 17362   011D5C  EFB2  F08E         	goto	i2u295_41
 17363   011D60  EFB4  F08E         	goto	i2u295_40
 17364   011D64                     i2u295_41:
 17365   011D64  EFB6  F08E         	goto	i2l319
 17366   011D68                     i2u295_40:
 17367   011D68                     
 17368                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         TMR0_OverflowISR();
 17369   011D68  EC55  F092         	call	_TMR0_OverflowISR	;wreg free
 17370   011D6C                     i2l319:
 17371                           
 17372                           ;mcc_generated_files/system/src/interrupt.c: 92:     if (PIE0bits.IOCIE == 1 && PIR0bits
      +                          .IOCIF == 1)
 17373   011D6C  AE9E               	btfss	158,7,c	;volatile
 17374   011D6E  EFBB  F08E         	goto	i2u296_41
 17375   011D72  EFBD  F08E         	goto	i2u296_40
 17376   011D76                     i2u296_41:
 17377   011D76  EFE4  F08E         	goto	i2l323
 17378   011D7A                     i2u296_40:
 17379   011D7A  AEAE               	btfss	174,7,c	;volatile
 17380   011D7C  EFC2  F08E         	goto	i2u297_41
 17381   011D80  EFC4  F08E         	goto	i2u297_40
 17382   011D84                     i2u297_41:
 17383   011D84  EFE4  F08E         	goto	i2l323
 17384   011D88                     i2u297_40:
 17385   011D88                     
 17386                           ;mcc_generated_files/system/src/interrupt.c: 93:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 94:         if (IOCCFbits.IOCCF6 == 1)
 17387   011D88  0104               	movlb	4	; () banked
 17388   011D8A  AD17               	btfss	23,6,b	;volatile
 17389   011D8C  EFCA  F08E         	goto	i2u298_41
 17390   011D90  EFCC  F08E         	goto	i2u298_40
 17391   011D94                     i2u298_41:
 17392   011D94  EFE4  F08E         	goto	i2l323
 17393   011D98                     i2u298_40:
 17394   011D98                     
 17395                           ; BSR set to: 4
 17396                           ;mcc_generated_files/system/src/interrupt.c: 95:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 96:             IOCCFbits.IOCCF6 = 0;
 17397   011D98  9D17               	bcf	23,6,b	;volatile
 17398   011D9A                     
 17399                           ; BSR set to: 4
 17400                           ;mcc_generated_files/system/src/interrupt.c: 99:             if (RC6_InterruptHandler)
 17401   011D9A  5048               	movf	_RC6_InterruptHandler^(0+1280),w,c
 17402   011D9C  1049               	iorwf	(_RC6_InterruptHandler+1)^(0+1280),w,c
 17403   011D9E  104A               	iorwf	(_RC6_InterruptHandler+2)^(0+1280),w,c
 17404   011DA0  B4D8               	btfsc	status,2,c
 17405   011DA2  EFD5  F08E         	goto	i2u299_41
 17406   011DA6  EFD7  F08E         	goto	i2u299_40
 17407   011DAA                     i2u299_41:
 17408   011DAA  EFE4  F08E         	goto	i2l323
 17409   011DAE                     i2u299_40:
 17410   011DAE                     
 17411                           ; BSR set to: 4
 17412                           ;mcc_generated_files/system/src/interrupt.c: 100:                 RC6_InterruptHandler()
      +                          ;
 17413   011DAE  D802               	call	i2u300_48
 17414   011DB0  EFE4  F08E         	goto	i2u300_49
 17415   011DB4                     i2u300_48:
 17416   011DB4  0005               	push	
 17417   011DB6  6EFA               	movwf	pclath,c
 17418   011DB8  5048               	movf	_RC6_InterruptHandler^(0+1280),w,c
 17419   011DBA  6EFD               	movwf	tosl,c
 17420   011DBC  5049               	movf	(_RC6_InterruptHandler+1)^(0+1280),w,c
 17421   011DBE  6EFE               	movwf	tosh,c
 17422   011DC0  504A               	movf	(_RC6_InterruptHandler+2)^(0+1280),w,c
 17423   011DC2  6EFF               	movwf	tosu,c
 17424   011DC4  50FA               	movf	pclath,w,c
 17425   011DC6  0012               	return		;indir
 17426   011DC8                     i2u300_49:
 17427   011DC8                     i2l323:
 17428   011DC8  C536  F4FB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17429   011DCC  C535  F4FA         	movff	??_INTERRUPT_InterruptManager,pclath
 17430   011DD0  0011               	retfie		f
 17431   011DD2                     __end_of_INTERRUPT_InterruptManager:
 17432                           	callstack 0
 17433                           
 17434 ;; *************** function _nrf_interrupt *****************
 17435 ;; Defined at:
 17436 ;;		line 116 in file "main.c"
 17437 ;; Parameters:    Size  Location     Type
 17438 ;;		None
 17439 ;; Auto vars:     Size  Location     Type
 17440 ;;  i               2   50[COMRAM] int 
 17441 ;;  buf            32   18[COMRAM] unsigned char [32]
 17442 ;; Return value:  Size  Location     Type
 17443 ;;                  1    wreg      void 
 17444 ;; Registers used:
 17445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17446 ;; Tracked objects:
 17447 ;;		On entry : 0/0
 17448 ;;		On exit  : 0/0
 17449 ;;		Unchanged: 0/0
 17450 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17452 ;;      Locals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17454 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17455 ;;Total ram usage:       34 bytes
 17456 ;; Hardware stack levels used: 1
 17457 ;; Hardware stack levels required when called: 5
 17458 ;; This function calls:
 17459 ;;		i2_Nrf24_dataReady
 17460 ;;		i2_Nrf24_getData
 17461 ;;		i2_sendGrid
 17462 ;; This function is called by:
 17463 ;;		_main
 17464 ;;		_INTERRUPT_InterruptManager
 17465 ;; This function uses a non-reentrant model
 17466 ;;
 17467                           
 17468                           	psect	text57
 17469   011728                     __ptext57:
 17470                           	callstack 0
 17471   011728                     _nrf_interrupt:
 17472                           	callstack 109
 17473   011728                     
 17474                           ;main.c: 117:     uint8_t buf[32];;main.c: 118:     if (Nrf24_dataReady(&dev)) {
 17475   011728  0E3F               	movlw	low _dev
 17476   01172A  6E0E               	movwf	i2Nrf24_dataReady@dev^(0+1280),c
 17477   01172C  0E05               	movlw	high _dev
 17478   01172E  6E0F               	movwf	(i2Nrf24_dataReady@dev+1)^(0+1280),c
 17479   011730  EC07  F093         	call	i2_Nrf24_dataReady	;wreg free
 17480   011734  0900               	iorlw	0
 17481   011736  B4D8               	btfsc	status,2,c
 17482   011738  EFA0  F08B         	goto	i2u290_41
 17483   01173C  EFA2  F08B         	goto	i2u290_40
 17484   011740                     i2u290_41:
 17485   011740  EFF6  F08B         	goto	i2l625
 17486   011744                     i2u290_40:
 17487   011744                     
 17488                           ;main.c: 119:         Nrf24_getData(&dev, buf);
 17489   011744  0E3F               	movlw	low _dev
 17490   011746  6E07               	movwf	i2Nrf24_getData@dev^(0+1280),c
 17491   011748  0E05               	movlw	high _dev
 17492   01174A  6E08               	movwf	(i2Nrf24_getData@dev+1)^(0+1280),c
 17493   01174C  0E13               	movlw	low nrf_interrupt@buf
 17494   01174E  6E09               	movwf	i2Nrf24_getData@data^(0+1280),c
 17495   011750  0E05               	movlw	high nrf_interrupt@buf
 17496   011752  6E0A               	movwf	(i2Nrf24_getData@data+1)^(0+1280),c
 17497   011754  EC3C  F092         	call	i2_Nrf24_getData	;wreg free
 17498   011758                     
 17499                           ;main.c: 122:         for (int i = 0; i < 32; i++) {
 17500   011758  0E00               	movlw	0
 17501   01175A  6E34               	movwf	(nrf_interrupt@i+1)^(0+1280),c
 17502   01175C  0E00               	movlw	0
 17503   01175E  6E33               	movwf	nrf_interrupt@i^(0+1280),c
 17504   011760                     i2l4046:
 17505                           
 17506                           ;main.c: 123:             if (received_index < 200) {
 17507   011760  BE3E               	btfsc	(_received_index+1)^(0+1280),7,c
 17508   011762  EFBE  F08B         	goto	i2u291_40
 17509   011766  503E               	movf	(_received_index+1)^(0+1280),w,c
 17510   011768  E107               	bnz	i2u291_41
 17511   01176A  0EC8               	movlw	200
 17512   01176C  5C3D               	subwf	_received_index^(0+1280),w,c
 17513   01176E  B0D8               	btfsc	status,0,c
 17514   011770  EFBC  F08B         	goto	i2u291_41
 17515   011774  EFBE  F08B         	goto	i2u291_40
 17516   011778                     i2u291_41:
 17517   011778  EFCE  F08B         	goto	i2l4052
 17518   01177C                     i2u291_40:
 17519   01177C                     
 17520                           ;main.c: 124:                 received_data[received_index++] = buf[i];
 17521   01177C  0E13               	movlw	low nrf_interrupt@buf
 17522   01177E  2433               	addwf	nrf_interrupt@i^(0+1280),w,c
 17523   011780  6ED9               	movwf	fsr2l,c
 17524   011782  0E05               	movlw	high nrf_interrupt@buf
 17525   011784  2034               	addwfc	(nrf_interrupt@i+1)^(0+1280),w,c
 17526   011786  6EDA               	movwf	fsr2h,c
 17527   011788  0E00               	movlw	low _received_data
 17528   01178A  243D               	addwf	_received_index^(0+1280),w,c
 17529   01178C  6EE1               	movwf	fsr1l,c
 17530   01178E  0E0A               	movlw	high _received_data
 17531   011790  203E               	addwfc	(_received_index+1)^(0+1280),w,c
 17532   011792  6EE2               	movwf	fsr1h,c
 17533   011794  C4DF F4E7          	movff	indf2,indf1
 17534   011798  4A3D               	infsnz	_received_index^(0+1280),f,c
 17535   01179A  2A3E               	incf	(_received_index+1)^(0+1280),f,c
 17536   01179C                     i2l4052:
 17537                           
 17538                           ;main.c: 126:         }
 17539   01179C  4A33               	infsnz	nrf_interrupt@i^(0+1280),f,c
 17540   01179E  2A34               	incf	(nrf_interrupt@i+1)^(0+1280),f,c
 17541   0117A0  BE34               	btfsc	(nrf_interrupt@i+1)^(0+1280),7,c
 17542   0117A2  EFDC  F08B         	goto	i2u292_41
 17543   0117A6  5034               	movf	(nrf_interrupt@i+1)^(0+1280),w,c
 17544   0117A8  E109               	bnz	i2u292_40
 17545   0117AA  0E20               	movlw	32
 17546   0117AC  5C33               	subwf	nrf_interrupt@i^(0+1280),w,c
 17547   0117AE  A0D8               	btfss	status,0,c
 17548   0117B0  EFDC  F08B         	goto	i2u292_41
 17549   0117B4  EFDE  F08B         	goto	i2u292_40
 17550   0117B8                     i2u292_41:
 17551   0117B8  EFB0  F08B         	goto	i2l4046
 17552   0117BC                     i2u292_40:
 17553   0117BC                     
 17554                           ;main.c: 129:         if (received_index >= 200) {
 17555   0117BC  BE3E               	btfsc	(_received_index+1)^(0+1280),7,c
 17556   0117BE  EFEA  F08B         	goto	i2u293_41
 17557   0117C2  503E               	movf	(_received_index+1)^(0+1280),w,c
 17558   0117C4  E109               	bnz	i2u293_40
 17559   0117C6  0EC8               	movlw	200
 17560   0117C8  5C3D               	subwf	_received_index^(0+1280),w,c
 17561   0117CA  A0D8               	btfss	status,0,c
 17562   0117CC  EFEA  F08B         	goto	i2u293_41
 17563   0117D0  EFEC  F08B         	goto	i2u293_40
 17564   0117D4                     i2u293_41:
 17565   0117D4  EFF6  F08B         	goto	i2l625
 17566   0117D8                     i2u293_40:
 17567   0117D8                     
 17568                           ;main.c: 130:             received_index = 0;
 17569   0117D8  0E00               	movlw	0
 17570   0117DA  6E3E               	movwf	(_received_index+1)^(0+1280),c
 17571   0117DC  0E00               	movlw	0
 17572   0117DE  6E3D               	movwf	_received_index^(0+1280),c
 17573   0117E0                     
 17574                           ;main.c: 131:             sendGrid(received_data);
 17575   0117E0  0E00               	movlw	low _received_data
 17576   0117E2  6E06               	movwf	i2sendGrid@grid^(0+1280),c
 17577   0117E4  0E0A               	movlw	high _received_data
 17578   0117E6  6E07               	movwf	(i2sendGrid@grid+1)^(0+1280),c
 17579   0117E8  ECB2  F088         	call	i2_sendGrid	;wreg free
 17580   0117EC                     i2l625:
 17581   0117EC  0012               	return		;funcret
 17582   0117EE                     __end_of_nrf_interrupt:
 17583                           	callstack 0
 17584                           
 17585 ;; *************** function i2_sendGrid *****************
 17586 ;; Defined at:
 17587 ;;		line 100 in file "main.c"
 17588 ;; Parameters:    Size  Location     Type
 17589 ;;  grid            2    5[COMRAM] PTR unsigned char 
 17590 ;;		 -> main@gridB(200), received_data(200), 
 17591 ;; Auto vars:     Size  Location     Type
 17592 ;;  gridSize        2   16[COMRAM] int 
 17593 ;;  row             2   14[COMRAM] int 
 17594 ;;  col             2   12[COMRAM] int 
 17595 ;;  index           2   10[COMRAM] int 
 17596 ;; Return value:  Size  Location     Type
 17597 ;;                  1    wreg      void 
 17598 ;; Registers used:
 17599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17600 ;; Tracked objects:
 17601 ;;		On entry : 0/0
 17602 ;;		On exit  : 0/0
 17603 ;;		Unchanged: 0/0
 17604 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17606 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17607 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17608 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17609 ;;Total ram usage:       13 bytes
 17610 ;; Hardware stack levels used: 1
 17611 ;; Hardware stack levels required when called: 3
 17612 ;; This function calls:
 17613 ;;		i2_sendCell
 17614 ;; This function is called by:
 17615 ;;		_nrf_interrupt
 17616 ;; This function uses a non-reentrant model
 17617 ;;
 17618                           
 17619                           	psect	text58
 17620   011164                     __ptext58:
 17621                           	callstack 0
 17622   011164                     i2_sendGrid:
 17623                           	callstack 110
 17624   011164                     
 17625                           ;main.c: 101:     int gridSize = 10;
 17626   011164  0E00               	movlw	0
 17627   011166  6E12               	movwf	(i2sendGrid@gridSize+1)^(0+1280),c
 17628   011168  0E0A               	movlw	10
 17629   01116A  6E11               	movwf	i2sendGrid@gridSize^(0+1280),c
 17630   01116C                     
 17631                           ;main.c: 104:     sendCell(grid[0]);
 17632   01116C  C506  F4D9         	movff	i2sendGrid@grid,fsr2l
 17633   011170  C507  F4DA         	movff	i2sendGrid@grid+1,fsr2h
 17634   011174  50DF               	movf	indf2,w,c
 17635   011176  EC15  F090         	call	i2_sendCell
 17636   01117A                     
 17637                           ;main.c: 105:     for (int row = 0; row < gridSize*2; row++) {
 17638   01117A  0E00               	movlw	0
 17639   01117C  6E10               	movwf	(i2sendGrid@row+1)^(0+1280),c
 17640   01117E  0E00               	movlw	0
 17641   011180  6E0F               	movwf	i2sendGrid@row^(0+1280),c
 17642   011182  EF1A  F089         	goto	i2l3956
 17643   011186                     i2l3940:
 17644                           
 17645                           ;main.c: 106:         for (int col = 0; col < gridSize; col++) {
 17646   011186  0E00               	movlw	0
 17647   011188  6E0E               	movwf	(i2sendGrid@col+1)^(0+1280),c
 17648   01118A  0E00               	movlw	0
 17649   01118C  6E0D               	movwf	i2sendGrid@col^(0+1280),c
 17650   01118E  EF09  F089         	goto	i2l3952
 17651   011192                     i2l3942:
 17652                           
 17653                           ;main.c: 107:             int index = row * gridSize + col + 1;
 17654   011192  5011               	movf	i2sendGrid@gridSize^(0+1280),w,c
 17655   011194  020F               	mulwf	i2sendGrid@row^(0+1280),c
 17656   011196  C4F3 F508          	movff	prodl,??i2_sendGrid
 17657   01119A  C4F4 F509          	movff	prodh,??i2_sendGrid+1
 17658   01119E  0210               	mulwf	(i2sendGrid@row+1)^(0+1280),c
 17659   0111A0  50F3               	movf	prodl,w,c
 17660   0111A2  2609               	addwf	(??i2_sendGrid+1)^(0+1280),f,c
 17661   0111A4  5012               	movf	(i2sendGrid@gridSize+1)^(0+1280),w,c
 17662   0111A6  020F               	mulwf	i2sendGrid@row^(0+1280),c
 17663   0111A8  50F3               	movf	prodl,w,c
 17664   0111AA  2609               	addwf	(??i2_sendGrid+1)^(0+1280),f,c
 17665   0111AC  500D               	movf	i2sendGrid@col^(0+1280),w,c
 17666   0111AE  2608               	addwf	??i2_sendGrid^(0+1280),f,c
 17667   0111B0  500E               	movf	(i2sendGrid@col+1)^(0+1280),w,c
 17668   0111B2  2209               	addwfc	(??i2_sendGrid+1)^(0+1280),f,c
 17669   0111B4  0E01               	movlw	1
 17670   0111B6  2408               	addwf	??i2_sendGrid^(0+1280),w,c
 17671   0111B8  6E0B               	movwf	i2sendGrid@index^(0+1280),c
 17672   0111BA  0E00               	movlw	0
 17673   0111BC  2009               	addwfc	(??i2_sendGrid+1)^(0+1280),w,c
 17674   0111BE  6E0C               	movwf	(i2sendGrid@index+1)^(0+1280),c
 17675   0111C0                     
 17676                           ;main.c: 108:             if (row % 2 == 1) {
 17677   0111C0  A00F               	btfss	i2sendGrid@row^(0+1280),0,c
 17678   0111C2  EFE5  F088         	goto	i2u280_41
 17679   0111C6  EFE7  F088         	goto	i2u280_40
 17680   0111CA                     i2u280_41:
 17681   0111CA  EFFE  F088         	goto	i2l3948
 17682   0111CE                     i2u280_40:
 17683   0111CE                     
 17684                           ;main.c: 109:                 index = row * gridSize + (gridSize - 1 - col) + 1;
 17685   0111CE  5011               	movf	i2sendGrid@gridSize^(0+1280),w,c
 17686   0111D0  020F               	mulwf	i2sendGrid@row^(0+1280),c
 17687   0111D2  C4F3 F508          	movff	prodl,??i2_sendGrid
 17688   0111D6  C4F4 F509          	movff	prodh,??i2_sendGrid+1
 17689   0111DA  0210               	mulwf	(i2sendGrid@row+1)^(0+1280),c
 17690   0111DC  50F3               	movf	prodl,w,c
 17691   0111DE  2609               	addwf	(??i2_sendGrid+1)^(0+1280),f,c
 17692   0111E0  5012               	movf	(i2sendGrid@gridSize+1)^(0+1280),w,c
 17693   0111E2  020F               	mulwf	i2sendGrid@row^(0+1280),c
 17694   0111E4  50F3               	movf	prodl,w,c
 17695   0111E6  2609               	addwf	(??i2_sendGrid+1)^(0+1280),f,c
 17696   0111E8  500D               	movf	i2sendGrid@col^(0+1280),w,c
 17697   0111EA  5E08               	subwf	??i2_sendGrid^(0+1280),f,c
 17698   0111EC  500E               	movf	(i2sendGrid@col+1)^(0+1280),w,c
 17699   0111EE  5A09               	subwfb	(??i2_sendGrid+1)^(0+1280),f,c
 17700   0111F0  5011               	movf	i2sendGrid@gridSize^(0+1280),w,c
 17701   0111F2  2408               	addwf	??i2_sendGrid^(0+1280),w,c
 17702   0111F4  6E0B               	movwf	i2sendGrid@index^(0+1280),c
 17703   0111F6  5012               	movf	(i2sendGrid@gridSize+1)^(0+1280),w,c
 17704   0111F8  2009               	addwfc	(??i2_sendGrid+1)^(0+1280),w,c
 17705   0111FA  6E0C               	movwf	(i2sendGrid@index+1)^(0+1280),c
 17706   0111FC                     i2l3948:
 17707                           
 17708                           ;main.c: 111:             sendCell(grid[index]);
 17709   0111FC  500B               	movf	i2sendGrid@index^(0+1280),w,c
 17710   0111FE  2406               	addwf	i2sendGrid@grid^(0+1280),w,c
 17711   011200  6ED9               	movwf	fsr2l,c
 17712   011202  500C               	movf	(i2sendGrid@index+1)^(0+1280),w,c
 17713   011204  2007               	addwfc	(i2sendGrid@grid+1)^(0+1280),w,c
 17714   011206  6EDA               	movwf	fsr2h,c
 17715   011208  50DF               	movf	indf2,w,c
 17716   01120A  EC15  F090         	call	i2_sendCell
 17717   01120E                     
 17718                           ;main.c: 112:         }
 17719   01120E  4A0D               	infsnz	i2sendGrid@col^(0+1280),f,c
 17720   011210  2A0E               	incf	(i2sendGrid@col+1)^(0+1280),f,c
 17721   011212                     i2l3952:
 17722   011212  5011               	movf	i2sendGrid@gridSize^(0+1280),w,c
 17723   011214  5C0D               	subwf	i2sendGrid@col^(0+1280),w,c
 17724   011216  500E               	movf	(i2sendGrid@col+1)^(0+1280),w,c
 17725   011218  0A80               	xorlw	128
 17726   01121A  6E08               	movwf	??i2_sendGrid^(0+1280),c
 17727   01121C  5012               	movf	(i2sendGrid@gridSize+1)^(0+1280),w,c
 17728   01121E  0A80               	xorlw	128
 17729   011220  5808               	subwfb	??i2_sendGrid^(0+1280),w,c
 17730   011222  A0D8               	btfss	status,0,c
 17731   011224  EF16  F089         	goto	i2u281_41
 17732   011228  EF18  F089         	goto	i2u281_40
 17733   01122C                     i2u281_41:
 17734   01122C  EFC9  F088         	goto	i2l3942
 17735   011230                     i2u281_40:
 17736   011230                     
 17737                           ;main.c: 113:     }
 17738   011230  4A0F               	infsnz	i2sendGrid@row^(0+1280),f,c
 17739   011232  2A10               	incf	(i2sendGrid@row+1)^(0+1280),f,c
 17740   011234                     i2l3956:
 17741   011234  C511  F508         	movff	i2sendGrid@gridSize,??i2_sendGrid
 17742   011238  C512  F509         	movff	i2sendGrid@gridSize+1,??i2_sendGrid+1
 17743   01123C  90D8               	bcf	status,0,c
 17744   01123E  3608               	rlcf	??i2_sendGrid^(0+1280),f,c
 17745   011240  3609               	rlcf	(??i2_sendGrid+1)^(0+1280),f,c
 17746   011242  5008               	movf	??i2_sendGrid^(0+1280),w,c
 17747   011244  5C0F               	subwf	i2sendGrid@row^(0+1280),w,c
 17748   011246  5010               	movf	(i2sendGrid@row+1)^(0+1280),w,c
 17749   011248  0A80               	xorlw	128
 17750   01124A  6E0A               	movwf	(??i2_sendGrid+2)^(0+1280),c
 17751   01124C  5009               	movf	(??i2_sendGrid+1)^(0+1280),w,c
 17752   01124E  0A80               	xorlw	128
 17753   011250  580A               	subwfb	(??i2_sendGrid+2)^(0+1280),w,c
 17754   011252  A0D8               	btfss	status,0,c
 17755   011254  EF2E  F089         	goto	i2u282_41
 17756   011258  EF30  F089         	goto	i2u282_40
 17757   01125C                     i2u282_41:
 17758   01125C  EFC3  F088         	goto	i2l3940
 17759   011260                     i2u282_40:
 17760   011260  0012               	return		;funcret
 17761   011262                     __end_ofi2_sendGrid:
 17762                           	callstack 0
 17763                           
 17764 ;; *************** function i2_sendCell *****************
 17765 ;; Defined at:
 17766 ;;		line 82 in file "main.c"
 17767 ;; Parameters:    Size  Location     Type
 17768 ;;  cell            1    wreg     unsigned char 
 17769 ;; Auto vars:     Size  Location     Type
 17770 ;;  cell            1    4[COMRAM] unsigned char 
 17771 ;;  bright          1    0        unsigned char 
 17772 ;; Return value:  Size  Location     Type
 17773 ;;                  1    wreg      void 
 17774 ;; Registers used:
 17775 ;;		wreg, status,2, status,0, cstack
 17776 ;; Tracked objects:
 17777 ;;		On entry : 0/0
 17778 ;;		On exit  : 0/0
 17779 ;;		Unchanged: 0/0
 17780 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17785 ;;Total ram usage:        1 bytes
 17786 ;; Hardware stack levels used: 1
 17787 ;; Hardware stack levels required when called: 2
 17788 ;; This function calls:
 17789 ;;		i2_sendRGB
 17790 ;; This function is called by:
 17791 ;;		i2_sendGrid
 17792 ;; This function uses a non-reentrant model
 17793 ;;
 17794                           
 17795                           	psect	text59
 17796   01202A                     __ptext59:
 17797                           	callstack 0
 17798   01202A                     i2_sendCell:
 17799                           	callstack 110
 17800                           
 17801                           ;incstack = 0
 17802                           ;i2sendCell@cell stored from wreg
 17803   01202A  6E05               	movwf	i2sendCell@cell^(0+1280),c
 17804   01202C                     
 17805                           ;main.c: 84:     switch (cell) {
 17806   01202C  EF3C  F090         	goto	i2l3678
 17807   012030                     i2l3668:
 17808                           
 17809                           ;main.c: 86:             sendRGB(0, 0, 0);
 17810   012030  0E00               	movlw	0
 17811   012032  6E02               	movwf	i2sendRGB@g^(0+1280),c
 17812   012034  0E00               	movlw	0
 17813   012036  6E03               	movwf	i2sendRGB@b^(0+1280),c
 17814   012038  0E00               	movlw	0
 17815   01203A  ECA8  F093         	call	i2_sendRGB
 17816                           
 17817                           ;main.c: 87:             break;
 17818   01203E  EF4B  F090         	goto	i2l607
 17819   012042                     i2l3670:
 17820                           
 17821                           ;main.c: 89:             sendRGB(bright, 0, 0);
 17822   012042  0E00               	movlw	0
 17823   012044  6E02               	movwf	i2sendRGB@g^(0+1280),c
 17824   012046  0E00               	movlw	0
 17825   012048  6E03               	movwf	i2sendRGB@b^(0+1280),c
 17826   01204A  0E14               	movlw	20
 17827   01204C  ECA8  F093         	call	i2_sendRGB
 17828                           
 17829                           ;main.c: 90:             break;
 17830   012050  EF4B  F090         	goto	i2l607
 17831   012054                     i2l3672:
 17832                           
 17833                           ;main.c: 92:             sendRGB(0, bright, 0);
 17834   012054  0E14               	movlw	20
 17835   012056  6E02               	movwf	i2sendRGB@g^(0+1280),c
 17836   012058  0E00               	movlw	0
 17837   01205A  6E03               	movwf	i2sendRGB@b^(0+1280),c
 17838   01205C  0E00               	movlw	0
 17839   01205E  ECA8  F093         	call	i2_sendRGB
 17840                           
 17841                           ;main.c: 93:             break;
 17842   012062  EF4B  F090         	goto	i2l607
 17843   012066                     i2l3674:
 17844                           
 17845                           ;main.c: 95:             sendRGB(0, 0, bright);
 17846   012066  0E00               	movlw	0
 17847   012068  6E02               	movwf	i2sendRGB@g^(0+1280),c
 17848   01206A  0E14               	movlw	20
 17849   01206C  6E03               	movwf	i2sendRGB@b^(0+1280),c
 17850   01206E  0E00               	movlw	0
 17851   012070  ECA8  F093         	call	i2_sendRGB
 17852                           
 17853                           ;main.c: 96:             break;
 17854   012074  EF4B  F090         	goto	i2l607
 17855   012078                     i2l3678:
 17856   012078  5005               	movf	i2sendCell@cell^(0+1280),w,c
 17857                           
 17858                           ; Switch size 1, requested type "simple"
 17859                           ; Number of cases is 3, Range of values is 0 to 2
 17860                           ; switch strategies available:
 17861                           ; Name         Instructions Cycles
 17862                           ; simple_byte           10     6 (average)
 17863                           ;	Chosen strategy is simple_byte
 17864   01207A  0A00               	xorlw	0	; case 0
 17865   01207C  B4D8               	btfsc	status,2,c
 17866   01207E  EF18  F090         	goto	i2l3668
 17867   012082  0A01               	xorlw	1	; case 1
 17868   012084  B4D8               	btfsc	status,2,c
 17869   012086  EF21  F090         	goto	i2l3670
 17870   01208A  0A03               	xorlw	3	; case 2
 17871   01208C  B4D8               	btfsc	status,2,c
 17872   01208E  EF2A  F090         	goto	i2l3672
 17873   012092  EF33  F090         	goto	i2l3674
 17874   012096                     i2l607:
 17875   012096  0012               	return		;funcret
 17876   012098                     __end_ofi2_sendCell:
 17877                           	callstack 0
 17878                           
 17879 ;; *************** function i2_sendRGB *****************
 17880 ;; Defined at:
 17881 ;;		line 76 in file "main.c"
 17882 ;; Parameters:    Size  Location     Type
 17883 ;;  r               1    wreg     unsigned char 
 17884 ;;  g               1    1[COMRAM] unsigned char 
 17885 ;;  b               1    2[COMRAM] unsigned char 
 17886 ;; Auto vars:     Size  Location     Type
 17887 ;;  r               1    3[COMRAM] unsigned char 
 17888 ;; Return value:  Size  Location     Type
 17889 ;;                  1    wreg      void 
 17890 ;; Registers used:
 17891 ;;		wreg, status,2, cstack
 17892 ;; Tracked objects:
 17893 ;;		On entry : 0/0
 17894 ;;		On exit  : 0/0
 17895 ;;		Unchanged: 0/0
 17896 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17900 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17901 ;;Total ram usage:        3 bytes
 17902 ;; Hardware stack levels used: 1
 17903 ;; Hardware stack levels required when called: 1
 17904 ;; This function calls:
 17905 ;;		i2_sendByte
 17906 ;; This function is called by:
 17907 ;;		i2_sendCell
 17908 ;; This function uses a non-reentrant model
 17909 ;;
 17910                           
 17911                           	psect	text60
 17912   012750                     __ptext60:
 17913                           	callstack 0
 17914   012750                     i2_sendRGB:
 17915                           	callstack 110
 17916                           
 17917                           ;incstack = 0
 17918                           ;i2sendRGB@r stored from wreg
 17919   012750  6E04               	movwf	i2sendRGB@r^(0+1280),c
 17920   012752                     
 17921                           ;main.c: 77:     sendByte(g);
 17922   012752  5002               	movf	i2sendRGB@g^(0+1280),w,c
 17923   012754  ECEC  F082         	call	i2_sendByte
 17924                           
 17925                           ;main.c: 78:     sendByte(r);
 17926   012758  5004               	movf	i2sendRGB@r^(0+1280),w,c
 17927   01275A  ECEC  F082         	call	i2_sendByte
 17928                           
 17929                           ;main.c: 79:     sendByte(b);
 17930   01275E  5003               	movf	i2sendRGB@b^(0+1280),w,c
 17931   012760  ECEC  F082         	call	i2_sendByte
 17932   012764  0012               	return		;funcret
 17933   012766                     __end_ofi2_sendRGB:
 17934                           	callstack 0
 17935                           
 17936 ;; *************** function i2_sendByte *****************
 17937 ;; Defined at:
 17938 ;;		line 65 in file "main.c"
 17939 ;; Parameters:    Size  Location     Type
 17940 ;;  byte            1    wreg     unsigned char 
 17941 ;; Auto vars:     Size  Location     Type
 17942 ;;  byte            1    0[COMRAM] unsigned char 
 17943 ;; Return value:  Size  Location     Type
 17944 ;;                  1    wreg      void 
 17945 ;; Registers used:
 17946 ;;		wreg
 17947 ;; Tracked objects:
 17948 ;;		On entry : 0/0
 17949 ;;		On exit  : 0/0
 17950 ;;		Unchanged: 0/0
 17951 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17956 ;;Total ram usage:        1 bytes
 17957 ;; Hardware stack levels used: 1
 17958 ;; This function calls:
 17959 ;;		Nothing
 17960 ;; This function is called by:
 17961 ;;		i2_sendRGB
 17962 ;; This function uses a non-reentrant model
 17963 ;;
 17964                           
 17965                           	psect	text61
 17966   0105D8                     __ptext61:
 17967                           	callstack 0
 17968   0105D8                     i2_sendByte:
 17969                           	callstack 110
 17970                           
 17971                           ;incstack = 0
 17972                           ;i2sendByte@byte stored from wreg
 17973   0105D8  6E01               	movwf	i2sendByte@byte^(0+1280),c
 17974   0105DA                     
 17975                           ;main.c: 66:     if (byte & 0b10000000) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 17976   0105DA  AE01               	btfss	i2sendByte@byte^(0+1280),7,c
 17977   0105DC  EFF2  F082         	goto	i2u234_41
 17978   0105E0  EFF4  F082         	goto	i2u234_40
 17979   0105E4                     i2u234_41:
 17980   0105E4  EF04  F083         	goto	i2l521
 17981   0105E8                     i2u234_40:
 17982   0105E8  80BE               	bsf	190,0,c	;volatile
 17983   0105EA  0000               	nop	
 17984   0105EC  0000               	nop	
 17985   0105EE  0000               	nop	
 17986   0105F0  80BE               	bsf	190,0,c	;volatile
 17987   0105F2  0000               	nop	
 17988   0105F4  0000               	nop	
 17989   0105F6  0000               	nop	
 17990   0105F8  0000               	nop	
 17991   0105FA  90BE               	bcf	190,0,c	;volatile
 17992   0105FC                     i2l519:
 17993   0105FC  0000               	nop	
 17994   0105FE  0000               	nop	
 17995   010600  0000               	nop	
 17996   010602  0000               	nop	
 17997   010604  EF10  F083         	goto	i2l3460
 17998   010608                     i2l521:
 17999   010608  80BE               	bsf	190,0,c	;volatile
 18000   01060A  0000               	nop	
 18001   01060C  0000               	nop	
 18002   01060E  0000               	nop	
 18003   010610  90BE               	bcf	190,0,c	;volatile
 18004   010612  0000               	nop	
 18005   010614  0000               	nop	
 18006   010616  0000               	nop	
 18007   010618  0000               	nop	
 18008   01061A  90BE               	bcf	190,0,c	;volatile
 18009   01061C  EFFE  F082         	goto	i2l519
 18010   010620                     i2l3460:
 18011                           
 18012                           ;main.c: 67:     if (byte & 0b01000000) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 18013   010620  AC01               	btfss	i2sendByte@byte^(0+1280),6,c
 18014   010622  EF15  F083         	goto	i2u235_41
 18015   010626  EF17  F083         	goto	i2u235_40
 18016   01062A                     i2u235_41:
 18017   01062A  EF27  F083         	goto	i2l531
 18018   01062E                     i2u235_40:
 18019   01062E  80BE               	bsf	190,0,c	;volatile
 18020   010630  0000               	nop	
 18021   010632  0000               	nop	
 18022   010634  0000               	nop	
 18023   010636  80BE               	bsf	190,0,c	;volatile
 18024   010638  0000               	nop	
 18025   01063A  0000               	nop	
 18026   01063C  0000               	nop	
 18027   01063E  0000               	nop	
 18028   010640  90BE               	bcf	190,0,c	;volatile
 18029   010642                     i2l529:
 18030   010642  0000               	nop	
 18031   010644  0000               	nop	
 18032   010646  0000               	nop	
 18033   010648  0000               	nop	
 18034   01064A  EF33  F083         	goto	i2l3462
 18035   01064E                     i2l531:
 18036   01064E  80BE               	bsf	190,0,c	;volatile
 18037   010650  0000               	nop	
 18038   010652  0000               	nop	
 18039   010654  0000               	nop	
 18040   010656  90BE               	bcf	190,0,c	;volatile
 18041   010658  0000               	nop	
 18042   01065A  0000               	nop	
 18043   01065C  0000               	nop	
 18044   01065E  0000               	nop	
 18045   010660  90BE               	bcf	190,0,c	;volatile
 18046   010662  EF21  F083         	goto	i2l529
 18047   010666                     i2l3462:
 18048                           
 18049                           ;main.c: 68:     if (byte & 0b00100000) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 18050   010666  AA01               	btfss	i2sendByte@byte^(0+1280),5,c
 18051   010668  EF38  F083         	goto	i2u236_41
 18052   01066C  EF3A  F083         	goto	i2u236_40
 18053   010670                     i2u236_41:
 18054   010670  EF4A  F083         	goto	i2l541
 18055   010674                     i2u236_40:
 18056   010674  80BE               	bsf	190,0,c	;volatile
 18057   010676  0000               	nop	
 18058   010678  0000               	nop	
 18059   01067A  0000               	nop	
 18060   01067C  80BE               	bsf	190,0,c	;volatile
 18061   01067E  0000               	nop	
 18062   010680  0000               	nop	
 18063   010682  0000               	nop	
 18064   010684  0000               	nop	
 18065   010686  90BE               	bcf	190,0,c	;volatile
 18066   010688                     i2l539:
 18067   010688  0000               	nop	
 18068   01068A  0000               	nop	
 18069   01068C  0000               	nop	
 18070   01068E  0000               	nop	
 18071   010690  EF56  F083         	goto	i2l3464
 18072   010694                     i2l541:
 18073   010694  80BE               	bsf	190,0,c	;volatile
 18074   010696  0000               	nop	
 18075   010698  0000               	nop	
 18076   01069A  0000               	nop	
 18077   01069C  90BE               	bcf	190,0,c	;volatile
 18078   01069E  0000               	nop	
 18079   0106A0  0000               	nop	
 18080   0106A2  0000               	nop	
 18081   0106A4  0000               	nop	
 18082   0106A6  90BE               	bcf	190,0,c	;volatile
 18083   0106A8  EF44  F083         	goto	i2l539
 18084   0106AC                     i2l3464:
 18085                           
 18086                           ;main.c: 69:     if (byte & 0b00010000) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 18087   0106AC  A801               	btfss	i2sendByte@byte^(0+1280),4,c
 18088   0106AE  EF5B  F083         	goto	i2u237_41
 18089   0106B2  EF5D  F083         	goto	i2u237_40
 18090   0106B6                     i2u237_41:
 18091   0106B6  EF6D  F083         	goto	i2l551
 18092   0106BA                     i2u237_40:
 18093   0106BA  80BE               	bsf	190,0,c	;volatile
 18094   0106BC  0000               	nop	
 18095   0106BE  0000               	nop	
 18096   0106C0  0000               	nop	
 18097   0106C2  80BE               	bsf	190,0,c	;volatile
 18098   0106C4  0000               	nop	
 18099   0106C6  0000               	nop	
 18100   0106C8  0000               	nop	
 18101   0106CA  0000               	nop	
 18102   0106CC  90BE               	bcf	190,0,c	;volatile
 18103   0106CE                     i2l549:
 18104   0106CE  0000               	nop	
 18105   0106D0  0000               	nop	
 18106   0106D2  0000               	nop	
 18107   0106D4  0000               	nop	
 18108   0106D6  EF79  F083         	goto	i2l3466
 18109   0106DA                     i2l551:
 18110   0106DA  80BE               	bsf	190,0,c	;volatile
 18111   0106DC  0000               	nop	
 18112   0106DE  0000               	nop	
 18113   0106E0  0000               	nop	
 18114   0106E2  90BE               	bcf	190,0,c	;volatile
 18115   0106E4  0000               	nop	
 18116   0106E6  0000               	nop	
 18117   0106E8  0000               	nop	
 18118   0106EA  0000               	nop	
 18119   0106EC  90BE               	bcf	190,0,c	;volatile
 18120   0106EE  EF67  F083         	goto	i2l549
 18121   0106F2                     i2l3466:
 18122                           
 18123                           ;main.c: 70:     if (byte & 0b00001000) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 18124   0106F2  A601               	btfss	i2sendByte@byte^(0+1280),3,c
 18125   0106F4  EF7E  F083         	goto	i2u238_41
 18126   0106F8  EF80  F083         	goto	i2u238_40
 18127   0106FC                     i2u238_41:
 18128   0106FC  EF90  F083         	goto	i2l561
 18129   010700                     i2u238_40:
 18130   010700  80BE               	bsf	190,0,c	;volatile
 18131   010702  0000               	nop	
 18132   010704  0000               	nop	
 18133   010706  0000               	nop	
 18134   010708  80BE               	bsf	190,0,c	;volatile
 18135   01070A  0000               	nop	
 18136   01070C  0000               	nop	
 18137   01070E  0000               	nop	
 18138   010710  0000               	nop	
 18139   010712  90BE               	bcf	190,0,c	;volatile
 18140   010714                     i2l559:
 18141   010714  0000               	nop	
 18142   010716  0000               	nop	
 18143   010718  0000               	nop	
 18144   01071A  0000               	nop	
 18145   01071C  EF9C  F083         	goto	i2l3468
 18146   010720                     i2l561:
 18147   010720  80BE               	bsf	190,0,c	;volatile
 18148   010722  0000               	nop	
 18149   010724  0000               	nop	
 18150   010726  0000               	nop	
 18151   010728  90BE               	bcf	190,0,c	;volatile
 18152   01072A  0000               	nop	
 18153   01072C  0000               	nop	
 18154   01072E  0000               	nop	
 18155   010730  0000               	nop	
 18156   010732  90BE               	bcf	190,0,c	;volatile
 18157   010734  EF8A  F083         	goto	i2l559
 18158   010738                     i2l3468:
 18159                           
 18160                           ;main.c: 71:     if (byte & 0b00000100) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 18161   010738  A401               	btfss	i2sendByte@byte^(0+1280),2,c
 18162   01073A  EFA1  F083         	goto	i2u239_41
 18163   01073E  EFA3  F083         	goto	i2u239_40
 18164   010742                     i2u239_41:
 18165   010742  EFB3  F083         	goto	i2l571
 18166   010746                     i2u239_40:
 18167   010746  80BE               	bsf	190,0,c	;volatile
 18168   010748  0000               	nop	
 18169   01074A  0000               	nop	
 18170   01074C  0000               	nop	
 18171   01074E  80BE               	bsf	190,0,c	;volatile
 18172   010750  0000               	nop	
 18173   010752  0000               	nop	
 18174   010754  0000               	nop	
 18175   010756  0000               	nop	
 18176   010758  90BE               	bcf	190,0,c	;volatile
 18177   01075A                     i2l569:
 18178   01075A  0000               	nop	
 18179   01075C  0000               	nop	
 18180   01075E  0000               	nop	
 18181   010760  0000               	nop	
 18182   010762  EFBF  F083         	goto	i2l3470
 18183   010766                     i2l571:
 18184   010766  80BE               	bsf	190,0,c	;volatile
 18185   010768  0000               	nop	
 18186   01076A  0000               	nop	
 18187   01076C  0000               	nop	
 18188   01076E  90BE               	bcf	190,0,c	;volatile
 18189   010770  0000               	nop	
 18190   010772  0000               	nop	
 18191   010774  0000               	nop	
 18192   010776  0000               	nop	
 18193   010778  90BE               	bcf	190,0,c	;volatile
 18194   01077A  EFAD  F083         	goto	i2l569
 18195   01077E                     i2l3470:
 18196                           
 18197                           ;main.c: 72:     if (byte & 0b00000010) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 18198   01077E  A201               	btfss	i2sendByte@byte^(0+1280),1,c
 18199   010780  EFC4  F083         	goto	i2u240_41
 18200   010784  EFC6  F083         	goto	i2u240_40
 18201   010788                     i2u240_41:
 18202   010788  EFD6  F083         	goto	i2l581
 18203   01078C                     i2u240_40:
 18204   01078C  80BE               	bsf	190,0,c	;volatile
 18205   01078E  0000               	nop	
 18206   010790  0000               	nop	
 18207   010792  0000               	nop	
 18208   010794  80BE               	bsf	190,0,c	;volatile
 18209   010796  0000               	nop	
 18210   010798  0000               	nop	
 18211   01079A  0000               	nop	
 18212   01079C  0000               	nop	
 18213   01079E  90BE               	bcf	190,0,c	;volatile
 18214   0107A0                     i2l579:
 18215   0107A0  0000               	nop	
 18216   0107A2  0000               	nop	
 18217   0107A4  0000               	nop	
 18218   0107A6  0000               	nop	
 18219   0107A8  EFE2  F083         	goto	i2l3472
 18220   0107AC                     i2l581:
 18221   0107AC  80BE               	bsf	190,0,c	;volatile
 18222   0107AE  0000               	nop	
 18223   0107B0  0000               	nop	
 18224   0107B2  0000               	nop	
 18225   0107B4  90BE               	bcf	190,0,c	;volatile
 18226   0107B6  0000               	nop	
 18227   0107B8  0000               	nop	
 18228   0107BA  0000               	nop	
 18229   0107BC  0000               	nop	
 18230   0107BE  90BE               	bcf	190,0,c	;volatile
 18231   0107C0  EFD0  F083         	goto	i2l579
 18232   0107C4                     i2l3472:
 18233                           
 18234                           ;main.c: 73:     if (byte & 0b00000001) { do { LATAbits.LATA0 = 1; } while(0); __nop(); 
      +                          __nop(); __nop(); LATAbits.LATA0 = 1; __nop(); __nop(); __nop(); __nop(); do { LATAbits.
      +                          LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; } else { do { LATAbits.LATA0
      +                           = 1; } while(0); __nop(); __nop(); __nop(); LATAbits.LATA0 = 0; __nop(); __nop(); __nop
      +                          (); __nop(); do { LATAbits.LATA0 = 0; } while(0); __nop(); __nop(); __nop(); __nop();; }
 18235   0107C4  A001               	btfss	i2sendByte@byte^(0+1280),0,c
 18236   0107C6  EFE7  F083         	goto	i2u241_41
 18237   0107CA  EFE9  F083         	goto	i2u241_40
 18238   0107CE                     i2u241_41:
 18239   0107CE  EFF9  F083         	goto	i2l591
 18240   0107D2                     i2u241_40:
 18241   0107D2  80BE               	bsf	190,0,c	;volatile
 18242   0107D4  0000               	nop	
 18243   0107D6  0000               	nop	
 18244   0107D8  0000               	nop	
 18245   0107DA  80BE               	bsf	190,0,c	;volatile
 18246   0107DC  0000               	nop	
 18247   0107DE  0000               	nop	
 18248   0107E0  0000               	nop	
 18249   0107E2  0000               	nop	
 18250   0107E4  90BE               	bcf	190,0,c	;volatile
 18251   0107E6                     i2l589:
 18252   0107E6  0000               	nop	
 18253   0107E8  0000               	nop	
 18254   0107EA  0000               	nop	
 18255   0107EC  0000               	nop	
 18256   0107EE  EF05  F084         	goto	i2l595
 18257   0107F2                     i2l591:
 18258   0107F2  80BE               	bsf	190,0,c	;volatile
 18259   0107F4  0000               	nop	
 18260   0107F6  0000               	nop	
 18261   0107F8  0000               	nop	
 18262   0107FA  90BE               	bcf	190,0,c	;volatile
 18263   0107FC  0000               	nop	
 18264   0107FE  0000               	nop	
 18265   010800  0000               	nop	
 18266   010802  0000               	nop	
 18267   010804  90BE               	bcf	190,0,c	;volatile
 18268   010806  EFF3  F083         	goto	i2l589
 18269   01080A                     i2l595:
 18270   01080A  0012               	return		;funcret
 18271   01080C                     __end_ofi2_sendByte:
 18272                           	callstack 0
 18273                           
 18274 ;; *************** function i2_Nrf24_getData *****************
 18275 ;; Defined at:
 18276 ;;		line 180 in file "mirf.c"
 18277 ;; Parameters:    Size  Location     Type
 18278 ;;  dev             2    6[COMRAM] PTR struct .
 18279 ;;		 -> dev(3), 
 18280 ;;  data            2    8[COMRAM] PTR unsigned char 
 18281 ;;		 -> nrf_interrupt@buf(32), init_nrf@buf(32), 
 18282 ;; Auto vars:     Size  Location     Type
 18283 ;;		None
 18284 ;; Return value:  Size  Location     Type
 18285 ;;                  1    wreg      void 
 18286 ;; Registers used:
 18287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18288 ;; Tracked objects:
 18289 ;;		On entry : 0/0
 18290 ;;		On exit  : 0/0
 18291 ;;		Unchanged: 0/0
 18292 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18296 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18297 ;;Total ram usage:        4 bytes
 18298 ;; Hardware stack levels used: 1
 18299 ;; Hardware stack levels required when called: 2
 18300 ;; This function calls:
 18301 ;;		i2_Nrf24_configRegister
 18302 ;;		i2_SPI1_ByteExchange
 18303 ;;		i2_SPI_read_buff
 18304 ;; This function is called by:
 18305 ;;		_nrf_interrupt
 18306 ;; This function uses a non-reentrant model
 18307 ;;
 18308                           
 18309                           	psect	text62
 18310   012478                     __ptext62:
 18311                           	callstack 0
 18312   012478                     i2_Nrf24_getData:
 18313                           	callstack 111
 18314   012478  9EC0               	bcf	192,7,c	;volatile
 18315   01247A                     
 18316                           ;mirf.c: 183:  SPI1_ByteExchange(0x00 | 0x61);
 18317   01247A  0E61               	movlw	97
 18318   01247C  ECB5  F092         	call	i2_SPI1_ByteExchange
 18319   012480                     
 18320                           ;mirf.c: 184:  SPI_read_buff( data, dev->payload );
 18321   012480  C509  F503         	movff	i2Nrf24_getData@data,i2SPI_read_buff@buffer
 18322   012484  C50A  F504         	movff	i2Nrf24_getData@data+1,i2SPI_read_buff@buffer+1
 18323   012488  EE20 F002          	lfsr	2,2
 18324   01248C  5007               	movf	i2Nrf24_getData@dev^(0+1280),w,c
 18325   01248E  26D9               	addwf	fsr2l,f,c
 18326   012490  5008               	movf	(i2Nrf24_getData@dev+1)^(0+1280),w,c
 18327   012492  22DA               	addwfc	fsr2h,f,c
 18328   012494  50DF               	movf	indf2,w,c
 18329   012496  6E05               	movwf	i2SPI_read_buff@bytes^(0+1280),c
 18330   012498  EC22  F092         	call	i2_SPI_read_buff	;wreg free
 18331   01249C  8EC0               	bsf	192,7,c	;volatile
 18332   01249E                     
 18333                           ;mirf.c: 194:  Nrf24_configRegister(0x07, (1 << 6));
 18334   01249E  0E40               	movlw	64
 18335   0124A0  6E03               	movwf	i2Nrf24_configRegister@value^(0+1280),c
 18336   0124A2  0E07               	movlw	7
 18337   0124A4  EC9C  F093         	call	i2_Nrf24_configRegister
 18338   0124A8  0012               	return		;funcret
 18339   0124AA                     __end_ofi2_Nrf24_getData:
 18340                           	callstack 0
 18341                           
 18342 ;; *************** function i2_Nrf24_configRegister *****************
 18343 ;; Defined at:
 18344 ;;		line 198 in file "mirf.c"
 18345 ;; Parameters:    Size  Location     Type
 18346 ;;  reg             1    wreg     unsigned char 
 18347 ;;  value           1    2[COMRAM] unsigned char 
 18348 ;; Auto vars:     Size  Location     Type
 18349 ;;  reg             1    3[COMRAM] unsigned char 
 18350 ;; Return value:  Size  Location     Type
 18351 ;;                  1    wreg      void 
 18352 ;; Registers used:
 18353 ;;		wreg, status,2, status,0, cstack
 18354 ;; Tracked objects:
 18355 ;;		On entry : 0/0
 18356 ;;		On exit  : 0/0
 18357 ;;		Unchanged: 0/0
 18358 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18359 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18362 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18363 ;;Total ram usage:        2 bytes
 18364 ;; Hardware stack levels used: 1
 18365 ;; Hardware stack levels required when called: 1
 18366 ;; This function calls:
 18367 ;;		i2_SPI1_ByteExchange
 18368 ;; This function is called by:
 18369 ;;		i2_Nrf24_getData
 18370 ;; This function uses a non-reentrant model
 18371 ;;
 18372                           
 18373                           	psect	text63
 18374   012738                     __ptext63:
 18375                           	callstack 0
 18376   012738                     i2_Nrf24_configRegister:
 18377                           	callstack 111
 18378                           
 18379                           ;incstack = 0
 18380                           ;i2Nrf24_configRegister@reg stored from wreg
 18381   012738  6E04               	movwf	i2Nrf24_configRegister@reg^(0+1280),c
 18382   01273A  9EC0               	bcf	192,7,c	;volatile
 18383   01273C                     
 18384                           ;mirf.c: 201:  SPI1_ByteExchange(0x20 | (0x1F & reg));
 18385   01273C  5004               	movf	i2Nrf24_configRegister@reg^(0+1280),w,c
 18386   01273E  0B1F               	andlw	31
 18387   012740  0920               	iorlw	32
 18388   012742  ECB5  F092         	call	i2_SPI1_ByteExchange
 18389                           
 18390                           ;mirf.c: 202:  SPI1_ByteExchange(value);
 18391   012746  5003               	movf	i2Nrf24_configRegister@value^(0+1280),w,c
 18392   012748  ECB5  F092         	call	i2_SPI1_ByteExchange
 18393   01274C  8EC0               	bsf	192,7,c	;volatile
 18394   01274E  0012               	return		;funcret
 18395   012750                     __end_ofi2_Nrf24_configRegister:
 18396                           	callstack 0
 18397                           
 18398 ;; *************** function i2_Nrf24_dataReady *****************
 18399 ;; Defined at:
 18400 ;;		line 158 in file "mirf.c"
 18401 ;; Parameters:    Size  Location     Type
 18402 ;;  dev             2   13[COMRAM] PTR struct .
 18403 ;;		 -> dev(3), 
 18404 ;; Auto vars:     Size  Location     Type
 18405 ;;  status          1   15[COMRAM] unsigned char 
 18406 ;; Return value:  Size  Location     Type
 18407 ;;                  1    wreg      _Bool 
 18408 ;; Registers used:
 18409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18410 ;; Tracked objects:
 18411 ;;		On entry : 0/0
 18412 ;;		On exit  : 0/0
 18413 ;;		Unchanged: 0/0
 18414 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18418 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18419 ;;Total ram usage:        3 bytes
 18420 ;; Hardware stack levels used: 1
 18421 ;; Hardware stack levels required when called: 4
 18422 ;; This function calls:
 18423 ;;		i2_Nrf24_getStatus
 18424 ;; This function is called by:
 18425 ;;		_nrf_interrupt
 18426 ;; This function uses a non-reentrant model
 18427 ;;
 18428                           
 18429                           	psect	text64
 18430   01260E                     __ptext64:
 18431                           	callstack 0
 18432   01260E                     i2_Nrf24_dataReady:
 18433                           	callstack 109
 18434   01260E                     
 18435                           ;mirf.c: 158: extern _Bool Nrf24_dataReady(NRF24_t * dev);mirf.c: 159: {;mirf.c: 160:  u
      +                          int8_t status = Nrf24_getStatus(dev);
 18436   01260E  C50E  F50B         	movff	i2Nrf24_dataReady@dev,i2Nrf24_getStatus@dev
 18437   012612  C50F  F50C         	movff	i2Nrf24_dataReady@dev+1,i2Nrf24_getStatus@dev+1
 18438   012616  ECB3  F093         	call	i2_Nrf24_getStatus	;wreg free
 18439   01261A  6E10               	movwf	i2Nrf24_dataReady@status^(0+1280),c
 18440   01261C                     
 18441                           ;mirf.c: 161:  if ( status & (1 << 6) ) {
 18442   01261C  AC10               	btfss	i2Nrf24_dataReady@status^(0+1280),6,c
 18443   01261E  EF13  F093         	goto	i2u283_41
 18444   012622  EF15  F093         	goto	i2u283_40
 18445   012626                     i2u283_41:
 18446   012626  EF18  F093         	goto	i2l3966
 18447   01262A                     i2u283_40:
 18448   01262A                     
 18449                           ;mirf.c: 162:   return 1;
 18450   01262A  0E01               	movlw	1
 18451   01262C  EF19  F093         	goto	i2l756
 18452   012630                     i2l3966:
 18453                           
 18454                           ;mirf.c: 164:  return 0;
 18455   012630  0E00               	movlw	0
 18456   012632                     i2l756:
 18457   012632  0012               	return		;funcret
 18458   012634                     __end_ofi2_Nrf24_dataReady:
 18459                           	callstack 0
 18460                           
 18461 ;; *************** function i2_Nrf24_getStatus *****************
 18462 ;; Defined at:
 18463 ;;		line 297 in file "mirf.c"
 18464 ;; Parameters:    Size  Location     Type
 18465 ;;  dev             2   10[COMRAM] PTR struct .
 18466 ;;		 -> dev(3), 
 18467 ;; Auto vars:     Size  Location     Type
 18468 ;;  rv              1   12[COMRAM] unsigned char 
 18469 ;; Return value:  Size  Location     Type
 18470 ;;                  1    wreg      unsigned char 
 18471 ;; Registers used:
 18472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18473 ;; Tracked objects:
 18474 ;;		On entry : 0/0
 18475 ;;		On exit  : 0/0
 18476 ;;		Unchanged: 0/0
 18477 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18481 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18482 ;;Total ram usage:        3 bytes
 18483 ;; Hardware stack levels used: 1
 18484 ;; Hardware stack levels required when called: 3
 18485 ;; This function calls:
 18486 ;;		i2_Nrf24_readRegister
 18487 ;; This function is called by:
 18488 ;;		i2_Nrf24_dataReady
 18489 ;; This function uses a non-reentrant model
 18490 ;;
 18491                           
 18492                           	psect	text65
 18493   012766                     __ptext65:
 18494                           	callstack 0
 18495   012766                     i2_Nrf24_getStatus:
 18496                           	callstack 109
 18497   012766                     
 18498                           ;mirf.c: 298:  uint8_t rv;;mirf.c: 299:  Nrf24_readRegister(0x07, &rv, 1);
 18499   012766  0E0D               	movlw	low i2Nrf24_getStatus@rv
 18500   012768  6E07               	movwf	i2Nrf24_readRegister@value^(0+1280),c
 18501   01276A  0E05               	movlw	high i2Nrf24_getStatus@rv
 18502   01276C  6E08               	movwf	(i2Nrf24_readRegister@value+1)^(0+1280),c
 18503   01276E  0E01               	movlw	1
 18504   012770  6E09               	movwf	i2Nrf24_readRegister@len^(0+1280),c
 18505   012772  0E07               	movlw	7
 18506   012774  EC86  F092         	call	i2_Nrf24_readRegister
 18507   012778                     
 18508                           ;mirf.c: 300:  return rv;
 18509   012778  500D               	movf	i2Nrf24_getStatus@rv^(0+1280),w,c
 18510   01277A  0012               	return		;funcret
 18511   01277C                     __end_ofi2_Nrf24_getStatus:
 18512                           	callstack 0
 18513                           
 18514 ;; *************** function i2_Nrf24_readRegister *****************
 18515 ;; Defined at:
 18516 ;;		line 207 in file "mirf.c"
 18517 ;; Parameters:    Size  Location     Type
 18518 ;;  reg             1    wreg     unsigned char 
 18519 ;;  value           2    6[COMRAM] PTR unsigned char 
 18520 ;;		 -> i2Nrf24_getStatus@rv(1), Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1),
      + 
 18521 ;;		 -> Nrf24_getCRCLength@config(1), Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_
      +register@buffer(5), 
 18522 ;;		 -> Nrf24_setRetransmitDelay@value(1), Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getSt
      +atus@rv(1), 
 18523 ;;		 -> Nrf24_rxFifoEmpty@fifoStatus(1), Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), 
 18524 ;;  len             1    8[COMRAM] unsigned char 
 18525 ;; Auto vars:     Size  Location     Type
 18526 ;;  reg             1    9[COMRAM] unsigned char 
 18527 ;; Return value:  Size  Location     Type
 18528 ;;                  1    wreg      void 
 18529 ;; Registers used:
 18530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18531 ;; Tracked objects:
 18532 ;;		On entry : 0/0
 18533 ;;		On exit  : 0/0
 18534 ;;		Unchanged: 0/0
 18535 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18536 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18539 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18540 ;;Total ram usage:        4 bytes
 18541 ;; Hardware stack levels used: 1
 18542 ;; Hardware stack levels required when called: 2
 18543 ;; This function calls:
 18544 ;;		i2_SPI1_ByteExchange
 18545 ;;		i2_SPI_read_buff
 18546 ;; This function is called by:
 18547 ;;		i2_Nrf24_getStatus
 18548 ;; This function uses a non-reentrant model
 18549 ;;
 18550                           
 18551                           	psect	text66
 18552   01250C                     __ptext66:
 18553                           	callstack 0
 18554   01250C                     i2_Nrf24_readRegister:
 18555                           	callstack 109
 18556                           
 18557                           ;incstack = 0
 18558                           ;i2Nrf24_readRegister@reg stored from wreg
 18559   01250C  6E0A               	movwf	i2Nrf24_readRegister@reg^(0+1280),c
 18560   01250E                     
 18561                           ;mirf.c: 207: void Nrf24_readRegister(uint8_t reg, uint8_t * value, uint8_t len);mirf.c:
      +                           208: {;mirf.c: 209:     if(len) {
 18562   01250E  5009               	movf	i2Nrf24_readRegister@len^(0+1280),w,c
 18563   012510  B4D8               	btfsc	status,2,c
 18564   012512  EF8D  F092         	goto	i2u253_41
 18565   012516  EF8F  F092         	goto	i2u253_40
 18566   01251A                     i2u253_41:
 18567   01251A  EF9D  F092         	goto	i2l784
 18568   01251E                     i2u253_40:
 18569   01251E  9EC0               	bcf	192,7,c	;volatile
 18570   012520                     
 18571                           ;mirf.c: 211:         SPI1_ByteExchange(0x00 | (0x1F & reg));
 18572   012520  500A               	movf	i2Nrf24_readRegister@reg^(0+1280),w,c
 18573   012522  0B1F               	andlw	31
 18574   012524  ECB5  F092         	call	i2_SPI1_ByteExchange
 18575   012528                     
 18576                           ;mirf.c: 212:         SPI_read_buff(value, len);
 18577   012528  C507  F503         	movff	i2Nrf24_readRegister@value,i2SPI_read_buff@buffer
 18578   01252C  C508  F504         	movff	i2Nrf24_readRegister@value+1,i2SPI_read_buff@buffer+1
 18579   012530  C509  F505         	movff	i2Nrf24_readRegister@len,i2SPI_read_buff@bytes
 18580   012534  EC22  F092         	call	i2_SPI_read_buff	;wreg free
 18581   012538  8EC0               	bsf	192,7,c	;volatile
 18582   01253A                     i2l784:
 18583   01253A  0012               	return		;funcret
 18584   01253C                     __end_ofi2_Nrf24_readRegister:
 18585                           	callstack 0
 18586                           
 18587 ;; *************** function i2_SPI_read_buff *****************
 18588 ;; Defined at:
 18589 ;;		line 44 in file "mirf.c"
 18590 ;; Parameters:    Size  Location     Type
 18591 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 18592 ;;		 -> i2Nrf24_getStatus@rv(1), Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1),
      + 
 18593 ;;		 -> Nrf24_getCRCLength@config(1), Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_
      +register@buffer(5), 
 18594 ;;		 -> Nrf24_setRetransmitDelay@value(1), Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getSt
      +atus@rv(1), 
 18595 ;;		 -> Nrf24_rxFifoEmpty@fifoStatus(1), Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), 
 18596 ;;		 -> nrf_interrupt@buf(32), init_nrf@buf(32), 
 18597 ;;  bytes           1    4[COMRAM] unsigned char 
 18598 ;; Auto vars:     Size  Location     Type
 18599 ;;  i               1    5[COMRAM] unsigned char 
 18600 ;; Return value:  Size  Location     Type
 18601 ;;                  1    wreg      void 
 18602 ;; Registers used:
 18603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18604 ;; Tracked objects:
 18605 ;;		On entry : 0/0
 18606 ;;		On exit  : 0/0
 18607 ;;		Unchanged: 0/0
 18608 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18609 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18612 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18613 ;;Total ram usage:        4 bytes
 18614 ;; Hardware stack levels used: 1
 18615 ;; Hardware stack levels required when called: 1
 18616 ;; This function calls:
 18617 ;;		i2_SPI1_ByteExchange
 18618 ;; This function is called by:
 18619 ;;		i2_Nrf24_getData
 18620 ;;		i2_Nrf24_readRegister
 18621 ;; This function uses a non-reentrant model
 18622 ;;
 18623                           
 18624                           	psect	text67
 18625   012444                     __ptext67:
 18626                           	callstack 0
 18627   012444                     i2_SPI_read_buff:
 18628                           	callstack 111
 18629   012444  9EC0               	bcf	192,7,c	;volatile
 18630   012446                     
 18631                           ;mirf.c: 46:     unsigned char i;;mirf.c: 47:     for (i = 0; i < bytes; i++) {
 18632   012446  6A06               	clrf	i2SPI_read_buff@i^(0+1280),c
 18633   012448  EF31  F092         	goto	i2l3480
 18634   01244C                     i2l3474:
 18635                           
 18636                           ;mirf.c: 48:         *buffer = SPI1_ByteExchange(0xFF);
 18637   01244C  0EFF               	movlw	255
 18638   01244E  ECB5  F092         	call	i2_SPI1_ByteExchange
 18639   012452  C503  F4D9         	movff	i2SPI_read_buff@buffer,fsr2l
 18640   012456  C504  F4DA         	movff	i2SPI_read_buff@buffer+1,fsr2h
 18641   01245A  6EDF               	movwf	indf2,c
 18642   01245C                     
 18643                           ;mirf.c: 49:         buffer++;
 18644   01245C  4A03               	infsnz	i2SPI_read_buff@buffer^(0+1280),f,c
 18645   01245E  2A04               	incf	(i2SPI_read_buff@buffer+1)^(0+1280),f,c
 18646   012460                     
 18647                           ;mirf.c: 50:     }
 18648   012460  2A06               	incf	i2SPI_read_buff@i^(0+1280),f,c
 18649   012462                     i2l3480:
 18650   012462  5005               	movf	i2SPI_read_buff@bytes^(0+1280),w,c
 18651   012464  5C06               	subwf	i2SPI_read_buff@i^(0+1280),w,c
 18652   012466  A0D8               	btfss	status,0,c
 18653   012468  EF38  F092         	goto	i2u242_41
 18654   01246C  EF3A  F092         	goto	i2u242_40
 18655   012470                     i2u242_41:
 18656   012470  EF26  F092         	goto	i2l3474
 18657   012474                     i2u242_40:
 18658   012474  8EC0               	bsf	192,7,c	;volatile
 18659   012476  0012               	return		;funcret
 18660   012478                     __end_ofi2_SPI_read_buff:
 18661                           	callstack 0
 18662                           
 18663 ;; *************** function i2_SPI1_ByteExchange *****************
 18664 ;; Defined at:
 18665 ;;		line 208 in file "mcc_generated_files/spi/src/spi1.c"
 18666 ;; Parameters:    Size  Location     Type
 18667 ;;  byteData        1    wreg     unsigned char 
 18668 ;; Auto vars:     Size  Location     Type
 18669 ;;  byteData        1    0[COMRAM] unsigned char 
 18670 ;;  returnValue     1    1[COMRAM] unsigned char 
 18671 ;; Return value:  Size  Location     Type
 18672 ;;                  1    wreg      unsigned char 
 18673 ;; Registers used:
 18674 ;;		wreg, status,2, status,0
 18675 ;; Tracked objects:
 18676 ;;		On entry : 0/0
 18677 ;;		On exit  : 0/0
 18678 ;;		Unchanged: 0/0
 18679 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18684 ;;Total ram usage:        2 bytes
 18685 ;; Hardware stack levels used: 1
 18686 ;; This function calls:
 18687 ;;		Nothing
 18688 ;; This function is called by:
 18689 ;;		i2_SPI_read_buff
 18690 ;;		i2_Nrf24_getData
 18691 ;;		i2_Nrf24_configRegister
 18692 ;;		i2_Nrf24_readRegister
 18693 ;; This function uses a non-reentrant model
 18694 ;;
 18695                           
 18696                           	psect	text68
 18697   01256A                     __ptext68:
 18698                           	callstack 0
 18699   01256A                     i2_SPI1_ByteExchange:
 18700                           	callstack 111
 18701                           
 18702                           ;incstack = 0
 18703                           ;i2SPI1_ByteExchange@byteData stored from wreg
 18704   01256A  6E01               	movwf	i2SPI1_ByteExchange@byteData^(0+1280),c
 18705   01256C                     
 18706                           ;mcc_generated_files/spi/src/spi1.c: 212:  SPI1STATUSbits.CLRBF = 1U;
 18707   01256C  0100               	movlb	0	; () banked
 18708   01256E  8587               	bsf	135,2,b	;volatile
 18709   012570                     
 18710                           ; BSR set to: 0
 18711                           ;mcc_generated_files/spi/src/spi1.c: 215:  SPI1CON2 = SPI1CON2 | 0x1 | 0x2;
 18712   012570  5186               	movf	134,w,b	;volatile
 18713   012572  0903               	iorlw	3
 18714   012574  6F86               	movwf	134,b	;volatile
 18715   012576                     
 18716                           ; BSR set to: 0
 18717                           ;mcc_generated_files/spi/src/spi1.c: 218:  SPI1TCNTH = 0U;
 18718   012576  6B83               	clrf	131,b	;volatile
 18719   012578                     
 18720                           ; BSR set to: 0
 18721                           ;mcc_generated_files/spi/src/spi1.c: 219:  SPI1TCNTL = 1U;
 18722   012578  0E01               	movlw	1
 18723   01257A  6F82               	movwf	130,b	;volatile
 18724   01257C                     
 18725                           ; BSR set to: 0
 18726                           ;mcc_generated_files/spi/src/spi1.c: 221:  SPI1TXB = byteData;
 18727   01257C  C501  F081         	movff	i2SPI1_ByteExchange@byteData,129	;volatile
 18728   012580                     i2l102:
 18729                           
 18730                           ;mcc_generated_files/spi/src/spi1.c: 223:  while(!PIR3bits.SPI1RXIF)
 18731   012580  A0B1               	btfss	177,0,c	;volatile
 18732   012582  EFC5  F092         	goto	i2u229_41
 18733   012586  EFC7  F092         	goto	i2u229_40
 18734   01258A                     i2u229_41:
 18735   01258A  EFC0  F092         	goto	i2l102
 18736   01258E                     i2u229_40:
 18737   01258E                     
 18738                           ;mcc_generated_files/spi/src/spi1.c: 227:  returnValue = SPI1RXB;
 18739   01258E  C080 F502          	movff	128,i2SPI1_ByteExchange@returnValue	;volatile
 18740   012592                     
 18741                           ;mcc_generated_files/spi/src/spi1.c: 228:  return returnValue;
 18742   012592  5002               	movf	i2SPI1_ByteExchange@returnValue^(0+1280),w,c
 18743   012594  0012               	return		;funcret
 18744   012596                     __end_ofi2_SPI1_ByteExchange:
 18745                           	callstack 0
 18746                           
 18747 ;; *************** function _TMR0_OverflowISR *****************
 18748 ;; Defined at:
 18749 ;;		line 110 in file "mcc_generated_files/timer/src/tmr0.c"
 18750 ;; Parameters:    Size  Location     Type
 18751 ;;		None
 18752 ;; Auto vars:     Size  Location     Type
 18753 ;;		None
 18754 ;; Return value:  Size  Location     Type
 18755 ;;                  1    wreg      void 
 18756 ;; Registers used:
 18757 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 18758 ;; Tracked objects:
 18759 ;;		On entry : 0/0
 18760 ;;		On exit  : 0/0
 18761 ;;		Unchanged: 0/0
 18762 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18767 ;;Total ram usage:        0 bytes
 18768 ;; Hardware stack levels used: 1
 18769 ;; Hardware stack levels required when called: 1
 18770 ;; This function calls:
 18771 ;;		NULL
 18772 ;;		_TMR0_DefaultOverflowCallback
 18773 ;; This function is called by:
 18774 ;;		_INTERRUPT_InterruptManager
 18775 ;; This function uses a non-reentrant model
 18776 ;;
 18777                           
 18778                           	psect	text69
 18779   0124AA                     __ptext69:
 18780                           	callstack 0
 18781   0124AA                     _TMR0_OverflowISR:
 18782                           	callstack 113
 18783   0124AA                     
 18784                           ;mcc_generated_files/timer/src/tmr0.c: 113:     PIR3bits.TMR0IF = 0;
 18785   0124AA  9EB1               	bcf	177,7,c	;volatile
 18786   0124AC                     
 18787                           ;mcc_generated_files/timer/src/tmr0.c: 116:     if(TMR0_OverflowCallback)
 18788   0124AC  5037               	movf	_TMR0_OverflowCallback^(0+1280),w,c
 18789   0124AE  1038               	iorwf	(_TMR0_OverflowCallback+1)^(0+1280),w,c
 18790   0124B0  1039               	iorwf	(_TMR0_OverflowCallback+2)^(0+1280),w,c
 18791   0124B2  B4D8               	btfsc	status,2,c
 18792   0124B4  EF5E  F092         	goto	i2u118_41
 18793   0124B8  EF60  F092         	goto	i2u118_40
 18794   0124BC                     i2u118_41:
 18795   0124BC  EF6D  F092         	goto	i2l449
 18796   0124C0                     i2u118_40:
 18797   0124C0                     
 18798                           ;mcc_generated_files/timer/src/tmr0.c: 117:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          118:         TMR0_OverflowCallback();
 18799   0124C0  D802               	call	i2u119_48
 18800   0124C2  EF6D  F092         	goto	i2u119_49
 18801   0124C6                     i2u119_48:
 18802   0124C6  0005               	push	
 18803   0124C8  6EFA               	movwf	pclath,c
 18804   0124CA  5037               	movf	_TMR0_OverflowCallback^(0+1280),w,c
 18805   0124CC  6EFD               	movwf	tosl,c
 18806   0124CE  5038               	movf	(_TMR0_OverflowCallback+1)^(0+1280),w,c
 18807   0124D0  6EFE               	movwf	tosh,c
 18808   0124D2  5039               	movf	(_TMR0_OverflowCallback+2)^(0+1280),w,c
 18809   0124D4  6EFF               	movwf	tosu,c
 18810   0124D6  50FA               	movf	pclath,w,c
 18811   0124D8  0012               	return		;indir
 18812   0124DA                     i2u119_49:
 18813   0124DA                     i2l449:
 18814   0124DA  0012               	return		;funcret
 18815   0124DC                     __end_of_TMR0_OverflowISR:
 18816                           	callstack 0
 18817                           
 18818 ;; *************** function _TMR0_DefaultOverflowCallback *****************
 18819 ;; Defined at:
 18820 ;;		line 127 in file "mcc_generated_files/timer/src/tmr0.c"
 18821 ;; Parameters:    Size  Location     Type
 18822 ;;		None
 18823 ;; Auto vars:     Size  Location     Type
 18824 ;;		None
 18825 ;; Return value:  Size  Location     Type
 18826 ;;                  1    wreg      void 
 18827 ;; Registers used:
 18828 ;;		None
 18829 ;; Tracked objects:
 18830 ;;		On entry : 0/0
 18831 ;;		On exit  : 0/0
 18832 ;;		Unchanged: 0/0
 18833 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18838 ;;Total ram usage:        0 bytes
 18839 ;; Hardware stack levels used: 1
 18840 ;; This function calls:
 18841 ;;		Nothing
 18842 ;; This function is called by:
 18843 ;;		_TMR0_Initialize
 18844 ;;		_TMR0_OverflowISR
 18845 ;; This function uses a non-reentrant model
 18846 ;;
 18847                           
 18848                           	psect	text70
 18849   0127DA                     __ptext70:
 18850                           	callstack 0
 18851   0127DA                     _TMR0_DefaultOverflowCallback:
 18852                           	callstack 113
 18853   0127DA  0012               	return		;funcret
 18854   0127DC                     __end_of_TMR0_DefaultOverflowCallback:
 18855                           	callstack 0
 18856                           
 18857                           ;
 18858                           ; H/W Interrupt Vector Table @ 0x8
 18859                           ;
 18860                           
 18861                           	psect	ivt0x8
 18862   000008                     __pivt0x8:
 18863                           	callstack 0
 18864   000008                     ivt0x8_base:
 18865                           	callstack 0
 18866                           
 18867                           ; high-priority vector
 18868   000008  EFA2  F08E         	goto	_INTERRUPT_InterruptManager
 18869   000018                     	org	16
 18870                           
 18871                           ; low-priority vector
 18872   000018  00FF               	reset	
 18873                           
 18874                           	psect	rparam
 18875   000001                     ___rparam_used  equ	1
 18876   000000                     ___param_bank   equ	0
 18877   000000                     __Lparam        equ	__Lrparam
 18878   000000                     __Hparam        equ	__Hrparam
 18879                           
 18880                           	psect	idloc
 18881                           
 18882                           ;Config register IDLOC0 @ 0x200000
 18883                           ;	unspecified, using default values
 18884   200000                     	org	2097152
 18885   200000  FFFF               	dw	65535
 18886                           
 18887                           ;Config register IDLOC1 @ 0x200002
 18888                           ;	unspecified, using default values
 18889   200002                     	org	2097154
 18890   200002  FFFF               	dw	65535
 18891                           
 18892                           ;Config register IDLOC2 @ 0x200004
 18893                           ;	unspecified, using default values
 18894   200004                     	org	2097156
 18895   200004  FFFF               	dw	65535
 18896                           
 18897                           ;Config register IDLOC3 @ 0x200006
 18898                           ;	unspecified, using default values
 18899   200006                     	org	2097158
 18900   200006  FFFF               	dw	65535
 18901                           
 18902                           ;Config register IDLOC4 @ 0x200008
 18903                           ;	unspecified, using default values
 18904   200008                     	org	2097160
 18905   200008  FFFF               	dw	65535
 18906                           
 18907                           ;Config register IDLOC5 @ 0x20000A
 18908                           ;	unspecified, using default values
 18909   20000A                     	org	2097162
 18910   20000A  FFFF               	dw	65535
 18911                           
 18912                           ;Config register IDLOC6 @ 0x20000C
 18913                           ;	unspecified, using default values
 18914   20000C                     	org	2097164
 18915   20000C  FFFF               	dw	65535
 18916                           
 18917                           ;Config register IDLOC7 @ 0x20000E
 18918                           ;	unspecified, using default values
 18919   20000E                     	org	2097166
 18920   20000E  FFFF               	dw	65535
 18921                           
 18922                           ;Config register IDLOC8 @ 0x200010
 18923                           ;	unspecified, using default values
 18924   200010                     	org	2097168
 18925   200010  FFFF               	dw	65535
 18926                           
 18927                           ;Config register IDLOC9 @ 0x200012
 18928                           ;	unspecified, using default values
 18929   200012                     	org	2097170
 18930   200012  FFFF               	dw	65535
 18931                           
 18932                           ;Config register IDLOC10 @ 0x200014
 18933                           ;	unspecified, using default values
 18934   200014                     	org	2097172
 18935   200014  FFFF               	dw	65535
 18936                           
 18937                           ;Config register IDLOC11 @ 0x200016
 18938                           ;	unspecified, using default values
 18939   200016                     	org	2097174
 18940   200016  FFFF               	dw	65535
 18941                           
 18942                           ;Config register IDLOC12 @ 0x200018
 18943                           ;	unspecified, using default values
 18944   200018                     	org	2097176
 18945   200018  FFFF               	dw	65535
 18946                           
 18947                           ;Config register IDLOC13 @ 0x20001A
 18948                           ;	unspecified, using default values
 18949   20001A                     	org	2097178
 18950   20001A  FFFF               	dw	65535
 18951                           
 18952                           ;Config register IDLOC14 @ 0x20001C
 18953                           ;	unspecified, using default values
 18954   20001C                     	org	2097180
 18955   20001C  FFFF               	dw	65535
 18956                           
 18957                           ;Config register IDLOC15 @ 0x20001E
 18958                           ;	unspecified, using default values
 18959   20001E                     	org	2097182
 18960   20001E  FFFF               	dw	65535
 18961                           
 18962                           ;Config register IDLOC16 @ 0x200020
 18963                           ;	unspecified, using default values
 18964   200020                     	org	2097184
 18965   200020  FFFF               	dw	65535
 18966                           
 18967                           ;Config register IDLOC17 @ 0x200022
 18968                           ;	unspecified, using default values
 18969   200022                     	org	2097186
 18970   200022  FFFF               	dw	65535
 18971                           
 18972                           ;Config register IDLOC18 @ 0x200024
 18973                           ;	unspecified, using default values
 18974   200024                     	org	2097188
 18975   200024  FFFF               	dw	65535
 18976                           
 18977                           ;Config register IDLOC19 @ 0x200026
 18978                           ;	unspecified, using default values
 18979   200026                     	org	2097190
 18980   200026  FFFF               	dw	65535
 18981                           
 18982                           ;Config register IDLOC20 @ 0x200028
 18983                           ;	unspecified, using default values
 18984   200028                     	org	2097192
 18985   200028  FFFF               	dw	65535
 18986                           
 18987                           ;Config register IDLOC21 @ 0x20002A
 18988                           ;	unspecified, using default values
 18989   20002A                     	org	2097194
 18990   20002A  FFFF               	dw	65535
 18991                           
 18992                           ;Config register IDLOC22 @ 0x20002C
 18993                           ;	unspecified, using default values
 18994   20002C                     	org	2097196
 18995   20002C  FFFF               	dw	65535
 18996                           
 18997                           ;Config register IDLOC23 @ 0x20002E
 18998                           ;	unspecified, using default values
 18999   20002E                     	org	2097198
 19000   20002E  FFFF               	dw	65535
 19001                           
 19002                           ;Config register IDLOC24 @ 0x200030
 19003                           ;	unspecified, using default values
 19004   200030                     	org	2097200
 19005   200030  FFFF               	dw	65535
 19006                           
 19007                           ;Config register IDLOC25 @ 0x200032
 19008                           ;	unspecified, using default values
 19009   200032                     	org	2097202
 19010   200032  FFFF               	dw	65535
 19011                           
 19012                           ;Config register IDLOC26 @ 0x200034
 19013                           ;	unspecified, using default values
 19014   200034                     	org	2097204
 19015   200034  FFFF               	dw	65535
 19016                           
 19017                           ;Config register IDLOC27 @ 0x200036
 19018                           ;	unspecified, using default values
 19019   200036                     	org	2097206
 19020   200036  FFFF               	dw	65535
 19021                           
 19022                           ;Config register IDLOC28 @ 0x200038
 19023                           ;	unspecified, using default values
 19024   200038                     	org	2097208
 19025   200038  FFFF               	dw	65535
 19026                           
 19027                           ;Config register IDLOC29 @ 0x20003A
 19028                           ;	unspecified, using default values
 19029   20003A                     	org	2097210
 19030   20003A  FFFF               	dw	65535
 19031                           
 19032                           ;Config register IDLOC30 @ 0x20003C
 19033                           ;	unspecified, using default values
 19034   20003C                     	org	2097212
 19035   20003C  FFFF               	dw	65535
 19036                           
 19037                           ;Config register IDLOC31 @ 0x20003E
 19038                           ;	unspecified, using default values
 19039   20003E                     	org	2097214
 19040   20003E  FFFF               	dw	65535
 19041                           
 19042                           	psect	config
 19043                           
 19044                           ;Config register CONFIG1 @ 0x300000
 19045                           ;	External Oscillator Selection
 19046                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
 19047                           ;	Reset Oscillator Selection
 19048                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 19049   300000                     	org	3145728
 19050   300000  8F                 	db	143
 19051                           
 19052                           ;Config register CONFIG2 @ 0x300001
 19053                           ;	Clock out Enable bit
 19054                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 19055                           ;	PRLOCKED One-Way Set Enable bit
 19056                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 19057                           ;	Clock Switch Enable bit
 19058                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 19059                           ;	Fail-Safe Clock Monitor Enable bit
 19060                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 19061   300001                     	org	3145729
 19062   300001  FF                 	db	255
 19063                           
 19064                           ;Config register CONFIG3 @ 0x300002
 19065                           ;	MCLR Enable bit
 19066                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 19067                           ;	Power-up timer selection bits
 19068                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 19069                           ;	Multi-vector enable bit
 19070                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 19071                           ;	IVTLOCK bit One-way set enable bit
 19072                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 19073                           ;	Low Power BOR Enable bit
 19074                           ;	LPBOREN = OFF, Low-Power BOR disabled
 19075                           ;	Brown-out Reset Enable bits
 19076                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 19077   300002                     	org	3145730
 19078   300002  F7                 	db	247
 19079                           
 19080                           ;Config register CONFIG4 @ 0x300003
 19081                           ;	Brown-out Reset Voltage Selection bits
 19082                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 19083                           ;	ZCD Disable bit
 19084                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 19085                           ;	PPSLOCK bit One-Way Set Enable bit
 19086                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 19087                           ;	Stack Full/Underflow Reset Enable bit
 19088                           ;	STVREN = ON, Stack full/underflow will cause Reset
 19089                           ;	Low Voltage Programming Enable bit
 19090                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 19091                           ;	Extended Instruction Set Enable bit
 19092                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 19093   300003                     	org	3145731
 19094   300003  FF                 	db	255
 19095                           
 19096                           ;Config register CONFIG5 @ 0x300004
 19097                           ;	WDT Period selection bits
 19098                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 19099                           ;	WDT operating mode
 19100                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 19101   300004                     	org	3145732
 19102   300004  9F                 	db	159
 19103                           
 19104                           ;Config register CONFIG6 @ 0x300005
 19105                           ;	WDT Window Select bits
 19106                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 19107                           ;	WDT input clock selector
 19108                           ;	WDTCCS = SC, Software Control
 19109   300005                     	org	3145733
 19110   300005  FF                 	db	255
 19111                           
 19112                           ;Config register CONFIG7 @ 0x300006
 19113                           ;	Boot Block Size selection bits
 19114                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 19115                           ;	Boot Block enable bit
 19116                           ;	BBEN = OFF, Boot block disabled
 19117                           ;	Storage Area Flash enable bit
 19118                           ;	SAFEN = OFF, SAF disabled
 19119                           ;	Background Debugger
 19120                           ;	DEBUG = 0x1, unprogrammed default
 19121   300006                     	org	3145734
 19122   300006  FF                 	db	255
 19123                           
 19124                           ;Config register CONFIG8 @ 0x300007
 19125                           ;	Boot Block Write Protection bit
 19126                           ;	WRTB = OFF, Boot Block not Write protected
 19127                           ;	Configuration Register Write Protection bit
 19128                           ;	WRTC = OFF, Configuration registers not Write protected
 19129                           ;	Data EEPROM Write Protection bit
 19130                           ;	WRTD = OFF, Data EEPROM not Write protected
 19131                           ;	SAF Write protection bit
 19132                           ;	WRTSAF = OFF, SAF not Write Protected
 19133                           ;	Application Block write protection bit
 19134                           ;	WRTAPP = OFF, Application Block not write protected
 19135   300007                     	org	3145735
 19136   300007  FF                 	db	255
 19137                           
 19138                           ;Config register CONFIG10 @ 0x300009
 19139                           ;	PFM and Data EEPROM Code Protection bit
 19140                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 19141   300009                     	org	3145737
 19142   300009  FF                 	db	255
 19143                           tosu	equ	0x4FF
 19144                           tosh	equ	0x4FE
 19145                           tosl	equ	0x4FD
 19146                           stkptr	equ	0x4FC
 19147                           pclatu	equ	0x4FB
 19148                           pclath	equ	0x4FA
 19149                           pcl	equ	0x4F9
 19150                           tblptru	equ	0x4F8
 19151                           tblptrh	equ	0x4F7
 19152                           tblptrl	equ	0x4F6
 19153                           tablat	equ	0x4F5
 19154                           prodh	equ	0x4F4
 19155                           prodl	equ	0x4F3
 19156                           indf0	equ	0x4EF
 19157                           postinc0	equ	0x4EE
 19158                           postdec0	equ	0x4ED
 19159                           preinc0	equ	0x4EC
 19160                           plusw0	equ	0x4EB
 19161                           fsr0h	equ	0x4EA
 19162                           fsr0l	equ	0x4E9
 19163                           wreg	equ	0x4E8
 19164                           indf1	equ	0x4E7
 19165                           postinc1	equ	0x4E6
 19166                           postdec1	equ	0x4E5
 19167                           preinc1	equ	0x4E4
 19168                           plusw1	equ	0x4E3
 19169                           fsr1h	equ	0x4E2
 19170                           fsr1l	equ	0x4E1
 19171                           bsr	equ	0x4E0
 19172                           indf2	equ	0x4DF
 19173                           postinc2	equ	0x4DE
 19174                           postdec2	equ	0x4DD
 19175                           preinc2	equ	0x4DC
 19176                           plusw2	equ	0x4DB
 19177                           fsr2h	equ	0x4DA
 19178                           fsr2l	equ	0x4D9
 19179                           status	equ	0x4D8

Data Sizes:
    Strings     327
    Constant    100
    Data        688
    BSS         448
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     54      74
    BANK5           160    134     139
    BANK6           256    232     256
    BANK7           256    200     232
    BANK8           256    200     232
    BANK9           256    200     232
    BANK10          256      0     200
    BANK11          256      0     200
    BANK12          256      0     200
    BANK13          256      0     200
    BANK14          256      0     200
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK7[32]), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    Nrf24_config@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_dataReady@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_flushRx@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_getCRCLength@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_getData@data	PTR unsigned char  size(2) Largest target is 32
		 -> init_nrf@buf(BANK5[32]), nrf_interrupt@buf(COMRAM[32]), 

    Nrf24_getData@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_getDataRate@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_getPALevel@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_getRetransmitDelay@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_getStatus@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_init@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_powerUpRx@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_print_address_register@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_print_address_register@name	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_4(CODE[13]), STR_6(CODE[9]), 

    Nrf24_print_byte_register@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_print_byte_register@name	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_10(CODE[7]), STR_11(CODE[9]), STR_12(CODE[8]), STR_13(CODE[14]), 
		 -> STR_5(CODE[13]), STR_7(CODE[11]), STR_8(CODE[7]), STR_9(CODE[10]), 

    Nrf24_printDetails@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_readRegister@value	PTR unsigned char  size(2) Largest target is 5
		 -> Nrf24_addRADDR@value(COMRAM[1]), Nrf24_getCRCLength@AA(BANK5[1]), Nrf24_getCRCLength@config(BANK5[1]), Nrf24_getDataRate@dr(BANK5[1]), 
		 -> Nrf24_getPALevel@level(BANK5[1]), Nrf24_getRetransmitDelay@value(BANK5[1]), Nrf24_getStatus@rv(BANK5[1]), Nrf24_print_address_register@buffer(BANK5[5]), 
		 -> Nrf24_print_byte_register@buffer(BANK5[1]), Nrf24_rxFifoEmpty@fifoStatus(COMRAM[1]), Nrf24_SetOutputRF_PWR@value(COMRAM[1]), Nrf24_setRADDR@buffer(BANK5[5]), 
		 -> Nrf24_setRetransmitDelay@value(BANK5[1]), Nrf24_SetSpeedDataRates@value(BANK5[1]), Nrf24_setTADDR@buffer(BANK5[5]), 

    Nrf24_setRADDR@adr	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    Nrf24_setRADDR@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_setRetransmitDelay@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_SetSpeedDataRates@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_setTADDR@adr	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    Nrf24_setTADDR@dev	PTR struct . size(2) Largest target is 3
		 -> dev(COMRAM[3]), 

    Nrf24_writeRegister@value	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), STR_2(CODE[6]), 

    NULL$0	PTR FTN()void  size(3) Largest target is 0

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK7[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_14(CODE[17]), STR_15(CODE[18]), STR_16(CODE[16]), STR_17(CODE[21]), 
		 -> STR_18(CODE[70]), STR_19(CODE[6]), STR_20(CODE[4]), STR_21(CODE[5]), 
		 -> STR_22(CODE[3]), STR_23(CODE[6]), STR_24(CODE[8]), STR_25(CODE[3]), 
		 -> STR_3(CODE[53]), 

    RC6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> nrf_interrupt(), NULL(), 

    RC6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> nrf_interrupt(), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    S2042$buffer	PTR unsigned char  size(2) Largest target is 0

    S2042$source	PTR const unsigned char  size(2) Largest target is 0

    S40$4$0	PTR void  size(2) Largest target is 0

    S40$5$0	PTR void  size(2) Largest target is 0

    S40$6$0	PTR void  size(2) Largest target is 0

    S40SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S40SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferRead(), 

    S40SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S40SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S40SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteRead(), 

    S40SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S40SPI_INTERFACE$Close	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    S40SPI_INTERFACE$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S40SPI_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Initialize(), 

    S40SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S40SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S40SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(3) Largest target is 1
		 -> SPI1_Open(), 

    S40SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S40SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S882$4$0	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), 

    S882TMR_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), 

    S882TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), 

    S882TMR_INTERFACE$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), 

    S882TMR_INTERFACE$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), 

    S882TMR_INTERFACE$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    S882TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    sendGrid@grid	PTR unsigned char  size(2) Largest target is 200
		 -> main@gridB(BANK9[200]), received_data(BANK10[200]), 

    sp__memset	PTR void  size(2) Largest target is 0

    sp__Nrf24_getDataRateString	PTR unsigned char  size(2) Largest target is 24
		 -> rf24_datarates(BANK6[24]), 

    sp__Nrf24_getPALevelString	PTR unsigned char  size(2) Largest target is 32
		 -> rf24_pa_dbm(BANK9[32]), 

    SPI1_nrf24$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_nrf24$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_nrf24$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_nrf24$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> i2_SPI1_ByteExchange(), SPI1_ByteExchange(), 

    SPI1_nrf24$ByteRead	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_nrf24$ByteWrite	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_nrf24$Close	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_nrf24$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_nrf24$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_nrf24$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_nrf24$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_nrf24$Open	PTR FTN(unsigned char ,)_Bool  size(3) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_nrf24$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    SPI1_nrf24$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    SPI_read_buff@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> init_nrf@buf(BANK5[32]), Nrf24_addRADDR@value(COMRAM[1]), Nrf24_getCRCLength@AA(BANK5[1]), Nrf24_getCRCLength@config(BANK5[1]), 
		 -> Nrf24_getDataRate@dr(BANK5[1]), Nrf24_getPALevel@level(BANK5[1]), Nrf24_getRetransmitDelay@value(BANK5[1]), Nrf24_getStatus@rv(BANK5[1]), 
		 -> Nrf24_print_address_register@buffer(BANK5[5]), Nrf24_print_byte_register@buffer(BANK5[1]), Nrf24_rxFifoEmpty@fifoStatus(COMRAM[1]), Nrf24_SetOutputRF_PWR@value(COMRAM[1]), 
		 -> Nrf24_setRADDR@buffer(BANK5[5]), Nrf24_setRetransmitDelay@value(BANK5[1]), Nrf24_SetSpeedDataRates@value(BANK5[1]), Nrf24_setTADDR@buffer(BANK5[5]), 
		 -> nrf_interrupt@buf(COMRAM[32]), 

    SPI_write_buff@buffer	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), STR_2(CODE[6]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK5[2]), rf24_crclength(CODE[30]), rf24_datarates(BANK6[24]), rf24_pa_dbm(BANK9[32]), 
		 -> STR_10(CODE[7]), STR_11(CODE[9]), STR_12(CODE[8]), STR_13(CODE[14]), 
		 -> STR_26(CODE[7]), STR_4(CODE[13]), STR_5(CODE[13]), STR_6(CODE[9]), 
		 -> STR_7(CODE[11]), STR_8(CODE[7]), STR_9(CODE[10]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK5[2]), rf24_crclength(CODE[30]), rf24_datarates(BANK6[24]), rf24_pa_dbm(BANK9[32]), 
		 -> STR_10(CODE[7]), STR_11(CODE[9]), STR_12(CODE[8]), STR_13(CODE[14]), 
		 -> STR_4(CODE[13]), STR_5(CODE[13]), STR_6(CODE[9]), STR_7(CODE[11]), 
		 -> STR_8(CODE[7]), STR_9(CODE[10]), 

    Timer0$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), 

    Timer0$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), 

    Timer0$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), NULL(), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 70
		 -> STR_14(CODE[17]), STR_15(CODE[18]), STR_16(CODE[16]), STR_17(CODE[21]), 
		 -> STR_18(CODE[70]), STR_19(CODE[6]), STR_20(CODE[4]), STR_21(CODE[5]), 
		 -> STR_22(CODE[3]), STR_23(CODE[6]), STR_24(CODE[8]), STR_25(CODE[3]), 
		 -> STR_3(CODE[53]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 70
		 -> STR_14(CODE[17]), STR_15(CODE[18]), STR_16(CODE[16]), STR_17(CODE[21]), 
		 -> STR_18(CODE[70]), STR_19(CODE[6]), STR_20(CODE[4]), STR_21(CODE[5]), 
		 -> STR_22(CODE[3]), STR_23(CODE[6]), STR_24(CODE[8]), STR_25(CODE[3]), 
		 -> STR_3(CODE[53]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_14(CODE[17]), STR_15(CODE[18]), STR_16(CODE[16]), STR_17(CODE[21]), 
		 -> STR_18(CODE[70]), STR_19(CODE[6]), STR_20(CODE[4]), STR_21(CODE[5]), 
		 -> STR_22(CODE[3]), STR_23(CODE[6]), STR_24(CODE[8]), STR_25(CODE[3]), 
		 -> STR_3(CODE[53]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_nrf_interrupt
    _nrf_interrupt->i2_sendGrid
    i2_sendGrid->i2_sendCell
    i2_sendCell->i2_sendRGB
    i2_sendRGB->i2_sendByte
    i2_Nrf24_getData->i2_SPI_read_buff
    i2_Nrf24_configRegister->i2_SPI1_ByteExchange
    i2_Nrf24_dataReady->i2_Nrf24_getStatus
    i2_Nrf24_getStatus->i2_Nrf24_readRegister
    i2_Nrf24_readRegister->i2_SPI_read_buff
    i2_SPI_read_buff->i2_SPI1_ByteExchange

Critical Paths under _main in BANK5

    _main->_init_nrf
    _sendGrid->_sendCell
    _sendCell->_sendRGB
    _sendRGB->_sendByte
    _init_nrf->_Nrf24_printDetails
    _Nrf24_setTADDR->_Nrf24_readRegister
    _Nrf24_setTADDR->_Nrf24_writeRegister
    _Nrf24_setRetransmitDelay->_Nrf24_readRegister
    _Nrf24_setRADDR->_Nrf24_readRegister
    _Nrf24_setRADDR->_Nrf24_writeRegister
    _Nrf24_writeRegister->_SPI_write_buff
    _SPI_write_buff->_DELAY_microseconds
    _SPI_write_buff->_SPI1_ByteExchange
    _Nrf24_printDetails->_Nrf24_print_address_register
    _Nrf24_print_status->_printf
    _Nrf24_print_byte_register->_printf
    _Nrf24_print_address_register->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Nrf24_getRetransmitDelay->_Nrf24_readRegister
    _Nrf24_getPALevel->_Nrf24_readRegister
    _Nrf24_getDataRate->_Nrf24_readRegister
    _Nrf24_getCRCLength->_Nrf24_readRegister
    _Nrf24_init->_SPI1_Open
    _Nrf24_getData->_SPI_read_buff
    _Nrf24_dataReady->_Nrf24_getStatus
    _Nrf24_config->_Nrf24_getStatus
    _Nrf24_powerUpRx->_Nrf24_configRegister
    _Nrf24_getStatus->_Nrf24_readRegister
    _Nrf24_flushRx->_SPI1_ByteExchange
    _Nrf24_SetSpeedDataRates->_Nrf24_readRegister
    _Nrf24_readRegister->_SPI_read_buff
    _SPI_read_buff->_SPI1_ByteExchange
    _Nrf24_configRegister->_SPI1_ByteExchange
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               832   832      0   28722
                                              0 BANK6    232   232      0
                                              0 BANK7    200   200      0
                                              0 BANK8    200   200      0
                                              0 BANK9    200   200      0
            _RC6_SetInterruptHandler
                  _SYSTEM_Initialize
                           _init_nrf
                           _sendGrid
 ---------------------------------------------------------------------------------
 (1) _sendGrid                                            13    11      2     747
                                              5 BANK5     13    11      2
                           _sendCell
 ---------------------------------------------------------------------------------
 (2) _sendCell                                             2     2      0     409
                                              4 BANK5      1     1      0
                            _sendRGB
 ---------------------------------------------------------------------------------
 (3) _sendRGB                                              3     1      2     313
                                              1 BANK5      3     1      2
                           _sendByte
 ---------------------------------------------------------------------------------
 (4) _sendByte                                             1     1      0     232
                                              0 BANK5      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_nrf                                            34    34      0   27875
                                            100 BANK5     34    34      0
                 _DELAY_milliseconds
            _Nrf24_SetSpeedDataRates
                       _Nrf24_config
                    _Nrf24_dataReady
                      _Nrf24_getData
                         _Nrf24_init
                 _Nrf24_printDetails
                     _Nrf24_setRADDR
           _Nrf24_setRetransmitDelay
                     _Nrf24_setTADDR
 ---------------------------------------------------------------------------------
 (2) _Nrf24_setTADDR                                      16    12      4     861
                                             10 BANK5     16    12      4
                 _Nrf24_readRegister
                _Nrf24_writeRegister
 ---------------------------------------------------------------------------------
 (2) _Nrf24_setRetransmitDelay                             4     1      3     551
                                             10 BANK5      4     1      3
               _Nrf24_configRegister
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (2) _Nrf24_setRADDR                                      16    12      4     839
                                             10 BANK5     16    12      4
                 _Nrf24_readRegister
                _Nrf24_writeRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_writeRegister                                  4     1      3     326
                                              6 BANK5      4     1      3
                  _SPI1_ByteExchange
                     _SPI_write_buff
 ---------------------------------------------------------------------------------
 (4) _SPI_write_buff                                       4     1      3     172
                                              2 BANK5      4     1      3
                 _DELAY_microseconds
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _DELAY_microseconds                                   2     0      2      46
                                              0 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Nrf24_printDetails                                   9     7      2   22983
                                             91 BANK5      9     7      2
                 _Nrf24_getCRCLength
                  _Nrf24_getDataRate
                   _Nrf24_getPALevel
           _Nrf24_getRetransmitDelay
                    _Nrf24_getStatus
       _Nrf24_print_address_register
          _Nrf24_print_byte_register
                 _Nrf24_print_status
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_status                                   2     2      0    5049
                                             77 BANK5      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_byte_register                            7     1      6    5326
                                             77 BANK5      7     1      6
                 _Nrf24_readRegister
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_address_register                        14     8      6    5371
                                             77 BANK5     14     8      6
                 _Nrf24_readRegister
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              18     4     14    4875
                                             61 BANK5     16     2     14
                 _Nrf24_getCRCLength (ARG)
                  _Nrf24_getDataRate (ARG)
                   _Nrf24_getPALevel (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    4802
                                             53 BANK5      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           16    10      6    4658
                                             38 BANK5     15     9      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                13     9      4    1060
                                             25 BANK5     13     9      4
                                _pad
 ---------------------------------------------------------------------------------
 (6) _stoa                                                14    10      4     557
                                              9 BANK5     14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   9     5      4     182
                                              0 BANK5      9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                12     8      4    1840
                                             25 BANK5     12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  9     3      6     762
                                             16 BANK5      9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4     339
                                              9 BANK5      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     238
                                              0 BANK5      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      67
                                              6 BANK5      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     298
                                              0 BANK5      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     302
                                              0 BANK5      8     4      4
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getRetransmitDelay                             3     1      2     353
                                             10 BANK5      3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getPALevel                                     3     1      2     377
                                             10 BANK5      3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getDataRate                                    4     2      2     424
                                             10 BANK5      4     2      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getCRCLength                                   5     3      2     471
                                             10 BANK5      5     3      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (2) _Nrf24_init                                           2     0      2     199
                                              1 BANK5      2     0      2
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (3) _SPI1_Open                                            2     2      0     154
                                              0 BANK5      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Nrf24_getData                                        4     0      4     354
                                              6 BANK5      4     0      4
               _Nrf24_configRegister
                  _SPI1_ByteExchange
                      _SPI_read_buff
 ---------------------------------------------------------------------------------
 (2) _Nrf24_dataReady                                      3     1      2     406
                                             13 BANK5      3     1      2
                    _Nrf24_getStatus
 ---------------------------------------------------------------------------------
 (2) _Nrf24_config                                         4     0      4     921
                                             13 BANK5      4     0      4
               _Nrf24_configRegister
                      _Nrf24_flushRx
                    _Nrf24_getStatus
                    _Nrf24_powerUpRx
 ---------------------------------------------------------------------------------
 (3) _Nrf24_powerUpRx                                      2     0      2     155
                                              4 BANK5      2     0      2
               _Nrf24_configRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getStatus                                      3     1      2     360
                                             10 BANK5      3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_flushRx                                        2     0      2      54
                                              2 BANK5      2     0      2
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (2) _Nrf24_SetSpeedDataRates                              4     1      3     663
                                             10 BANK5      4     1      3
               _Nrf24_configRegister
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_readRegister                                   4     1      3     304
                                              6 BANK5      4     1      3
                  _SPI1_ByteExchange
                      _SPI_read_buff
 ---------------------------------------------------------------------------------
 (4) _SPI_read_buff                                        4     1      3     126
                                              2 BANK5      4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (3) _Nrf24_configRegister                                 2     1      1     129
                                              2 BANK5      2     1      1
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    2     2      0      53
                                              0 BANK5      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DELAY_milliseconds                                   3     1      2      26
                                              0 BANK5      3     1      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      46
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      46
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      23
                                              0 BANK5      3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      23
                                              0 BANK5      3     0      3
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RC6_SetInterruptHandler                              3     0      3      23
                                              0 BANK5      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          2     2      0    1563
                                             52 COMRAM     2     2      0
                                NULL *
                   _TMR0_OverflowISR
                      _nrf_interrupt *
 ---------------------------------------------------------------------------------
 (13) _nrf_interrupt                                      34    34      0    1563
                                             18 COMRAM    34    34      0
                  i2_Nrf24_dataReady
                    i2_Nrf24_getData
                         i2_sendGrid
 ---------------------------------------------------------------------------------
 (14) i2_sendGrid                                         13    11      2     747
                                              5 COMRAM    13    11      2
                         i2_sendCell
 ---------------------------------------------------------------------------------
 (15) i2_sendCell                                          2     2      0     409
                                              4 COMRAM     1     1      0
                          i2_sendRGB
 ---------------------------------------------------------------------------------
 (16) i2_sendRGB                                           3     1      2     313
                                              1 COMRAM     3     1      2
                         i2_sendByte
 ---------------------------------------------------------------------------------
 (17) i2_sendByte                                          1     1      0     232
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_Nrf24_getData                                     4     0      4     330
                                              6 COMRAM     4     0      4
             i2_Nrf24_configRegister
                i2_SPI1_ByteExchange
                    i2_SPI_read_buff
 ---------------------------------------------------------------------------------
 (15) i2_Nrf24_configRegister                              2     1      1     105
                                              2 COMRAM     2     1      1
                i2_SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (14) i2_Nrf24_dataReady                                   3     1      2     369
                                             13 COMRAM     3     1      2
                  i2_Nrf24_getStatus
 ---------------------------------------------------------------------------------
 (15) i2_Nrf24_getStatus                                   3     1      2     323
                                             10 COMRAM     3     1      2
               i2_Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (16) i2_Nrf24_readRegister                                4     1      3     276
                                              6 COMRAM     4     1      3
                i2_SPI1_ByteExchange
                    i2_SPI_read_buff
 ---------------------------------------------------------------------------------
 (15) i2_SPI_read_buff                                     4     1      3     126
                                              2 COMRAM     4     1      3
                i2_SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (16) i2_SPI1_ByteExchange                                 2     2      0      53
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _TMR0_OverflowISR                                    0     0      0       0
                                NULL *
       _TMR0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RC6_SetInterruptHandler
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _init_nrf
     _DELAY_milliseconds
     _Nrf24_SetSpeedDataRates
       _Nrf24_configRegister
         _SPI1_ByteExchange
       _Nrf24_readRegister
         _SPI1_ByteExchange
         _SPI_read_buff
           _SPI1_ByteExchange
     _Nrf24_config
       _Nrf24_configRegister
       _Nrf24_flushRx
         _SPI1_ByteExchange
       _Nrf24_getStatus
         _Nrf24_readRegister
       _Nrf24_powerUpRx
         _Nrf24_configRegister
     _Nrf24_dataReady
       _Nrf24_getStatus
     _Nrf24_getData
       _Nrf24_configRegister
       _SPI1_ByteExchange
       _SPI_read_buff
     _Nrf24_init
       _SPI1_Open
     _Nrf24_printDetails
       _Nrf24_getCRCLength
         _Nrf24_readRegister
       _Nrf24_getDataRate
         _Nrf24_readRegister
       _Nrf24_getPALevel
         _Nrf24_readRegister
       _Nrf24_getRetransmitDelay
         _Nrf24_readRegister
       _Nrf24_getStatus
       _Nrf24_print_address_register
         _Nrf24_readRegister
         _printf
           _Nrf24_getCRCLength (ARG)
           _Nrf24_getDataRate (ARG)
           _Nrf24_getPALevel (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _dtoa
                 ___awdiv
                 ___awmod
                 _abs
                   ___awmod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
               _fputc
               _read_prec_or_width
               _stoa
                 _fputc
               _xtoa
                 _pad
       _Nrf24_print_byte_register
         _Nrf24_readRegister
         _printf
       _Nrf24_print_status
         _printf
       _printf
     _Nrf24_setRADDR
       _Nrf24_readRegister
       _Nrf24_writeRegister
         _SPI1_ByteExchange
         _SPI_write_buff
           _DELAY_microseconds
           _SPI1_ByteExchange
     _Nrf24_setRetransmitDelay
       _Nrf24_configRegister
       _Nrf24_readRegister
     _Nrf24_setTADDR
       _Nrf24_readRegister
       _Nrf24_writeRegister
   _sendGrid
     _sendCell
       _sendRGB
         _sendByte

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _TMR0_OverflowISR *
     NULL(Fake) *
     _TMR0_DefaultOverflowCallback *
   _nrf_interrupt *
     i2_Nrf24_dataReady
       i2_Nrf24_getStatus
         i2_Nrf24_readRegister
           i2_SPI1_ByteExchange
           i2_SPI_read_buff
             i2_SPI1_ByteExchange
     i2_Nrf24_getData
       i2_Nrf24_configRegister
         i2_SPI1_ByteExchange
       i2_SPI1_ByteExchange
       i2_SPI_read_buff
     i2_sendGrid
       i2_sendCell
         i2_sendRGB
           i2_sendByte

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh        1150      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0     200     78.1%
BITBANK13          256      0       0      0.0%
BANK13             256      0     200     78.1%
BITBANK12          256      0       0      0.0%
BANK12             256      0     200     78.1%
BITBANK11          256      0       0      0.0%
BANK11             256      0     200     78.1%
BITBANK10          256      0       0      0.0%
BANK10             256      0     200     78.1%
BITBANK9           256      0       0      0.0%
BANK9              256    200     232     90.6%
BITBANK8           256      0       0      0.0%
BANK8              256    200     232     90.6%
BITBANK7           256      0       0      0.0%
BANK7              256    200     232     90.6%
BITBANK6           256      0       0      0.0%
BANK6              256    232     256    100.0%
BITBANK5           160      0       0      0.0%
BANK5              160    134     139     86.9%
BITBIGSFRl         128      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     54      74     77.9%
STACK                0      0       0      0.0%
DATA                 0      0    2165      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Mar 25 18:45:14 2025

                       _SPI1_ByteExchange 2292                         Nrf24_setTADDR@adr 056C  
                          nrf_interrupt@i 0533                         Nrf24_setTADDR@dev 056A  
                       ??_Nrf24_powerUpRx 0566                         Nrf24_setTADDR@ret 0576  
                    ??_Nrf24_printDetails 05BD                                        l61 2736  
                                      l67 1334                                        l69 1334  
                      ?_SPI1_ByteExchange 0501                       ?_Nrf24_print_status 0501  
                            ___awdiv@sign 0565                                       l102 22B4  
                                     l104 22C2                                       l105 22CA  
                                     l136 278E                                       l313 23DA  
                                     l351 27BC                                       l263 1CA4  
                                     l328 27CA                                       l512 0E46  
                                     l521 03C6                                       l522 03C8  
                                     l531 040E                                       l523 03D8  
                                     l364 27AE                                       l380 27A0  
                                     l532 0410                                       l516 03A6  
                                     l701 2302                                       l541 0456  
                                     l533 0420                                       l517 03A8  
                                     l542 0458                                       l526 03EE  
                                     l518 03B8                                       l711 2248  
                                     l551 049E                                       l543 0468  
                                     l527 03F0                                       l519 03BA  
                                     l607 1F48                  Nrf24_getCRCLength@config 056E  
                                     l704 2200                                       l552 04A0  
                                     l536 0436                                       l528 0400  
                                     l640 1D3C                                       l705 2202  
                                     l561 04E6                                       l553 04B0  
                                     l537 0438                                       l529 0402  
                                     l617 1162                                       l641 1D3C  
                                     l730 1ED6                                       l562 04E8  
                                     l546 047E                                       l538 0448  
                                     l571 052E                                       l563 04F8  
                                     l547 0480                                       l539 044A  
                                     l388 2442                                       l724 2568  
                                     l740 195C                                       l572 0530  
                                     l556 04C6                                       l548 0490  
                                     l901 2028                                       l397 2152  
                                     l709 2246                                       l581 0576  
                                     l573 0540                                       l557 04C8  
                                     l549 0492                                       l910 26EC  
                                     l734 1BFC                                       l742 1964  
                                     l582 0578                                       l566 050E  
                                     l558 04D8                                       l591 05BE  
                                     l583 0588                                       l567 0510  
                                     l559 04DA                                       l904 2654  
                                     l736 1C04                                       l592 05C0  
                                     l576 0556                                       l568 0520  
                                     l593 05D0                                       l577 0558  
                                     l569 0522                                       l842 27D6  
                                     l586 059E                                       l578 0568  
                                     l835 260C                                       l595 05D6  
                                     l587 05A0                                       l579 056A  
                                     l772 26B8                                       l780 23F2  
                                     l828 2706                                       l756 25E4  
                                     l588 05B0                                       l765 2370  
                                     l589 05B2                                       l694 22CC  
                                     l838 27CC                                       l598 26B2  
                                     l695 22CE                                       l863 250A  
                                     l776 26D0                                       l784 240E  
                                     l792 2338                                       l769 23A4  
                                     l858 1FBA                                       l890 21FE  
                                     l866 0A2C                                       l699 2300  
                                     l883 20FA                                       l788 231A  
                                     l877 1AC0                                       l869 1E54  
                                     l896 2026                                       l888 21FA  
                                     l898 200C                __end_of_DELAY_milliseconds 2444  
                        nrf_interrupt@buf 0513                                       _abs 233A  
                                     _dev 053F                                       _pad 1AC2  
                                     fsr1 04E1                                       fsr2 04D9  
                     ??_SPI1_ByteExchange 0560                              ___awmod@sign 0565  
                Nrf24_getCRCLength@result 056C                                       prod 04F3  
                                     tosl 04FD                                       wreg 04E8  
                                    ?_abs 0566                                      l1150 18B0  
                                    l1163 1A14                                      l3100 182E  
                                    l3110 1864                                      l3102 1840  
                                    l3112 187A                                      l3104 1848  
                                    l3120 1890                                      l3200 0A8A  
                                    l4000 0DC8                                      l3122 18A0  
                                    l3114 1882                                      l3106 1850  
                                    l3130 196A                                      l3210 0ADA  
                                    l3202 0A96                                      l4010 0E2C  
                                    l4002 0DDA                                      l1603 25BC  
                                    l3124 18A8                                      l3116 1884  
                                    l3108 185E                                      l3140 199A  
                                    l3132 1978                                      l3220 0B3A  
                                    l3212 0AE0                                      l3204 0A9E  
                                    l3300 103E                                      l4004 0DFC  
                                    l4020 1092                                      l4012 1060  
                                    l3118 188A                                      l3150 19E0  
                                    l3142 19AC                                      l3134 1980  
                                    l3070 1452                                      l3062 1404  
                                    l3230 0B88                                      l3222 0B54  
                                    l3206 0AA4                                      l3214 0AFC  
                                    l3310 13A2                                      l4006 0E0A  
                                    l4022 10C0                                      l4030 1114  
                                    l4014 106A                                      l1623 1AFE  
                                    l1631 0A8E                                      l3320 22AA  
                                    l3160 1A0C                                      l3152 19E8  
                                    l3144 19B4                                      l3136 1984  
                                    l3128 1966                                      l3072 1488  
                                    l3064 1418                                      l3080 226A  
                                    l3216 0B18                                      l3224 0B62  
                                    l3208 0AD8                                      l3312 13C0  
                                    l3304 1336                                      l3240 0BDA  
                                    l3400 0318                                      l4032 1132  
                                    l4024 10CE                                      l4016 1078  
                                    l1721 236E                                      l3322 22AC  
                                    l3090 1808                                      l3154 19EE  
                                    l3146 19BC                                      l3138 1992  
                                    l3066 142A                                      l3082 2270  
                                    l1626 1B42                                      l3170 1AF6  
                                    l3226 0B72                                      l3218 0B2A  
                                    l3314 13CE                                      l3306 1340  
                                    l3250 0C5C                                      l3242 0BE0  
                                    l3234 0BAA                                      l3330 0000  
                                    l1714 21A8                                      l4026 10FC  
                                    l4018 1086                                      l4034 1136  
                                    l1651 0C1E                                      l3324 22B0  
                                    l3316 22A0                                      l3092 180C  
                                    l3084 17EE                                      l3148 19CA  
                                    l3156 19F4                                      l3180 233A  
                                    l3068 1434                                      l3076 224A  
                                    l1628 1B64                                      l3172 1B0A  
                                    l3164 1AC2                                      l1644 0BA8  
                                    l3228 0B78                                      l3308 1368  
                                    l3260 0CE8                                      l3252 0C7E  
                                    l3236 0BC6                                      l3404 0350  
                                    l3340 004E                                      l3332 0028  
                                    l3500 221E                                      l4028 110E  
                                    l1733 14CE                                      l1741 2290  
                                    l3326 22C6                                      l3318 22A4  
                                    l3510 26CE                                      l3094 181A  
                                    l3086 17F2                                      l3158 1A04  
                                    l3182 234A                                      l1718 2356  
                                    l3078 2258                                      l3174 1B1E  
                                    l3166 1AD2                                      l3190 0A50  
                                    l3262 0CFC                                      l3254 0CB6  
                                    l3246 0C42                                      l3238 0BCE  
                                    l3270 0F6E                                      l3342 0050  
                                    l3350 008E                                      l3334 0036  
                                    l3430 2100                                      l3502 2224  
                                    l1663 0D20                                      l3440 22D6  
                                    l3512 23E0                                      l3096 1822  
                                    l3088 1800                                      l1744 27D8  
                                    l3176 1B24                                      l3168 1AE6  
                                    l3192 0A60                                      l3184 0A2E  
                                    l3264 0D02                                      l3248 0C56  
                                    l3256 0CBC                                      l3280 0F9A  
                                    l3272 0F76                                      l3360 00E4  
                                    l3352 009E                                      l3344 0062  
                                    l3336 0044                                      l3408 0362  
                                    l3520 2596                                      l3600 1A84  
                                    l3432 2108                                      l3504 2230  
                                    l4080 1CAA                                      l3442 22E6  
                                    l3514 23F4                                      l3098 1826  
                                    l3178 1B50                                      l3194 0A66  
                                    l3186 0A34                                      l1658 0CD6  
                                    l3282 0F9E                                      l3274 0F7C  
                                    l3290 0FD6                                      l3266 0F58  
                                    l3370 0180                                      l3362 0104  
                                    l3354 00BA                                      l3338 0048  
                                    l3450 2160                                      l3522 25A0  
                                    l3602 1AA0                                      l3610 20C4  
                                    l3434 2112                                      l3506 2234  
                                    l4090 1CD4                                      l4082 1CAC  
                                    l1683 1402                                      l1675 105E  
                                    l3700 2734                                      l3508 26BA  
                                    l3444 22EC                                      l3516 23FC  
                                    l3540 132A                                      l3620 21BE  
                                    l3196 0A76                                      l3188 0A48  
                                    l3292 0FF4                                      l3284 0FAE  
                                    l3276 0F82                                      l3268 0F5E  
                                    l3380 0200                                      l3372 01A0  
                                    l3364 0124                                      l3356 00CA  
                                    l3348 006A                                      l3452 217E  
                                    l3604 1AB4                                      l3612 20C8  
                                    l3436 212E                                      l3428 20FC  
                                    l4092 1CEC                                      l4084 1CB0  
                                    l3710 278C                                      l3702 277C  
                                    l3446 22EE                                      l3518 240C  
                                    l3542 132C                                      l3630 21FC  
                                    l3622 21C6                                      l3198 0A82  
                                    l3294 1006                                      l3286 0FB0  
                                    l3278 0F92                                      l3390 0284  
                                    l3382 021E                                      l3374 01E8  
                                    l3366 0168                                      l3358 00D4  
                                    l3454 219E                                      l3614 20DA  
                                    l3606 2098                                      l3438 2136  
                                    l3550 269A                                      l4094 1D04  
                                    l4086 1CC4                                      l4078 1CA6  
                                    l1679 13FA                                      l3704 2782  
                                    l3720 1C38                                      l3712 1C06  
                                    l3800 2426                                      l3552 26EE  
                                    l3560 25F0                                      l3544 1330  
                                    l3536 1266                                      l3640 1FDA  
                                    l3624 21D8                                      l3296 1016  
                                    l3288 0FB6                                      l3392 02BC  
                                    l3384 0246                                      l3448 2154  
                                    l3616 20EE                                      l3608 20B2  
                                    l4096 1D1C                                      l4088 1CC8  
                                    l3706 2784                                      l3546 27B0  
                                    l3730 1C4E                                      l3722 1C3E  
                                    l3714 1C20                                      l3570 27D4  
                                    l3554 2702                                      l3562 25F2  
                                    l3538 1276                                      l3810 2566  
                                    l3802 253C                                      l3642 1FEC  
                                    l3634 1FBC                                      l3626 21E0  
                                    l3618 21AA                                      l3298 1030  
                                    l3394 02F4                                      l3386 0254  
                                    l1698 0390                                      l3490 04B6  
                                    l3482 0396                                      l4098 1D2A  
                                    l1699 021C                                      l3708 278A  
                                    l3548 27A2                                      l3740 1C58  
                                    l3732 1C50                                      l3724 1C48  
                                    l3716 1C24                                      l3564 25FE  
                                    l3820 1EA6                                      l3812 1E56  
                                    l3900 25BE                                      l3804 2542  
                                    l3644 1FFC                                      l3636 1FC0  
                                    l3628 21F2                                      l3652 2634  
                                    l3660 26D2                                      l3388 025C  
                                    l3580 1DD6                                      l3572 2308  
                                    l3492 04FE                                      l3484 03DE  
                                    l3750 1C66                                      l3742 1C5A  
                                    l3734 1C52                                      l3726 1C4A  
                                    l3718 1C2A                                      l3566 2600  
                                    l3558 25E6                                      l3822 1EBE  
                                    l3814 1E78                                      l3902 25CE  
                                    l3806 2554                                      l3646 201A  
                                    l3638 1FD2                                      l3654 2648  
                                    l3662 26E6                                      l3398 0308  
                                    l3590 1A52                                      l3582 1A16  
                                    l3574 231C                                      l3830 1B82  
                                    l3494 0546                                      l3486 0426  
                                    ?_pad 0570                                      l3760 1C76  
                                    l3752 1C68                                      l3744 1C60  
                                    l3736 1C54                                      l3728 1C4C  
                                    l3568 27CE                                      l3824 1ECA  
                                    l3816 1E84                                      l3904 25DC  
                                    l3912 2372                                      l3808 2564  
                                    l3648 2022                                      l3656 2652  
                                    l3584 1A30                                      l3576 2326  
                                    l3840 1BD8                                      l3832 1B96  
                                    l3496 058E                                      l3488 046E  
                                    l3920 1EDC                                      l3770 1C92  
                                    l3762 1C78                                      l3754 1C6E  
                                    l3746 1C62                                      l3738 1C56  
                                    l3690 2720                                      l3818 1E8E  
                                    l3914 2378                                      l3586 1A42  
                                    l3498 220A                                      l3578 2336  
                                    l3842 1BDC                                      l3826 1B66  
                                    l3850 18CE                                      l3922 1EE0  
                                    l3780 1C9C                                      l3772 1C94  
                                    l3764 1C8A                                      l3756 1C70  
                                    l3748 1C64                                      l3692 272A  
                                    l3908 25E2                                      l3916 2396  
                                    l3596 1A5C                                      l3588 1A46  
                                    l3844 1BE0                                      l3828 1B70  
                                    l3860 1900                                      l3852 18E2  
                                    l3924 1EF2                                      l3932 1F28  
                                    l3790 23B2                                      l3782 1C9E  
                                    l3774 1C96                                      l3766 1C8E  
                                    l3758 1C74                                      l3694 272E  
                                    l3918 2398                                      l3598 1A7E  
                                    l3838 1BA0                                      l3862 1938  
                                    l3854 18F6                                      l3846 18B2  
                                    l3926 1F04                                      l3792 23C4  
                                    l3784 1CA0                                      l3776 1C98  
                                    l3768 1C90                                      l3696 2730  
                                    l3880 1FA0                                      l3872 1F60  
                                    l3864 193C                                      l3848 18BC  
                                    l3928 1F16                                      l3794 23C6  
                                    l3786 1CA2                                      l3778 1C9A  
                                    l3698 2732                                      l3882 1FB0  
                                    l3874 1F72                                      l3890 2500  
                                    l3866 1940                                      l3788 23A6  
                                    l3980 2790                                      l3796 2410  
                                    l3876 1F86                                      l3868 1F4A  
                                    l3892 080C                                      l3884 24DC  
                                    l3982 279C                                      l3798 2414  
                                    l3878 1F92                                      l3894 09E0  
                                    l3886 24F0                                      l3990 0D54  
                                    l3896 09F0                                      l3888 24F8  
                                    l3992 0D72                                      l3984 0D22  
                                    l3978 27BE                                      l3898 0A18  
                                    l3994 0D86                                      l3986 0D30  
                                    l3996 0D98                                      l3988 0D3E  
                                    l3998 0DB4                                      STR_1 FFF4  
                                    STR_2 FFF4                                      STR_3 FEFD  
                                    STR_4 FF88                                      STR_5 FF95  
                                    STR_6 FFB7                                      STR_7 FFA2  
                                    STR_8 FFE0                                      STR_9 FFAD  
                    ??_Nrf24_print_status 05AD                                      u2000 0C0E  
                                    u2010 0C1E                                      u2011 0C1A  
                                    u2020 0C3E                                      u2100 0FF4  
                                    u2021 0C3A                                      u2101 0FF0  
                                    u2030 0C7A                                      u2110 1006  
                                    u2031 0C76                                      u2007 0C04  
                                    u2111 1002                                      u2040 0CA0  
                                    u2120 1016                                      u2200 00CA  
                                    u2121 1012                                      u2201 00C6  
                                    u2050 0CD6                                      u2130 1030  
                                    u2210 0104                                      u2051 0CD2  
                                    u2131 102C                                      u2211 0100  
                                    u3011 1CCE                                      u2060 0CE4  
                                    u2140 103E                                      u2220 0124  
                                    u2300 212A                                      u2061 0CE0  
                                    u2141 103A                                      u2221 0120  
                                    u2301 2126                                      u3021 1CDE  
                                    _LATA 04BE                                      u2150 1368  
                                    u2070 0D20                                      u2230 01A0  
                                    u2310 2152                                      _LATB 04BF  
                                    u2151 1364                                      u2071 0D1C  
                                    u2047 0C96                                      u2231 019C  
                                    u2311 214E                                      u3031 1CF6  
                                    _LATC 04C0                                      u2320 2300  
                                    u2160 13FA                                      u2080 0F92  
                                    u2240 0246                                      _LATD 04C1  
                                    u2321 22FC                                      u2161 13F6  
                                    u2081 0F8E                                      u2241 0242  
                                    u3041 1D0E                                      _LATE 04C2  
                                    u2170 22C2                                      u2250 0284  
                                    u2330 219E                                      _LATF 04C3  
                                    u2171 22BE                                      u2251 0280  
                                    u2331 219A                                      u3051 1D34  
                                    u1700 1488                                      u2260 02BC  
                                    u2180 0028                                      u2500 059E  
                                    u1701 1484                                      u2261 02B8  
                                    u2181 0024                                      u2501 059A  
                                    u1710 2290                                      u2270 02F4  
                                    u2190 009E                                      u2510 2246  
                                    u2430 03A6                                      u1711 228C  
                                    u2095 0FC2                                      u2271 02F0  
                                    u2191 009A                                      u3207 2130  
                                    u2511 2242                                      u2431 03A2  
                                    u2520 23F2                                      u1720 1800  
                                    u1800 19AC                                      u2280 0318  
                                    u2600 1E22                                      u2440 03EE  
                                    u3217 241C                                      u2521 23EE  
                                    u1721 17FC                                      u1801 19A8  
                                    u2281 0314                                      u2601 1E1C  
                                    u2441 03EA                                      u1730 181A  
                                    u1810 19CA                                      u2610 1E24  
                                    u2450 0436                                      u1731 1816  
                                    u1811 19C6                                      u2451 0432  
                                    u2540 1276                                      u2700 200C  
                                    u1740 1840                                      u1820 19E0  
                                    u1900 0A46                                      u2620 1E4A  
                                    u2460 047E                                      u2541 1272  
                                    u2701 2008                                      u1741 183C  
                                    u1821 19DC                                      u2621 1E44  
                                    u2461 047A                                      u2710 201A  
                                    u1750 185E                                      u1830 1A04  
                                    u1670 1418                                      u1910 0A60  
                                    u2630 1E4C                                      u2550 231A  
                                    u2470 04C6                                      u2711 2016  
                                    u1751 185A                                      u1831 1A00  
                                    u1671 1414                                      u1911 0A5C  
                                    u2551 2316                                      u2471 04C2  
                                    u2720 2442                                      u1760 187A  
                                    u1680 142A                                      u1840 1AD2  
                                    u1920 0A76                                      u2640 1AA0  
                                    u2560 1DF6                                      u2480 050E  
                                    u2721 243E                                      u1761 1876  
                                    u1681 1426                                      u1841 1ACE  
                                    u1921 0A72                                      u2641 1A9C  
                                    u2561 1DF0                                      u2481 050A  
                                    u1770 18A0                                      u1690 1452  
                                    u1850 1AF6                                      u1930 0B18  
                                    u2650 1AB4                                      u2570 1DF8  
                                    u2730 1BD8                                      u2490 0556  
                                    u1771 189C                                      u1691 144E  
                                    u1851 1AF2                                      u1931 0B14  
                                    u2651 1AB0                                      u2731 1BD4  
                                    u2491 0552                                      u1780 1978  
                                    u1860 1B42                                      u1940 0B2A  
                                    u2660 20EE                                      u2580 1E0C  
                                    u2740 1BFC                                      u1781 1974  
                                    u1861 1B3E                                      u1941 0B26  
                                    u2661 20EA                                      u2581 1E06  
                                    u3197 2102                                      u2741 1BF8  
                                    u2670 21D8                                      u1790 1992  
                                    u1870 1B50                                      u1950 0B3A  
                                    u2590 1E0E                                      u2750 1938  
                                    u2671 21D4                                      u1791 198E  
                                    u1871 1B4C                                      u1951 0B36  
                                    u2751 1934                                      u2680 21F2  
                                    u1880 234A                                      u1960 0B54  
                                    u2760 195C                                      u2840 0D86  
                                    u2681 21EE                                      u1881 2346  
                                    u1961 0B50                                      u2761 1958  
                                    u2841 0D82                                      u2770 1F5C  
                                    u2690 1FFC                                      u1970 0B62  
                                    u1890 0A44                                      u2850 0DC8  
                                    u2771 1F58                                      u2691 1FF8  
                                    u1971 0B5E                                      u1891 0A3E  
                                    u2851 0DC4                                      u2780 1F86  
                                    u1980 0B72                                      u2860 0E28  
                                    u2781 1F82                                      u1981 0B6E  
                                    u2861 0E24                                      u2790 25DC  
                                    u1990 0BC6                                      u2870 10CE  
                                    u2791 25D8                                      u1991 0BC2  
                                    u2871 10CA                                      u2880 1132  
                                    u2881 112E                                      u2890 1162  
                                    u2891 115E                                      _WPUA 0401  
                                    _WPUB 0409                                      _WPUC 0411  
                                    _WPUD 0419                                      _WPUE 0421  
                                    _WPUF 0429                      Nrf24_setTADDR@buffer 0571  
                                    abs@a 0566                                      _dbuf 07C8  
                                    _main 1CA6                                      _dtoa 0A2E  
                                    _prec 05E8                                      pad@i 0577  
                                    pad@p 0574                                      fsr0h 04EA  
                                    fsr1h 04E2                                      indf0 04EF  
                                    fsr2h 04DA                                      fsr0l 04E9  
                                    indf1 04E7                                      indf2 04DF  
                                    fsr1l 04E1                                      fsr2l 04D9  
                                    _stoa 0BAA                                      _xtoa 0F58  
               ?_INT2_SetInterruptHandler 0560                                      prodh 04F4  
                                    prodl 04F3                                      start 001A  
                              i2_sendCell 202A                      i2_Nrf24_readRegister 250C  
                              i2_sendGrid 1164                                i2_sendByte 05D8  
               __end_of_SPI1_ByteExchange 22CC                            _SPI1STATUSbits 0087  
                            ___param_bank 0000                          _TMR0_OverflowISR 24AA  
                                   ??_abs 0568                                     ??_pad 0576  
                                   ?_main 0501                                     ?_dtoa 0579  
                         __end_of___awdiv 18B2                                     STR_10 FFE7  
                                   STR_11 FFC0                                     STR_20 FFFA  
                                   STR_12 FFC9                                     STR_21 FFD4  
                                   STR_13 FF7A                                     STR_22 FEFA  
                                   STR_14 FF59                                     STR_23 FFEE  
                                   STR_15 FF47                                     STR_24 FFD1  
                                   STR_16 FF6A                                     STR_25 FEFA  
                                   STR_17 FF32                                     STR_26 FFD9  
                                   STR_18 FEB7                                     STR_19 FFEE  
                         __end_of___awmod 1A16                                     ?_stoa 0569  
                          SPI_read_buff@i 0565                           ___awdiv@divisor 0562  
                                   ?_xtoa 0579                                     _IOCAF 0407  
                                   _IOCBF 040F                                     _IOCCF 0417  
                                   _IOCAN 0406                                     _IOCEF 0427  
                                   _IOCAP 0405                                     _IOCBN 040E  
                                   _IOCBP 040D                                     _IOCCN 0416  
                                   _IOCCP 0415                                     _IOCEN 0426  
                                   _IOCEP 0425                                     i2l102 2580  
                                   i2l104 258E                                     i2l105 2594  
                 _RC6_SetInterruptHandler 27BE                                     i2l323 1DC8  
                                   i2l319 1D6C                                     i2l521 0608  
                                   i2l522 060A                                     i2l531 064E  
                                   i2l523 061A                                     i2l532 0650  
                                   i2l516 05E8                                     i2l701 2476  
                                   i2l541 0694                                     i2l533 0660  
                                   i2l517 05EA                                     i2l542 0696  
                                   i2l526 062E                                     i2l518 05FA  
                                   i2l455 27DA                                     i2l551 06DA  
                                   i2l543 06A6                                     i2l527 0630  
                                   i2l519 05FC                                     i2l607 2096  
                                   i2l552 06DC                                     i2l536 0674  
                                   i2l528 0640                                     i2l449 24DA  
                                   i2l561 0720                                     i2l553 06EC  
                                   i2l537 0676                                     i2l529 0642  
                                   i2l617 1260                                     i2l625 17EC  
                                   i2l562 0722                                     i2l546 06BA  
                                   i2l538 0686                                     i2l571 0766  
                                   i2l563 0732                                     i2l547 06BC  
                                   i2l539 0688                                     i2l572 0768  
                                   i2l556 0700                                     i2l548 06CC  
                                   i2l581 07AC                                     i2l573 0778  
                                   i2l557 0702                                     i2l549 06CE  
                                   i2l582 07AE                                     i2l566 0746  
                                   i2l558 0712                                     i2l591 07F2  
                                   i2l583 07BE                                     i2l567 0748  
                                   i2l559 0714                                     i2l592 07F4  
                                   i2l576 078C                                     i2l568 0758  
                                   i2l593 0804                                     i2l577 078E  
                                   i2l569 075A                                     i2l586 07D2  
                                   i2l578 079E                                     i2l595 080A  
                                   i2l587 07D4                                     i2l579 07A0  
                                   i2l780 251E                                     i2l828 277A  
                                   i2l756 2632                                     i2l772 273A  
                                   i2l588 07E4                                     i2l765 2478  
                                   i2l589 07E6                                     i2l694 2444  
                                   i2l598 2764                                     i2l695 2446  
                                   i2l784 253A                                     i2l776 274E  
                                   i2l769 24A8                                     i2l699 2474  
                         ___awdiv@counter 0564                                     _OSCEN 00B3  
                            vfpfcnvrt@fmt 0588                                     _TMR0H 0319  
                                   _TMR0L 0318                                     _TRISA 04C6  
                                   _TRISB 04C7                                     _TRISC 04C8  
                                   _TRISD 04C9                                     _TRISE 04CA  
                                   _TRISF 04CB                                _Nrf24_init 253C  
                  ??_Nrf24_configRegister 0563                                     _flags 05EA  
                     read_prec_or_width@c 0566                       read_prec_or_width@n 0567  
                                   _fputc 1404                                     _fputs 224A  
                         __end_of_sendRGB 26B4                                     pad@fp 0570  
                                   _width 05E6                                     _putch 27D8  
                                   dtoa@d 057B                                     dtoa@i 0583  
                                   dtoa@p 057F                                     dtoa@s 0582  
                                   dtoa@w 0580                                i2sendRGB@b 0503  
                              i2sendRGB@g 0502                                i2sendRGB@r 0504  
                _INT1_SetInterruptHandler 27B0                                     pclath 04FA  
                                   pclatu 04FB                                     tablat 04F5  
                                   plusw1 04E3                                     plusw2 04DB  
                                   stoa@l 0575                                     stoa@p 056F  
                                   stoa@s 056B                                     stoa@w 0571  
             __end_ofi2_SPI1_ByteExchange 2596                                     status 04D8  
                                   xtoa@c 0583                                     xtoa@d 057B  
                                   xtoa@i 0584                                     xtoa@p 0580  
                                   xtoa@w 0581                     ?i2_Nrf24_readRegister 0507  
                 _Nrf24_SetSpeedDataRates 1F4A                           __initialization 0E48  
                Nrf24_writeRegister@value 0566                             _SPI_read_buff 22CC  
                            __end_of_main 1D44                              __end_of_dtoa 0BAA  
                 Nrf24_configRegister@reg 0563                              __end_of_stoa 0D22  
                            __end_of_xtoa 1060              SPI1_ByteExchange@returnValue 0561  
                   __end_of_nrf_interrupt 17EE               ?_INTERRUPT_InterruptManager 0501  
            Nrf24_print_byte_register@dev 05AD              Nrf24_print_byte_register@reg 05B1  
            Nrf24_print_byte_register@qty 05B2                 Nrf24_configRegister@value 0562  
                                  ??_main 05E6                                    ??_dtoa 057D  
                     Nrf24_config@channel 056F                                    ??_stoa 056D  
                                  ??_xtoa 057D                             __activetblptr 0003  
                         _Nrf24_dataReady 25BE               ??_Nrf24_print_byte_register 05B3  
                    __end_of_Nrf24_config 1ED8                __end_of_read_prec_or_width 1404  
                      Nrf24_dataReady@dev 056D                       Nrf24_config@payload 0570  
                                  ?_fputc 0560                                    _ACTCON 00AC  
                                  ?_fputs 0569                          ___awdiv@dividend 0560  
                                  _ANSELA 0400                                    ?_putch 0501  
                                  _ANSELB 0408                                    _ANSELC 0410  
                                  _ANSELD 0418                                    _ANSELE 0420  
                                  _ANSELF 0428                                    _T0CON0 031A  
                                  _T0CON1 031B                                    _RB1I2C 0289  
                                  _RB2I2C 0288                                    _RC3I2C 0287  
                                  _RC4I2C 0286                                    _RC3PPS 0214  
                                  _RC4PPS 0215                                    _ODCONA 0402  
                                  _ODCONB 040A                                    _ODCONC 0412  
                                  _ODCOND 041A                                    _ODCONE 0422  
                                  _ODCONF 042A                                    i2l4040 1758  
                                  i2l4050 1798                                    i2l3420 2578  
                                  i2l4060 17E0                                    i2l4052 179C  
                                  i2l4036 1728                                    i2l3422 257C  
                                  i2l3414 256C                                    i2l4054 17A0  
                                  i2l4046 1760                                    i2l4038 1744  
                                  i2l4070 1D88                                    i2l4062 1D4C  
                                  i2l3424 2592                                    i2l3416 2570  
                                  i2l4056 17BC                                    i2l4048 177C  
                                  i2l4072 1D98                                    i2l4064 1D5A  
                                  i2l3418 2576                                    i2l3530 2520  
                                  i2l4058 17D8                                    i2l4074 1D9A  
                                  i2l4066 1D68                                    i2l3532 2528  
                                  i2l3460 0620                                    i2l4076 1DAE  
                                  i2l4068 1D7A                                    i2l3534 2538  
                                  i2l3470 077E                                    i2l3462 0666  
                                  i2l3526 2752                                    i2l2664 24AA  
                                  i2l3480 2462                                    i2l3528 250E  
                                  i2l3472 07C4                                    i2l3464 06AC  
                                  i2l2666 24AC                                    i2l3474 244C  
                                  i2l3466 06F2                                    i2l3458 05DA  
                                  i2l2668 24C0                                    i2l3476 245C  
                                  i2l3468 0738                                    i2l3478 2460  
                                  i2l3670 2042                                    i2l3680 273C  
                                  i2l3672 2054                                    _INLVLA 0404  
                                  i2l3682 274C                                    i2l3674 2066  
                                  i2l3666 202C                                    _INLVLB 040C  
                                  _INLVLC 0414                                    i2l3684 2766  
                                  i2l3668 2030                                    i2l3940 1186  
                                  _INLVLD 041C                                    _INLVLE 0424  
                                  i2l3686 2778                                    i2l3678 2078  
                                  i2l3950 120E                                    i2l3942 1192  
                                  i2l3934 1164                                    _INLVLF 042C  
                                  i2l3960 261C                                    i2l3944 11C0  
                                  i2l3952 1212                                    i2l3936 116C  
                                  i2l3962 262A                                    i2l3970 247A  
                                  i2l3954 1230                                    i2l3946 11CE  
                                  i2l3938 117A                                    i2l3972 2480  
                                  i2l3948 11FC                                    i2l3956 1234  
                                  i2l3966 2630                                    i2l3958 260E  
                                  i2l3974 249C                                    i2l3976 249E  
                         _Nrf24_getStatus 26EE                        i2Nrf24_getData@dev 0507  
                                  _OSCFRQ 00B1                             vfpfcnvrt@done 0592  
                             INTSTAT_ADDR 00D7                               ?i2_sendCell 0501  
         Nrf24_print_byte_register@buffer 05B3                               ?i2_sendGrid 0506  
                             ?i2_sendByte 0501                         __end_of_SPI1_Open 1336  
                                  _Timer0 FE7D                            ?_SPI_read_buff 0562  
                            vfprintf@cfmt 059B                                 ??___awdiv 0564  
                               ??___awmod 0564                           i2_Nrf24_getData 2478  
           Nrf24_getRetransmitDelay@value 056C                      read_prec_or_width@ap 0562  
               ??_RC6_SetInterruptHandler 0563                          __end_of_init_nrf 0E48  
                                  clear_0 0F0E                                    clear_1 0F1A  
                                  clear_2 0F26                                    clear_3 0F3E  
                        ___awdiv@quotient 0566                           ___awmod@divisor 0562  
                                  isa$std 0001                           ___awmod@counter 0564  
                                  _printf 2596                                    pad@buf 0572  
                        __end_of_sendCell 1F4A                 i2Nrf24_readRegister@value 0507  
                       ?_CLOCK_Initialize 0501                                    dtoa@fp 0579  
                        __end_of_sendGrid 1164                              __pdataBANK11 0B00  
                        __end_of_sendByte 05D8                              __pdataBANK12 0C00  
                            __pdataBANK13 0D00                               init_nrf@buf 05C4  
                             init_nrf@ret 05E4                                    fputc@c 0560  
            _INT2_DefaultInterruptHandler 0000                                    fputs@c 056D  
                                  fputs@i 056E                                    fputs@s 0569  
                      ??_CLOCK_Initialize 0560                                 ??_sendRGB 0563  
                            __mediumconst FE52                                    tblptrh 04F7  
                                  tblptrl 04F6                      _RC6_InterruptHandler 0548  
                                  tblptru 04F8                               ?_Nrf24_init 0561  
                                  stoa@cp 0573                                    stoa@fp 0569  
                                  putch@c 0501                          __end_of_vfprintf 21AA  
INT2_SetInterruptHandler@InterruptHandler 0560  INT1_SetInterruptHandler@InterruptHandler 0560  
 RC6_SetInterruptHandler@InterruptHandler 0560                                    xtoa@fp 0579  
                          _SPI1_IsRxReady 0000                            _SPI1_IsTxReady 0000  
                       _SYSTEM_Initialize 2790                         __end_ofi2_sendRGB 2766  
                         _Nrf24_powerUpRx 25E6                                __accesstop 0560  
                 __end_of__initialization 0F52                    ??i2_Nrf24_readRegister 050A  
                   Nrf24_getCRCLength@dev 056A                 ??_Nrf24_SetSpeedDataRates 056D  
                          _SPI1_ByteWrite 0000                 _Nrf24_print_byte_register 2098  
                      ?_SYSTEM_Initialize 0501                        _Nrf24_getCRCLength 1FBC  
                           ___rparam_used 0001             Nrf24_setRetransmitDelay@value 056D  
                          __pcstackCOMRAM 0501                              __pidataBANK6 2708  
                            __pidataBANK8 2656                              __pidataBANK9 2676  
                     ??_SYSTEM_Initialize 0563                       ?_Nrf24_getCRCLength 056A  
                ??i2_Nrf24_configRegister 0504                   __end_of_Nrf24_dataReady 25E6  
                           __end_of_fputc 14D0                             __end_of_fputs 2292  
                       ??_SPI1_Initialize 0560                        _DELAY_microseconds 20FC  
                           __end_of_putch 27DA                 ?_Nrf24_getRetransmitDelay 056A  
               ?_Nrf24_setRetransmitDelay 056A                        _spi1_configuration FE8F  
            Nrf24_SetSpeedDataRates@value 056D                       ?_DELAY_microseconds 0560  
                     SPI_write_buff@bytes 0564          __end_of_INT2_SetInterruptHandler 27B0  
           Nrf24_print_byte_register@name 05AF                   __end_of_Nrf24_getStatus 2708  
                    ??_Nrf24_getCRCLength 056C                  __end_of_TMR0_OverflowISR 24DC  
                                 ??_fputc 0564                 __end_of_SYSTEM_Initialize 27A2  
                                 ??_fputs 056D                                   ??_putch 0560  
                          _rf24_datarates 06E8                         ??i2_SPI_read_buff 0506  
                              __pbssBANK5 05E6                                __pbssBANK7 07C8  
                   Nrf24_dataReady@status 056F                        _DELAY_milliseconds 2410  
                   _INT0_InterruptHandler 053A                                __pnvCOMRAM 0542  
                   _TMR0_OverflowCallback 0537                     __end_of_Nrf24_getData 23A6  
                        _Nrf24_getPALevel 2634                           ??_SPI_read_buff 0565  
                                 IVTBASEH 045E                                   IVTBASEL 045D  
                                 IVTBASEU 045F                      ??_DELAY_microseconds 0562  
                 __end_ofi2_Nrf24_getData 24AA                            _rf24_crclength FE99  
                           sendGrid@index 056A                     __end_of_Nrf24_flushRx 27D8  
      Nrf24_print_address_register@buffer 05B4                               sendGrid@col 056C  
                     ?_DELAY_milliseconds 0560                               sendGrid@row 056E  
                                 ?_printf 059D                ??_INT1_SetInterruptHandler 0563  
                    Nrf24_getDataRate@dev 056A                      ??_DELAY_milliseconds 0562  
                                 _OSCCON1 00AD                                   _OSCCON3 00AF  
                     i2Nrf24_getData@data 0509                                   _SPI1CLK 008C  
                 __end_of_Nrf24_powerUpRx 260E                                   _SPI1RXB 0080  
                                 _SPI1TXB 0081                __end_of_Nrf24_readRegister 2410  
                                 _OSCTUNE 00B0                                   _SLRCONA 0403  
                                 _SLRCONB 040B                                   _SLRCONC 0413  
                                 _SLRCOND 041B                                   _SLRCONE 0423  
                                 _SLRCONF 042B               i2SPI1_ByteExchange@byteData 0501  
                               ?_init_nrf 0501                    __end_of_rf24_crclength FEB7  
                               ?_sendCell 0501                                 ?_sendGrid 0565  
                               ?_sendByte 0501                                   __Hparam 0000  
                            _Nrf24_config 1E56                                   __Lparam 0000  
                      __end_of_SPI1_nrf24 FE7D                       _Nrf24_writeRegister 2304  
                          _SPI_write_buff 2200                                   ___awdiv 17EE  
                                 ___awmod 1966                          ?_Nrf24_dataReady 056D  
                               ?_vfprintf 0595                        SPI_read_buff@bytes 0564  
                                 __pcinit 0E48                                   __ramtop 2600  
                                 __ptext0 1CA6                                   __ptext1 1060  
                                 __ptext2 1ED8                                   __ptext3 2696  
                                 __ptext4 0392                                   __ptext5 0D22  
                                 __ptext6 18B2                                   __ptext7 24DC  
                                 __ptext8 1B66                                   __ptext9 2304  
                   read_prec_or_width@fmt 0560                          ___awmod@dividend 0560  
                                 _sendRGB 2696                  ??_PIN_MANAGER_Initialize 0560  
                               _IOCCFbits 0417                          ?_Nrf24_getStatus 056A  
                               _IOCCNbits 0416            i2SPI1_ByteExchange@returnValue 0502  
                    ?_Nrf24_writeRegister 0566                             _received_data 0A00  
                                 main@buf 06C8                      end_of_initialization 0F52  
                _INT2_SetInterruptHandler 27A2                           Nrf24_config@dev 056D  
                               _PIR10bits 04B8                                   fputc@fp 0562  
                                 fputs@fp 056B                                ??_init_nrf 05C4  
                      _read_prec_or_width 1336                              ??i2_sendCell 0505  
                              ??_sendCell 0564                              ??i2_sendGrid 0508  
                            ??i2_sendByte 0501                                ??_sendGrid 0567  
                              ??_sendByte 0560             Nrf24_print_address_register@i 05B9  
                        ?i2_Nrf24_getData 0507                    __end_of_SPI_write_buff 224A  
                       __end_of_vfpfcnvrt 0392                           _SPI1_BufferRead 0000  
                               _SPI1TCNTH 0083                                 _SPI1TCNTL 0082  
                                 postdec1 04E5                                   postdec2 04DD  
                     ?_read_prec_or_width 0560                                   postinc0 04EE  
                                 postinc1 04E6                                   postinc2 04DE  
                     i2Nrf24_getStatus@rv 050D                          vfpfcnvrt@convarg 058E  
                              main@F17920 0C00                                main@F17922 0D00  
                              main@F17916 0E00                                main@F17924 08C8  
                              main@F17918 0B00                                ??_vfprintf 059B  
                               _SPI1_Open 1262                     _INT1_InterruptHandler 0545  
                               _TMR0_Stop 0000                     Nrf24_printDetails@dev 05BB  
                     _SPI1_BufferExchange 0000                       Nrf24_getPALevel@dev 056A  
           _TMR0_OverflowCallbackRegister 0000                              ??_Nrf24_init 0563  
                               _TRISCbits 04C8                           Nrf24_setRADDR@i 0578  
                      __end_ofi2_sendCell 2098                           Nrf24_setTADDR@i 0578  
                        ?_Nrf24_powerUpRx 0564                        __end_ofi2_sendGrid 1262  
                   ??_Nrf24_writeRegister 0569                        __end_ofi2_sendByte 080C  
                    ??_read_prec_or_width 0564                 i2Nrf24_configRegister@reg 0504  
                  i2_Nrf24_configRegister 2738                   i2Nrf24_dataReady@status 0510  
                         _SPI1_Initialize 2720      __end_of_TMR0_DefaultOverflowCallback 27DC  
            _TMR0_DefaultOverflowCallback 27DA          __end_of_Nrf24_getRetransmitDelay 26EE  
        __end_of_Nrf24_setRetransmitDelay 250C                                 i2_sendRGB 2750  
                         ?_SPI_write_buff 0562                            __end_of_Timer0 FE8F  
            __end_of_INTERRUPT_Initialize 23DC                        __end_of_Nrf24_init 256A  
                             _rf24_pa_dbm 09C8                             __pidataBANK11 14D0  
                           __pidataBANK12 1598                             __pidataBANK13 1660  
                              ?_SPI1_Open 0501                               vfpfcnvrt@ap 058A  
                             vfpfcnvrt@cp 0593                               vfpfcnvrt@fp 0586  
                      Nrf24_getStatus@dev 056A                           i2_SPI_read_buff 2444  
                          __end_of_printf 25BE                  __end_of_Nrf24_getPALevel 2656  
                    i2Nrf24_dataReady@dev 050E                       start_initialization 0E48  
                             __end_of_abs 2370                               __end_of_pad 1B66  
                       ?_TMR0_OverflowISR 0501                                ivt0x8_base 0008  
                      ??_TMR0_OverflowISR 0501                      SPI_write_buff@buffer 0562  
                              ?i2_sendRGB 0502             ?_TMR0_DefaultOverflowCallback 0501  
                             vfprintf@fmt 0597                  ?_RC6_SetInterruptHandler 0560  
                          _Nrf24_setRADDR 1B66                            _Nrf24_setTADDR 18B2  
    __end_of_Nrf24_print_address_register 1AC2              _Nrf24_print_address_register 1A16  
                             __pdataBANK6 06E8                               __pdataBANK8 08C8  
                             __pdataBANK9 09C8               i2Nrf24_configRegister@value 0503  
                           _nrf_interrupt 1728                                  ??_printf 05AB  
                             __pbssBANK10 0A00                               __pbssBANK14 0E00  
                    Nrf24_getCRCLength@AA 056D                     i2SPI_read_buff@buffer 0503  
                           _SPI1_ByteRead 0000                              sendCell@cell 0564  
                             __pbssCOMRAM 0537                             __pcstackBANK5 0560  
                           __pcstackBANK6 0600                             __pcstackBANK7 0700  
                           __pcstackBANK8 0800                             __pcstackBANK9 0900  
                 __end_of_SPI1_Initialize 2738                          sendGrid@gridSize 0570  
                      Nrf24_powerUpRx@dev 0564                  Nrf24_print_status@status 05AE  
                ?_Nrf24_SetSpeedDataRates 056A                     _INT2_InterruptHandler 0542  
                      _Nrf24_readRegister 23DC                    __end_of_Nrf24_setRADDR 1C06  
                  __end_of_Nrf24_setTADDR 1966                    _PIN_MANAGER_Initialize 1C06  
                               _dtoa$2107 057D                              sendGrid@grid 0565  
                       Nrf24_getData@data 0568                     __end_of_SPI_read_buff 2304  
              __end_of_Nrf24_printDetails 0A2E                              sendByte@byte 0560  
                           __pmediumconst FE52                   __end_ofi2_SPI_read_buff 2478  
                                ?___awdiv 0560                                  ?___awmod 0560  
                       _Nrf24_getDataRate 21AA                  _Nrf24_getRetransmitDelay 26D2  
                _Nrf24_setRetransmitDelay 24DC                               ??_SPI1_Open 0560  
                     ?_Nrf24_readRegister 0566                            ?_nrf_interrupt 0501  
           ?_Nrf24_print_address_register 05AD                       Nrf24_getDataRate@dr 056D  
                      ?_Nrf24_getDataRate 056A              ??_INTERRUPT_InterruptManager 0535  
        Nrf24_print_address_register@name 05AF            DELAY_microseconds@microseconds 0560  
              ??_INT2_SetInterruptHandler 0563                                  ?_sendRGB 0561  
                     ??_Nrf24_getDataRate 056C                __end_of_Nrf24_print_status 1E56  
                     i2_SPI1_ByteExchange 256A                           SPI_write_buff@i 0565  
                    ??_Nrf24_readRegister 0569                      _INTERRUPT_Initialize 23A6  
                   Nrf24_readRegister@len 0568                     Nrf24_readRegister@reg 0569  
                        _CLOCK_Initialize 277C                                  _LATAbits 04BE  
                                _LATCbits 04C0           __end_of_RC6_SetInterruptHandler 27CC  
               ?_INT1_SetInterruptHandler 0560                                  _PIE0bits 049E  
                                _PIE1bits 049F                                  _PIE3bits 04A1  
                            _SPI1CON0bits 0084                               ??i2_sendRGB 0504  
                                i2u300_48 1DB4                                  i2u300_49 1DC8  
                                i2u118_40 24C0                                  i2u118_41 24BC  
                                i2u119_48 24C6                                  i2u240_40 078C  
                                i2u119_49 24DA                                  i2u240_41 0788  
                         ?_Nrf24_setRADDR 056A                                  i2u241_40 07D2  
                                i2u241_41 07CE                                  i2u242_40 2474  
                                i2u234_40 05E8                                  i2u242_41 2470  
                                i2u234_41 05E4                                  i2u235_40 062E  
                                i2u235_41 062A                                  i2u236_40 0674  
                                i2u236_41 0670                           ?_Nrf24_setTADDR 056A  
                                i2u229_40 258E                                  i2u253_40 251E  
                                i2u237_40 06BA                                  i2u229_41 258A  
                                i2u253_41 251A                                  i2u237_41 06B6  
                                i2u238_40 0700                                  i2u238_41 06FC  
                                i2u239_40 0746                                  i2u239_41 0742  
                                _PIR0bits 04AE                                  i2u280_40 11CE  
                                i2u280_41 11CA                                  i2u281_40 1230  
                                i2u281_41 122C                                  _PIR1bits 04AF  
                                i2u282_40 1260                                  i2u290_40 1744  
                                i2u282_41 125C                                  i2u290_41 1740  
                                i2u283_40 262A                                  i2u291_40 177C  
                                i2u283_41 2626                                  i2u291_41 1778  
                                _SPI1BAUD 0089                                  i2u292_40 17BC  
                                i2u292_41 17B8                                  i2u293_40 17D8  
                                i2u293_41 17D4                                  _PIR3bits 04B1  
                                i2u294_40 1D5A                                  i2u294_41 1D56  
                                i2u295_40 1D68                                  i2u295_41 1D64  
                                _SPI1CON0 0084                                  _SPI1CON1 0085  
                                _SPI1CON2 0086                                  i2u296_40 1D7A  
                                i2u296_41 1D76                                  i2u297_40 1D88  
                                i2u297_41 1D84                                  i2u298_40 1D98  
                                i2u298_41 1D94                 __end_of_Nrf24_getDataRate 2200  
                                i2u299_40 1DAE                                  i2u299_41 1DAA  
                                _PIR6bits 04B4                      ?i2_SPI1_ByteExchange 0501  
          DELAY_milliseconds@milliseconds 0560              __end_of_Nrf24_configRegister 26D2  
          ??_TMR0_DefaultOverflowCallback 0501                                 _vfpfcnvrt 0000  
                         i2sendGrid@index 050B                              _SPI1INTFbits 008A  
                       _SPI1_Deinitialize 0000               Nrf24_getRetransmitDelay@dev 056A  
                               main@gridB 0900                                 main@gridE 0600  
                               main@gridG 0800                                 main@gridR 0700  
         __end_of_Nrf24_SetSpeedDataRates 1FBC                   ?i2_Nrf24_configRegister 0503  
             Nrf24_setRetransmitDelay@dev 056A               Nrf24_setRetransmitDelay@val 056C  
                        ?_SPI1_Initialize 0501                         Nrf24_getStatus@rv 056C  
                             _INTCON0bits 04D6                                 copy_data0 0E5C  
                               copy_data1 0E7C                                 copy_data2 0E9C  
                               copy_data3 0EBC                                 copy_data4 0EDC  
                               copy_data5 0EFC                     ?_INTERRUPT_Initialize 0501  
              Nrf24_SetSpeedDataRates@dev 056A                Nrf24_SetSpeedDataRates@val 056C  
                  Nrf24_writeRegister@len 0568                    Nrf24_writeRegister@reg 0569  
                        ??_SPI_write_buff 0565                             _Nrf24_getData 2370  
                                __Hrparam 0000                     ??i2_SPI1_ByteExchange 0501  
                              vfprintf@ap 0599                                  __Lrparam 0000  
                              vfprintf@fp 0595                             _Nrf24_flushRx 27CC  
                         ??_nrf_interrupt 0513                          ?i2_SPI_read_buff 0503  
                    i2SPI_read_buff@bytes 0505                                ?_vfpfcnvrt 0586  
             __end_of_Nrf24_writeRegister 233A            __end_ofi2_Nrf24_configRegister 2750  
                     SPI_read_buff@buffer 0562            ??_Nrf24_print_address_register 05B3  
                              _T0CON0bits 031A                         ?_Nrf24_getPALevel 056A  
                       i2_Nrf24_dataReady 260E                          Nrf24_getData@dev 0566  
                                __pivt0x8 0008                            i2sendCell@cell 0505  
                                __ptext10 2200                                  __ptext11 20FC  
                                __ptext20 0BAA                                  __ptext12 080C  
                                __ptext21 1336                                  __ptext13 1DD2  
                                __ptext30 26D2                                  __ptext22 0A2E  
                                __ptext14 2098                                  __ptext31 2634  
                                __ptext23 1AC2                                  __ptext15 1A16  
                                __ptext40 26EE                                  __ptext32 21AA  
                                __ptext24 224A                                  __ptext16 2596  
                                __ptext41 27CC                                  __ptext33 1FBC  
                                __ptext25 1404                                  __ptext17 2154  
                                __ptext50 1C06                                  __ptext42 1F4A  
                                __ptext34 253C                                  __ptext26 27D8  
                                __ptext18 0000                                  __ptext51 23A6  
                                __ptext43 23DC                                  __ptext35 1262  
                                __ptext27 233A                                  __ptext19 0F58  
                                __ptext60 2750                                  __ptext52 27A2  
                                __ptext44 22CC                                  __ptext36 2370  
                                __ptext28 1966                                  __ptext61 05D8  
                                __ptext53 27B0                                  __ptext45 26B4  
                                __ptext37 25BE                                  __ptext29 17EE  
                                __ptext70 27DA                                  __ptext62 2478  
                                __ptext54 277C                                  __ptext46 2292  
                                __ptext38 1E56                                  __ptext63 2738  
                                __ptext55 27BE                                  __ptext47 2410  
                                __ptext39 25E6                                  __ptext64 260E  
                                __ptext56 1D44                                  __ptext48 2790  
                                __ptext65 2766                                  __ptext57 1728  
                                __ptext49 2720                                  __ptext66 250C  
                                __ptext58 1164                                  __ptext67 2444  
                                __ptext59 202A                        ??_Nrf24_getPALevel 056C  
                                __ptext68 256A                                  __ptext69 24AA  
                      ?i2_Nrf24_dataReady 050E           Nrf24_print_address_register@dev 05AD  
         Nrf24_print_address_register@reg 05B1           Nrf24_print_address_register@qty 05B2  
                                _init_nrf 0D22                   Nrf24_readRegister@value 0566  
                          ?_Nrf24_getData 0566                         i2_Nrf24_getStatus 2766  
                     ??i2_Nrf24_dataReady 0510                                  _sendCell 1ED8  
                                _sendGrid 1060                                  _sendByte 0392  
                          ?_Nrf24_flushRx 0562                        ?i2_Nrf24_getStatus 050B  
                                isa$xinst 0000                             Nrf24_init@dev 0561  
                          i2sendGrid@grid 0506                                  _vfprintf 2154  
      __end_of_INTERRUPT_InterruptManager 1DD2                _INTERRUPT_InterruptManager 1D44  
                               printf@fmt 059D                            i2sendByte@byte 0501  
                     ??i2_Nrf24_getStatus 050D                            _received_index 053D  
            _INT1_DefaultInterruptHandler 0000              __end_ofi2_Nrf24_readRegister 253C  
              ?_Nrf24_print_byte_register 05AD                 __end_ofi2_Nrf24_dataReady 2634  
             _SPI1_ByteExchange$intlevel0 229C                    ??_INTERRUPT_Initialize 0563  
                 i2Nrf24_readRegister@len 0509                   i2Nrf24_readRegister@reg 050A  
                                sendRGB@b 0562                                  sendRGB@g 0561  
                                sendRGB@r 0563                      _Nrf24_configRegister 26B4  
                                intlevel2 0000                         ??_Nrf24_dataReady 056F  
               __end_ofi2_Nrf24_getStatus 277C                   Nrf24_getDataRate@result 056C  
                 ?_PIN_MANAGER_Initialize 0501                 SPI1_ByteExchange@byteData 0560  
              ??_Nrf24_getRetransmitDelay 056C                ??_Nrf24_setRetransmitDelay 056D  
                        i2SPI_read_buff@i 0506                             ?_Nrf24_config 056D  
                           i2sendGrid@col 050D                               _TMR0_Reload 0000  
                       ??_Nrf24_getStatus 056C                                _SPI1SDIPPS 026B  
                              _SPI1SCKPPS 026A                             i2sendGrid@row 050F  
                                printf@ap 05AB                          _SPI1_BufferWrite 0000  
                    i2Nrf24_getStatus@dev 050B                               ??_vfpfcnvrt 058C  
                 Nrf24_printDetails@delay 05C1                  __end_of_CLOCK_Initialize 2790  
                              _SPI1_Close 0000              Nrf24_printDetails@retransmit 05C3  
                   Nrf24_getPALevel@level 056C                        _Nrf24_printDetails 080C  
                              _SPI1_nrf24 FE53         __end_of_Nrf24_print_byte_register 20FC  
                         _TMR0_Initialize 0000          __end_of_INT1_SetInterruptHandler 27BE  
              __end_of_Nrf24_getCRCLength 202A                         ??i2_Nrf24_getData 050B  
                              _TMR0_Start 0000                          Nrf24_flushRx@dev 0562  
                   ?_Nrf24_configRegister 0562                       ?_Nrf24_printDetails 05BB  
          __end_of_PIN_MANAGER_Initialize 1CA6                           ??_Nrf24_getData 056A  
                    Nrf24_setRADDR@buffer 0571                          ??_Nrf24_setRADDR 056E  
                        ??_Nrf24_setTADDR 056E                __end_of_DELAY_microseconds 2154  
                      i2sendGrid@gridSize 0511                           ??_Nrf24_flushRx 0564  
                 SPI1_Open@spiConfigIndex 0560                            ??_Nrf24_config 0571  
                      _Nrf24_print_status 1DD2                         Nrf24_setRADDR@adr 056C  
                       Nrf24_setRADDR@dev 056A                __end_of_spi1_configuration FE99  
                       Nrf24_setRADDR@ret 0576  
